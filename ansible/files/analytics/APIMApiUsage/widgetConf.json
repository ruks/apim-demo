{
  "name": "APIM Api Usage",
  "id": "APIMApiUsage",
  "thumbnailURL": "",
  "configs": {
    "pubsub": {
      "types": ["subscriber"]
    },
    "providerConfig" : {
      "configs": {
        "type": "SiddhiStoreDataProvider",
        "config": {
          "siddhiApp": "@App:name('APIMApiUsageSiddhi') define stream ApiUsagePerVersionFilteredStream (apiName string, apiVersion string, apiContext string, apiCreator string, apiCreatorTenantDomain string, apiHostname string, applicationId string, applicationName string, quotaExceededValue int, requestTimestamp long, gatewayType string, label string); @store(type = 'rdbms', datasource = 'APIM_ANALYTICS_DB') @purge(enable='true', interval='60 min', @retentionPeriod(sec='5 minutes', min='72 hours', hours='90 days', days='1 year', months='10 years')) define aggregation ApiVersionPerAppAgg from ApiUsagePerVersionFilteredStream select apiName, apiVersion, apiContext, apiCreator, apiCreatorTenantDomain, apiHostname, applicationName, count() as totalRequestCount, sum(quotaExceededValue) as aboveQuotaCount, gatewayType, label, 'default' as regionalID group by apiContext, apiHostname, applicationId aggregate by requestTimestamp every seconds...years;",
          "queryData": {
            "mainquery": "from ApiVersionPerAppAgg on apiCreatorTenantDomain=='{{tenantDomain}}' {{querystring}} within {{from}}L, {{to}}L per \"{{per}}s\" select apiName, apiVersion, applicationName, sum(totalRequestCount) as RequestCount group by apiName, apiVersion, applicationName order by RequestCount desc limit {{limit}};"
          },
          "publishingInterval": 360000
        }
      }
    },
    "options": [
      {
        "id": "header",
        "title": "Header",
        "type": {
          "name": "BOOLEAN",
          "possibleValues": [
            true,
            false
          ]
        },
        "defaultValue": true
      }
    ]
  }
}
