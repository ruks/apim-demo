{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Create/Components/SelectPolicies.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/Steps/ProvideOpenAPI.jsx","webpack:///./source/src/app/data/Wsdl.js","webpack:///./source/src/app/components/Apis/Create/WSDL/Steps/ProvideWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/Steps/ProvideGraphQL.jsx","webpack:///./source/src/app/components/Apis/Details/components/DeleteApiButton.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/MethodView.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/ProductResourcesEditWorkspace.jsx","webpack:///./source/src/app/components/Shared/redirecting.css?4ba4","webpack:///./source/src/app/components/Shared/redirecting.css","webpack:///./source/src/app/components/Apis/Create/Components/APICreateBase.jsx","webpack:///./source/src/app/components/Apis/Create/Components/DefaultAPIForm.jsx","webpack:///./source/src/app/components/Apis/Create/Default/APICreateDefault.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateProductBase.jsx","webpack:///./source/src/app/components/Apis/Create/APIProduct/APIProductCreateWrapper.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/ApiCreateOpenAPI.jsx","webpack:///./source/src/app/components/Apis/Create/WSDL/ApiCreateWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/ApiCreateGraphQL.jsx","webpack:///./source/src/app/components/Apis/Create/WebSocket/ApiCreateWebSocket.jsx","webpack:///./source/src/app/components/Apis/Create/APICreateRoutes.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/DocThumb.jsx","webpack:///./source/src/app/components/Shared/MenuButton.jsx","webpack:///./source/src/app/components/Apis/Listing/components/APICreateMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SamplePetStore.js","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SampleAPI.jsx","webpack:///./source/src/app/components/Apis/Listing/components/TopMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SampleAPIProduct.jsx","webpack:///./source/src/app/components/Apis/Listing/TableView/TableView.jsx","webpack:///./source/src/app/components/Apis/Listing/Listing.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx","webpack:///./source/src/app/components/Apis/Details/components/ApiContext.jsx","webpack:///./source/src/app/data/APIProduct.js","webpack:///./source/src/app/data/APIValidation.js","webpack:///./source/src/app/components/Shared/Banner.jsx","webpack:///./source/src/app/components/Shared/InteractiveButton.jsx","webpack:///./source/src/app/components/Shared/Redirecting.jsx","webpack:///./source/src/app/components/Shared/index.js","webpack:///./source/src/app/data/ScopeValidation.jsx","webpack:///./source/src/app/components/Shared/ConfirmDialog.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/Background.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ImageGenerator.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ThumbnailView.jsx","webpack:///./source/src/app/components/Shared/DropZoneLocal.jsx"],"names":["__webpack_require__","d","__webpack_exports__","SelectPolicies","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_6__","react_intl__WEBPACK_IMPORTED_MODULE_7__","AppData_api__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_9__","useStyles","makeStyles","theme","mandatoryStar","color","palette","error","main","marginLeft","spacing","props","onChange","policies","selectedPolicies","multiple","helperText","isAPIProduct","validate","setPolicies","useState","classes","useEffect","API","then","response","body","handleValidateAndChange","_ref","target","value","name","list","a","createElement","fullWidth","select","label","Fragment","id","defaultMessage","className","SelectProps","renderValue","selected","Array","isArray","join","margin","variant","InputProps","map","policy","dense","disableGutters","key","displayName","checked","includes","primary","secondary","description","defaultProps","required","PropTypes","bool","isRequired","ProvideOpenAPI","apiInputs","inputsDispatcher","onValidate","isFileInput","inputType","inputValue","isValid","setValidity","isValidating","setIsValidating","onDrop","files","file","pop","validFile","validateOpenAPIByFile","isValidFile","info","action","_objectSpread","message","catch","console","finally","validateURL","state","APIValidation","url","validateOpenAPIByUrl","returnContent","isValidURL","content","INPUT_TYPES","FILE","URL","isInvalidURL","Boolean","urlStateEndAdornment","_material_ui_core_InputAdornment__WEBPACK_IMPORTED_MODULE_12__","position","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_11__","undefined","_material_ui_icons_ErrorOutline__WEBPACK_IMPORTED_MODULE_14___default","fontSize","_material_ui_icons_Check__WEBPACK_IMPORTED_MODULE_13___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_3__","container","item","xs","md","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_7__","component","_material_ui_core_FormLabel__WEBPACK_IMPORTED_MODULE_8__","react_intl__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_RadioGroup__WEBPACK_IMPORTED_MODULE_5__","aria-label","event","_material_ui_core_FormControlLabel__WEBPACK_IMPORTED_MODULE_6__","control","_material_ui_core_Radio__WEBPACK_IMPORTED_MODULE_2__","AppComponents_Shared_Banner__WEBPACK_IMPORTED_MODULE_25__","onClose","disableActions","paperProps","elevation","type","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_17__","path","_material_ui_core_ListItemAvatar__WEBPACK_IMPORTED_MODULE_18__","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_19__","_material_ui_icons_InsertDriveFile__WEBPACK_IMPORTED_MODULE_21___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_24__","concat","humanFileSize","size","_material_ui_core_ListItemSecondaryAction__WEBPACK_IMPORTED_MODULE_23__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_20__","edge","onClick","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_22___default","AppComponents_Shared_DropZoneLocal__WEBPACK_IMPORTED_MODULE_28__","accept","values","break","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_15__","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_4__","autoFocus","placeholder","InputLabelProps","shrink","onBlur","_ref2","endAdornment","disabled","propTypes","shape","string","func","AppData_api__WEBPACK_IMPORTED_MODULE_0__","_APIClientFactory__WEBPACK_IMPORTED_MODULE_1__","_Utils__WEBPACK_IMPORTED_MODULE_2__","_Resource__WEBPACK_IMPORTED_MODULE_3__","Wsdl","Resource","[object Object]","APIClientFactory","getAPIClient","Utils","getCurrentEnvironment","client","apis","Validation","validateWSDLDefinition","additionalProperties","implementationType","arguments","length","APIs","importWSDLDefinition","JSON","stringify","ProvideWSDL","isGenerateRESTAPI","isError","isCreateMode","mode","handleWSDLValidationResponse","isWSDLValid","success","handleWSDLValidationErrorResponse","validateFileOrArchive","dropBoxControlLabel","_material_ui_icons_ErrorOutline__WEBPACK_IMPORTED_MODULE_23___default","_material_ui_icons_Check__WEBPACK_IMPORTED_MODULE_24___default","AppComponents_Shared_Banner__WEBPACK_IMPORTED_MODULE_27__","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_15__","_material_ui_core_ListItemAvatar__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_17__","_material_ui_icons_InsertDriveFile__WEBPACK_IMPORTED_MODULE_19___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_22__","_material_ui_core_ListItemSecondaryAction__WEBPACK_IMPORTED_MODULE_21__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_18__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_20___default","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_13__","validateUrl","ProvideGraphQL","validateGraphQLFile","graphQLInfo","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_FormControl__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_FormLabel__WEBPACK_IMPORTED_MODULE_4__","react_intl__WEBPACK_IMPORTED_MODULE_6__","AppComponents_Shared_Banner__WEBPACK_IMPORTED_MODULE_20__","_material_ui_core_List__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_ListItemAvatar__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_12__","_material_ui_icons_InsertDriveFile__WEBPACK_IMPORTED_MODULE_14___default","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_17__","_material_ui_core_ListItemSecondaryAction__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_13__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_15___default","AppComponents_Shared_DropZoneLocal__WEBPACK_IMPORTED_MODULE_19__","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8__","_material_ui_core___WEBPACK_IMPORTED_MODULE_1__","_material_ui_core___WEBPACK_IMPORTED_MODULE_2__","_material_ui_core___WEBPACK_IMPORTED_MODULE_3__","_material_ui_core___WEBPACK_IMPORTED_MODULE_4__","_material_ui_core___WEBPACK_IMPORTED_MODULE_5__","_material_ui_core___WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_8__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_Slide__WEBPACK_IMPORTED_MODULE_9__","prop_types__WEBPACK_IMPORTED_MODULE_10__","prop_types__WEBPACK_IMPORTED_MODULE_10___default","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_12__","AppData_api__WEBPACK_IMPORTED_MODULE_13__","AppData_ScopeValidation__WEBPACK_IMPORTED_MODULE_14__","AppComponents_Shared_Alert__WEBPACK_IMPORTED_MODULE_15__","AppComponents_Shared_VerticalDivider__WEBPACK_IMPORTED_MODULE_16__","react_intl__WEBPACK_IMPORTED_MODULE_17__","DeleteApiButton","React","Component","constructor","super","this","handleApiDelete","bind","handleRequestClose","handleRequestOpen","openMenu","setState","api","history","apiType","CONSTS","APIProduct","deleteProduct","status","log","Alert","push","delete","render","version","deleteHandler","resourcePath","SINGLE_API","SINGLE_API_PRODUCT","resourceMethod","DELETE","deleteWrapper","height","onKeyDown","open","transition","Slide","b","msg","withRouter","withStyles","root","background","paper","borderBottom","grey","A200","display","alignItems","backLink","textDecoration","backIcon","cursor","backText","fontFamily","typography","flex","justifyContent","paddingRight","flexDirection","textAlign","custom","deleteButtonColor","linkText","withTheme","MethodView","useTheme","method","chipColor","resourceChipColors","toLowerCase","chipTextColor","getContrastText","react_default","Chip","style","backgroundColor","width","searchWrapper","padding","marginTop","& input","borderRadius","apiWrapper","overflowY","ResourceWrapper","marginRight","& .frame","border","& .frame::-webkit-scrollbar","-webkit-appearance","& .frame::-webkit-scrollbar:vertical","& .frame::-webkit-scrollbar:horizontal","& .frame::-webkit-scrollbar-thumb","common","white","& .frame.rightFrame","SelectedResourceWrapper","overflowX","leftMost","rightMost","colTitle","fontWeight","minHeight","treeItemMain","treeItemMainWrapper","paddingLeft","treeItem","& .material-icons","hr","methodView","middleText","selectedApi","selectedTitle","buttonWrapper","textDecorate","selectedApiDescription","messageWrapper","tootBar","& a","inactiveIcon","ProductResourcesEdit","apiResources","setApiResources","isStateCreate","resourceNotFountMessage","allApis","setAllApis","notFound","setNotFound","searchText","setSearchText","selectedApiPaths","setSelectedApiPaths","setSelectedApi","fromSearch","setFromSearch","apiRestClient","filterAPIs","text","composeQuery","trim","composeQueryJSON","queryString","parse","limit","offset","search","all","query","addPropsToSelectedApiPaths","paths","apiId","latestApiResources","Object","keys","methodObj","innerKey","verb","resourceFound","resourcekey","apiResource","operations","operationKey","operation","allreadyAdded","getApiSwagger","apiSelected","getSwagger","obj","doRedirectToLogin","updateResourceTree","resourceToAdd","inputApiResources","updateStateHere","newApiResources","cloneDeep","newResource","toUpperCase","authType","throttlingPolicy","scopes","apiFound","indexA","operationFound","indexB","splice","updateCheckBox","prevSelectedApiPaths","addSelectedResourcesToTree","addAll","filteredList","filter","theApi","lifeCycleStatus","ResourceNotFound","Grid","lib","Paper","ListItem","TextField","List","apiObj","labelId","role","button","ListItemText","context","Typography","Icon","VerticalDivider","HTTP_METHODS","ListItemIcon","minWidth","Checkbox","tabIndex","disableRipple","ProductResources_MethodView","ListItemSecondaryAction","IconButton","instanceOf","module","i","options","transform","locals","exports","APICreateBase","title","children","sm","element","helperTextContext","& p","textOverflow","whiteSpace","overflow","endpointValidChip","endpointInvalidChip","endpointErrorChip","iconButton","iconButtonValid","green","actualContext","initialContext","indexOf","replace","DefaultAPIForm","isWebSocket","validity","isEndpointValid","setIsEndpointValid","statusCode","setStatusCode","isUpdating","setUpdating","isErrorCode","setIsErrorCode","updateValidity","newState","isFormValid","entries","reduce","acc","cVal","field","nameValidity","apiName","abortEarly","apiParameter","result","details","contextValidity","apiContext","contextVal","slice","lastIndexOf","checkContext","versionValidity","apiVersion","policyValidity","noValidate","autoComplete","detail","index","_ref3","_ref6","_ref4","_ref5","endpoint","endpointURL","rel","href","InputAdornment","condition","otherwise","iff","testEndpoint","statusMessage","CircularProgress","direction","justify","gutterBottom","APICreateDefault","intl","settings","useAppContext","pageError","setPageError","isCreating","setIsCreating","isPublishing","setIsPublishing","useReducer","currentState","inputAction","APICreateDefault_objectSpread","formValidity","isPublishable","isAPICreateDisabled","createAPI","promisedCreatedAPI","apiData","endpointConfig","endpoint_type","sandbox_endpoints","production_endpoints","gatewayEnvironments","environment","env","saveProduct","apiProduct","save","pageTitle","Banner","Button","AuthManager","isNotPublisher","publish","workflowStatus","WORKFLOW_STATUS","CREATED","formatMessage","react_router_dom","to","injectIntl","APICreateProductBase","saveButton","titleWrapper","paddingBottom","alternativeLabel","ApiProductCreateWrapper","wizardStep","setWizardStep","APIProductCreateWrapper_objectSpread","setCreating","steps","Box","Stepper","activeStep","Step","StepLabel","ProductResourcesEditWorkspace","step","transport","ApiCreateOpenAPI","ApiCreateOpenAPI_objectSpread","handleOnValidate","newAPI","importOpenAPIByFile","importOpenAPIByUrl","ApiCreateWSDL","ApiCreateWSDL_objectSpread","promisedWSDLImport","importByUrl","importByFileOrArchive","ApiCreateGraphQL","ApiCreateGraphQL_objectSpread","newApi","importGraphQL","uuid","ApiCreateWebSocket","Default_APICreateDefault","APICreateRoutes","react_router","APIProductCreateWrapper","ApiCreateSwagger","flexGrow","APIThumb","isHover","loading","toggleMouseOver","updateData","overviewPath","apiUUID","Card","onMouseOver","onFocus","onMouseOut","raised","card","CardMedia","src","ThumbnailView","CardContent","apiDetails","textWrapper","thumbHeader","row","align","thumbBy","provider","thumbInfo","thumbLeft","thumbRight","contextBox","CardActions","apiActions","transportType","thumbRightBy","deleteProgress","maxWidth","providerText","textTransform","padding-left","imageWrapper","thumbnail","thumbContent","alignSelf","padding-right","lineHeight","padding-top","padding-bottom","imageOverlap","bottom","contentBackgroundColor","margin-right","DocThumb","doc","docDetails","sourceType","docActions","MenuButton","handleToggle","handleClose","anchorEl","contains","menuList","buttonProps","_extends","buttonRef","node","aria-owns","aria-haspopup","Popper","placement","disablePortal","TransitionProps","Grow","transformOrigin","ClickAwayListener","onClickAway","zIndex","apiCreateMenu","links","APICreateMenu","createTypes","Divider","isNotCreator","Shared_MenuButton","APICreateMenu_extends","oneOfType","array","policyLevel","/order","post","x-auth-type","x-throttling-tier","parameters","schema","$ref","in","responses","201","headers","Location","Content-Type","400","415","/menu","get","200","items","304","406","/order/{orderId}","put","format","404","412","schemes","produces","swagger","definitions","ErrorListItem","properties","code","MenuItem","price","image","Order","customerName","delivered","address","pizzaType","creditCardNumber","quantity","orderId","Error","moreInfo","consumes","license","contact","email","SampleAPI","published","deploying","sampleApi","handleDeploySample","createSampleAPI","swaggerUpdatePromise","sampleAPI","updateSwagger","getSampleSwagger","tags","securityScheme","visibility","businessInformation","businessOwner","businessOwnerEmail","technicalOwner","technicalOwnerEmail","Redirect_default","InlineMessage","contentWrapper","head","actions","components_APICreateMenu","buttonLeft","Create_default","GetApp_default","buttonProgress","headline","paddingTop","TopMenu","data","setListType","count","listType","strokeColorMain","mainIconWrapper","CustomIcon","strokeColor","icon","mainTitleWrapper","mainTitle","getTitleForArtifactType","createButton","buttonRight","List_default","GridOn_default","number","rightIcon","marginBottom","ListingWrapper","TableView","TableView_defineProperty","themeAdditions","muiTheme","overrides","MUIDataTable","boxShadow","tableRoot","& tbody","MUIDataTableBodyCell","MUIDataTableHeadCell","fixedHeader","flexWrap","& thead","assign","createMuiTheme","xhrRequest","pagination","total","page","removeLocalStorage","getData","apisAndApiProducts","displayCount","paginationSufix","window","localStorage","removeItem","storedPagination","getItem","rowsPerPage","setItem","setLocalStorage","defaultApiView","getLocalStorage","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","_this","columns","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","artifact","rowIndex","apiNameLink","sort","filterType","responsive","serverSide","onTableChange","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","customRowRender","dataIndex","ImageGenerator_DocThumb","ApiThumb","print","download","viewColumns","customToolbar","components_TopMenu","contentInside","MuiThemeProvider","getMuiTheme","dist_default","SampleAPIProduct","Listing_SampleAPI_SampleAPI","Shared","& > div[class^=\"MuiPaper-root-\"]","& span","Listing","location","Listing_TableView_TableView","Details","lazy","Promise","e","DeferredDetails","react","fallback","Progress","Apis","exact","Date","now","Listing_Listing","Apis_extends","Create_APICreateRoutes","APIContext","createContext","tenantList","Provider","APIProvider","withAPI","WrappedComponent","HOCWithAPI","Consumer","useAPI","updateAPI","useContext","kwargs","isDefaultVersion","_data","prototype","hasOwnProperty","call","getType","_requestMetaData","getSettings","get_settings","getMonetization","get_apis__apiId__monetization","configureMonetizationToApiProduct","post_apis__apiId__monetize","getSubscriptionPolicies","get_apis__apiId__subscription_policies","getMonetizationInvoice","get_subscriptions__subscriptionId__usage","subscriptionId","spec","forEach","apiAttribute","payload","post_api_products","create","promise_create","toJSON","resource","userExcludes","copy","excludes","_toConsumableArray","prop","get_api_products__apiProductId_","apiProductId","params","get_api_products","update","updatedProperties","updatedAPI","put_api_products__apiProductId_","getAPIProductThumbnail","get_api_products__apiProductId__thumbnail","addAPIProductThumbnail","imageFile","put_api_products__apiProductId__thumbnail","delete_api_products__apiProductId_","addDocument","post_api_products__apiProductId__documents","getDocuments","get_api_products__apiProductId__documents","updateDocument","productId","docId","documentId","put_api_products__apiProductId__documents__documentId_","getDocument","get_api_products__apiProductId__documents__documentId_","addInlineContentToDocument","inlineContent","post_api_products__apiProductId__documents__documentId__content","getInlineContentOfDocument","get_api_products__apiProductId__documents__documentId__content","deleteDocument","delete_api_products__apiProductId__documents__documentId_","addFileToDocument","fileToDocument","apiDefinition","put_api_products__apiProductId__swagger","get_api_products__apiProductId__swagger","getMessage","errorType","roleSchema","Joi","extend","joi","base","rules","validateSystemRole","scopeSchema","validateScopeName","userRoleSchema","validateUSerRole","apiSchema","documentSchema","object","validateDocumentExists","definition","max","regex","errors","tmpErrors","err","tmpError","systemRole","scope","uri","alias","userRole","isAPIParameterExist","apiDocument","document","isDocumentPresent","operationVerbs","min","unique","operationTarget","tlds","xLarge","pxToRem","disableClose","isOpen","setIsOpen","iconProps","bannerIcon","String","first","rest","_material_ui_icons_Error__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_Warning__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_CheckCircle__WEBPACK_IMPORTED_MODULE_9___default","_material_ui_icons_Info__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_Fade__WEBPACK_IMPORTED_MODULE_14__","unmountOnExit","_material_ui_core_Box__WEBPACK_IMPORTED_MODULE_6__","clone","pt","pr","pb","pl","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_3__","wrap","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_5__","goBack","react_intl__WEBPACK_IMPORTED_MODULE_12__","reload","oneOf","InteractiveButton","disableFocusRipple","mini","buttonClassName","classNames","buttonSuccess","wrapper","&:hover","top","left","Redirecting","lg","square","ScopeValidation","AppData_APIClient__WEBPACK_IMPORTED_MODULE_2__","AppData_AuthManager__WEBPACK_IMPORTED_MODULE_3__","APIS","API_PRODUCTS","API_SWAGGER","API_WSDL","API_GW_CONFIG","API_THUMBNAIL","API_COPY","API_LC_HISTORY","API_CHANGE_LC","API_LC","API_LC_PENDING_TASK","API_DEF","API_VALIDATE_DEF","API_DOCS","API_DOC","API_DOC_CONTENT","EXPORT_APIS","IMPORT_APIS","SUBSCRIPTION","SUBSCRIPTIONS","BLOCK_SUBSCRIPTION","UNBLOCK_SUBSCRIPTION","POLICIES","POLICY","ENDPOINTS","ENDPOINT","LABLES","WORKFLOW","SERVICE_DISCOVERY","POST","PUT","GET","currentResourcePath","currentResourceMethod","userScopes","getUser","APIClient","getScopeForResource","hasScopes","haveScope","ConfirmDialog","_material_ui_core__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_6__","prop_types__WEBPACK_IMPORTED_MODULE_7__","prop_types__WEBPACK_IMPORTED_MODULE_7___default","react_intl__WEBPACK_IMPORTED_MODULE_8__","labelCancel","labelOk","callback","Action","OK","CANCEL","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","colorPair","thumbnailBoxChild","rects","j","sub","toString","fill","fillOpacity","x","y","primeColor","prime","svgImage","objectFit","ImageGenerator","PureComponent","fixedIcon","category","backgroundIndex","randomBackgroundIndex","IconElement","str","colorPairs","backgrounds","MaterialIcons","categories","icons","randomIconIndex","charCodeAt","iconWrapper","ImageGenerator_Background","iconSettings","windowURL","webkitURL","dropzoneStyles","Transition","ThumbnailView_extends","_defineProperty","selectedTab","selectedIconUpdate","colorUpdate","backgroundIndexUpdate","fileObj","newIconJson","blob","Blob","File","uploadThumbnail","hex","selectedIcon","uploading","imageLoaded","handleClick","loadImage","imageUpdate","revokeObjectURL","acceptedFile","preview","cState","setImageUpdate","Api","addAPIThumbnail","createObjectURL","getAPIThumbnail","iconJson","saveDisableEnable","isEditable","view","alt","media","components_ImageGenerator_ImageGenerator","ButtonBase","focusRipple","thumb","thumbBackdrop","thumbButton","Edit_default","suppressLinkStyles","Dialog","TransitionComponent","aria-labelledby","disableBackdropClick","fullScreen","popupHeader","RadioGroup","group","handleChange","FormControlLabel","Radio","DialogContent","imageContainer","Configurations","app","es","dropzone","activeClassName","acceptDrop","rejectClassName","rejectDrop","dropFile","getRootProps","getInputProps","dropZoneWrapper","dropIcon","imageGenWrapper","subtitleWrapper","subtitle","Select","native","handleSelectionChange","cat","maxHeight","FindCategoryKeys","iconView","selectIcon","react_color_lib","onChangeComplete","handleChangeComplete","backgroundSelection","selectBackground","DialogActions","actionBox","red","& $thumbBackdrop","opacity","right","black","& > div","bytesParam","si","bytes","thresh","Math","abs","units","u","toFixed","baseStyle","borderWidth","borderColor","borderStyle","outline","activeStyle","acceptStyle","rejectStyle","DropZoneLocal","dropZoneObject","useDropzone","isDragActive","isDragAccept","isDragReject","useMemo","containerStyles","showFilesList"],"mappings":"2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,IAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,MAAAU,EAAAV,EAAA,MAAAW,EAAAX,EAAA,MAAAY,EAAAZ,EAAA,MAAAa,EAAAb,EAAA,MAAAc,EAAAd,EAAA,IAAAe,EAAAf,EAAA,KAAAgB,EAAAhB,EAAA,KAWA,MAAMiB,EAAYC,YAAYC,IAAD,CACzBC,cAAe,CACXC,MAAOF,EAAMG,QAAQC,MAAMC,KAC3BC,WAAYN,EAAMO,QAAQ,QAUnB,SAASvB,EAAewB,GACnC,MAAMC,SACFA,EAAUC,SAAUC,EADlBC,SACoCA,EADpCC,WAC8CA,EAD9CC,aAC0DA,EAD1DC,SACwEA,GAC1EP,GACGE,EAAUM,GAAeC,mBAAS,IACnCC,EAAUpB,IAChBqB,oBAAU,KACNC,IAAIV,SAAS,gBAAgBW,KAAMC,GAAaN,EAAYM,EAASC,QACtE,IACH,MAAMC,EAA0BC,IAAiC,IAA9BC,QAAQC,MAAEA,EAAFC,KAASA,IAAaH,EAC7DV,EAAS,WAAYY,GACrBlB,EAAS,CAAEiB,OAAQ,CAAEE,OAAMD,YAE/B,OAAKjB,EAASmB,KAIN3C,EAAA4C,EAAAC,cAACzC,EAAA,EAAD,CACI0C,WAAS,EACTC,QAAM,EACNC,MACIhD,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KACIjD,EAAA4C,EAAAC,cAACpC,EAAA,EAAD,CACIyC,GAAG,uDACHC,eAAe,qBAElBvB,GAAiB5B,EAAA4C,EAAAC,cAAA,OAAKO,UAAWpB,EAAQjB,eAAxB,MAG1B0B,MAAOhB,EACPiB,KAAK,WACLnB,SAAUe,EACVe,YAAa,CACT3B,WACA4B,YAAcC,GAAcC,MAAMC,QAAQF,GAAYA,EAASG,KAAK,MAAQH,GAEhF5B,WAAYC,EAAeD,EAAa,cAAgBA,EAAa,MACrEgC,OAAO,SACPC,QAAQ,WACRC,WAAY,CACRX,GAAI,+BAGP1B,EAASmB,KAAKmB,IAAKC,GAChB/D,EAAA4C,EAAAC,cAACxC,EAAA,EAAD,CACI2D,OAAK,EACLC,eAAgBvC,EAChBwB,GAAIa,EAAOrB,KACXwB,IAAKH,EAAOrB,KACZD,MAAOsB,EAAOI,aAEbzC,GAAY1B,EAAA4C,EAAAC,cAACtC,EAAA,EAAD,CAAUS,MAAM,UAAUoD,QAAS3C,EAAiB4C,SAASN,EAAOrB,QACjF1C,EAAA4C,EAAAC,cAACvC,EAAA,EAAD,CAAcgE,QAASP,EAAOI,YAAaI,UAAWR,EAAOS,iBAtCtExE,EAAA4C,EAAAC,cAACrC,EAAA,EAAD,MA8CfV,EAAe2E,aAAe,CAC1BjD,SAAU,GACVE,UAAU,EACVgD,UAAU,EACV9C,aAAc+C,IAAUC,KAAKC,WAC7BlD,WAAY,kmCCzChB,MAAMf,EAAYC,YAAYC,IAAD,CACzBC,cAAe,CACXC,MAAOF,EAAMG,QAAQC,MAAMC,SAWpB,SAAS2D,EAAexD,GACnC,MAAMyD,UAAEA,EAAFC,iBAAaA,EAAbC,WAA+BA,GAAe3D,EAC9C4D,EAAsC,SAAxBH,EAAUI,WACxBA,UAAEA,EAAFC,WAAaA,GAAeL,EAC5B/C,EAAUpB,KAETyE,EAASC,GAAevD,mBAAS,KACjCwD,EAAcC,GAAmBzD,oBAAS,GAOjD,SAAS0D,EAAOC,GACZF,GAAgB,GAKhB,MAAMG,EAAOD,EAAME,MACnB,IAAIC,EAAY,KAChB3D,IAAI4D,sBAAsBH,GACrBxD,KAAMC,IACH,MACIC,MAAQgD,QAASU,EAAXC,KAAwBA,IAC9B5D,EACA2D,GACAF,EAAYF,EACZX,EAAiB,CAAEiB,OAAQ,YAAaxD,MAAOuD,IAC/CV,EAAWY,EAAA,GAAMb,EAAN,CAAeM,KAAM,SAEhCL,EAAWY,EAAA,GAAMb,EAAN,CAAeM,KAAM,CAAEQ,QAAS,2CAGlDC,MAAOlF,IACJoE,EAAWY,EAAA,GAAMb,EAAN,CAAeM,KAAM,CAAEQ,QAAS,yCAC3CE,QAAQnF,MAAMA,KAEjBoF,QAAQ,KACLd,GAAgB,GAChBP,EAAyB,OAAdY,GAEXb,EAAiB,CAAEiB,OAAQ,aAAcxD,MAAOoD,MAS5D,SAASU,EAAY9D,GACjB,MAAM+D,EAAQC,IAAcC,IAAIhC,WAAW7C,SAASY,GAAOvB,MAE7C,OAAVsF,GACAhB,GAAgB,GAChBtD,IAAIyE,qBAAqB5B,EAAUK,WAAY,CAAEwB,eAAe,IAAQzE,KAAMC,IAC1E,MACIC,MAAQgD,QAASwB,EAAXb,KAAuBA,EAAvBc,QAA6BA,IACnC1E,EACAyE,GACAb,EAAKc,QAAUA,EACf9B,EAAiB,CAAEiB,OAAQ,YAAaxD,MAAOuD,IAC/CV,EAAWY,EAAA,GAAMb,EAAN,CAAeqB,IAAK,SAE/BpB,EAAWY,EAAA,GAAMb,EAAN,CAAeqB,IAAK,CAAEP,QAAS,yCAE9ClB,EAAW4B,GACXrB,GAAgB,OAKpBF,EAAWY,EAAA,GAAMb,EAAN,CAAeqB,IAAKF,KAC/BvB,GAAW,IAInBhD,oBAAU,KACFmD,IACID,IAAcL,EAAeiC,YAAYC,KACzCvB,EAAO,CAACL,IACDD,IAAcL,EAAeiC,YAAYE,KAChDV,EAAYnB,KAGrB,CAACD,EAAWC,IAGf,MAAM8B,EAAeC,QAAQ9B,EAAQqB,KACrC,IAAIU,EAAuB,KAuB3B,OAtBI7B,EACA6B,EACIpH,EAAA4C,EAAAC,cAACwE,EAAA,EAAD,CAAgBC,SAAS,OACrBtH,EAAA4C,EAAAC,cAAC0E,EAAA,EAAD,YAGeC,IAAhBnC,EAAQqB,MAEXU,EADAF,EAEIlH,EAAA4C,EAAAC,cAACwE,EAAA,EAAD,CAAgBC,SAAS,OACrBtH,EAAA4C,EAAAC,cAAC4E,EAAA7E,EAAD,CAAkB8E,SAAS,QAAQ1G,MAAM,WAK7ChB,EAAA4C,EAAAC,cAACwE,EAAA,EAAD,CAAgBC,SAAS,OACrBtH,EAAA4C,EAAAC,cAAC8E,EAAA/E,EAAD,CAAW8E,SAAS,QAAQ1G,MAAM,cAO9ChB,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KACIjD,EAAA4C,EAAAC,cAAC+E,EAAA,EAAD,CAAMC,WAAS,EAACxG,QAAS,GACrBrB,EAAA4C,EAAAC,cAAC+E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IACnBhI,EAAA4C,EAAAC,cAACoF,EAAA,EAAD,CAAaC,UAAU,YACnBlI,EAAA4C,EAAAC,cAACsF,EAAA,EAAD,CAAWD,UAAU,UACjBlI,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KACIjD,EAAA4C,EAAAC,cAAA,OAAKO,UAAWpB,EAAQjB,eAAxB,KACC,IACDf,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,sDACHC,eAAe,iBAI3BnD,EAAA4C,EAAAC,cAACwF,EAAA,EAAD,CACIC,aAAW,aACX7F,MAAOsC,EAAUI,UACjB5D,SAAWgH,GAAUvD,EAAiB,CAAEiB,OAAQ,YAAaxD,MAAO8F,EAAM/F,OAAOC,SAEjFzC,EAAA4C,EAAAC,cAAC2F,EAAA,EAAD,CACI/F,MAAOqC,EAAeiC,YAAYE,IAClCwB,QAASzI,EAAA4C,EAAAC,cAAC6F,EAAA,EAAD,CAAO1H,MAAM,YACtBgC,MAAM,gBAEVhD,EAAA4C,EAAAC,cAAC2F,EAAA,EAAD,CACI/F,MAAOqC,EAAeiC,YAAYC,KAClCyB,QAASzI,EAAA4C,EAAAC,cAAC6F,EAAA,EAAD,CAAO1H,MAAM,YACtBgC,MAAM,oBAKrBqC,EAAQM,MAED3F,EAAA4C,EAAAC,cAAC+E,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,IACXhI,EAAA4C,EAAAC,cAAC8F,EAAA,EAAD,CACIC,QAAS,IAAMtD,EAAY,CAAEK,KAAM,OACnCkD,gBAAc,EACd7E,OAAK,EACL8E,WAAY,CAAEC,UAAW,GACzBC,KAAK,QACL7C,QAASd,EAAQM,KAAKQ,WAItCnG,EAAA4C,EAAAC,cAAC+E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IAClB9C,EACGlF,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KACK8B,EAAUK,WACPpF,EAAA4C,EAAAC,cAACoG,EAAA,EAAD,KACIjJ,EAAA4C,EAAAC,cAACqG,EAAA,EAAD,CAAUhF,IAAKa,EAAUK,WAAW+D,MAChCnJ,EAAA4C,EAAAC,cAACuG,EAAA,EAAD,KACIpJ,EAAA4C,EAAAC,cAACwG,EAAA,EAAD,KACIrJ,EAAA4C,EAAAC,cAACyG,EAAA1G,EAAD,QAGR5C,EAAA4C,EAAAC,cAAC0G,EAAA,EAAD,CACIjF,QAAO,GAAAkF,OAAKzE,EAAUK,WAAW+D,KAA1B,4CAAAK,OACbC,YAAc1E,EAAUK,WAAWsE,SAEjC1J,EAAA4C,EAAAC,cAAC8G,EAAA,EAAD,KACI3J,EAAA4C,EAAAC,cAAC+G,EAAA,EAAD,CACIC,KAAK,MACLvB,aAAW,SACXwB,QAAS,KACL9E,EAAiB,CAAEiB,OAAQ,aAAcxD,MAAO,OAChDuC,EAAiB,CAAEiB,OAAQ,cAAexD,OAAO,MAGrDzC,EAAA4C,EAAAC,cAACkH,EAAAnH,EAAD,UAMhB5C,EAAA4C,EAAAC,cAACmH,EAAA,EAAD,CACI9I,MAAOmE,EAAQM,KACfF,OAAQA,EACRC,MAAOX,EAAUK,WACjB6E,OAAO,gCAEN1E,EAAgBvF,EAAA4C,EAAAC,cAAC0E,EAAA,EAAD,MACV,CACCvH,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,+DACHC,eAAe,yDACf+G,OAAQ,CAAEC,MAAOnK,EAAA4C,EAAAC,cAAA,cAErB7C,EAAA4C,EAAAC,cAACuH,EAAA,EAAD,CACIpJ,MAAM,UACN4C,QAAQ,aAER5D,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,6DACHC,eAAe,8BAS3CnD,EAAA4C,EAAAC,cAACwH,EAAA,EAAD,CACIC,WAAS,EACTpH,GAAG,sBACHF,MAAM,cACNuH,YAAY,oBACZzH,WAAS,EACTa,OAAO,SACPC,QAAQ,WACRrC,SAAUgB,IAAA,IAAGC,QAAQC,MAAEA,IAAbF,EAAA,OAA2ByC,EAAiB,CAAEiB,OAAQ,aAAcxD,WAC9EA,MAAOsC,EAAUK,WACjBoF,gBAAiB,CACbC,QAAQ,GAEZ5G,WAAY,CACR6G,OAAQC,IAA2B,IAAxBnI,QAAQC,MAAEA,IAAckI,EAC/BpE,EAAY9D,IAEhBmI,aAAcxD,GAGlBzF,WAAa0D,EAAQqB,KAAOrB,EAAQqB,IAAIP,SAAY,iCACpDjF,MAAOgG,EACP2D,SAAUtF,KAItBvF,EAAA4C,EAAAC,cAAC+E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,MAMtClD,EAAeL,aAAe,CAC1BQ,WAAY,QAEhBH,EAAeiC,YAAc,CACzBE,IAAK,MACLD,KAAM,QAEVlC,EAAegG,UAAY,CACvB/F,UAAWJ,IAAUoG,MAAM,CACvB/B,KAAMrE,IAAUqG,OAChB7F,UAAWR,IAAUqG,OACrB5F,WAAYT,IAAUqG,SACvBnG,WACHG,iBAAkBL,IAAUsG,KAAKpG,WACjCI,WAAYN,IAAUsG,yCCrU1B,IAAAC,EAAAvL,EAAA,KAAAwL,EAAAxL,EAAA,KAAAyL,EAAAzL,EAAA,IAAA0L,EAAA1L,EAAA,KAuGe2L,IA9Ef,cAAmBC,IASfC,6BAA6B7F,GAEzB,OADkB,IAAI8F,KAAmBC,aAAaC,IAAMC,yBAAyBC,OACpE1J,KAAM0J,GACZA,EAAOC,KAAKC,WAAWC,uBAAuB,CAAErG,UAY/D6F,mBAAmB9E,GAEf,OADkB,IAAI+E,KAAmBC,aAAaC,IAAMC,yBAAyBC,OACpE1J,KAAM0J,GACZA,EAAOC,KAAKC,WAAWC,uBAAuB,CAAEtF,SAc/D8E,mBAAmB9E,EAAKuF,GAAmD,IAA7BC,EAA6BC,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,GAAAA,UAAA,GAAR,OAE/D,OADkB,IAAIV,KAAmBC,aAAaC,IAAMC,yBAAyBC,OACpE1J,KAAM0J,GACMA,EAAOC,KAAKO,KAAKC,qBAAqB,CAC3D5F,MACAuF,qBAAsBM,KAAKC,UAAUP,GACrCC,uBAGoB/J,KAAMC,GAAa,IAAIF,IAAIE,EAASC,QAcpEmJ,6BAA6B7F,EAAMsG,GAAmD,IAA7BC,EAA6BC,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,GAAAA,UAAA,GAAR,OAE1E,OADkB,IAAIV,KAAmBC,aAAaC,IAAMC,yBAAyBC,OACpE1J,KAAM0J,GACMA,EAAOC,KAAKO,KAAKC,qBAAqB,CAC3D3G,OACAsG,qBAAsBM,KAAKC,UAAUP,GACrCC,uBAGoB/J,KAAMC,GAAa,IAAIF,IAAIE,EAASC,0jCClDxE,MAAMzB,EAAYC,YAAYC,IAAD,CACzBC,cAAe,CACXC,MAAOF,EAAMG,QAAQC,MAAMC,SAWpB,SAASsL,EAAYnL,GAChC,MAAMyD,UAAEA,EAAFC,iBAAaA,EAAbC,WAA+BA,GAAe3D,EAC9C4D,EAAsC,SAAxBH,EAAUI,UACxBuH,EAAuC,eAAnB3H,EAAUiE,KAC9BhH,EAAUpB,KACT+L,EAASrH,GAAevD,sBACxBwD,EAAcC,GAAmBzD,oBAAS,GAC3C6K,EAAkC,WAAnB7H,EAAU8H,KAS/B,SAASC,EAA6B1K,EAAU4G,GAC5C,MAAM+D,EAAc3K,EAASC,KAAKgD,QAClC,IAAI2H,GAAU,EAed,OAdID,GAEIzH,EAAWY,EAAA,GAAMyG,EADR,SAAT3D,EACW,CAAerD,KAAM,MAErB,CAAee,IAAK,QAEnCsG,GAAU,GAEV1H,EAAWY,EAAA,GAAMyG,EADD,SAAT3D,EACI,CAAerD,KAAM,CAAEQ,QAAS,oCAEhC,CAAeO,IAAK,CAAEP,QAAS,wBAE9ClB,EAAW8H,GACXvH,GAAgB,GACTwH,EASX,SAASC,EAAkC/L,EAAO8H,GAC9C,IAAI7C,EAAU,mCACVjF,EAAMkB,UAAYlB,EAAMkB,SAASC,KAAKmC,cACtC2B,EAAUjF,EAAMkB,SAASC,KAAKmC,aAG9Bc,EAAWY,EAAA,GAAMyG,EADR,SAAT3D,EACW,CAAerD,KAAM,CAAEQ,YAEvB,CAAeO,IAAK,CAAEP,cAErCX,GAAgB,GAiDpB,SAASC,EAAOC,IArBhB,SAA+BC,GAAoB,IAAda,EAAc2F,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,GAAAA,UAAA,GAAN,KAC3B,OAAV3F,GACAhB,GAAgB,GAChB8F,IAAK4B,sBAAsBvH,GAAMxD,KAAMC,IAC/B0K,EAA6B1K,EAAU,SACvC4C,EAAiB,CAAEiB,OAAQ,aAAcxD,MAAOkD,MAErDS,MAAOlF,IACN+L,EAAkC/L,EAAO,YAG7CoE,EAAWY,EAAA,GAAMyG,EAAN,CAAehH,KAAMa,KAChCvB,GAAW,IAYfiI,CAAsBxH,EAAM,IAmChC,MAAMyH,EAAsBT,EACxB1M,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,yDACHC,eAAe,qCACf+G,OAAQ,CAAEC,MAAOnK,EAAA4C,EAAAC,cAAA,cAGrB7C,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,iEACHC,eAAe,6CACf+G,OAAQ,CAAEC,MAAOnK,EAAA4C,EAAAC,cAAA,cAuCzB,IAAIuE,EAAuB,KAqB3B,OApBI7B,EACA6B,EACIpH,EAAA4C,EAAAC,cAACwE,EAAA,EAAD,CAAgBC,SAAS,OACrBtH,EAAA4C,EAAAC,cAAC0E,EAAA,EAAD,OAGDoF,GAAWA,EAAQjG,IAC1BU,EACIpH,EAAA4C,EAAAC,cAACwE,EAAA,EAAD,CAAgBC,SAAS,OACrBtH,EAAA4C,EAAAC,cAACuK,EAAAxK,EAAD,CAAkB8E,SAAS,QAAQ1G,MAAM,WAG1C2L,IAAYA,EAAQjG,MAC3BU,EACIpH,EAAA4C,EAAAC,cAACwE,EAAA,EAAD,CAAgBC,SAAS,OACrBtH,EAAA4C,EAAAC,cAACwK,EAAAzK,EAAD,CAAW8E,SAAS,QAAQ1G,MAAM,cAM1ChB,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KACIjD,EAAA4C,EAAAC,cAAC+E,EAAA,EAAD,CAAMC,WAAS,EAACxG,QAAS,GACpBuL,GAEG5M,EAAA4C,EAAAC,cAAC+E,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,IACXhI,EAAA4C,EAAAC,cAACoF,EAAA,EAAD,CAAaC,UAAU,YACnBlI,EAAA4C,EAAAC,cAACsF,EAAA,EAAD,CAAWD,UAAU,UACjBlI,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KACIjD,EAAA4C,EAAAC,cAAA,OAAKO,UAAWpB,EAAQjB,eAAxB,KACC,IACDf,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,yDACHC,eAAe,0BAI3BnD,EAAA4C,EAAAC,cAACwF,EAAA,EAAD,CACIC,aAAW,sBACX7F,MAAOsC,EAAUiE,KAAOjE,EAAUiE,KAAO,OACzCzH,SACKgH,IACGvD,EAAiB,CAAEiB,OAAQ,OAAQxD,MAAO8F,EAAM/F,OAAOC,QACvDuC,EAAiB,CAAEiB,OAAQ,cAAexD,OAAO,IACjDuC,EAAiB,CAAEiB,OAAQ,aAAcxD,MAAO,OAChDuC,EAAiB,CAAEiB,OAAQ,YAAaxD,MAAO,UAIvDzC,EAAA4C,EAAAC,cAAC2F,EAAA,EAAD,CACI/F,MAAM,OACNgG,QAASzI,EAAA4C,EAAAC,cAAC6F,EAAA,EAAD,CAAO1H,MAAM,YACtBgC,MACIhD,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,uDACHC,eAAe,mBAI3BnD,EAAA4C,EAAAC,cAAC2F,EAAA,EAAD,CACI/F,MAAM,aACNgG,QAASzI,EAAA4C,EAAAC,cAAC6F,EAAA,EAAD,CAAO1H,MAAM,YACtBgC,MACIhD,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,sDACHC,eAAe,4BAQ3CnD,EAAA4C,EAAAC,cAAC+E,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,IACXhI,EAAA4C,EAAAC,cAACoF,EAAA,EAAD,CAAaC,UAAU,YACnBlI,EAAA4C,EAAAC,cAACsF,EAAA,EAAD,CAAWD,UAAU,UACjBlI,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KACIjD,EAAA4C,EAAAC,cAAA,OAAKO,UAAWpB,EAAQjB,eAAxB,KACC,IACDf,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,gDACHC,eAAe,iBAI3BnD,EAAA4C,EAAAC,cAACwF,EAAA,EAAD,CACIC,aAAW,aACX7F,MAAOsC,EAAUI,UACjB5D,SAAWgH,GAAUvD,EAAiB,CAAEiB,OAAQ,YAAaxD,MAAO8F,EAAM/F,OAAOC,SAEjFzC,EAAA4C,EAAAC,cAAC2F,EAAA,EAAD,CACI/F,MAAM,MACNgG,QAASzI,EAAA4C,EAAAC,cAAC6F,EAAA,EAAD,CAAO1H,MAAM,YACtBgC,MACIhD,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,+CACHC,eAAe,eAI3BnD,EAAA4C,EAAAC,cAAC2F,EAAA,EAAD,CACI/F,MAAM,OACNgG,QAASzI,EAAA4C,EAAAC,cAAC6F,EAAA,EAAD,CAAO1H,MAAM,YACtBgC,MACIhD,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,kEACHC,eAAe,2BAOtCwJ,GAAWA,EAAQhH,MAEZ3F,EAAA4C,EAAAC,cAAC+E,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,IACXhI,EAAA4C,EAAAC,cAACyK,EAAA,EAAD,CACI1E,QAAS,IAAMtD,EAAY,CAAEK,KAAM,OACnCkD,gBAAc,EACd7E,OAAK,EACL8E,WAAY,CAAEC,UAAW,GACzBC,KAAK,QACL7C,QAASwG,EAAQhH,KAAKQ,WAItCnG,EAAA4C,EAAAC,cAAC+E,EAAA,EAAD,CAAME,MAAI,EAACE,GAAI,IACV9C,EA9JTH,EAAUK,WA9CVpF,EAAA4C,EAAAC,cAAC0K,EAAA,EAAD,KACIvN,EAAA4C,EAAAC,cAAC2K,EAAA,EAAD,CAAUtJ,IAAKa,EAAUK,WAAW+D,MAChCnJ,EAAA4C,EAAAC,cAAC4K,EAAA,EAAD,KACIzN,EAAA4C,EAAAC,cAAC6K,EAAA,EAAD,KACI1N,EAAA4C,EAAAC,cAAC8K,EAAA/K,EAAD,QAGR5C,EAAA4C,EAAAC,cAAC+K,EAAA,EAAD,CACItJ,QAAO,GAAAkF,OAAKzE,EAAUK,WAAW+D,KAA1B,OAAAK,OAAoCC,YAAc1E,EAAUK,WAAWsE,SAElF1J,EAAA4C,EAAAC,cAACgL,EAAA,EAAD,KACI7N,EAAA4C,EAAAC,cAACiL,EAAA,EAAD,CACIjE,KAAK,MACLvB,aAAW,SACXwB,QAAS,KACL9E,EAAiB,CAAEiB,OAAQ,aAAcxD,MAAO,OAChDuC,EAAiB,CAAEiB,OAAQ,cAAexD,OAAO,MAGrDzC,EAAA4C,EAAAC,cAACkL,EAAAnL,EAAD,UAgChB5C,EAAA4C,EAAAC,cAACmH,EAAA,EAAD,CACI9I,MAAOyL,GAAWA,EAAQhH,KAC1BF,OAAQA,EACRC,MAAOX,EAAUK,WACjB6E,OAAO,yCAEN1E,EAAgBvF,EAAA4C,EAAAC,cAAC0E,EAAA,EAAD,MAETvH,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KACMkK,EACFnN,EAAA4C,EAAAC,cAACmL,EAAA,EAAD,CACIhN,MAAM,UACN4C,QAAQ,aAER5D,EAAA4C,EAAAC,cAACuF,EAAA,EAAD,CACIlF,GAAG,uDACHC,eAAe,6BA2IvBnD,EAAA4C,EAAAC,cAACwH,EAAA,EAAD,CACIC,WAAS,EACTpH,GAAG,sBACHF,MAAM,WACNuH,YAAY,iBACZzH,WAAS,EACTa,OAAO,SACPC,QAAQ,WACRrC,SAAUgB,IAAA,IAAGC,QAAQC,MAAEA,IAAbF,EAAA,OAA2ByC,EAAiB,CAAEiB,OAAQ,aAAcxD,WAC9EA,MAAOsC,EAAUK,WACjBoF,gBAAiB,CACbC,QAAQ,GAEZ5G,WAAY,CACR6G,OAAQC,IAA2B,IAAxBnI,QAAQC,MAAEA,IAAckI,GAhRnE,SAAqBnE,GACH,OAAVA,GACAhB,GAAgB,GAChB8F,IAAK2C,YAAYlJ,EAAUK,YAAYjD,KAAMC,IACzC0K,EAA6B1K,EAAU,SACxCgE,MAAOlF,IACN+L,EAAkC/L,EAAO,WAG7CoE,EAAWY,EAAA,GAAMyG,EAAN,CAAejG,IAAKF,KAC/BvB,GAAW,IAuQiBgJ,CAAYxH,IAAcC,IAAIhC,WAAW7C,SAASY,GAAOvB,QAE7D0J,aAAcxD,GAElBzF,WACKgL,GAAWA,EAAQjG,KAAOiG,EAAQjG,IAAIP,SAAY,iCAEvDjF,MAAOyL,GAAWxF,QAAQwF,EAAQjG,KAClCmE,SAAUtF,OAU1CkH,EAAYhI,aAAe,CACvBQ,WAAY,QAEhBwH,EAAY3B,UAAY,CACpB/F,UAAWJ,IAAUoG,MAAM,CACvB/B,KAAMrE,IAAUqG,OAChB7F,UAAWR,IAAUqG,OACrB6B,KAAMlI,IAAUqG,SACjBnG,WACHG,iBAAkBL,IAAUsG,KAAKpG,WACjCI,WAAYN,IAAUsG,s9BC/X1B,MAAMrK,EAAYC,YAAYC,IAAD,CACzBC,cAAe,CACXC,MAAOF,EAAMG,QAAQC,MAAMC,SAWpB,SAAS+M,EAAe5M,GACnC,MAAMyD,UAAEA,EAAFC,iBAAaA,EAAbC,WAA+BA,GAAe3D,GAC9C8D,WAAEA,GAAeL,EACjB/C,EAAUpB,KAETyE,EAASC,GAAevD,mBAAS,CAAE4D,KAAM,QACzCJ,EAAcC,GAAmBzD,oBAAS,GAMjD,SAAS0D,EAAOC,GACZF,GAAgB,GAKhB,MAAMG,EAAOD,EAAME,MACnB,IAAIC,EAAY,KAChB3D,IAAIiM,oBAAoBxI,GACnBxD,KAAMC,IACH,MACIC,MAAQgD,QAASU,EAAXqI,YAAwBA,IAC9BhM,EACA2D,GACAF,EAAYF,EACZX,EAAiB,CAAEiB,OAAQ,cAAexD,MAAO2L,IACjD9I,EAAWY,EAAA,GAAMb,EAAN,CAAeM,KAAM,SAEhCL,EAAWY,EAAA,GAAMb,EAAN,CAAeM,KAAM,CAAEQ,QAAS,2CAGlDC,MAAOlF,IACJoE,EAAWY,EAAA,GAAMb,EAAN,CAAeM,KAAM,CAAEQ,QAAS,yCAC3CE,QAAQnF,MAAMA,KAEjBoF,QAAQ,KACLd,GAAgB,GAChBP,EAAyB,OAAdY,GAEXb,EAAiB,CAAEiB,OAAQ,aAAcxD,MAAOoD,MAU5D,OANA5D,oBAAU,KACFmD,GACAK,EAAO,CAACL,KAEb,CAACA,IAGApF,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KACIjD,EAAA4C,EAAAC,cAACwL,EAAA,EAAD,CAAMxG,WAAS,EAACxG,QAAS,IACnB0D,EAAUK,YACRpF,EAAA4C,EAAAC,cAACwL,EAAA,EAAD,CAAMvG,MAAI,EAACE,GAAI,IACXhI,EAAA4C,EAAAC,cAACyL,EAAA,EAAD,CAAapG,UAAU,YACnBlI,EAAA4C,EAAAC,cAAC0L,EAAA,EAAD,CAAWrG,UAAU,UACjBlI,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KACIjD,EAAA4C,EAAAC,cAAA,OAAKO,UAAWpB,EAAQjB,eAAxB,KACC,IACDf,EAAA4C,EAAAC,cAAC2L,EAAA,EAAD,CACItL,GAAG,sDACHC,eAAe,6BAOtCkC,EAAQM,MAED3F,EAAA4C,EAAAC,cAACwL,EAAA,EAAD,CAAMvG,MAAI,EAACE,GAAI,IACXhI,EAAA4C,EAAAC,cAAC4L,EAAA,EAAD,CACI7F,QAAS,IAAMtD,EAAY,CAAEK,KAAM,OACnCkD,gBAAc,EACd7E,OAAK,EACL8E,WAAY,CAAEC,UAAW,GACzBC,KAAK,QACL7C,QAASd,EAAQM,KAAKQ,WAItCnG,EAAA4C,EAAAC,cAACwL,EAAA,EAAD,CAAMvG,MAAI,EAACE,GAAI,IACVjD,EAAUK,WACPpF,EAAA4C,EAAAC,cAAC6L,EAAA,EAAD,KACI1O,EAAA4C,EAAAC,cAAC8L,EAAA,EAAD,CAAUzK,IAAKa,EAAUK,WAAW+D,MAChCnJ,EAAA4C,EAAAC,cAAC+L,EAAA,EAAD,KACI5O,EAAA4C,EAAAC,cAACgM,EAAA,EAAD,KACI7O,EAAA4C,EAAAC,cAACiM,EAAAlM,EAAD,QAGR5C,EAAA4C,EAAAC,cAACkM,EAAA,EAAD,CACIzK,QAAO,GAAAkF,OAAKzE,EAAUK,WAAW+D,KAA1B,6CAAAK,OACLC,YAAc1E,EAAUK,WAAWsE,SAEzC1J,EAAA4C,EAAAC,cAACmM,EAAA,EAAD,KACIhP,EAAA4C,EAAAC,cAACoM,EAAA,EAAD,CACIpF,KAAK,MACLvB,aAAW,SACXwB,QAAS,KACL9E,EAAiB,CAAEiB,OAAQ,aAAcxD,MAAO,OAChDuC,EAAiB,CAAEiB,OAAQ,cAAexD,OAAO,MAGrDzC,EAAA4C,EAAAC,cAACqM,EAAAtM,EAAD,UAMhB5C,EAAA4C,EAAAC,cAACsM,EAAA,EAAD,CACIjO,MAAOmE,EAAQM,KACfF,OAAQA,EACRC,MAAOX,EAAUK,WACjB6E,OAAO,uBAEN1E,EAAgBvF,EAAA4C,EAAAC,cAACuM,EAAA,EAAD,MACV,CACCpP,EAAA4C,EAAAC,cAAC2L,EAAA,EAAD,CACItL,GAAG,+DACHC,eAAe,yDACf+G,OAAQ,CAAEC,MAAOnK,EAAA4C,EAAAC,cAAA,cAErB7C,EAAA4C,EAAAC,cAACwM,EAAA,EAAD,CACIrO,MAAM,UACN4C,QAAQ,aAER5D,EAAA4C,EAAAC,cAAC2L,EAAA,EAAD,CACItL,GAAG,6DACHC,eAAe,gCAa3D+K,EAAezJ,aAAe,CAC1BQ,WAAY,QAEhBiJ,EAAepD,UAAY,CACvB/F,UAAWJ,IAAUoG,MAAM,CACvB/B,KAAMrE,IAAUqG,OAChB7F,UAAWR,IAAUqG,SACtBnG,WACHG,iBAAkBL,IAAUsG,KAAKpG,WACjCI,WAAYN,IAAUsG,yCC5M1B,IAAAlL,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAuP,EAAA3P,EAAA,MAAA4P,EAAA5P,EAAA,MAAA6P,EAAA7P,EAAA,MAAA8P,EAAA9P,EAAA,MAAA+P,EAAA/P,EAAA,MAAAgQ,EAAAhQ,EAAA,MAAAiQ,EAAAjQ,EAAA,MAAAkQ,EAAAlQ,EAAA,KAAAmQ,EAAAnQ,EAAAM,EAAA4P,GAAAE,EAAApQ,EAAA,MAAAqQ,EAAArQ,EAAA,IAAAsQ,EAAAtQ,EAAAM,EAAA+P,GAAAE,EAAAvQ,EAAA,IAAAwQ,EAAAxQ,EAAA,KAAAyQ,EAAAzQ,EAAA,KAAA0Q,EAAA1Q,EAAA,KAAA2Q,EAAA3Q,EAAA,KAAA4Q,EAAA5Q,EAAA,KAAA6Q,EAAA7Q,EAAA,IAkEA,MAAM8Q,UAAwBC,IAAMC,UAMhCC,YAAYtP,GACRuP,MAAMvP,GACNwP,KAAKC,gBAAkBD,KAAKC,gBAAgBC,KAAKF,MACjDA,KAAKG,mBAAqBH,KAAKG,mBAAmBD,KAAKF,MACvDA,KAAKI,kBAAoBJ,KAAKI,kBAAkBF,KAAKF,MACrDA,KAAKtK,MAAQ,CAAE2K,UAAU,GAQ7BF,qBACIH,KAAKM,SAAS,CAAED,UAAU,IAQ9BD,oBACIJ,KAAKM,SAAS,CAAED,UAAU,IAS9BJ,kBACI,MAAMM,IAAEA,EAAFC,QAAOA,GAAYR,KAAKxP,MAC1B+P,EAAIE,UAAYrP,IAAIsP,OAAOC,WAC3BvP,IAAIwP,cAAcL,EAAInO,IAAIf,KAAMC,IAC5B,GAAwB,MAApBA,EAASuP,OAGT,OAFAtL,QAAQuL,IAAIxP,QACZyP,IAAM3Q,MAAM,wDAIhB2Q,IAAM7E,QAAQ,eAAiBqE,EAAI3O,KAAO,8BAC1C4O,EAAQQ,KAFY,mBAGrB1L,MAAOlF,IACe,MAAjBA,EAAMyQ,OACNE,IAAM3Q,MAAM,KAAOmQ,EAAI3O,KAAO,QAAUxB,EAAMkB,SAASC,KAAKmC,aAE5DqN,IAAM3Q,MAAM,0DAIpBmQ,EAAIU,SAAS5P,KAAMC,IACf,GAAwB,MAApBA,EAASuP,OAGT,OAFAtL,QAAQuL,IAAIxP,QACZyP,IAAM3Q,MAAM,gDAIhB2Q,IAAM7E,QAAQ,OAASqE,EAAI3O,KAAO,8BAClC4O,EAAQQ,KAFY,WAGrB1L,MAAOlF,IACe,MAAjBA,EAAMyQ,OACNE,IAAM3Q,MAAM,KAAOmQ,EAAI3O,KAAO,QAAUxB,EAAMkB,SAASC,KAAKmC,aAE5DqN,IAAM3Q,MAAM,kDAY5B8Q,SACI,MAAMX,IAAEA,EAAFvH,QAAOA,EAAP9H,QAAgBA,GAAY8O,KAAKxP,MACjC0H,EAAOqI,EAAIE,UAAYrP,IAAIsP,OAAOC,WAAa,eAAiB,OAChEQ,EAAUZ,EAAIE,UAAYrP,IAAIsP,OAAOC,WAAa,KAAO,IAAMJ,EAAIY,QACnEC,EAAgBpI,GAAWgH,KAAKC,gBAEtC,IAAI5H,EAAOgJ,IAAaC,WAMxB,OAJIf,EAAIE,UAAYrP,IAAIsP,OAAOC,aAC3BtI,EAAOgJ,IAAaE,oBAIpBrS,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KAEIjD,EAAA4C,EAAAC,cAACwN,EAAA,EAAD,CAAiBiC,eAAgBA,IAAeC,OAAQJ,aAAchJ,GAClEnJ,EAAA4C,EAAAC,cAAA,OAAKO,UAAWpB,EAAQwQ,eACpBxS,EAAA4C,EAAAC,cAAC0N,EAAA,EAAD,CAAiBkC,OAAQ,KACzBzS,EAAA4C,EAAAC,cAAA,KACIK,GAAG,iCACH4G,QAASgH,KAAKI,kBACdwB,UAAW5B,KAAKI,kBAChB9N,UAAWpB,EAAQ+P,QAEnB/R,EAAA4C,EAAAC,cAAA,WACI7C,EAAA4C,EAAAC,cAACiN,EAAAlN,EAAD,OAEJ5C,EAAA4C,EAAAC,cAAC+M,EAAA,EAAD,CAAYhM,QAAQ,WAChB5D,EAAA4C,EAAAC,cAAC2N,EAAA,EAAD,CACItN,GAAG,iDACHC,eAAe,eAMnCnD,EAAA4C,EAAAC,cAACyM,EAAA,EAAD,CAAQqD,KAAM7B,KAAKtK,MAAM2K,SAAUyB,WAAYC,KAC3C7S,EAAA4C,EAAAC,cAAC0M,EAAA,EAAD,KACIvP,EAAA4C,EAAAC,cAAC2N,EAAA,EAAD,CACItN,GAAG,gDACHC,eAAe,gBACf+G,OAAQ,CAAElB,WAGlBhJ,EAAA4C,EAAAC,cAAC2M,EAAA,EAAD,KACIxP,EAAA4C,EAAAC,cAAC4M,EAAA,EAAD,KACIzP,EAAA4C,EAAAC,cAAC2N,EAAA,EAAD,CACItN,GAAG,2DACHC,eAAe,gEACf+G,OAAQ,CACJ4I,EAAIC,GAAQ/S,EAAA4C,EAAAC,cAAA,SAAIkQ,GAChB/J,OACAtG,KAAM2O,EAAI3O,KACVuP,eAKhBjS,EAAA4C,EAAAC,cAAC6M,EAAA,EAAD,KACI1P,EAAA4C,EAAAC,cAAC8M,EAAA,EAAD,CAAQ3L,OAAK,EAAC8F,QAASgH,KAAKG,oBACxBjR,EAAA4C,EAAAC,cAAC2N,EAAA,EAAD,CACItN,GAAG,wDACHC,eAAe,YAGvBnD,EAAA4C,EAAAC,cAAC8M,EAAA,EAAD,CACIzM,GAAG,sBACH4G,QAAS,KACLoI,IACApB,KAAKG,uBAGTjR,EAAA4C,EAAAC,cAAC2N,EAAA,EAAD,CACItN,GAAG,wDACHC,eAAe,gBAU/CsN,EAAgBhM,aAAe,CAC3BqF,SAAS,GAGb2G,EAAgB3F,UAAY,CACxBuG,IAAK1M,IAAUoG,MAAM,CACjBgH,OAAQpN,IAAUsG,OACnBpG,WACHyM,QAAS3M,IAAUoG,MAAM,CAAE+G,KAAMnN,IAAUsG,OAAQpG,WACnDiF,QAASnF,IAAUsG,KACnBjJ,QAAS2C,IAAUoG,MAAM,IAAIlG,YAGlBmO,yBAAWC,YApOVnS,IAAD,CACXoS,KAAM,CACFT,OAAQ,GACRU,WAAYrS,EAAMG,QAAQkS,WAAWC,MACrCC,aAAc,aAAevS,EAAMG,QAAQqS,KAAKC,KAChDC,QAAS,OACTC,WAAY,UAEhBC,SAAU,CACND,WAAY,SACZE,eAAgB,OAChBH,QAAS,QAEbI,SAAU,CACN5S,MAAOF,EAAMG,QAAQqD,QAAQnD,KAC7BuG,SAAU,GACVmM,OAAQ,WAEZC,SAAU,CACN9S,MAAOF,EAAMG,QAAQqD,QAAQnD,KAC7B0S,OAAQ,UACRE,WAAYjT,EAAMkT,WAAWD,YAEjCvB,cAAe,CACXyB,KAAM,EACNT,QAAS,OACTU,eAAgB,WAChBC,aAAcrT,EAAMO,QAAQ,IAEhC0Q,OAAQ,CACJyB,QAAS,OACTY,cAAe,SACfC,UAAW,SACXrT,MAAOF,EAAMwT,OAAOC,kBACpBL,eAAgB,SAChBL,OAAQ,WAEZW,SAAU,CACN9M,SAAU5G,EAAMkT,WAAWtM,YA8LU,CAAE+M,WAAW,GAAhCxB,CAAwCxC,+RChOlE,SAASiE,EAAWpT,GAChB,MAAMR,EAAQ6T,eACRC,OAAEA,EAAFxR,UAAUA,GAAc9B,EAC9B,IAAIuT,EAAY/T,EAAMwT,OAAOQ,mBAAqBhU,EAAMwT,OAAOQ,mBAAmBF,EAAOG,eAAiB,KACtGC,EAAgB,UAOpB,OANKH,EAIDG,EAAgBlU,EAAMG,QAAQgU,gBAAgBnU,EAAMwT,OAAOQ,mBAAmBF,EAAOG,iBAHrF1O,QAAQuL,IAAI,8EACZiD,EAAY,WAKZK,EAAAtS,EAAAC,cAACsS,EAAA,EAAD,CACInS,MAAO4R,EACPxR,UAAWA,GAAa,GACxBgS,MAAO,CACHC,gBAAiBR,EAAW7T,MAAOgU,EAAevC,OAAQ,GAAI6C,MAAO,MAKrFZ,EAAW5J,UAAY,CACnB1H,UAAWuB,IAAUqG,OAAOnG,WAC5B+P,OAAQjQ,IAAUqG,OAAOnG,YAGd6P,qXCHf,MAAM9T,EAAYC,YAAYC,IAAD,CACzByU,cAAe,CACXC,QAAS,EACTC,UAAW3U,EAAMO,QAAQ,GACzBqU,UAAW,CACPF,QAAS,cAGjBpC,MAAO,CACHX,OAAQ,OACRkD,aAAc,GAElBC,WAAY,CACRC,UAAW,OACXpD,OAAQ,KAEZqD,gBAAiB,CACb1U,WAAYN,EAAMO,QAAQ,GAC1B0U,YAAajV,EAAMO,QAAQ,GAC3B2U,WAAY,CACRH,UAAW,OACXpD,OAAQ,IACRwD,OAAQ,aAAenV,EAAMG,QAAQqS,KAAK,KAC1CqC,aAAc7U,EAAMO,QAAQ,IAEhC6U,8BAA+B,CAC3BC,qBAAsB,QAE1BC,uCAAwC,CACpCd,MAAO,IAEXe,yCAA0C,CACtC5D,OAAQ,IAEZ6D,oCAAqC,CACjCX,aAAc7U,EAAMO,QAAQ,GAC5B4U,OAAQ,YAAcnV,EAAMG,QAAQsV,OAAOC,MAC3CnB,gBAAiBvU,EAAMG,QAAQqS,KAAK,MAExCmD,sBAAuB,CACnBhE,OAAQ,MAGhBiE,wBAAyB,CACrBb,UAAW,OACXc,UAAW,OACXlE,OAAQ,KAEZmE,SAAU,CACNzD,WAAYrS,EAAMG,QAAQqS,KAAK,KAC/BtS,MAAOF,EAAMG,QAAQgU,gBAAgBnU,EAAMG,QAAQqS,KAAK,MACxDkC,QAAS1U,EAAMO,QAAQ,IAE3BwV,UAAW,CACP1D,WAAYrS,EAAMG,QAAQqS,KAAK,KAC/BtS,MAAOF,EAAMG,QAAQgU,gBAAgBnU,EAAMG,QAAQqS,KAAK,MACxDkC,QAAS1U,EAAMO,QAAQ,IAE3ByV,SAAU,CACN3D,WAAYrS,EAAMG,QAAQqS,KAAK,KAC/BtS,MAAOF,EAAMG,QAAQgU,gBAAgBnU,EAAMG,QAAQqS,KAAK,MACxDkC,QAAS1U,EAAMO,QAAQ,GACvB0V,WAAY,IACZC,UAAW,IAEfC,aAAc,CACV9D,WAAYrS,EAAMG,QAAQqS,KAAK,KAC/BtS,MAAOF,EAAMG,QAAQgU,gBAAgBnU,EAAMG,QAAQqS,KAAK,MACxDkC,QAAS1U,EAAMO,QAAQ,IAE3B6V,oBAAqB,CACjBC,YAAarW,EAAMO,QAAQ,IAE/B+V,SAAU,CACNC,oBAAqB,CACjB3P,SAAU5G,EAAMO,QAAQ,GACxBwS,OAAQ,UACRkC,YAAajV,EAAMO,QAAQ,IAE/BmS,QAAS,OACTC,WAAY,SACZ+B,QAAS,SAEb8B,GAAI,CACArD,KAAM,EACN7S,WAAYN,EAAMO,QAAQ,GAC1B0U,YAAajV,EAAMO,QAAQ,GAC3BL,MAAOF,EAAMG,QAAQgU,gBAAgBnU,EAAMG,QAAQqS,KAAK,OAE5DiE,WAAY,CACRnW,WAAYN,EAAMO,QAAQ,GAC1B0U,YAAajV,EAAMO,QAAQ,IAE/BmW,WAAY,CACRvD,KAAM,GAEVwD,YAAa,CACTtE,WAAYrS,EAAMG,QAAQqS,KAAK,MAEnCoE,cAAe,CACXlC,QAAS1U,EAAMO,QAAQ,IAE3BsW,cAAe,CACXlC,UAAW3U,EAAMO,QAAQ,GACzBuW,aAAc,QAElBC,uBAAwB,CACpBrC,QAAS,YAEbsC,eAAgB,CACZtC,QAAS1U,EAAMO,QAAQ,IAE3B0W,QAAS,CACLvE,QAAS,OACTU,eAAgB,WAChBT,WAAY,SACZ9P,OAAQ,SACRwP,WAAYrS,EAAMG,QAAQqS,KAAK,KAC/BtS,MAAOF,EAAMG,QAAQgU,gBAAgBnU,EAAMG,QAAQqS,KAAK,MACxDkC,QAAS,EACTG,aAAc,EACdqC,MAAO,CACHnE,OAAQ,UACRL,QAAS,OACTU,eAAgB,WAChBT,WAAY,WAGpBwE,aAAc,CACVjX,MAAOF,EAAMG,QAAQqS,KAAK,SAWlC,SAAS4E,EAAqB5W,GAC1B,MAAMU,EAAUpB,KACVuX,aACFA,EADEC,gBACYA,EADZC,cAC6BA,EAD7BhH,IAC4CA,EAD5CiH,wBACiDA,GACnDhX,GAGGiX,EAASC,GAAczW,mBAAS,KAChC0W,EAAUC,GAAe3W,oBAAS,IAClC4W,EAAYC,GAAiB7W,mBAAS,KACtC8W,EAAkBC,GAAuB/W,mBAAS,KAClD0V,EAAasB,GAAkBhX,mBAAS,OACxCiX,EAAYC,GAAiBlX,oBAAS,GAEvCmX,EAAgB,IAAIhX,IAQpBiX,EAAa,WAAiB,IAAhBC,EAAgBjN,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,GAAAA,UAAA,GAAT,KACvB,GAAIiN,EAAM,CAEN,MACMC,EAAe,eADFD,EAAKE,OAAOvE,cACoB,aAC7CwE,EAAmBC,IAAYC,MAAMJ,GAI3C,OAFAE,EAAiBG,MAAQ,IACzBH,EAAiBI,OAAS,EACnBzX,IAAI0X,OAAOL,GAElB,OAAOrX,IAAI2X,IAAI,CACXC,MAAO,CACH9Q,KAAM,WAKhB+Q,EAA6B,SAACC,EAAOC,GAA6C,IAAtCC,EAAsC/N,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,GAAAA,UAAA,GAAjBgM,EAEnEgC,OAAOC,KAAKJ,GAAOlW,IAAKI,IACpB,MAAMmW,EAAYL,EAAM9V,GACxBiW,OAAOC,KAAKC,GAAWvW,IAAKwW,IAGxBD,EAAUC,GAAUlW,SAAU,EAK9B,MAAM5B,EAAS0B,EACTqW,EAAOD,EACb,IAAIE,GAAgB,EAChBN,GACAC,OAAOC,KAAKF,GAAoBpW,IAAK2W,IACjC,MAAMC,EAAcR,EAAmBO,GAGnCC,GAAeT,IAAUS,EAAYT,OAErCE,OAAOC,KAAKM,EAAYC,YAAY7W,IAAK8W,IACrC,MAAMC,EAAYH,EAAYC,WAAWC,GAErCC,GACGA,EAAUrY,SAAWA,GACrBqY,EAAUN,KAAKxF,gBAAkBwF,EAAKxF,gBAGzCyF,GAAgB,OAOhCH,EAAUC,GAAUQ,gBADpBN,MAOZ1B,EAAoBkB,IAIlBe,EAAiBC,IACnB,MAAM9X,GAAEA,GAAO8X,EACK9B,EAAc+B,WAAW/X,GAExCf,KAAMC,SACwBoF,IAAvBpF,EAAS8Y,IAAIlB,QACbD,EAA2B3X,EAAS8Y,IAAIlB,MAAO9W,GAC/C6V,EAAeiC,MAGtB5U,MAAOlF,IAEJ,MAAMyQ,OAAEA,GAAWzQ,EACJ,MAAXyQ,EACA+G,GAAY,GACM,MAAX/G,GACPwJ,iBA6BVC,EAAqB,SAACC,EAAepV,GAAqC,IAA7BqV,EAA6BnP,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,GAAAA,UAAA,GAAT,KAC/DoP,GAAkB,EAClBC,EAAkB,KACjBF,EAMDE,EAAkBF,GAHlBE,EAAkBC,IAAUtD,GAC5BoD,GAAkB,GAItB,MAAM/Y,OACFA,EADE+X,KACMA,EADNN,MACYA,EADZvX,KACmBA,GACrB2Y,EACEK,EAAc,CAChBxY,GAAI,KACJV,SACA+X,KAAMA,EAAKoB,cACXC,SAAU,KACVC,iBAAkB,KAClBC,OAAQ,IAEZ,IAAIC,GAAW,EAmDf,OAhDA5B,OAAOC,KAAKoB,GAAiB1X,IAAI,CAACI,EAAK8X,KACnC,MAAMtB,EAAcc,EAAgBtX,GAGpC,GAAIwW,GAAeT,IAAUS,EAAYT,MAAO,CAC5C8B,GAAW,EACX,IAAIE,GAAiB,EACrB9B,OAAOC,KAAKM,EAAYC,YAAY7W,IAAI,CAACwW,EAAU4B,KAC/C,MAAMrB,EAAYH,EAAYC,WAAWL,GAErCO,GACGA,EAAUrY,SAAWA,GACrBqY,EAAUN,KAAKxF,gBAAkBwF,EAAKxF,gBAGzCkH,GAAiB,EACF,WAAXhW,IACIyU,EAAYC,WAAWvO,OAAS,EAChCsO,EAAYC,WAAWwB,OAAOD,EAAQ,GAEtCV,EAAgBW,OAAOH,EAAQ,OAM1CC,GAA6B,QAAXhW,GACnByU,EAAYC,WAAW7I,KAAK4J,MAKnCK,GAEDP,EAAgB1J,KAAK,CACjBpP,OACAuX,QACAU,WAAY,CAACe,KAIjBH,IACAnD,EAAgBoD,GAEZvB,IAAUxC,EAAYvU,IACtB6W,EAA2B0B,IAAU5C,GAAmBoB,EAAOuB,IAGhEA,GAGLY,EAAiB,CAAClY,EAAKoW,KAEzB,MAAM+B,6UAAoBnW,CAAA,GAAQ2S,GAGlCwD,EAAqBnY,GAAKoW,GAAUlW,SAAWiY,EAAqBnY,GAAKoW,GAAUlW,QAGnF0U,EAAoBuD,IAElBC,EAA6B,WAAoB,IAAnBC,EAAmBpQ,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,IAAAA,UAAA,GAEnD,MAAMqP,EAAkBC,IAAUtD,GAClCgC,OAAOC,KAAKvB,GAAkB/U,IAAKI,IAC/B,MAAMmW,EAAYxB,EAAiB3U,GACnCiW,OAAOC,KAAKC,GAAWvW,IAAKwW,KAGpBD,EAAUC,GAAUlW,SAAWmY,IAE/BnB,EACI,CACI5Y,OAAQ0B,EACRqW,KAAMD,EACNL,MAAOxC,EAAYvU,GACnBR,KAAM+U,EAAY/U,MAEtB,MACA8Y,OAKhBpD,EAAgBoD,GAChBzB,EAA2B0B,IAAU5C,GAAmBpB,EAAYvU,GAAIsY,IA4B5E,OA1BAvZ,oBAAU,KAEakX,IAEdhX,KAAMC,IACH,MACIC,MAAMM,KAAEA,IACRP,EACEoa,EAAe7Z,EAAK8Z,OAAQC,GAAsC,eAA3BA,EAAOC,iBAEpDnE,EAAWgE,GACPA,EAAapQ,OAAS,IACtB2M,EAAeyD,EAAa,IAC5BzB,EAAcyB,EAAa,OAGlCpW,MAAOlF,IAEJ,MAAMyQ,OAAEA,GAAWzQ,EACJ,MAAXyQ,EACA+G,GAAY,GACM,MAAX/G,GACPwJ,iBAGb,IACC1C,EACOvD,EAAAtS,EAAAC,cAAC+Z,EAAA,EAAD,CAAkBzW,QAASmS,IAGlCpD,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACwB,IAAnBsV,EAAQnM,QAAiB4M,EAUtB9D,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,MACMoV,GACEnD,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,GACXqN,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,EAAG3E,UAAWpB,EAAQ4U,UACjC1B,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,0EACHC,eAAe,mDAGvB+R,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,EAAG3E,UAAWpB,EAAQ6U,WACjC3B,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,mEACHC,eAAe,sCAEnB+R,EAAAtS,EAAAC,cAAA,eAKhBqS,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,GAIXqN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,GACXmN,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ8U,UACpB5B,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,wEACHC,eAAe,mBAGvB+R,EAAAtS,EAAAC,cAACka,EAAA,EAAD,KACI7H,EAAAtS,EAAAC,cAACma,EAAA,EAAD,CAAU5Z,UAAWpB,EAAQuT,eACzBL,EAAAtS,EAAAC,cAACoa,EAAA,EAAD,CACI/Z,GAAG,sBACHF,MAAM,MACNoS,MAAO,CAAEzR,OAAQ,GACjB4G,YAAY,cACZ5I,WAAW,iBACXJ,SAzNJgH,IACT4Q,EAAW5Q,EAAM/F,OAAOC,OAEtCN,KAAMC,IACH,MACIC,MAAMM,KAAEA,IACRP,EACEoa,EAAe7Z,EAAK8Z,OAAQC,GAA6B,eAAlBA,EAAO/K,QAChD6K,EAAapQ,OAAS,GACtB2M,EAAepW,EAAK,IAExB6V,EAAWgE,KAEdpW,MAAOlF,IAEJ,MAAMyQ,OAAEA,GAAWzQ,EACJ,MAAXyQ,EACA+G,GAAY,GACM,MAAX/G,GACPwJ,gBAGZvC,EAAcrQ,EAAM/F,OAAOC,OAC3BwW,EAAc1Q,EAAM/F,OAAOC,QAmMKA,MAAOkW,EACP7V,WAAS,EACTa,OAAO,SACPC,QAAQ,WACR4G,gBAAiB,CACbC,QAAQ,MAIpByK,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ4T,YACpBV,EAAAtS,EAAAC,cAACqa,EAAA,EAAD,CAAMlZ,OAAK,GACNuU,EAAQzU,IAAKqZ,IACV,MAAMC,EAAO,uBAAA5T,OAA0B2T,EAAOja,IAE9C,OACIgS,EAAAtS,EAAAC,cAACma,EAAA,EAAD,CACI9Y,IAAKiZ,EAAOja,GACZma,UAAM7V,EACNxD,OAAK,EACLsZ,QAAM,EACNla,UACIqU,GACG0F,EAAOja,KAAOuU,EAAYvU,IAC1BlB,EAAQyV,aAGfvC,EAAAtS,EAAAC,cAAC0a,EAAA,EAAD,CACIra,GAAIka,EACJ9Y,QAAS6Y,EAAOza,KAChB6B,UAAS,GAAAiF,OAAK2T,EAAOlL,QAAZ,OAAAzI,OAAyB2T,EAAOK,SACzC1T,QAAS,IAAMiR,EAAcoC,YAY7DjI,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,GACXmN,EAAAtS,EAAAC,cAACka,EAAA,EAAD,CAAO3Z,UAAWpB,EAAQoR,OACtB8B,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ8U,UACpB5B,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,mEACHC,eAAe,0BAGtBsU,GACGvC,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,KAAKR,UAAWpB,EAAQ0V,eACvCD,EAAY/U,MAGrBwS,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ+V,SACpB7C,EAAAtS,EAAAC,cAAA,KACIiH,QAAS,IAAMwS,IACf5J,UAAW,IAAM4J,KAEjBpH,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,SAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,gFAEHC,eAAe,kBAGvB+R,EAAAtS,EAAAC,cAAC6a,EAAA,EAAD,sBAEJxI,EAAAtS,EAAAC,cAAC8a,EAAA,EAAD,MACAzI,EAAAtS,EAAAC,cAAA,KACIiH,QAAS,IAAMwS,GAA2B,GAC1C5J,UAAW,IAAM4J,GAA2B,IAE5CpH,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,SAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,2EAEHC,eAAe,aAGvB+R,EAAAtS,EAAAC,cAAC6a,EAAA,EAAD,uBAGRxI,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ8T,iBACpBZ,EAAAtS,EAAAC,cAAA,OAAKO,UAAU,SACX8R,EAAAtS,EAAAC,cAACqa,EAAA,EAAD,CAAMlZ,OAAK,GACNmW,OAAOC,KAAKvB,GAAkB/U,IAAKI,IAChC,MAAMiF,EAAO0P,EAAiB3U,GACxBkZ,EAAO,uBAAA5T,OAA0BtF,GACvC,OAAOiW,OAAOC,KAAKjR,GAAMrF,IAAKwW,IAC1B,MAAMD,EAAYlR,EAAKmR,GACvB,OACI9I,IAAOoM,aAAavZ,SAASiW,IACzBpF,EAAAtS,EAAAC,cAACma,EAAA,EAAD,CACI9Y,IAAG,GAAAsF,OAAK8Q,EAAL,OAAA9Q,OAAmBtF,GACtBmZ,UAAM7V,EACNxD,OAAK,GAELkR,EAAAtS,EAAAC,cAACgb,EAAA,EAAD,CAAczI,MAAO,CAAE0I,SAAU,KAC7B5I,EAAAtS,EAAAC,cAACkb,EAAA,EAAD,CACIlU,KAAK,QACLzF,QAASiW,EAAUjW,QACnB4Z,UAAW,EACXC,eAAa,EACb1c,SAAU,IAAM6a,EAAelY,EAAKoW,GACpCtZ,MAAM,UACN6J,SAAUwP,EAAUS,iBAG5B5F,EAAAtS,EAAAC,cAAC0a,EAAA,EAAD,CACIra,GAAIka,EACJ9Y,QACI4Q,EAAAtS,EAAAC,cAAA,WACIqS,EAAAtS,EAAAC,cAACqb,EAAD,CACItJ,OAAQ0F,EACRlX,UAAWpB,EAAQuV,aAEvBrC,EAAAtS,EAAAC,cAAA,YAAOqB,IAGfK,UACI8V,EAAU,gBACXA,EAAU,sBADT,GAAA7Q,OAEE6Q,EAAU,eAFZ,OAAA7Q,OAGA6Q,EAAU,sBAGdvQ,QAAS,IAAMsR,EACX,CACI5Y,OAAQ0B,EACRqW,KAAMD,EACNL,MAAOxC,EAAYvU,GACnBR,KAAM+U,EAAY/U,MAEtB,OAEJU,UAAWpB,EAAQwV,aAEvBtC,EAAAtS,EAAAC,cAACsb,EAAA,EAAD,KACK9D,EAAUS,eACP5F,EAAAtS,EAAAC,cAAC6a,EAAA,EAAD,CAAMta,UAAWpB,EAAQiW,cAAzB,kBAIFoC,EAAUS,eACR5F,EAAAtS,EAAAC,cAACub,EAAA,EAAD,CACIvU,KAAK,MACLvB,aAAW,WACXwB,QAAS,IAAMsR,EACX,CACI5Y,OAAQ0B,EACRqW,KAAMD,EACNL,MAAOxC,EAAYvU,GACnBR,KAAM+U,EAAY/U,MAEtB,QAGJwS,EAAAtS,EAAAC,cAAC6a,EAAA,EAAD,kCAiBpDxI,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,GACXmN,EAAAtS,EAAAC,cAACka,EAAA,EAAD,CAAO3Z,UAAWpB,EAAQoR,OACtB8B,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ8U,WACvBzF,EAAI3O,MACDwS,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,KAAKR,UAAWpB,EAAQ0V,eACvCrG,EAAI3O,OAIjBwS,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ8T,iBACpBZ,EAAAtS,EAAAC,cAAA,OAAKO,UAAU,oBACVmV,EAAQnM,OAAS,GAAK+L,GAAwC,IAAxBA,EAAa/L,QAChD8I,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ8V,gBACpB5C,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAYvV,UAAU,KAClBgN,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,uEAEHC,eAAe,+CAK9BgV,GACEA,EAAa/L,OAAS,GACtB+N,OAAOC,KAAKjC,GAAcrU,IAAKI,IAC9B,MAAMwW,EAAcvC,EAAajU,GACjC,OACIgR,EAAAtS,EAAAC,cAAA,OAAKqB,IAAKwW,EAAYhY,MAClBwS,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQiV,cAAeyD,EAAYhY,MACnDwS,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQkV,qBACnBiD,OAAOC,KAAKM,EAAYC,YAAY7W,IAAKwW,IACtC,MAAMO,EAAYH,EAAYC,WAAWL,IACnC9X,OAAEA,EAAF+X,KAAUA,GAASM,EACzB,OACI3F,EAAAtS,EAAAC,cAAA,OACIqB,IAAG,GAAAsF,OAAKkR,EAAYT,MAAjB,KAAAzQ,OAA0B+Q,EAA1B,KAAA/Q,OAAkChH,GACrCY,UAAWpB,EAAQoV,UAEnBlC,EAAAtS,EAAAC,cAACqb,EAAD,CACItJ,OAAQ2F,EACRnX,UAAWpB,EAAQuV,aAEvBrC,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,SAASpB,GAC7B0S,EAAAtS,EAAAC,cAAA,MAAIO,UAAWpB,EAAQsV,KACvBpC,EAAAtS,EAAAC,cAAC6a,EAAA,EAAD,CACI5T,QAAS,IAAMsR,EACX,CACI5Y,SACA+X,OACAN,MAAOS,EAAYT,MACnBvX,KAAMgY,EAAYhY,MAEtB,WARR,uBA9QpDwS,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,GACXqN,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAYra,UAAWpB,EAAQ8V,gBAC3B5C,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,uEACHC,eAAe,oCAwS3C+U,EAAqBpN,UAAY,CAC7BqN,aAAcxT,IAAU0Z,WAAW7a,OAAOqB,WAC1CuT,gBAAiBzT,IAAUsG,KAAKpG,WAChCwT,cAAe1T,IAAUE,WACzBwM,IAAK1M,IAAUE,WACfyT,wBAAyB3T,IAAUqG,OAAOnG,YAE/BqT,4BC7vBf,IAAApR,EAAcnH,EAAQ,MACtB,iBAAAmH,MAAA,EAA4CwX,EAAAC,EAASzX,EAAA,MAIrD,IAAA0X,EAAA,CACAC,eAHAA,GAKa9e,EAAQ,IAARA,CAAoEmH,EAAA0X,GACjF1X,EAAA4X,SAAAJ,EAAAK,QAAA7X,EAAA4X,+BCZAJ,EAAAK,QAA2Bhf,EAAQ,IAARA,EAAgE,IAK3FmS,KAAA,CAAcwM,EAAAC,EAAS,6gBAA6gB,oOCOrhB,SAASK,EAActd,GAClC,MAAMud,MAAEA,EAAFC,SAASA,GAAaxd,EAC5B,OACI4T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACxG,QAAS,GACrB6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,KAKfmN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACiX,GAAI,EAAG/W,GAAI,IACtBkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACiX,GAAI,GAAI/W,GAAI,GACnBkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACxG,QAAS,GACrB6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACV6W,GAEL3J,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,GAAIC,GAAI,IACnBkN,EAAAtS,EAAAC,cAACka,EAAA,EAAD,CAAOhU,UAAW,GAAI+V,OAO9CF,EAAc9T,UAAY,CACtB+T,MAAOla,IAAUqa,QAAQna,WACzBia,SAAUna,IAAUqa,QAAQna,ixBCJhC,MAAMjE,EAAYC,YAAYC,IAAD,CACzBC,cAAe,CACXC,MAAOF,EAAMG,QAAQC,MAAMC,KAC3BC,WAAYN,EAAMO,QAAQ,KAE9B4d,kBAAmB,CACfC,MAAO,CACHC,aAAc,WACd7J,MAAO,IACP9B,QAAS,QACT4L,WAAY,SACZC,SAAU,WAGlBC,kBAAmB,CACfte,MAAO,QACPiV,OAAQ,mBAEZsJ,oBAAqB,CACjBve,MAAO,UACPiV,OAAQ,qBAEZuJ,kBAAmB,CACfxe,MAAO,MACPiV,OAAQ,iBAEZwJ,WAAY,CACRjK,QAAS1U,EAAMO,QAAQ,IAE3Bqe,gBAAiB,CACblK,QAAS1U,EAAMO,QAAQ,GACvBL,MAAO2e,IAAM,SAerB,SAASC,EAATrd,GAA6C,IAAtBib,QAAEA,EAAFvL,QAAWA,GAAW1P,EACrCsd,EAAiB,sBAUrB,OATIrC,IACAqC,EAAiBrC,EACbA,EAAQsC,QAAQ,aAAe,IAC/BD,EAAiBrC,EAAU,eAG/BvL,IACA4N,EAAiBA,EAAeE,QAAQ,YAAa9N,IAElD4N,EAyBI,SAASG,EAAe1e,GACnC,MAAMC,SACFA,EADE0D,WACQA,EADRoM,IACoBA,EADpBzP,aACyBA,EADzBqe,YACuCA,GACzC3e,EACEU,EAAUpB,KACTsf,EAAU5a,GAAevD,mBAAS,KAClCoe,EAAiBC,GAAsBre,sBACvCse,EAAYC,GAAiBve,mBAAS,KACtCwe,EAAYC,GAAeze,oBAAS,IACpC0e,EAAaC,GAAkB3e,oBAAS,GAI/CE,oBAAU,KACNgD,EAAWkC,QAAQkK,EAAI3O,QACXd,GAAgBuF,QAAQkK,EAAIY,WAC7B9K,QAAQkK,EAAImM,UACZrW,QAAQkK,EAAI7P,YACxB,IAEH,MAAMmf,EAAkBC,IACpB,IAAIC,EAAc1G,OAAO2G,QAAQF,GAAUxU,OAAS,GAC7C+N,OAAO2G,QAAQF,GACb9c,IAAI6G,IAAA,IAAC,CAAGlI,GAAJkI,EAAA,OAAelI,UACnBse,OAAO,CAACC,EAAKC,IAASD,GAAOC,GAItCJ,EAAcA,GACP1Z,QAAQkK,EAAI3O,QACXd,GAAgBuF,QAAQkK,EAAIY,WAC7B9K,QAAQkK,EAAImM,YACV5b,GAAoC,OAApBgf,EAAS7c,QAClCkB,EAAW4b,EAAaX,GACxB5a,EAAYsb,IAQhB,SAAS/e,EAASqf,EAAOze,GACrB,OAAQye,GACJ,IAAK,OAAQ,CACT,MAAMC,EAAe1a,IAAc2a,QAAQ1c,WAAW7C,SAASY,EAAO,CAAE4e,YAAY,IAASngB,MACxE,OAAjBigB,EACA1a,IAAc6a,aAAazf,SAASqf,EAAQ,IAAMze,GAAON,KAAMof,IACvDA,EAAOlf,KAAKM,KAAKyJ,OAAS,GAAK3J,EAAMsS,gBAAkBwM,EAAOlf,KAAKM,KAAK,GACvED,KAAKqS,cACN4L,EAAcza,EAAA,GACPga,EADO,CAEVxd,KAAM,CAAE8e,QAAS,CAAC,CAAErb,QAAS,QAAU1D,EAAQ,wBAGnDke,EAAcza,EAAA,GAAMga,EAAN,CAAgBxd,KAAMye,OAI5CR,EAAcza,EAAA,GAAMga,EAAN,CAAgBxd,KAAMye,KAExC,MAEJ,IAAK,UAAW,CACZ,MAAMM,EAAkBhb,IAAcib,WAAWhd,WAAW7C,SAASY,EAAO,CAAE4e,YAAY,IACrFngB,MACCwgB,EAAajf,EAAM4B,SAAS,KAAO5B,EAAQ,IAAMA,EAC/B,OAApBgf,EACAhb,IAAc6a,aAAazf,SAASqf,EAAQ,IAAMQ,GAAYvf,KAAMof,IAC5DA,EAAOlf,KAAKM,KAAKyJ,OAAS,GArFtD,SAAsB3J,EAAO8e,GACzB,MAAMI,EAAalf,EAAM4B,SAAS,KAAO5B,EAAMsS,cAAgB,IAAMtS,EAAMsS,cAC3E,OAAI4M,IAAe,IAAMJ,EAAOxM,cAAc6M,MAAML,EAAOxM,cAAc8M,YAAY,KAAO,IACxFF,IAAeJ,EAAOxM,cAkF6B+M,CAAarf,EAAO8e,EAAOlf,KAAKM,KAAK,GAAG6a,SACvEmD,EAAcza,EAAA,GACPga,EADO,CAEV1C,QAAS,CAAEgE,QAAS,CAAC,CAAErb,QAASub,EAAa,gCAGjDf,EAAcza,EAAA,GAAMga,EAAN,CAAgB1C,QAASiE,EAAiBxP,QAAS,UAIzE0O,EAAcza,EAAA,GAAMga,EAAN,CAAgB1C,QAASiE,KAE3C,MAEJ,IAAK,UAAW,CACZ,MAAMM,EAAkBtb,IAAcub,WAAWtd,WAAW7C,SAASY,GAAOvB,MAC5E,GAAwB,OAApB6gB,EAA0B,CAC1B,MAAMC,EAAa3Q,EAAImM,QAAQnZ,SAAS,KAAOgN,EAAImM,QAAU,IAAM/a,EAAQ,IACzE4O,EAAImM,QAAU,IAAM/a,EACtBgE,IAAc6a,aAAazf,SAAS,WAAawP,EAAImM,QACnD,YAAc/a,GAAON,KAAMof,IAErBA,EAAOlf,KAAKM,KAAKyJ,OAAS,SACO5E,IAAhC+Z,EAAOlf,KAAKM,KAAK,GAAGsP,SACjBsP,EAAOlf,KAAKM,KAAK,GAAGsP,QAAQ8C,gBACxBtS,EAAMsS,eAA6B,UAAVtS,GACjCke,EAAcza,EAAA,GACPga,EADO,CAEVjO,QAAS,CAAE9L,QAAS6b,EAAa,2CAGrCrB,EAAcza,EAAA,GAAMga,EAAN,CAAgBjO,QAAS8P,YAI/CpB,EAAcza,EAAA,GAAMga,EAAN,CAAgBjO,QAAS8P,KAE3C,MAEJ,IAAK,WAAY,CACb,MAAME,EAAiBxf,GAASA,EAAM2J,OAAS,EAC/CuU,EAAcza,EAAA,GACPga,EADO,CAEVnc,OACIke,IAAmBrgB,EACb,KACA,CAAEuE,QAAS,kEAEzB,QA+BZ,OACI+O,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACXkN,EAAAtS,EAAAC,cAAA,QAAMqf,YAAU,EAACC,aAAa,OAC1BjN,EAAAtS,EAAAC,cAACoa,EAAA,EAAD,CACI3S,WAAS,EACTxH,WAAS,EACTI,GAAG,gBACHhC,MAAOgf,EAASxd,KAChBM,MACIkS,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CAAkB5Z,GAAG,6CAA6CC,eAAe,SACjF+R,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQjB,eAAxB,MAGRY,WACIue,EAASxd,MACNwd,EAASxd,KAAK8e,QAAQ1d,IAAI,CAACse,EAAQC,IAC3BnN,EAAAtS,EAAAC,cAAA,OAAKuS,MAAO,CAAEK,UAAqB,IAAV4M,GAAe,SAAWD,EAAOjc,UAGzE1D,MAAO4O,EAAI3O,KACXA,KAAK,OACLnB,SAAUA,EACVsC,WAAY,CACRX,GAAI,yBACJwH,OAAQ4X,IAA2B,IAAxB9f,QAAQC,MAAEA,IAAc6f,EAC/BzgB,EAAS,OAAQY,KAGzBkB,OAAO,SACPC,QAAQ,aAEZsR,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACxG,QAAS,GACnBO,EAsEEsT,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACXkN,EAAAtS,EAAAC,cAACoa,EAAA,EAAD,CACIna,WAAS,EACTI,GAAG,gBACHhC,MAAOgf,EAAS1C,QAChBxa,MACIkS,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,4DACHC,eAAe,YAEnB+R,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQjB,eAAxB,MAGR2B,KAAK,UACLD,MAAO4O,EAAImM,QACXjc,SAAUA,EACVsC,WAAY,CACR6G,OAAQ6X,IAA2B,IAAxB/f,QAAQC,MAAEA,IAAc8f,EAC/B1gB,EAAS,UAAWY,KAG5Bd,WACKue,EAAS1C,SACH0C,EAAS1C,QAAQgE,QAAQ1d,IAAI,CAACse,EAAQC,IAEjCnN,EAAAtS,EAAAC,cAAA,OAAKuS,MAAO,CAAEK,UAAqB,IAAV4M,GAAe,SACnCD,EAAOjc,WAJxB,kCAAAqD,OAQqCoW,EAAcvO,GARnD,2BAUJ1N,OAAO,SACPC,QAAQ,eAxGpBsR,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,EAAGD,GAAI,GAClBmN,EAAAtS,EAAAC,cAACoa,EAAA,EAAD,CACIna,WAAS,EACTI,GAAG,gBACHhC,MAAOgf,EAAS1C,QAChBxa,MACIkS,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,oDACHC,eAAe,YAEnB+R,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQjB,eAAxB,MAGR2B,KAAK,UACLD,MAAO4O,EAAImM,QACXjc,SAAUA,EACVsC,WAAY,CACRX,GAAI,4BACJwH,OAAQ8X,IAA2B,IAAxBhgB,QAAQC,MAAEA,IAAc+f,EAC/B3gB,EAAS,UAAWY,KAG5Bd,WACKue,EAAS1C,SACH0C,EAAS1C,QAAQgE,QAAQ1d,IAAI,CAACse,EAAQC,IAEjCnN,EAAAtS,EAAAC,cAAA,OAAKuS,MAAO,CAAEK,UAAqB,IAAV4M,GAAe,SACnCD,EAAOjc,WAJxB,0BAAAqD,OAQ6BoW,EAAcvO,GAR3C,2BAUJrP,QAAS,CAAEkR,KAAMlR,EAAQid,mBACzBtb,OAAO,SACPC,QAAQ,cAGhBsR,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,EAAGD,GAAI,GAClBmN,EAAAtS,EAAAC,cAACoa,EAAA,EAAD,CACIna,WAAS,EACT5B,MAAOgf,EAASjO,QAChBjP,MACIkS,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,gDACHC,eAAe,YAEnB+R,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQjB,eAAxB,MAGR2B,KAAK,UACLD,MAAO4O,EAAIY,QACX1Q,SAAUA,EACVsC,WAAY,CACRX,GAAI,4BACJwH,OAAQ+X,IAA2B,IAAxBjgB,QAAQC,MAAEA,IAAcggB,EAC/B5gB,EAAS,UAAWY,KAG5Bd,WAAYue,EAASjO,SAAWiO,EAASjO,QAAQ9L,QACjDxC,OAAO,SACPC,QAAQ,iBA8C1BhC,GACEsT,EAAAtS,EAAAC,cAACoa,EAAA,EAAD,CACIna,WAAS,EACTI,GAAG,6BACHF,MAAM,WACNN,KAAK,WACLD,MAAO4O,EAAIqR,SACXnhB,SAAUA,EACVI,WACIue,EAASyC,aACLzN,EAAAtS,EAAAC,cAAA,4BAEIqS,EAAAtS,EAAAC,cAAA,KACI+f,IAAI,sBACJpgB,OAAO,SACPqgB,KAAK,sCAHT,YAOC,IATL,OAcR3hB,MAAOgf,EAASyC,YAChBhf,OAAO,SACPC,QAAQ,WACRC,WAAY,CACR+G,aACIsK,EAAAtS,EAAAC,cAACigB,EAAA,EAAD,CAAgBxb,SAAS,OACpB+Y,GACGnL,EAAAtS,EAAAC,cAACsS,EAAA,EAAD,CACInS,MAAOqd,EACPjd,UAAW+c,EAAkBne,EAAQsd,kBA3TjE,EAACyD,EAAW5gB,EAAM6gB,IAAeD,EAAY5gB,EAAO6gB,EA2TiCC,CACrDxC,EACAze,EAAQwd,kBAAmBxd,EAAQud,qBAEvC3b,QAAQ,cAGdqc,GACE/K,EAAAtS,EAAAC,cAACub,EAAA,EAAD,CACIhb,UAAW+c,EAAkBne,EAAQ0d,gBAAkB1d,EAAQyd,WAC/DnX,aAAW,eACXwB,QAAS,KAnNjD,SAAsB4Y,GAClBlC,GAAY,IACI,IAAIte,KACZghB,aAAaR,GAChBvgB,KAAMof,IACuB,OAAtBA,EAAOlf,KAAKnB,OACZof,EAAciB,EAAOlf,KAAKnB,OAC1Bwf,GAAe,KAEfJ,EAAciB,EAAOlf,KAAKge,WAAa,IAAMkB,EAAOlf,KAAK8gB,eACzDzC,GAAe,IAEfa,EAAOlf,KAAKge,YAAc,KAAOkB,EAAOlf,KAAKge,WAAa,KAC1DD,GAAmB,GACnBM,GAAe,IAEfN,GAAmB,KAExB9Z,QAAQ,KACPka,GAAY,MAgM+B0C,CAAa7R,EAAIqR,UAChC7X,SAAU0V,GAETA,EACKrL,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkB1Z,KAAM,KAEtBwL,EAAAtS,EAAAC,cAAC6a,EAAA,EAAD,0BAYpCxI,EAAAtS,EAAAC,cAAC/C,EAAA,EAAD,CACI0B,SAAU6P,EAAI7P,SACdI,aAAcA,EACdL,SAAUA,EACVM,SAAUA,EACVwD,QAAS6a,EAAS1e,YAG1B0T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACwb,UAAU,MAAMC,QAAQ,WAAW7P,WAAW,UAC1DyB,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACNoN,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,UAAU4P,QAAQ,QAAQ+P,cAAY,GACtDrO,EAAAtS,EAAAC,cAAA,OAAKuS,MAAO,CAAEpU,MAAO,QAArB,KACC,IAFL,uBAWpBgf,EAAevb,aAAe,CAC1BQ,WAAY,OACZoM,IAAK,GACL4O,aAAa,GAEjBD,EAAelV,UAAY,CACvBuG,IAAK1M,IAAUoG,MAAM,IACrBnJ,aAAc+C,IAAUoG,MAAM,IAAIlG,WAClCob,YAAatb,IAAUoG,MAAM,IAC7BxJ,SAAUoD,IAAUsG,KAAKpG,WACzBI,WAAYN,IAAUsG,uWCzc1B,SAASuY,EAAiBliB,GACtB,MAAM2e,YACFA,EADEre,aACWA,EADX0P,QACyBA,EADzBmS,KACkCA,GACpCniB,GACEoiB,SAAEA,GAAaC,eACdC,EAAWC,GAAgB9hB,mBAAS,OACpC+hB,EAAYC,GAAiBhiB,sBAC7BiiB,EAAcC,GAAmBliB,oBAAS,GAmBjD,MAAOgD,EAAWC,GAAoBkf,qBAdtC,SAA0BC,EAAcC,GACpC,MAAMne,OAAEA,EAAFxD,MAAUA,GAAU2hB,EAC1B,OAAQne,GACJ,IAAK,OACL,IAAK,UACL,IAAK,WACL,IAAK,UACL,IAAK,WACL,IAAK,cACD,kVAAAoe,CAAA,GAAYF,EAAZ,CAA0B3Y,CAACvF,GAASxD,IACxC,QACI,OAAO0hB,IAGgD,CAC/DG,cAAc,IAEZC,EAAgBxf,EAAU2d,UAAY3d,EAAUvD,UAA0C,IAA9BuD,EAAUvD,SAAS4K,OAC/EoY,IAAwBzf,EAAUrC,MAAQqC,EAAUkN,SAAWlN,EAAUyY,UAAYsG,GAC3DE,EA8BhC,SAASS,IACLV,GAAc,GACd,MAAMrhB,KACFA,EADEuP,QACIA,EADJuL,QACaA,EADbkF,SACsBA,EADtBlhB,SACgCA,GAClCuD,EACJ,IAAI2f,EACJ,MAAMC,EAAU,CACZjiB,OACAuP,UACAuL,UACAhc,YAiBJ,GAfIkhB,IACAiC,EAAQC,eAAiB,CACrBC,cAAe,OACfC,kBAAmB,CACfpe,IAAKgc,GAETqC,qBAAsB,CAClBre,IAAKgc,KAIjBiC,EAAQK,oBAAsBtB,EAASuB,YAAYnhB,IAAKohB,GAAQA,EAAIxiB,MAChEud,IACA0E,EAAQ3b,KAAO,MAEfpH,EAAc,CAEd8iB,EADsB,IAAIjT,IAAWkT,GAEhCQ,YAAYR,GACZxiB,KAAMijB,IACHvT,IAAM7L,KAAK,oCACXsL,EAAQQ,KAAR,iBAAAtI,OAA8B4b,EAAWliB,GAAzC,cACOkiB,IAEVhf,MAAOlF,IACJ,GAAIA,EAAMkB,SACNyP,IAAM3Q,MAAMA,EAAMkB,SAASC,KAAKmC,aAChCqf,EAAa3iB,EAAMkB,SAASC,UACzB,CAEH,MAAM8D,EAAU,oDAChB0L,IAAM3Q,MAAMiF,GACZ0d,EAAa1d,GAEjBE,QAAQnF,MAAMA,SAEnB,CAEHwjB,EADe,IAAIxiB,IAAIyiB,GAElBU,OACAljB,KAAMkP,IACHQ,IAAM7L,KAAK,4BACJqL,IAEVjL,MAAOlF,IACJ,GAAIA,EAAMkB,SACNyP,IAAM3Q,MAAMA,EAAMkB,SAASC,KAAKmC,aAChCqf,EAAa3iB,EAAMkB,SAASC,UACzB,CACH,MAAM8D,EAAU,4CAChB0L,IAAM3Q,MAAMiF,GACZ0d,EAAa1d,GAEjBE,QAAQnF,MAAMA,GACd+iB,GAAgB,KAEnB3d,QAAQ,KACLyd,GAAc,KAG1B,OAAOW,EAAmBpe,QAAQ,IAAMyd,GAAc,IAsD1D,IAAIuB,EACApQ,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,MAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,mDACHC,eAAe,mBAGvB+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,WAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,uDACHC,eACI,8HAiDpB,OA1CIvB,EACA0jB,EACIpQ,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,MAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,0DACHC,eAAe,2BAGvB+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,WAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,8DACHC,eACI,2FAOb8c,IACPqF,EACIpQ,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,MAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,yDACHC,eAAe,4BAGvB+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,WAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,6DACHC,eACI,6FAUpB+R,EAAAtS,EAAAC,cAAC+b,EAAD,CAAeC,MAAOyG,GAClBpQ,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACwb,UAAU,MAAMC,QAAQ,SAAS7P,WAAW,SAASpS,QAAS,GAEzEuiB,GACG1O,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,IACXmN,EAAAtS,EAAAC,cAAC0iB,EAAA,EAAD,CACI3c,QAAS,IAAMib,EAAa,MAC5Bhb,gBAAc,EACd7E,OAAK,EACL8E,WAAY,CAAEC,UAAW,GACzBC,KAAK,QACL7C,QAASyd,KAKrB1O,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,KACfmN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,EAAGD,GAAI,IACtBmN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,GAAID,GAAI,IACnBmN,EAAAtS,EAAAC,cAACmd,EAAD,CACI/a,WA5NpB,SAA0B4b,GACtB7b,EAAiB,CACbiB,OAAQ,cACRxD,MAAOoe,KA0NKtf,SAxOpB,SAAwBgH,GACpB,MAAQ7F,KAAMuD,EAARxD,MAAgBA,GAAU8F,EAAM/F,OACtCwC,EAAiB,CAAEiB,SAAQxD,WAuOX4O,IAAKtM,EACLnD,aAAcA,EACdqe,YAAaA,KAGrB/K,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,EAAGD,GAAI,IACtBmN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,GAAID,GAAI,IACnBmN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACwb,UAAU,MAAMC,QAAQ,aAAa7P,WAAW,SAASpS,QAAS,GAC9E6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACNoN,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI5hB,QAAQ,YACR5C,MAAM,UACN6J,SAAU2Z,EACV1a,QAtG5B,WACI2a,IAAYtiB,KAAMkP,IACdC,EAAQQ,KAAR,SAAAtI,OAAsB6H,EAAInO,GAA1B,kBAgGgB,SAOK,IACA4gB,IAAeE,GAAgB9O,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkB1Z,KAAM,QAG9D+b,IAAYC,kBACVxQ,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACNoN,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACItiB,GAAG,2CACHU,QAAQ,YACR5C,MAAM,UACN6J,UAAW0Z,GAAiBC,EAC5B1a,QA9JhC,WACIma,GAAgB,GAChBQ,IAAYtiB,KAAMkP,GAAQA,EACrBsU,UACAxjB,KAAMC,IACH,MAAMwjB,eAAEA,GAAmBxjB,EAASC,KAChCujB,IAAmBpC,EAAiBqC,gBAAgBC,QACpDjU,IAAM7L,KAAKyd,EAAKsC,cAAc,CAC1B7iB,GAAI,6DACJC,eAAgB,kDAGpB0O,IAAM7L,KAAKyd,EAAKsC,cAAc,CAC1B7iB,GAAI,2DACJC,eAAgB,6BAGxBmO,EAAQQ,KAAR,SAAAtI,OAAsB6H,EAAInO,GAA1B,gBAEHkD,MAAOlF,IACJ,GAAIA,EAAMkB,SACNyP,IAAM3Q,MAAMA,EAAMkB,SAASC,KAAKmC,aAChCqf,EAAa3iB,EAAMkB,SAASC,UACzB,CACH,MAAM8D,EAAU,gDAChB0L,IAAM3Q,MAAMuiB,EAAKsC,cAAc,CAC3B7iB,GAAI,0DACJC,eAAgBgD,KAEpB0d,EAAa1d,GAEjBE,QAAQnF,MAAMA,KAEjBoF,QAAQ,KACL2d,GAAgB,SA8HMD,GAAgB,mBACjBA,GAAgB9O,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkB1Z,KAAM,KACxCoa,GAAcE,GAAgB,sBAC7BF,GAAcE,GAAgB,yBAI5C9O,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACNoN,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,UACL/Q,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CAAQ5hB,QAAQ,QACZsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,8CACHC,eAAe,kBAWvDqgB,EAAiB/e,aAAe,CAC5Bwb,aAAa,EACbre,cAAc,GAElB4hB,EAAiBqC,gBAAkB,CAC/BC,QAAS,WAEbtC,EAAiB1Y,UAAY,CACzBwG,QAAS3M,IAAUoG,MAAM,CAAE+G,KAAMnN,IAAUsG,OAAQpG,WACnDjD,aAAc+C,IAAUoG,MAAM,IAC9BkV,YAAatb,IAAUoG,MAAM,IAC7B0Y,KAAM9e,IAAUoG,MAAM,CAClBgb,cAAephB,IAAUsG,OAC1BpG,YAEQmO,2BAAWkT,YAAW1C,4CCjXtB,SAAS2C,EAAqB7kB,GACzC,MAAMud,MAAEA,EAAFC,SAASA,GAAaxd,EAC5B,OACI4T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACxG,QAAS,GACrB6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACiX,GAAI,GAAI/W,GAAI,KAKvBkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACiX,GAAI,EAAG/W,GAAI,IACtBkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACiX,GAAI,GAAI/W,GAAI,GACnBkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACxG,QAAS,GACrB6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACV6W,GAEL3J,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACXkN,EAAAtS,EAAAC,cAACka,EAAA,EAAD,CAAOhU,UAAW,GAAI+V,MAIlC5J,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACiX,GAAI,EAAG/W,GAAI,KAIlCme,EAAqBrb,UAAY,CAC7B+T,MAAOla,IAAUqa,QAAQna,WACzBia,SAAUna,IAAUqa,QAAQna,2rBCDhC,MAAMjE,GAAYC,YAAYC,IAAD,CACzBic,MAAO,CACHtK,OAAQ,QAEZ2T,WAAY,CACR5Q,QAAS,oBAEb6Q,aAAc,CACV7S,QAAS,OACTY,cAAe,MACfX,WAAY,SACZ6S,cAAexlB,EAAMO,QAAQ,IAEjCsW,cAAe,CACXlC,UAAW3U,EAAMO,QAAQ,IAE7BklB,iBAAkB,CACd9Q,UAAW3U,EAAMO,QAAQ,OAWlB,SAASmlB,GAAwBllB,GAC5C,MAAMgQ,QAAEA,GAAYhQ,GACbmlB,EAAYC,GAAiB3kB,mBAAS,IACtCoW,EAAcC,GAAmBrW,mBAAS,KAC3C2hB,SAAEA,GAAaC,cAEf2B,EACFpQ,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,MAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,yDACHC,eAAe,2BAGvB+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,WAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,6DACHC,eACI,sGAqCpB,MAAO4B,EAAWC,GAAoBkf,qBAvBtC,SAA0BC,EAAcC,GACpC,MAAMne,OAAEA,EAAFxD,MAAUA,GAAU2hB,EAC1B,OAAQne,GACJ,IAAK,OACL,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,WACL,IAAK,cAEL,IAAK,eACD,OAAA0gB,EAAA,GAAYxC,EAAZ,CAA0B3Y,CAACvF,GAASxD,IACxC,IAAK,YACD,OAAAkkB,EAAA,GACOxC,EADP,CAEIzhB,KAAMD,EAAMC,KAAKqd,QAAQ,+BAA+B,IACxDvC,QAAS/a,EAAM+a,UAEvB,QACI,OAAO2G,IAIgD,CAC/Dnb,KAAM,0BACN5D,WAAY,GACZkf,cAAc,IAsClB,MAAOR,EAAY8C,GAAe7kB,qBAC5BC,EAAUpB,KACVimB,EAdK,CACH3R,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACIlZ,QAAQ,UACRV,GAAG,+DACHC,eAAe,uBACf+R,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACAlZ,QAAQ,UACRV,GAAG,2DACHC,eAAe,mBAsC3B,OACI+R,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAACsjB,EAAD,CACItH,MAAOyG,GAEPpQ,EAAAtS,EAAAC,cAACikB,EAAA,EAAD,KACoB,IAAfL,GACGvR,EAAAtS,EAAAC,cAACkkB,EAAA,EAAD,CAASR,kBAAgB,EAACS,WAAY,GACjCH,EAAM/iB,IAAKd,GACRkS,EAAAtS,EAAAC,cAACokB,EAAA,EAAD,CAAM/iB,IAAKlB,GACPkS,EAAAtS,EAAAC,cAACqkB,EAAA,EAAD,CAAW9jB,UAAWpB,EAAQukB,kBAAmBvjB,MAMjD,IAAfyjB,GACGvR,EAAAtS,EAAAC,cAACkkB,EAAA,EAAD,CAASR,kBAAgB,EAACS,WAAY,GACjCH,EAAM/iB,IAAKd,GACRkS,EAAAtS,EAAAC,cAACokB,EAAA,EAAD,CAAM/iB,IAAKlB,GACPkS,EAAAtS,EAAAC,cAACqkB,EAAA,EAAD,KAAYlkB,OAMhCkS,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACxG,QAAS,GACL,IAAfolB,GAAoBvR,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,KACpB,IAAfye,GAAoBvR,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACpCkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAmB,IAAfye,EAAmB,GAAK,IACnB,IAAfA,GACGvR,EAAAtS,EAAAC,cAACmd,EAAD,CACI/a,WArF5B,SAA0B4b,GACtB7b,EAAiB,CACbiB,OAAQ,cACRxD,MAAOoe,KAmFatf,SAjG5B,SAAwBgH,GACpB,MAAQ7F,KAAMuD,EAARxD,MAAgBA,GAAU8F,EAAM/F,OACtCwC,EAAiB,CAAEiB,SAAQxD,WAgGH4O,IAAKtM,EACLnD,cAAY,IAGJ,IAAf6kB,GACGvR,EAAAtS,EAAAC,cAACskB,EAAA,EAAD,CACIhP,aAAcA,EACdC,gBAAiBA,EACjBC,eAAa,EACbhH,IAAKtM,KAID,IAAf0hB,GAAoBvR,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACpCkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,GACXkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CACIzZ,UAA0B,IAAfqjB,GAAoBzkB,EAAQokB,WACvCve,WAAS,EACTwb,UAAU,MACVC,QAAQ,aACR7P,WAAW,SACXpS,QAAS,GAET6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACU,IAAf2e,GAEOvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI1b,QAAS,IAAM4c,EAAeU,GAASA,EAAO,IAE9ClS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,sDACHC,eAAe,UAIf,IAAfsjB,GACGvR,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,UACL/Q,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,KACItQ,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,wDACHC,eAAe,cAMnC+R,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACU,IAAf2e,GACGvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI5hB,QAAQ,YACR5C,MAAM,UACN6J,UAAW9F,EAAU8b,aAAeiD,GAAuC,IAAxB3L,EAAa/L,OAChEtC,QApHX,KACrB8c,GAAY,GACZ,MAAMlkB,KACFA,EADE8a,QACIA,EADJhc,SACaA,GACfuD,EACE4f,EAAU,CACZjiB,OACA8a,UACAhc,WACAsK,KAAMqM,GAEVwM,EAAQK,oBAAsBtB,EAASuB,YAAYnhB,IAAKohB,GAAQA,EAAIxiB,MACpEiiB,EAAQ0C,UAAY,CAAC,OAAQ,SACP,IAAI5V,IAAWkT,GAEhCQ,YAAYR,GACZxiB,KAAMijB,IACHvT,IAAM7L,KAAK,oCACXsL,EAAQQ,KAAR,iBAAAtI,OAA8B4b,EAAWliB,GAAzC,gBAEHkD,MAAOlF,IACAA,EAAMkB,SACNyP,IAAM3Q,MAAMA,EAAMkB,SAASC,KAAKmC,aAEhCqN,IAAM3Q,MAAM,uDAGnBoF,QAAQ,IAAMsgB,GAAY,MA2FC1R,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,yDACHC,eAAe,YAElB2gB,GAAc5O,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkB1Z,KAAM,MAG/B,IAAf+c,GACGvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI1b,QAAS,IAAM4c,EAAeU,GAASA,EAAO,GAC9CxjB,QAAQ,YACR5C,MAAM,UACN6J,UAAW9F,EAAU8b,aAErB3L,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,sDACHC,eAAe,gBAc3DqjB,GAAwB1b,UAAY,CAChCwG,QAAS3M,IAAUoG,MAAM,CAAE+G,KAAMnN,IAAUsG,OAAQpG,ksBC/QxC,SAASyiB,GAAiBhmB,GACrC,MAAOmlB,EAAYC,GAAiB3kB,mBAAS,IACvCuP,QAAEA,GAAYhQ,EAmCpB,MAAOyD,EAAWC,GAAoBkf,qBA1BtC,SAA0BC,EAAcC,GACpC,MAAMne,OAAEA,EAAFxD,MAAUA,GAAU2hB,EAC1B,OAAQne,GACJ,IAAK,OACL,IAAK,aACL,IAAK,OACL,IAAK,UACL,IAAK,WACL,IAAK,UACL,IAAK,WACL,IAAK,cACD,OAAAshB,GAAA,GAAYpD,EAAZ,CAA0B3Y,CAACvF,GAASxD,IACxC,IAAK,YACD,OAAA8kB,GAAA,GAAYpD,EAAZ,CAA0B3Y,CAACvF,GAASxD,EAAO2C,WAAsB,QAAV3C,EAAkB,GAAK,OAClF,IAAK,YACD,OAAA8kB,GAAA,GACOpD,EADP,CAEIzhB,KAAMD,EAAMC,KAAKqd,QAAQ,+BAA+B,IACxD9N,QAASxP,EAAMwP,QACfuL,QAAS/a,EAAM+a,UAEvB,QACI,OAAO2G,IAIgD,CAC/Dnb,KAAM,mBACN7D,UAAW,MACXC,WAAY,GACZkf,cAAc,IAmBlB,SAASkD,EAAiB3G,GACtB7b,EAAiB,CACbiB,OAAQ,cACRxD,MAAOoe,IAIf,MAAOiD,EAAY8C,GAAe7kB,qBAgDlC,OACImT,EAAAtS,EAAAC,cAAC+b,EAAD,CACIC,MACI3J,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,MAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,+CACHC,eAAe,gDAGvB+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,WAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,mDACHC,eAAe,iFAM/B+R,EAAAtS,EAAAC,cAACikB,EAAA,EAAD,KACI5R,EAAAtS,EAAAC,cAACkkB,EAAA,EAAD,CAASR,kBAAgB,EAACS,WAAY,GAClC9R,EAAAtS,EAAAC,cAACokB,EAAA,EAAD,KACI/R,EAAAtS,EAAAC,cAACqkB,EAAA,EAAD,KACIhS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,kDACHC,eAAe,sBAK3B+R,EAAAtS,EAAAC,cAACokB,EAAA,EAAD,KACI/R,EAAAtS,EAAAC,cAACqkB,EAAA,EAAD,KACIhS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,kDACHC,eAAe,mBAOnC+R,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACxG,QAAS,GACrB6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,KACfmN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,IACfmN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,IACK,IAAf0e,GACGvR,EAAAtS,EAAAC,cAACiC,GAAA,EAAD,CACIG,WAAYuiB,EACZziB,UAAWA,EACXC,iBAAkBA,IAGV,IAAfyhB,GACGvR,EAAAtS,EAAAC,cAACmd,EAAD,CACI/a,WAAYuiB,EACZjmB,SAzHxB,SAAwBgH,GACpB,MAAQ7F,KAAMuD,EAARxD,MAAgBA,GAAU8F,EAAM/F,OACtCwC,EAAiB,CAAEiB,SAAQxD,WAwHP4O,IAAKtM,EACLnD,cAAc,KAI1BsT,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,IACfmN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,IACXmN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACwb,UAAU,MAAMC,QAAQ,aAAa7P,WAAW,SAASpS,QAAS,GAC9E6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACU,IAAf2e,GACGvR,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,UACL/Q,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,KACItQ,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,8CACHC,eAAe,aAKf,IAAfsjB,GACGvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CAAQ1b,QAAS,IAAM4c,EAAeU,GAASA,EAAO,IAAtD,SAKRlS,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACU,IAAf2e,GACGvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI1b,QAAS,IAAM4c,EAAeU,GAASA,EAAO,GAC9CxjB,QAAQ,YACR5C,MAAM,UACN6J,UAAW9F,EAAU8b,aAJzB,QASY,IAAf4F,GACGvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI5hB,QAAQ,YACR5C,MAAM,UACN6J,UAAW9F,EAAU8b,aAAeiD,EACpCha,QA3IhC,WACI8c,GAAY,GACZ,MAAMlkB,KACFA,EADEuP,QACIA,EADJuL,QACaA,EADbkF,SACsBA,EADtBlhB,SACgCA,EADhC4D,WAC0CA,EAD1CD,UACsDA,GACxDJ,EACEkH,EAAuB,CACzBvJ,OACAuP,UACAuL,UACAhc,YAEAkhB,IACAzW,EAAqB2Y,eAAiB,CAClCC,cAAe,OACfC,kBAAmB,CACfpe,IAAKgc,GAETqC,qBAAsB,CAClBre,IAAKgc,KAIjBzW,EAAqB+Y,oBAAsB,CAAC,0BAC5C,MAAMyC,EAAS,IAAIvlB,IAAI+J,IACgB,SAAd9G,EACnBsiB,EAAOC,oBAAoBtiB,GAAcqiB,EAAOE,mBAAmBviB,IAEpEjD,KAAMkP,IACHQ,IAAM7L,KAAK,4BACXsL,EAAQQ,KAAR,SAAAtI,OAAsB6H,EAAInO,GAA1B,gBAEHkD,MAAOlF,IACAA,EAAMkB,SACNyP,IAAM3Q,MAAMA,EAAMkB,SAASC,KAAKmC,aAEhCqN,IAAM3Q,MAAM,6CAEhBmF,QAAQnF,MAAMA,KAEjBoF,QAAQ,IAAMsgB,GAAY,MAgGP,SAOK,IACA9C,GAAc5O,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkB1Z,KAAM,WAW3E4d,GAAiBxc,UAAY,CACzBwG,QAAS3M,IAAUoG,MAAM,CAAE+G,KAAMnN,IAAUsG,OAAQpG,6sBCnOxC,SAAS+iB,GAActmB,GAClC,MAAOmlB,EAAYC,GAAiB3kB,mBAAS,IACvCuP,QAAEA,GAAYhQ,GACdoiB,SAAEA,GAAaC,cAyBrB,MAAO5e,EAAWC,GAAoBkf,qBAnBtC,SAA0BC,EAAcC,GACpC,MAAMne,OAAEA,EAAFxD,MAAUA,GAAU2hB,EAC1B,OAAQne,GACJ,IAAK,OACL,IAAK,aACL,IAAK,OACL,IAAK,UACL,IAAK,WACL,IAAK,UACL,IAAK,WACL,IAAK,cACD,OAAA4hB,GAAA,GAAY1D,EAAZ,CAA0B3Y,CAACvF,GAASxD,IACxC,IAAK,YACD,OAAAolB,GAAA,GAAY1D,EAAZ,CAA0B3Y,CAACvF,GAASxD,EAAO2C,WAAsB,QAAV3C,EAAkB,GAAK,OAClF,QACI,OAAO0hB,IAIgD,CAC/Dnb,KAAM,OACN7D,UAAW,MACXC,WAAY,GACZkf,cAAc,EACdzX,KAAM,WAmBV,SAAS2a,EAAiB3G,GACtB7b,EAAiB,CACbiB,OAAQ,cACRxD,MAAOoe,IAIf,MAAOiD,EAAY8C,GAAe7kB,qBAqDlC,OACImT,EAAAtS,EAAAC,cAAC+b,EAAD,CACIC,MACI3J,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,MAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,yCACHC,eAAe,yCAGvB+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,WAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,6CACHC,eACI,gGAQpB+R,EAAAtS,EAAAC,cAACikB,EAAA,EAAD,KACI5R,EAAAtS,EAAAC,cAACkkB,EAAA,EAAD,CAASR,kBAAgB,EAACS,WAAYP,GAClCvR,EAAAtS,EAAAC,cAACokB,EAAA,EAAD,KACI/R,EAAAtS,EAAAC,cAACqkB,EAAA,EAAD,sBAGJhS,EAAAtS,EAAAC,cAACokB,EAAA,EAAD,KACI/R,EAAAtS,EAAAC,cAACqkB,EAAA,EAAD,sBAKZhS,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACxG,QAAS,GACrB6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,KACfkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACfkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACK,IAAfye,GACGvR,EAAAtS,EAAAC,cAAC4J,GAAA,EAAD,CACIxH,WAAYuiB,EACZziB,UAAWA,EACXC,iBAAkBA,IAGV,IAAfyhB,GACGvR,EAAAtS,EAAAC,cAACmd,EAAD,CACI/a,WAAYuiB,EACZjmB,SAvHxB,SAAwBgH,GACpB,MAAQ7F,KAAMuD,EAARxD,MAAgBA,GAAU8F,EAAM/F,OACtCwC,EAAiB,CAAEiB,SAAQxD,WAsHP4O,IAAKtM,EACLnD,cAAc,KAI1BsT,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACfkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,GACXkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACwb,UAAU,MAAMC,QAAQ,aAAa7P,WAAW,SAASpS,QAAS,GAC9E6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACU,IAAf2e,GACGvR,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,UACL/Q,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,KACItQ,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,8CACHC,eAAe,aAKf,IAAfsjB,GACGvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CAAQ1b,QACJ,IAAM4c,EAAeU,GAASA,EAAO,IADzC,SAQRlS,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACU,IAAf2e,GACGvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI1b,QAAS,IAAM4c,EAAeU,GAASA,EAAO,GAC9CxjB,QAAQ,YACR5C,MAAM,UACN6J,UAAW9F,EAAU8b,aAJzB,QASY,IAAf4F,GACGvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI5hB,QAAQ,YACR5C,MAAM,UACN6J,UAAW9F,EAAU8b,aAAeiD,EACpCha,QA5IhC,WACI8c,GAAY,GACZ,MAAMlkB,KACFA,EADEuP,QACIA,EADJuL,QACaA,EADbkF,SACsBA,EADtBlhB,SACgCA,EADhCwH,KAC0CA,GAC5CjE,EACEkH,EAAuB,CACzBvJ,OACAuP,UACAuL,UACAhc,YAgBJ,IAAIsmB,EAdApF,IACAzW,EAAqB2Y,eAAiB,CAClCC,cAAwB,eAAT7b,EAAwB,UAAY,OACnD8b,kBAAmB,CACf9b,KAAe,eAATA,EAAwB,eAAYxB,EAC1Cd,IAAKgc,GAETqC,qBAAsB,CAClB/b,KAAe,eAATA,EAAwB,eAAYxB,EAC1Cd,IAAKgc,KAIjBzW,EAAqB+Y,oBAAsBtB,EAASuB,YAAYnhB,IAAKohB,GAAQA,EAAIxiB,OAG7EolB,EADwB,QAAxB/iB,EAAUI,UACWmG,KAAKyc,YAAYhjB,EAAUK,WAAY6G,EAAsBlH,EAAUiE,MAEvEsC,KAAK0c,sBAAsBjjB,EAAUK,WAAY6G,EAAsBlH,EAAUiE,OAGrG7G,KAAMkP,IACHQ,IAAM7L,KAAK,4BACXsL,EAAQQ,KAAR,SAAAtI,OAAsB6H,EAAInO,GAA1B,gBAEHkD,MAAOlF,IACAA,EAAMkB,SACNyP,IAAM3Q,MAAMA,EAAMkB,SAASC,KAAKmC,aAEhCqN,IAAM3Q,MAAM,6CAEhBmF,QAAQnF,MAAMA,KAEjBoF,QAAQ,IAAMsgB,GAAY,MA4FP,SAOK,IACA9C,GAAc5O,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkB1Z,KAAM,WAW3Eke,GAAc9c,UAAY,CACtBwG,QAAS3M,IAAUoG,MAAM,CAAE+G,KAAMnN,IAAUsG,OAAQpG,ksBC9NxC,SAASojB,GAAiB3mB,GACrC,MAAOmlB,EAAYC,GAAiB3kB,mBAAS,IACvCuP,QAAEA,GAAYhQ,EAqCpB,MAAOyD,EAAWC,GAAoBkf,qBA5BtC,SAA0BC,EAAcC,GACpC,MAAMne,OAAEA,EAAFxD,MAAUA,GAAU2hB,EAC1B,OAAQne,GACJ,IAAK,OACL,IAAK,aACL,IAAK,OACL,IAAK,UACL,IAAK,WACL,IAAK,UACL,IAAK,WACL,IAAK,cACD,OAAAiiB,GAAA,GAAY/D,EAAZ,CAA0B3Y,CAACvF,GAASxD,IACxC,IAAK,YACD,OAAAylB,GAAA,GAAY/D,EAAZ,CAA0B3Y,CAACvF,GAASxD,EAAO2C,WAAsB,QAAV3C,EAAkB,GAAK,OAClF,IAAK,cACD,OAAAylB,GAAA,GAAY/D,EAAZ,CAA0B3Y,CAACvF,GAASxD,IACxC,IAAK,YACD,OAAAylB,GAAA,GACO/D,EADP,CAEIzhB,KAAMD,EAAMC,KAAKqd,QAAQ,+BAA+B,IACxD9N,QAASxP,EAAMwP,QACfuL,QAAS/a,EAAM+a,UAEvB,QACI,OAAO2G,IAIgD,CAC/Dnb,KAAM,mBACN7D,UAAW,OACXC,WAAY,GACZkf,cAAc,IAmBlB,SAASkD,EAAiB3G,GACtB7b,EAAiB,CACbiB,OAAQ,cACRxD,MAAOoe,IAIf,MAAOiD,EAAY8C,GAAe7kB,qBAgElC,OACImT,EAAAtS,EAAAC,cAAC+b,EAAD,CACIC,MACI3J,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,MAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,+CACHC,eAAe,kDAGvB+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,WAChBsR,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,mDACHC,eAAe,sEAM/B+R,EAAAtS,EAAAC,cAACikB,EAAA,EAAD,KACoB,IAAfL,GACGvR,EAAAtS,EAAAC,cAACkkB,EAAA,EAAD,CAASR,kBAAgB,EAACS,WAAY,GAClC9R,EAAAtS,EAAAC,cAACokB,EAAA,EAAD,KACI/R,EAAAtS,EAAAC,cAACqkB,EAAA,EAAD,KACIhS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,kDACHC,eAAe,sBAK3B+R,EAAAtS,EAAAC,cAACokB,EAAA,EAAD,KACI/R,EAAAtS,EAAAC,cAACqkB,EAAA,EAAD,KACIhS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,kDACHC,eAAe,kBAMnB,IAAfsjB,GACGvR,EAAAtS,EAAAC,cAACkkB,EAAA,EAAD,CAASR,kBAAgB,EAACS,WAAY,GAClC9R,EAAAtS,EAAAC,cAACokB,EAAA,EAAD,KACI/R,EAAAtS,EAAAC,cAACqkB,EAAA,EAAD,KACIhS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,kDACHC,eAAe,sBAK3B+R,EAAAtS,EAAAC,cAACokB,EAAA,EAAD,KACI/R,EAAAtS,EAAAC,cAACqkB,EAAA,EAAD,KACIhS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,kDACHC,eAAe,mBAQvC+R,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACxG,QAAS,GACrB6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,KACfkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACfkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACK,IAAfye,GACGvR,EAAAtS,EAAAC,cAACqL,GAAA,EAAD,CACIjJ,WAAYuiB,EACZziB,UAAWA,EACXC,iBAAkBA,IAGV,IAAfyhB,GACGvR,EAAAtS,EAAAC,cAACmd,EAAD,CACI/a,WAAYuiB,EACZjmB,SAhKxB,SAAwBgH,GACpB,MAAQ7F,KAAMuD,EAARxD,MAAgBA,GAAU8F,EAAM/F,OACtCwC,EAAiB,CAAEiB,SAAQxD,WA+JP4O,IAAKtM,EACLnD,cAAc,KAI1BsT,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,IACfkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,GACXkN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACwb,UAAU,MAAMC,QAAQ,aAAa7P,WAAW,SAASpS,QAAS,GAC9E6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACU,IAAf2e,GACGvR,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,UACL/Q,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,KACItQ,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,8CACHC,eAAe,aAKf,IAAfsjB,GACGvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CAAQ1b,QACJ,IAAM4c,EAAeU,GAASA,EAAO,IADzC,SAQRlS,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,GACU,IAAf2e,GACGvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI1b,QAAS,IAAM4c,EAAeU,GAASA,EAAO,GAC9CxjB,QAAQ,YACR5C,MAAM,UACN6J,UAAW9F,EAAU8b,aAJzB,QASY,IAAf4F,GACGvR,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI5hB,QAAQ,YACR5C,MAAM,UACN6J,UAAW9F,EAAU8b,aAAeiD,EACpCha,QArLhC,WACI8c,GAAY,GACZ,MAAMlkB,KACFA,EADEuP,QAEFA,EAFEuL,QAGFA,EAHEkF,SAIFA,EAJElhB,SAKFA,EALE0K,mBAMFA,EANE9G,WAOFA,EACAgJ,aAAauM,WAAEA,IACf5V,EACEkH,EAAuB,CACzBvJ,OACAuP,UACAuL,UACAhc,WACAmZ,cAGA+H,IACAzW,EAAqB2Y,eAAiB,CAClCC,cAAe,OACfC,kBAAmB,CACfpe,IAAKgc,GAETqC,qBAAsB,CAClBre,IAAKgc,KAIjBzW,EAAqB+Y,oBAAsB,CAAC,0BAC5C,MAAMmD,EAAS,IAAIjmB,IAAI+J,GACjB0Y,EAAU,CACZ1Y,qBAAsBM,KAAKC,UAAUP,GACrCC,qBACAvG,KAjBiB,OAkBjBA,KAAMP,GAGV+iB,EACKC,cAAczD,GACdxiB,KAAMC,IACH,MAAMimB,EAAOjmB,EAAS8Y,IAAIhY,GAC1B2O,IAAM7L,KAAN,GAAAwD,OAAc9G,EAAd,8BACA4O,EAAQQ,KAAR,SAAAtI,OAAsB6e,EAAtB,gBAEHjiB,MAAOlF,IACAA,EAAMkB,SACNyP,IAAM3Q,MAAMA,EAAMkB,SAASC,KAAKmC,aAEhCqN,IAAM3Q,MAAM,6CAEhBmF,QAAQnF,MAAMA,KAEjBoF,QAAQ,IAAMsgB,GAAY,MA0HP,SAOK,IACA9C,GAAc5O,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkB1Z,KAAM,WAW3Eue,GAAiBnd,UAAY,CACzBwG,QAAS3M,IAAUoG,MAAM,CAAE+G,KAAMnN,IAAUsG,OAAQpG,YCtSxCyjB,OAHY,IACfpT,EAAAtS,EAAAC,cAAC0lB,EAAD,CAAkBtI,aAAW,IC0BzC,SAASuI,GAAgBlnB,GACrB,MAAMU,QAAEA,GAAYV,EACpB,OACI4T,EAAAtS,EAAAC,cAAA,QAAMO,UAAWpB,EAAQ8E,SACrBoO,EAAAtS,EAAAC,cAAC4lB,EAAA,OAAD,KACIvT,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CAAOtf,KAAK,oBAAoBjB,UAAWsb,IAC3CtO,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CAAOtf,KAAK,uBAAuBjB,UAAWwgB,KAC9CxT,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CAAOtf,KAAK,uBAAuBjB,UAAW+f,KAC9C/S,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CAAOtf,KAAK,uBAAuBjB,UAAWygB,KAC9CzT,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CAAOtf,KAAK,oBAAoBjB,UAAW0f,KAC3C1S,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CAAOtf,KAAK,kBAAkBjB,UAAWogB,KACzCpT,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CAAOvgB,UAAW0U,QAMlC4L,GAAgB1d,UAAY,CACxB9I,QAAS2C,IAAUoG,MAAM,CAAEjE,QAASnC,IAAUqG,SAAUnG,YAG7CoO,mBAnCA,CACXnM,QAAS,CACL8hB,SAAU,IAiCH3V,CAAmBuV,qIC8DlC,MAAMK,WAAiBlY,YAMnBC,YAAYtP,GACRuP,MAAMvP,GACNwP,KAAKtK,MAAQ,CAAEsiB,SAAS,EAAOC,SAAS,GACxCjY,KAAKkY,gBAAkBlY,KAAKkY,gBAAgBhY,KAAKF,MACjDA,KAAKC,gBAAkBD,KAAKC,gBAAgBC,KAAKF,MAUrDC,kBACI,MAAQM,KAAKnO,GAAEA,EAAFR,KAAMA,IAAWoO,KAAKxP,MACnCwP,KAAKM,SAAS,CAAE2X,SAAS,IACzB,MAAME,WAAEA,EAAFrnB,aAAcA,GAAiBkP,KAAKxP,MAC1C,GAAIM,EAAc,CACSM,IAAIwP,cAAcxO,GAEpCf,KAAMC,IACqB,MAApBA,EAASuP,QAIbsX,EAAW/lB,GACX2O,IAAM7L,KAAN,eAAAwD,OAA0B9G,EAA1B,0BACAoO,KAAKM,SAAS,CAAE2X,SAAS,KALrBlX,IAAM7L,KAAK,0DAOlBI,MAAOlF,IACiB,MAAjBA,EAAMyQ,QACNE,IAAM3Q,MAAM,KAAOwB,EAAO,QAAUxB,EAAMkB,SAASC,KAAKmC,aACxDsM,KAAKM,SAAS,CAAE2X,SAAS,MAEzBlX,IAAM3Q,MAAM,wDACZ4P,KAAKM,SAAS,CAAE2X,SAAS,WAGlC,CACoB7mB,IAAI6P,OAAO7O,GAE7Bf,KAAMC,IACqB,MAApBA,EAASuP,QAIbsX,EAAW/lB,GACX2O,IAAM7L,KAAN,OAAAwD,OAAkB9G,EAAlB,0BACAoO,KAAKM,SAAS,CAAE2X,SAAS,KALrBlX,IAAM7L,KAAK,kDAOlBI,MAAOlF,IACiB,MAAjBA,EAAMyQ,QACNE,IAAM3Q,MAAM,KAAOwB,EAAO,QAAUxB,EAAMkB,SAASC,KAAKmC,aACxDsM,KAAKM,SAAS,CAAE2X,SAAS,MAEzBlX,IAAM3Q,MAAM,gDACZ4P,KAAKM,SAAS,CAAE2X,SAAS,QAY7CC,gBAAgBzgB,GACZuI,KAAKM,SAAS,CAAE0X,QAAwB,cAAfvgB,EAAMS,OAQnCgJ,SACI,MAAMhQ,QAAEA,EAAFqP,IAAWA,EAAXzP,aAAgBA,GAAiBkP,KAAKxP,OACtCwnB,QAAEA,EAAFC,QAAWA,GAAYjY,KAAKtK,MAClC,IAAI0iB,EAAe,GAgBnB,OAdIA,EADA7X,EAAIE,QACW3P,EAAY,iBAAA4H,OAAoB6H,EAAInO,GAAxB,sBAAAsG,OAAiD6H,EAAInO,GAArD,aAEf,SAAAsG,OAAY6H,EAAI8X,QAAhB,eAAA3f,OAAqC6H,EAAInO,GAAzC,YAGZmO,EAAIE,QADJ3P,EACcM,IAAIsP,OAAOC,WAEXvP,IAAIsP,OAAOtP,IAGxBmP,EAAIsL,kBACLtL,EAAIsL,gBAAkBtL,EAAIM,QAI1BuD,EAAAtS,EAAAC,cAACumB,GAAA,EAAD,CACIC,YAAavY,KAAKkY,gBAClBM,QAASxY,KAAKkY,gBACdO,WAAYzY,KAAKkY,gBACjBte,OAAQoG,KAAKkY,gBACbQ,OAAQV,EACR1lB,UAAWpB,EAAQynB,MAEnBvU,EAAAtS,EAAAC,cAAC6mB,GAAA,EAAD,CAAWC,IAAI,OAAOzhB,UAAW0hB,KAAenX,OAAQ,IAAKoM,MAAM,YAAYxN,IAAKA,IACpF6D,EAAAtS,EAAAC,cAACgnB,GAAA,EAAD,CAAazmB,UAAWpB,EAAQ8nB,YAC5B5U,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ+nB,aACpB7U,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAIiD,GACNhU,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY8F,cAAY,EAAC3f,QAAQ,KAAKR,UAAWpB,EAAQgoB,YAAanL,MAAOxN,EAAI3O,MAC5E2O,EAAI3O,QAIjBwS,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQioB,KACpB/U,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,UAAU2f,cAAY,EAAC2G,MAAM,OAAO9mB,UAAWpB,EAAQmoB,SACvEjV,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CAAkB5Z,GAAG,KAAKC,eAAe,OACzC+R,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CAAkB5Z,GAAG,QAAQC,eAAe,QAC3CkO,EAAI+Y,WAGblV,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQqoB,WACnBzoB,EAAe,KACZsT,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQioB,KACpB/U,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQsoB,WACpBpV,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,aAAayN,EAAIY,UAGzCiD,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQsoB,WACpBpV,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,UAAU2f,cAAY,EAAC2G,MAAM,QAC7ChV,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CAAkB3Z,eAAe,UAAUD,GAAG,qCAK9DgS,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQioB,KACpB/U,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQuoB,YACpBrV,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,YAAYsmB,MAAM,QAAQ9mB,UAAWpB,EAAQwoB,YAC5DnZ,EAAImM,UAIbtI,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQuoB,YACpBrV,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,UAAU2f,cAAY,EAAC2G,MAAM,QAAQ9mB,UAAWpB,EAAQwb,SACxEtI,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CAAkB3Z,eAAe,UAAUD,GAAG,uCAMlEgS,EAAAtS,EAAAC,cAAC4nB,GAAA,EAAD,CAAarnB,UAAWpB,EAAQ0oB,YAC5BxV,EAAAtS,EAAAC,cAACsS,EAAA,EAAD,CACInS,MAAOqO,EAAIE,UAAYrP,IAAIsP,OAAOC,WAAaJ,EAAI7K,MAAQ6K,EAAIsL,gBAC/D3b,MAAM,aAEK,YAAbqQ,EAAIrI,MAA4C,YAAtBqI,EAAIsZ,gBAC5BzV,EAAAtS,EAAAC,cAACsS,EAAA,EAAD,CACI/R,UAAWpB,EAAQ4oB,aACnB5nB,WAA6BwE,IAAtB6J,EAAIsZ,cACLtZ,EAAIrI,KAAOqI,EAAIsZ,cACrB3pB,MAAM,YAGdkU,EAAAtS,EAAAC,cAAC4N,GAAA,EAAD,CAAiB3G,QAASgH,KAAKC,gBAAiBM,IAAKA,IACpD0X,GAAW7T,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkBhgB,UAAWpB,EAAQ6oB,oBAOrEhC,GAAS/d,UAAY,CACjB9I,QAAS2C,IAAUoG,MAAM,IAAIlG,WAC7BwM,IAAK1M,IAAUoG,MAAM,CACjB7H,GAAIyB,IAAUqG,OACdtI,KAAMiC,IAAUqG,OAChBuG,QAAS5M,IAAUqG,OAAOnG,aAC3BA,WACHokB,WAAYtkB,IAAUsG,KAAKpG,WAC3BjD,aAAc+C,IAAUC,KAAKC,YAGlBqhB,mBAAWjT,YAzRVnS,IAAD,CACX2oB,KAAM,CACF9lB,OAAQ7C,EAAMO,QAAQ,KACtBypB,SAAUhqB,EAAMO,QAAQ,IACxBuR,WAAY,+BAEhBmY,aAAc,CACVC,cAAe,cAEnBlB,WAAY,CAAEtU,QAAS1U,EAAMO,QAAQ,IACrCqpB,WAAY,CAAExW,eAAgB,gBAAiBsB,QAAO,WAAAhM,OAAa1I,EAAMO,QAAQ,GAA3B,WACtDwpB,eAAgB,CACZ7pB,MAAO2e,IAAM,KACbrY,SAAU,WACVlG,WAAY,SAEhB4oB,YAAa,CACT1U,MAAO,MACP8J,WAAY,SACZpe,MAAOF,EAAMG,QAAQmY,KAAK7U,UAC1B8a,SAAU,SACVF,aAAc,WACdtL,OAAQ,UACRlQ,OAAQ,EACRsnB,eAAgB,OAEpBC,aAAc,CACVlqB,MAAOF,EAAMG,QAAQmY,KAAK7U,UAC1B8Q,gBAAiBvU,EAAMG,QAAQkS,WAAWC,MAC1CkC,MAAOxU,EAAMwT,OAAO6W,UAAU7V,MAAQxU,EAAMO,QAAQ,GACpDmS,QAAS,OACTC,WAAY,SACZS,eAAgB,UAEpBkX,aAAc,CACV9V,MAAOxU,EAAMwT,OAAO6W,UAAU7V,MAAQxU,EAAMO,QAAQ,GACpDgU,gBAAiBvU,EAAMG,QAAQkS,WAAWC,MAC1CoC,QAAS1U,EAAMO,QAAQ,IAE3BipB,UAAW,CACPe,UAAW,aACXpX,KAAM,EACNqB,MAAO,MACP2V,eAAgB,MAChBK,gBAAiB,QAErBf,WAAY,CACRc,UAAW,YAEfhB,UAAW,CACP7W,QAAS,QAEbgX,WAAY,CACRlV,MAAO,QACP8J,WAAY,SACZC,SAAU,SACVF,aAAc,WACdtL,OAAQ,UACRlQ,OAAQ,EACR6P,QAAS,eACT+X,WAAY,MACZC,cAAe,EACfF,gBAAiB,EACjBG,iBAAkB,IAClBpX,UAAW,QAEfqX,aAAc,CACVpkB,SAAU,WACVqkB,OAAQ,EACRtW,gBAAiBvU,EAAMwT,OAAO6W,UAAUS,wBAE5C3B,IAAK,CACDzW,QAAS,gBAEbuW,YAAa,CACT/oB,MAAOF,EAAMG,QAAQmY,KAAK7U,UAC1BoP,eAAgB,QAEpBwW,QAAS,CACLc,eAAgB,OAEpBL,aAAc,CACViB,eAAgB,SAuME5Y,CAAmB4V,KCtQ7C,MAAMiD,WAAiBnb,YAMnBC,YAAYtP,GACRuP,MAAMvP,GACNwP,KAAKtK,MAAQ,CAAEsiB,SAAS,GACxBhY,KAAKkY,gBAAkBlY,KAAKkY,gBAAgBhY,KAAKF,MASrDkY,gBAAgBzgB,GACZuI,KAAKM,SAAS,CAAE0X,QAAwB,cAAfvgB,EAAMS,OAQnCgJ,SACI,MAAMhQ,QAAEA,EAAF+pB,IAAWA,GAAQjb,KAAKxP,OACxBwnB,QAAEA,GAAYhY,KAAKtK,MAEzB,OACI0O,EAAAtS,EAAAC,cAACumB,GAAA,EAAD,CACIC,YAAavY,KAAKkY,gBAClBM,QAASxY,KAAKkY,gBACdO,WAAYzY,KAAKkY,gBACjBte,OAAQoG,KAAKkY,gBACbQ,OAAQV,EACR1lB,UAAWpB,EAAQynB,MAEnBvU,EAAAtS,EAAAC,cAAC6mB,GAAA,EAAD,CAAWC,IAAI,OAAOzhB,UAAW0hB,KAAenX,OAAQ,IAAKoM,MAAM,YAAYxN,IAAK0a,IACpF7W,EAAAtS,EAAAC,cAACgnB,GAAA,EAAD,CAAazmB,UAAWpB,EAAQgqB,YAC5B9W,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY8F,cAAY,EAAC3f,QAAQ,KAAKsE,UAAU,MAC3C6jB,EAAIrpB,MAETwS,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,GACXqN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,GACXkN,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,6DACHC,eAAe,gBAHvB,IAMI+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,SAASmoB,EAAIE,aAErC/W,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,GACXkN,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,0DACHC,eAAe,aAHvB,IAMI+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAYra,UAAWpB,EAAQ+oB,aAAcnnB,QAAQ,QAAQ2f,cAAY,GACpEwI,EAAI3K,UAGblM,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACE,GAAI,GACXkN,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,6DACHC,eAAe,gBAHvB,IAMI+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,QAAQ2f,cAAY,GACnCwI,EAAI/J,iBAUrC8J,GAAShhB,UAAY,CACjB9I,QAAS2C,IAAUoG,MAAM,IAAIlG,WAC7BknB,IAAKpnB,IAAUoG,MAAM,CACjB7H,GAAIyB,IAAUqG,OACdtI,KAAMiC,IAAUqG,OAChBihB,WAAYtnB,IAAUqG,OAAOnG,WAC7Buc,QAASzc,IAAUqG,OAAOnG,WAC1Bmd,WAAYrd,IAAUqG,OAAOnG,aAC9BA,YAGQqhB,mBAAWjT,YArHVnS,IAAD,CACX2oB,KAAM,CACF9lB,OAAQ7C,EAAMO,QAAQ,KACtBypB,SAAUhqB,EAAMO,QAAQ,IACxBuR,WAAY,+BAEhBmY,aAAc,CACVC,cAAe,cAEnBgB,WAAY,CAAExW,QAAS1U,EAAMO,QAAQ,IACrC6qB,WAAY,CAAEhY,eAAgB,gBAAiBsB,QAAO,WAAAhM,OAAa1I,EAAMO,QAAQ,GAA3B,WACtDwpB,eAAgB,CACZ7pB,MAAO2e,IAAM,KACbrY,SAAU,WACVlG,WAAY,WAuGM6R,CAAmB6Y,oYCxH7C,MAAMK,WAAmBzb,IAAMC,UAM3BC,YAAYtP,GACRuP,MAAMvP,GACNwP,KAAKtK,MAAQ,CACTmM,MAAM,GAEV7B,KAAKsb,aAAetb,KAAKsb,aAAapb,KAAKF,MAC3CA,KAAKub,YAAcvb,KAAKub,YAAYrb,KAAKF,MAQ7Csb,eACItb,KAAKM,SAAU5K,IAAD,CAAcmM,MAAOnM,EAAMmM,QAS7C0Z,YAAY9jB,GACJuI,KAAKwb,SAASC,SAAShkB,EAAM/F,SAGjCsO,KAAKM,SAAS,CAAEuB,MAAM,IAS1BX,SACI,MAAMhQ,QACFA,EADE8c,SACOA,EADP0N,SACiBA,EADjBC,YAC2BA,GAC7B3b,KAAKxP,OACHqR,KAAEA,GAAS7B,KAAKtK,MACtB,OACI0O,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC2iB,EAAA,EAADkH,GAAA,CACIxpB,GAAG,qBACHypB,UAAYC,IACR9b,KAAKwb,SAAWM,GAEpBC,YAAWla,EAAO,iBAAmB,KACrCma,gBAAc,OACdhjB,QAASgH,KAAKsb,cACVK,GAEH3N,EACA,IAXL,KAcA5J,EAAAtS,EAAAC,cAACkqB,GAAA,EAAD,CACIpa,KAAMA,EACNqa,UAAU,eACVV,SAAUxb,KAAKwb,SACf1Z,YAAU,EACVqa,eAAa,EACb7pB,UAAWpB,EAAQsF,UAElB/E,IAAA,IAAC2qB,gBAAEA,EAAFF,UAAmBA,GAApBzqB,EAAA,OACG2S,EAAAtS,EAAAC,cAACsqB,GAAA,EAADT,GAAA,GACQQ,EADR,CAEIhqB,GAAG,iBACHkS,MAAO,CAAEgY,gBAA+B,WAAdJ,EAAyB,aAAe,mBAElE9X,EAAAtS,EAAAC,cAACka,EAAA,EAAD,KACI7H,EAAAtS,EAAAC,cAACwqB,GAAA,EAAD,CAAmBC,YAAaxc,KAAKub,aAAcG,SAUnFL,GAAWrhB,UAAY,CACnB9I,QAAS2C,IAAUoG,MAAM,CAAEzD,SAAU3C,IAAUoG,MAAM,MAAOlG,WAC5D2nB,SAAU7nB,IAAUqa,QAAQna,WAC5Bia,SAAUna,IAAUoG,MAAM,IAAIlG,WAC9B4nB,YAAa9nB,IAAUoG,MAAM,IAAIlG,YAGtBoO,mBAlHCnS,IAAD,CACXoS,KAAM,CACFM,QAAS,QAEbJ,MAAO,CACH2C,YAAajV,EAAMO,QAAQ,IAE/BiG,SAAU,CACNimB,OAAQzsB,EAAMysB,OAAOC,iBA0Gdva,CAAmBkZ,qNC7FlC,MAAMvrB,GAAYC,aAAYC,IAAD,CACzB2sB,MAAO,CACH9Z,eAAgB,OAChB3S,MAAOF,EAAMG,QAAQgU,gBAAgBnU,EAAMG,QAAQkS,WAAWC,WAIhEsa,GAAiBpsB,IACnB,MAAMU,EAAUpB,KAEV+sB,EACFzY,EAAAtS,EAAAC,cAACqa,GAAA,EAAD,KACIhI,EAAAtS,EAAAC,cAACma,GAAA,EAAD,KACI9H,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAM9iB,GAAG,yBAAyB+iB,GAAG,oBAAoB7iB,UAAWpB,EAAQyrB,OACxEvY,EAAAtS,EAAAC,cAAC0a,GAAA,EAAD,CACIjZ,QACI4Q,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,qDACHC,eAAe,0BAGvBoB,UACI2Q,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,uDACHC,eAAe,4CAMnC+R,EAAAtS,EAAAC,cAAC+qB,GAAA,EAAD,MACA1Y,EAAAtS,EAAAC,cAACma,GAAA,EAAD,KACI9H,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,uBAAuB7iB,UAAWpB,EAAQyrB,OAC/CvY,EAAAtS,EAAAC,cAAC0a,GAAA,EAAD,CACIjZ,QACI4Q,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,wDACHC,eAAe,gCAGvBoB,UACI2Q,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,0DACHC,eAAe,iEAMnC+R,EAAAtS,EAAAC,cAAC+qB,GAAA,EAAD,MACA1Y,EAAAtS,EAAAC,cAACma,GAAA,EAAD,KACI9H,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,oBAAoB7iB,UAAWpB,EAAQyrB,OAC5CvY,EAAAtS,EAAAC,cAAC0a,GAAA,EAAD,CACIjZ,QACI4Q,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,qDACHC,eAAe,2BAGvBoB,UACI2Q,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,uDACHC,eAAe,gDAMnC+R,EAAAtS,EAAAC,cAAC+qB,GAAA,EAAD,MACA1Y,EAAAtS,EAAAC,cAACma,GAAA,EAAD,KACI9H,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,uBAAuB7iB,UAAWpB,EAAQyrB,OAC/CvY,EAAAtS,EAAAC,cAAC0a,GAAA,EAAD,CACIjZ,QACI4Q,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,wDACHC,eAAe,gCAGvBoB,UACI2Q,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,0DACHC,eAAe,oCAMnC+R,EAAAtS,EAAAC,cAAC+qB,GAAA,EAAD,MACA1Y,EAAAtS,EAAAC,cAACma,GAAA,EAAD,KACI9H,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,kBAAkB7iB,UAAWpB,EAAQyrB,OAC1CvY,EAAAtS,EAAAC,cAAC0a,GAAA,EAAD,CACIjZ,QACI4Q,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,mDACHC,eAAe,6BAGvBoB,UACI2Q,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,qDACHC,eAAe,kDAQ3C,OAAQsiB,IAAYoI,gBAAkB3Y,EAAAtS,EAAAC,cAACirB,GAADC,GAAA,GAAgBzsB,EAAhB,CAAuBkrB,SAAUmB,MAG3ED,GAAc5iB,UAAY,CACtBgU,SAAUna,IAAUqpB,UAAU,CAACrpB,IAAUqa,QAASra,IAAUspB,QAAQppB,YAEzD6oB,UCgIAzS,OAhRKiT,IAAD,CACflU,MAAO,CACHmU,SAAU,CACNC,KAAM,CACFC,cAAe,iCACfC,oBAAqBJ,EACrB1pB,YAAa,qBACb+pB,WAAY,CACR,CACIC,OAAQ,CAAEC,KAAM,uBAChBjqB,YAAa,sCACb9B,KAAM,OACNgC,UAAU,EACVgqB,GAAI,SAGZC,UAAW,CACPC,IAAK,CACDC,QAAS,CACLC,SAAU,CACNtqB,YAAa,yCACbwE,KAAM,UAEV+lB,eAAgB,CACZvqB,YAAa,gCACbwE,KAAM,WAGdwlB,OAAQ,CAAEC,KAAM,uBAChBjqB,YACI,0IAGRwqB,IAAK,CACDR,OAAQ,CAAEC,KAAM,uBAChBjqB,YAAa,qDAEjByqB,IAAK,CACDT,OAAQ,CAAEC,KAAM,uBAChBjqB,YAAa,uFAK7B0qB,QAAS,CACLC,IAAK,CACDd,cAAe,iCACfC,oBAAqBJ,EACrB1pB,YAAa,wCACb+pB,WAAY,GACZI,UAAW,CACPS,IAAK,CACDP,QAAS,GACTL,OAAQ,CACJa,MAAO,CAAEZ,KAAM,0BACfzlB,KAAM,SAEVxE,YAAa,iCAEjB8qB,IAAK,CACD9qB,YACI,yGAGR+qB,IAAK,CACDf,OAAQ,CAAEC,KAAM,uBAChBjqB,YAAa,gEAK7BgrB,mBAAoB,CAChBC,IAAK,CACDpB,cAAe,iCACfC,oBAAqBJ,EACrB1pB,YAAa,2BACb+pB,WAAY,CACR,CACI/pB,YAAa,WACb9B,KAAM,UACNgtB,OAAQ,SACR1mB,KAAM,SACNtE,UAAU,EACVgqB,GAAI,QAER,CACIF,OAAQ,CAAEC,KAAM,uBAChBjqB,YAAa,sCACb9B,KAAM,OACNgC,UAAU,EACVgqB,GAAI,SAGZC,UAAW,CACPS,IAAK,CACDP,QAAS,CACLC,SAAU,CACNtqB,YAAa,yCACbwE,KAAM,UAEV+lB,eAAgB,CACZvqB,YAAa,gCACbwE,KAAM,WAGdwlB,OAAQ,CAAEC,KAAM,uBAChBjqB,YAAa,8CAEjBwqB,IAAK,CACDR,OAAQ,CAAEC,KAAM,uBAChBjqB,YAAa,oDAEjBmrB,IAAK,CACDnB,OAAQ,CAAEC,KAAM,uBAChBjqB,YAAa,yDAEjBorB,IAAK,CACDpB,OAAQ,CAAEC,KAAM,uBAChBjqB,YACI,0GAKhB2qB,IAAK,CACDd,cAAe,iCACfC,oBAAqBJ,EACrB1pB,YAAa,0BACb+pB,WAAY,CACR,CACI/pB,YAAa,WACb9B,KAAM,UACNgtB,OAAQ,SACR1mB,KAAM,SACNtE,UAAU,EACVgqB,GAAI,SAGZC,UAAW,CACPS,IAAK,CACDZ,OAAQ,CAAEC,KAAM,uBAChBI,QAAS,GACTrqB,YAAa,uCAEjB8qB,IAAK,CACD9qB,YACI,yGAGRmrB,IAAK,CACDnB,OAAQ,CAAEC,KAAM,uBAChBjqB,YAAa,4CAEjB+qB,IAAK,CACDf,OAAQ,CAAEC,KAAM,uBAChBjqB,YAAa,+DAIzBuN,OAAQ,CACJsc,cAAe,iCACfC,oBAAqBJ,EACrB1pB,YAAa,2BACb+pB,WAAY,CACR,CACI/pB,YAAa,WACb9B,KAAM,UACNgtB,OAAQ,SACR1mB,KAAM,SACNtE,UAAU,EACVgqB,GAAI,SAGZC,UAAW,CACPS,IAAK,CACD5qB,YAAa,sCAEjBmrB,IAAK,CACDnB,OAAQ,CAAEC,KAAM,uBAChBjqB,YAAa,qDAEjBorB,IAAK,CACDpB,OAAQ,CAAEC,KAAM,uBAChBjqB,YACI,4GAOxBqrB,QAAS,CAAC,SACVC,SAAU,CAAC,oBACXC,QAAS,MACTC,YAAa,CACTC,cAAe,CACXpR,MAAO,2EACPqR,WAAY,CACR/pB,QAAS,CACL3B,YAAa,8CACbwE,KAAM,UAEVmnB,KAAM,CAAET,OAAQ,QAAS1mB,KAAM,YAEnCtE,SAAU,CAAC,OAAQ,YAEvB0rB,SAAU,CACNvR,MAAO,kBACPqR,WAAY,CACRG,MAAO,CAAErnB,KAAM,UACfxE,YAAa,CAAEwE,KAAM,UACrBtG,KAAM,CAAEsG,KAAM,UACdsnB,MAAO,CAAEtnB,KAAM,WAEnBtE,SAAU,CAAC,SAEf6rB,MAAO,CACH1R,MAAO,cACPqR,WAAY,CACRM,aAAc,CAAExnB,KAAM,UACtBynB,UAAW,CAAEznB,KAAM,WACnB0nB,QAAS,CAAE1nB,KAAM,UACjB2nB,UAAW,CAAE3nB,KAAM,UACnB4nB,iBAAkB,CAAE5nB,KAAM,UAC1B6nB,SAAU,CAAE7nB,KAAM,UAClB8nB,QAAS,CAAE9nB,KAAM,WAErBtE,SAAU,CAAC,YAEfqsB,MAAO,CACHlS,MAAO,6CACPqR,WAAY,CACR/pB,QAAS,CACL3B,YAAa,iBACbwE,KAAM,UAEV9H,MAAO,CACHmuB,MAAO,CAAEZ,KAAM,+BACfjqB,YACI,gGACJwE,KAAM,SAEVxE,YAAa,CACTA,YAAa,gDACbwE,KAAM,UAEVmnB,KAAM,CAAET,OAAQ,QAAS1mB,KAAM,WAC/BgoB,SAAU,CACNxsB,YAAa,uDACbwE,KAAM,WAGdtE,SAAU,CAAC,OAAQ,aAG3BusB,SAAU,CAAC,oBACXjrB,KAAM,CACF6Y,MAAO,gBACPra,YAAa,uEACb0sB,QAAS,CACLxuB,KAAM,aACNgE,IAAK,mDAETyqB,QAAS,CACLC,MAAO,8BACP1uB,KAAM,WACNgE,IAAK,6BAETuL,QAAS,WC1MjB,MAAMof,WAAkB1gB,YAMpBC,YAAYtP,GACRuP,MAAMvP,GACNwP,KAAKtK,MAAQ,CACT8qB,WAAW,EACXjgB,IAAK,KACLkgB,WAAW,GAEfzgB,KAAK0gB,UAAY,IAAItvB,IACrB4O,KAAK2gB,mBAAqB3gB,KAAK2gB,mBAAmBzgB,KAAKF,MACvDA,KAAK4gB,gBAAkB5gB,KAAK4gB,gBAAgB1gB,KAAKF,MAOrD2gB,qBACI,MAAMhO,KAAEA,GAAS3S,KAAKxP,MACtBwP,KAAKM,SAAS,CAAEmgB,WAAW,IAC3B,MACMI,EADoB7gB,KAAK4gB,kBACgBvvB,KAAMyvB,IACjDA,EAAUC,cAAcC,GAAiB,cAClCF,IAEXD,EAAqBvrB,MAAOlF,IACxBmF,QAAQnF,MAAMA,GACd2Q,IAAM3Q,MAAMA,KAEXukB,IAAYC,iBAgBbiM,EAAqBxvB,KAAMqvB,IACvB1gB,KAAKM,SAAS,CAAEkgB,WAAW,EAAMjgB,IAAKmgB,IACtC3f,IAAM7L,KAAKyd,EAAKsC,cAAc,CAC1B7iB,GAAI,2CACJC,eAAgB,qDAGnBiD,MAAOlF,IACJ2Q,IAAM3Q,MAAMA,KAvBpBywB,EAAqBxvB,KAAMyvB,IACvBA,EAAUjM,UACLxjB,KAAK,KACF2O,KAAKM,SAAS,CAAEkgB,WAAW,EAAMjgB,IAAKugB,IACtC/f,IAAM7L,KAAKyd,EAAKsC,cAAc,CAC1B7iB,GAAI,2CACJC,eAAgB,qDAGvBiD,MAAOlF,IACJ4P,KAAKM,SAAS,CAAEmgB,WAAW,IAC3B1f,IAAM3Q,MAAMA,OAsBhCwwB,kBA8DI,OADkB,IAAIxvB,IA5DT,CACTQ,KAAM,gBACN8B,YAAa,oEACbgZ,QAAS,cACTvL,QAAS,QACToV,UAAW,CAAC,OAAQ,SACpB0K,KAAM,CAAC,SACPvwB,SAAU,CAAC,aACXwwB,eAAgB,CAAC,UACjBC,WAAY,SACZjN,oBAAqB,CAAC,0BACtBkN,oBAAqB,CACjBC,cAAe,WACfC,mBAAoB,2BACpBC,eAAgB,WAChBC,oBAAqB,+BAEzB1N,eAAgB,CACZC,cAAe,OACfC,kBAAmB,CACfpe,IAAK,uDAETqe,qBAAsB,CAClBre,IAAK,wDAGbiU,WAAY,CACR,CACInY,OAAQ,mBACR+X,KAAM,MACNsB,iBAAkB,YAClBD,SAAU,kCAEd,CACIpZ,OAAQ,mBACR+X,KAAM,SACNsB,iBAAkB,YAClBD,SAAU,kCAEd,CACIpZ,OAAQ,mBACR+X,KAAM,MACNsB,iBAAkB,YAClBD,SAAU,kCAEd,CACIpZ,OAAQ,QACR+X,KAAM,MACNsB,iBAAkB,YAClBD,SAAU,kCAEd,CACIpZ,OAAQ,SACR+X,KAAM,OACNsB,iBAAkB,YAClBD,SAAU,qCAMLyJ,OAAOjf,MAAOlF,IAC3BmF,QAAQnF,MAAMA,GACd4P,KAAKM,SAAS,CAAEmgB,WAAW,IAC3B,MAAMnvB,SAAEA,GAAalB,EACrB,GAAIkB,EAAU,CACV,MAAM+tB,KAAEA,EAAF3rB,YAAQA,EAAR2B,QAAqBA,GAAY/D,EAASC,KAChDwP,IAAM3Q,MAAN,SAAAsI,OAAqB2mB,EAArB,QAAA3mB,OAAgChF,EAAhC,OAAAgF,OAAiDrD,SAEjD0L,IAAM3Q,MAAMA,KAWxB8Q,SACI,MAAMsf,UAAEA,EAAFjgB,IAAaA,EAAbkgB,UAAkBA,GAAczgB,KAAKtK,OACrCxE,QAAEA,GAAY8O,KAAKxP,MAEzB,GAAIgwB,GAAajgB,EAAK,CAClB,MAAM3K,EAAM,SAAW2K,EAAInO,GAAK,YAChC,OAAOgS,EAAAtS,EAAAC,cAAC0vB,GAAA3vB,EAAD,CAAUqjB,GAAIvf,IAEzB,OACIwO,EAAAtS,EAAAC,cAAC2vB,GAAA,EAAD,CAAexpB,KAAK,OAAOyJ,OAAQ,KAC/ByC,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQywB,gBACpBvd,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,KAAKsE,UAAU,KAAK9E,UAAWpB,EAAQ0wB,MACvDxd,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,8BACHC,eAAe,iCAGvB+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAYvV,UAAU,IAAI9E,UAAWpB,EAAQ8E,SACzCoO,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,+CACHC,eACI,mNAOZ+R,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ2wB,SACpBzd,EAAAtS,EAAAC,cAAC+vB,GAAD,CAAenG,YAAa,CACxB/iB,KAAM,QACN1I,MAAO,UACP4C,QAAS,YACTR,UAAWpB,EAAQ6wB,aAGnB3d,EAAAtS,EAAAC,cAACiwB,GAAAlwB,EAAD,MACAsS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CAAkB5Z,GAAG,iBAAiBC,eAAe,qBAEvDsiB,IAAYoI,gBAEN3Y,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI9b,KAAK,QACL1I,MAAM,UACN6J,SAAU0mB,EACV3tB,QAAQ,YACRkG,QAASgH,KAAK2gB,oBAEdvc,EAAAtS,EAAAC,cAACkwB,GAAAnwB,EAAD,MACAsS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CAAkB5Z,GAAG,oBAAoBC,eAAe,sBACvDouB,GAAarc,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkB1Z,KAAM,GAAItG,UAAWpB,EAAQgxB,sBAUjG3B,GAAUvmB,UAAY,CAClB9I,QAAS2C,YAAUoG,MAAM,IAAIlG,WAC7B4e,KAAM9e,YAAUoG,MAAM,CAAEgb,cAAephB,YAAUsG,OAAQpG,YAG9CqhB,mBAAWjT,YAlPVnS,IAAD,CACXkyB,eAAgB,CACZhyB,MAAO2e,IAAM,KACbrY,SAAU,YAEd2rB,SAAU,CACNC,WAAYpyB,EAAMO,QAAQ,MAC1B8V,YAAarW,EAAMO,QAAQ,MAE/BqxB,KAAM,CACFpM,cAAexlB,EAAMO,QAAQ,GAC7B0V,WAAY,KAEhBjQ,QAAS,CACLwf,cAAexlB,EAAMO,QAAQ,IAEjCwxB,WAAY,CACR9c,YAAajV,EAAMO,QAAQ,MAiOT4R,CAAmBoe,qEC1K7C,SAAS8B,GAAQ7xB,GACb,MAAMU,QACFA,EADEoxB,KACOA,EADPC,YACaA,EADbvyB,MAC0BA,EAD1BwyB,MACiCA,EADjC1xB,aACwCA,EADxC2xB,SACsDA,GACxDjyB,EACEkyB,EAAkB1yB,EAAMG,QAAQgU,gBAAgBnU,EAAMG,QAAQkS,WAAWC,OAE/E,OAAIkgB,EAAQ,EAEJpe,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQkR,MACpBgC,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQyxB,iBACpBve,EAAAtS,EAAAC,cAAC6wB,GAAA,EAAD,CAAYC,YAAaH,EAAiBle,MAAO,GAAI7C,OAAQ,GAAImhB,KAAK,SAE1E1e,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ6xB,kBACnBT,GACGle,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,KAAKR,UAAWpB,EAAQ8xB,UAAW5rB,UAAU,OAC5DtG,EACGsT,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,8CACHC,eAAe,iBAGnB+R,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CAAkB5Z,GAAG,uCAAuCC,eAAe,UAGnF+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,UAAU2f,cAAY,EAAC2G,MAAM,OAAOhiB,UAAU,OAC9DgN,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,6CACHC,eAAe,eAElB,IACA,IACAmwB,EACA,IACA,IA9DjC,SAAiChyB,GAC7B,MAAMM,aACFA,EADEkY,MACYA,GACdxY,EACJ,OAAIwY,EAEI5E,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CAAkB5Z,GAAG,iDAAiDC,eAAe,qBAElFvB,EAEHsT,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,gDACHC,eAAe,mBAKnB+R,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CAAkB5Z,GAAG,yCAAyCC,eAAe,WA8CxD4wB,CAAwBzyB,MAKzC4T,EAAAtS,EAAAC,cAAC8a,GAAA,EAAD,CAAiBlL,OAAQ,KACzByC,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ0rB,eACnB9rB,EACGsT,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAG,wBACL/Q,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CAAQ5hB,QAAQ,YAAYR,UAAWpB,EAAQgyB,cAC3C9e,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,wDACHC,eAAe,4BAK3B+R,EAAAtS,EAAAC,cAAC+vB,GAAD,CAAenG,YAAa,CACxB7oB,QAAS,YACT5C,MAAO,UACPoC,UAAWpB,EAAQsb,SAGnBpI,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,6CACHC,eAAe,iBAK/B+R,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQiyB,aACpB/e,EAAAtS,EAAAC,cAACub,EAAA,EAAD,CACIhb,UAAWpB,EAAQsb,OACnBzS,SAA0B,IAAhBuoB,EAAKhnB,OACftC,QAAS,IAAMupB,EAAY,SAE3Bne,EAAAtS,EAAAC,cAACqxB,GAAAtxB,EAAD,CAAM5B,MAAoB,SAAbuyB,EAAsB,UAAY,aAEnDre,EAAAtS,EAAAC,cAACub,EAAA,EAAD,CACIhb,UAAWpB,EAAQsb,OACnBzS,SAA0B,IAAhBuoB,EAAKhnB,OACftC,QAAS,IAAMupB,EAAY,SAE3Bne,EAAAtS,EAAAC,cAACsxB,GAAAvxB,EAAD,CAAQ5B,MAAoB,SAAbuyB,EAAsB,UAAY,eAM1D,KAIfJ,GAAQroB,UAAY,CAChB9I,QAAS2C,IAAUoG,MAAM,IAAIlG,WAC7BwuB,YAAa1uB,IAAUsG,KAAKpG,WAC5B0uB,SAAU5uB,IAAUqG,OAAOnG,WAC3BuuB,KAAMzuB,IAAUoG,MAAM,CAAEqB,OAAQzH,IAAUyvB,SAAUvvB,WACpDyuB,MAAO3uB,IAAUyvB,OAAOvvB,WACxB/D,MAAO6D,IAAUoG,MAAM,CACnBuJ,OAAQ3P,IAAUqG,SACnBnG,WACHjD,aAAc+C,IAAUC,KAAKC,YAGlBoO,mBAlLCnS,IAAD,CACXuzB,UAAW,CACPjzB,WAAYN,EAAMO,QAAQ,IAE9Bic,OAAQ,CACJ3Z,OAAQ7C,EAAMO,QAAQ,GACtBizB,aAAc,GAElBL,YAAa,CACTzgB,QAAS,QAEb+gB,eAAgB,CACZrB,WAAY,GACZ/b,YAAa,IAEjBjE,KAAM,CACFT,OAAQ,GACRU,WAAYrS,EAAMG,QAAQkS,WAAWC,MACrCC,aAAc,aAAevS,EAAMG,QAAQqS,KAAKC,KAChDC,QAAS,QAEbigB,gBAAiB,CACbP,WAAY,GACZ/b,YAAa,GACbhD,aAAc,IAElB0f,iBAAkB,CACdrgB,QAAS,OACTU,eAAgB,SAChBE,cAAe,UAEnBsZ,cAAe,CACX9E,SAAU,EACVpV,QAAS,OACTC,WAAY,UAEhB3M,QAAS,CACL8hB,SAAU,GAEdoL,aAAc,CACVhzB,MAAO,UACPmS,WAAY,aAyIc,CAAEsB,WAAW,GAAhCxB,CAAwCkgB,ICnLvD,MAAMvyB,GAAYC,YAAYC,IAAD,CACzB4xB,KAAM,CACFpM,cAAexlB,EAAMO,QAAQ,GAC7B0V,WAAY,KAEhBjQ,QAAS,CACLwf,cAAexlB,EAAMO,QAAQ,OAWrC,SAASgwB,KACL,MAAMrvB,EAAUpB,KAShB,OACIsU,EAAAtS,EAAAC,cAAC2vB,GAAA,EAAD,CAAexpB,KAAK,OAAOyJ,OAAQ,KAC/ByC,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQywB,gBACpBvd,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAY7Z,QAAQ,KAAKsE,UAAU,KAAK9E,UAAWpB,EAAQ0wB,MACvDxd,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,wCACHC,eAAe,iCAGvB+R,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAYvV,UAAU,IAAI9E,UAAWpB,EAAQ8E,SACzCoO,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,4CACHC,eACI,6KAMVsiB,IAAYoI,gBACV3Y,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ2wB,SACpBzd,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAM9iB,GAAG,yBAAyB+iB,GAAG,uBAAuB7iB,UAAWpB,EAAQyrB,OAC3EvY,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI9b,KAAK,QACL1I,MAAM,UACN4C,QAAQ,YACRR,UAAU,cAGV8R,EAAAtS,EAAAC,cAACiwB,GAAAlwB,EAAD,MACAsS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,iEACHC,eAAe,gCAWnDkuB,GAAUvmB,UAAY,CAClB9I,QAAS2C,YAAUoG,MAAM,IAAIlG,WAC7B4e,KAAM9e,YAAUoG,MAAM,CAAEgb,cAAephB,YAAUsG,OAAQpG,YAG9CmO,4BAAWkT,YAAWmL,8HC7CrC,MAAMmD,WAAkB9jB,IAAMC,UAC1BC,YAAYtP,GACRuP,MAAMvP,GADSmzB,GAAA3jB,KAAA,cAkDL,KACV,MAAMyiB,SAAEA,GAAaziB,KAAKtK,OACpB1F,MAAEA,GAAUgQ,KAAKxP,MACvB,IAAIozB,EAAiB,GACjBC,EAAW,CACXC,UAAW,CACPC,aAAc,CACV3hB,KAAM,CACFmC,gBAAiB,cACjBjU,WAAY,IAEhBgS,MAAO,CACH0hB,UAAW,OACXzf,gBAAiB,eAErB0f,UAAW,CACPC,UAAW,CACP3f,gBAAiB,UAI7B4f,qBAAsB,CAClB/hB,KAAM,CACFmC,gBAAiB,gBAGzB6f,qBAAsB,CAClBC,YAAa,CACT5H,QAAS,MAyBzB,MApBiB,SAAbgG,IACAmB,EAAiB,CACbE,UAAW,CACPC,aAAc,CACVE,UAAW,CACPvhB,QAAS,QACTwhB,UAAW,CACPxhB,QAAS,OACT4hB,SAAU,OACV/f,gBAAiB,eAErBggB,UAAW,CACP7hB,QAAS,aAOjCmhB,EAAWxa,OAAOmb,OAAOx0B,EAAO6zB,EAAUD,GACnCa,aAAeZ,KAvGPF,GAAA3jB,KAAA,UA2GT,KACNA,KAAK0kB,aAAarzB,KAAMixB,IACpB,MAAM/wB,KAAEA,GAAS+wB,GACXzwB,KAAEA,EAAF8yB,WAAQA,EAARnC,MAAoBA,GAAUjxB,GAC9BqzB,MAAEA,GAAUD,EAId3kB,KAAKwiB,MAAQ,GAAe,IAAVoC,IAClB5kB,KAAK6kB,KAAO,EACZ7kB,KAAK8kB,qBACL9kB,KAAK+kB,WAET/kB,KAAKwiB,MAAQoC,EACb5kB,KAAKM,SAAS,CAAE0kB,mBAAoBnzB,EAAM8V,UAAU,EAAOsd,aAAczC,QAzH9DmB,GAAA3jB,KAAA,qBA6HE,KACjB,MAAMlP,aAAEA,GAAiBkP,KAAKxP,MACxB00B,EAAkBp0B,EAAe,WAAa,OACpDq0B,OAAOC,aAAaC,WAAW,cAAgBH,KAhIhCvB,GAAA3jB,KAAA,kBAmID,KACd,MAAMlP,aAAEA,GAAiBkP,KAAKxP,MACxB00B,EAAkBp0B,EAAe,WAAa,OAC9Cw0B,EAAmBH,OAAOC,aAAaG,QAAQ,cAAgBL,GACrE,GAAII,EAAkB,CAClB,MAAMX,EAAalpB,KAAKkN,MAAM2c,GAC1BX,EAAWE,MAAQF,EAAWnC,OAASmC,EAAWa,cAClDxlB,KAAK6kB,KAAOF,EAAWE,KACvB7kB,KAAKwiB,MAAQmC,EAAWnC,MACxBxiB,KAAKwlB,YAAcb,EAAWa,gBA5IvB7B,GAAA3jB,KAAA,cAuJJrO,IACXqO,KAAKM,SAAS,CAAEmiB,SAAU9wB,MAxJXgyB,GAAA3jB,KAAA,kBA2JD,KAEd,MAAMlP,aAAEA,GAAiBkP,KAAKxP,MACxB00B,EAAkBp0B,EAAe,WAAa,OAC9C6zB,EAAa,CAAEE,KAAM7kB,KAAK6kB,KAAMrC,MAAOxiB,KAAKwiB,MAAOgD,YAAaxlB,KAAKwlB,aAC3EL,OAAOC,aAAaK,QAAQ,cAAgBP,EAAiBzpB,KAAKC,UAAUipB,MAhK7DhB,GAAA3jB,KAAA,aAmKL6kB,IACV7kB,KAAK6kB,KAAOA,EACZ7kB,KAAK0kB,aAAarzB,KAAMixB,IACpB,MAAM/wB,KAAEA,GAAS+wB,GACXzwB,KAAEA,EAAF2wB,MAAQA,GAAUjxB,EACxByO,KAAKM,SAAS,CACV0kB,mBAAoBnzB,EACpB8V,UAAU,EACVsd,aAAczC,IAElBxiB,KAAK0lB,sBA7KM/B,GAAA3jB,KAAA,aAiLN,KACT,MAAM6kB,KAAEA,EAAFW,YAAQA,GAAgBxlB,MACxBlP,aAAEA,EAAFkY,MAAgBA,GAAUhJ,KAAKxP,MACrC,GAAIwY,EAAO,CACP,MAAMT,EAAeG,KAAYC,MAAMK,GAGvC,OAFAT,EAAaK,MAAQ5I,KAAKwlB,YAC1Bjd,EAAaM,OAASgc,EAAOW,EACtBp0B,IAAI0X,OAAOP,GAEtB,OAAIzX,EACO6P,IAAWoI,IAAI,CAAEH,MAAO5I,KAAKwlB,YAAa3c,OAAQgc,EAAOW,IAEzDp0B,IAAI2X,IAAI,CAAEH,MAAO5I,KAAKwlB,YAAa3c,OAAQgc,EAAOW,MA3L7DxlB,KAAKtK,MAAQ,CACTsvB,mBAAoB,KACpBrd,UAAU,EACVsd,aAAc,EACdxC,SAAUjyB,EAAMR,MAAMwT,OAAOmiB,gBAEjC3lB,KAAK6kB,KAAO,EACZ7kB,KAAKwiB,MAAQ,IACbxiB,KAAKwlB,YAAc,GACnBxlB,KAAK4lB,kBACL5lB,KAAKuiB,YAAcviB,KAAKuiB,YAAYriB,KAAKF,MACzCA,KAAKmY,WAAanY,KAAKmY,WAAWjY,KAAKF,MAG3C6lB,oBACI7lB,KAAK4lB,kBACL5lB,KAAK+kB,UAGTe,mBAAmBC,GACf,MAAMj1B,aAAEA,EAAFkY,MAAgBA,GAAUhJ,KAAKxP,MACjCM,IAAiBi1B,EAAUj1B,cAAgBkY,IAAU+c,EAAU/c,QAC/DhJ,KAAK4lB,kBACL5lB,KAAK+kB,WAIbiB,uBAEI,MAAMh2B,MAAEA,GAAUgQ,KAAKxP,MAgBvB6Y,OAAOmb,OAAOx0B,EAfS,CACnB8zB,UAAW,CACPC,aAAc,CACVE,UAAW,CACPvhB,QAAS,QACTwhB,UAAW,CACPxhB,QAAS,mBAEb6hB,UAAW,CACP7hB,QAAS,2BA8JjCyV,aACI,MAAM0M,KAAEA,EAAFW,YAAQA,EAARhD,MAAqBA,GAAUxiB,KACjCwiB,EAAQ,GAAMgD,EAAcX,GAAiB,IAATA,IACpC7kB,KAAK6kB,KAAOA,EAAO,GAEvB7kB,KAAK+kB,UAST7jB,SAAS,IAAA+kB,EAAAjmB,KACL,MAAM2S,KACFA,EADE7hB,aACIA,EADJI,QACkBA,EADlB8X,MAC2BA,GAC7BhJ,KAAKxP,MACH01B,EAAU,CACZ,CACIt0B,KAAM,KACN8b,QAAS,CACLhL,QAAS,WACTiJ,QAAQ,IAGhB,CACI/Z,KAAM,OACNM,MAAOygB,EAAKsC,cAAc,CACtB7iB,GAAI,iCACJC,eAAgB,SAEpBqb,QAAS,CACLyY,iBAAkB,SAACx0B,EAAOy0B,EAAWC,GAAqC,IAAxBC,EAAwBjrB,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,GAAAA,UAAA,GAAT4qB,EAC7D,GAAIG,EAAUG,QAAS,CACnB,MAAMz1B,aAAEA,GAAiBw1B,EAAa91B,MAChCg2B,EAAWF,EAAa5wB,MAAMsvB,mBAAmBoB,EAAUK,UAC3DnW,EAAU8V,EAAUG,QAAQ,GAC5Bpd,EAAQid,EAAUG,QAAQ,GAChC,GAAIz1B,EACA,OACIsT,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAI,iBAAmBhM,EAAQ,YAAa7W,UAAWpB,EAAQw1B,aACjEtiB,EAAAtS,EAAAC,cAAC6wB,GAAA,EAAD,CAAYpe,MAAO,GAAI7C,OAAQ,GAAImhB,KAAK,cAAcD,YAAY,YAClEze,EAAAtS,EAAAC,cAAA,YAAOue,IAInB,GAAIkW,EACA,MAAsB,QAAlBA,EAAStuB,KAELkM,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CACIC,GAAI,SAAWqR,EAASnO,QAAU,cAAgBlP,EAAQ,WAC1D7W,UAAWpB,EAAQw1B,aAEnBtiB,EAAAtS,EAAAC,cAAC6a,EAAA,EAAD,sBACAxI,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,4CACHC,eAAe,WAEnB+R,EAAAtS,EAAAC,cAAA,YAAOue,IAKflM,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAMC,GAAI,SAAWhM,EAAQ,YAAa7W,UAAWpB,EAAQw1B,aACzDtiB,EAAAtS,EAAAC,cAAC6wB,GAAA,EAAD,CAAYpe,MAAO,GAAI7C,OAAQ,GAAImhB,KAAK,MAAMD,YAAY,YAC1Dze,EAAAtS,EAAAC,cAAA,YAAOue,IAKvB,OAAOlM,EAAAtS,EAAAC,cAAA,cAEX40B,MAAM,EACNhb,QAAQ,IAGhB,CACI/Z,KAAM,UACNM,MAAOygB,EAAKsC,cAAc,CACtB7iB,GAAI,oCACJC,eAAgB,YAEpBqb,QAAS,CACLiZ,MAAM,IAGd,CACI/0B,KAAM,UACNM,MAAOygB,EAAKsC,cAAc,CACtB7iB,GAAI,oCACJC,eAAgB,YAEpBqb,QAAS,CACLiZ,MAAM,IAGd,CACI/0B,KAAM,WACNM,MAAOygB,EAAKsC,cAAc,CACtB7iB,GAAI,qCACJC,eAAgB,aAEpBqb,QAAS,CACLiZ,MAAM,MAIZ9B,KAAEA,EAAFrC,MAAQA,EAARgD,YAAeA,GAAgBxlB,MAC/BglB,mBACFA,EADErd,SACkBA,EADlB8a,SAC4BA,EAD5BwC,aACsCA,GACxCjlB,KAAKtK,MACHgY,EAAU,CACZkZ,WAAY,WACZC,WAAY,UACZC,YAAY,EACZhe,QAAQ,EACR0Z,QACAqC,OACAkC,cAAe,CAAC5xB,EAAQ6xB,KACpB,OAAQ7xB,GACJ,IAAK,aACD6K,KAAKinB,WAAWD,EAAWnC,QAMvCqC,eAAgB,OAChB1B,cACA2B,oBAAsBC,IAClBpnB,KAAKwlB,YAAc4B,EACfvC,EAAOuC,EAAe5E,EACtBxiB,KAAK6kB,KAAO,EACLrC,EAAQ,GAAMgD,EAAcX,GAAiB,IAATA,IAC3C7kB,KAAK6kB,KAAOA,EAAO,GAEvB7kB,KAAK+kB,UACL/kB,KAAK0lB,oBAoCb,MAjCiB,SAAbjD,GACA/U,EAAQ2Z,gBAAkB,SAAC/E,EAAMgF,EAAWb,GAAkC,IAAxBH,EAAwBjrB,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,GAAAA,UAAA,GAAT4qB,EACjE,MAAMn1B,aAAEA,GAAiBw1B,EAAa91B,MAChCg2B,EAAWF,EAAa5wB,MAAMsvB,mBAAmBsC,GACvD,OAAId,EACsB,QAAlBA,EAAStuB,KACFkM,EAAAtS,EAAAC,cAACw1B,GAAD,CAAUtM,IAAKuL,IACG,eAAlBA,EAAStuB,MAChBsuB,EAAS9wB,MAAQ,YACV0O,EAAAtS,EAAAC,cAACy1B,GAAD,CAAUjnB,IAAKimB,EAAU11B,cAAY,EAACqnB,WAAYmO,EAAanO,cAGlE/T,EAAAtS,EAAAC,cAACy1B,GAAD,CAAUjnB,IAAKimB,EAAU11B,aAAcA,EAAcqnB,WAAYmO,EAAanO,aAInF/T,EAAAtS,EAAAC,cAAA,cAEX2b,EAAQK,OAAQ,EAChBL,EAAQ/B,QAAS,EACjB+B,EAAQ+Z,OAAQ,EAChB/Z,EAAQga,UAAW,EACnBha,EAAQia,aAAc,EACtBja,EAAQka,eAAgB,IAExBla,EAAQ2Z,gBAAkB,KAC1B3Z,EAAQK,OAAQ,EAChBL,EAAQ/B,QAAS,EACjB+B,EAAQ+Z,OAAQ,EAChB/Z,EAAQga,UAAW,EACnBha,EAAQia,aAAc,GAGrB3C,EAGDrd,EACOvD,EAAAtS,EAAAC,cAAC+Z,EAAA,EAAD,MAEuB,IAA9BkZ,EAAmB1pB,QAAiB0N,EAsBpC5E,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC81B,GAAD,CACIvF,KAAM0C,EACNxC,MAAOyC,EACP1C,YAAaviB,KAAKuiB,YAClBzxB,aAAcA,EACd2xB,SAAUA,EACVzZ,MAAOA,IAEX5E,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ42B,eACpB1jB,EAAAtS,EAAAC,cAACg2B,GAAA,EAAD,CAAkB/3B,MAAOgQ,KAAKgoB,eAC1B5jB,EAAAtS,EAAAC,cAACk2B,GAAAn2B,EAAD,CAAcic,MAAM,GAAGuU,KAAM0C,EAAoBkB,QAASA,EAASxY,QAASA,OA/BpFtJ,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAAC81B,GAAD,CACIvF,KAAM0C,EACNxC,MAAOyC,EACP1C,YAAaviB,KAAKuiB,YAClBzxB,aAAcA,EACd2xB,SAAUA,IAEdre,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQ42B,eACnBh3B,EACGsT,EAAAtS,EAAAC,cAACm2B,GAAD,MAEA9jB,EAAAtS,EAAAC,cAACo2B,GAAD,QAnBT/jB,EAAAtS,EAAAC,cAACq2B,GAAA,EAAD,OA8CJhT,mBAAWjT,YA7bVnS,IAAD,CACX83B,cAAe,CACXpjB,QAAS1U,EAAMO,QAAQ,GACvB6xB,WAAYpyB,EAAMO,QAAQ,GAC1B83B,mCAAoC,CAChCrE,UAAW,OACXzf,gBAAiB,gBAGzBmiB,YAAa,CACThkB,QAAS,OACTC,WAAY,SACZ2lB,SAAU,CACNh4B,WAAYN,EAAMO,QAAQ,OAgbO,CAAEoT,WAAW,GAAhCxB,CAAwCuhB,KAElEA,GAAU1pB,UAAY,CAClB9I,QAAS2C,IAAUoG,MAAM,IAAIlG,WAC7B4e,KAAM9e,IAAUoG,MAAM,CAAEgb,cAAephB,IAAUsG,KAAKpG,aAAcA,WACpEjD,aAAc+C,IAAUC,KAAKC,WAC7B/D,MAAO6D,IAAUoG,MAAM,CACnBuJ,OAAQ3P,IAAUqG,SACnBnG,WACHiV,MAAOnV,IAAUqG,QAGrBwpB,GAAU/vB,aAAe,CACrBqV,MAAO,IC7cX,SAASuf,GAAQ/3B,GACb,MAAMU,QACFA,EADEJ,aACOA,EADPd,MACqBA,EAAOw4B,UAAU1f,OAAEA,IAC1CtY,EACJ,OACI4T,EAAAtS,EAAAC,cAAA,QAAMO,UAAWpB,EAAQ8E,SACrBoO,EAAAtS,EAAAC,cAAC02B,GAAD,CAAW33B,aAAcA,EAAcd,MAAOA,EAAOgZ,MAAOF,KAKxEyf,GAAQvuB,UAAY,CAChB9I,QAAS2C,IAAUoG,MAAM,CACrBjE,QAASnC,IAAUqG,OACnB4tB,cAAej0B,IAAUqG,SAC1BnG,WACH/D,MAAO6D,IAAUoG,MAAM,CACnBuJ,OAAQ3P,IAAUqG,SACnBnG,WACHjD,aAAc+C,IAAUC,KAAKC,WAC7By0B,SAAU30B,IAAUoG,MAAM,CACtB6O,OAAQjV,IAAUqG,UAI1BquB,GAAQ50B,aAAe,CACnB60B,SAAU30B,IAAUoG,MAAM,CACtB6O,OAAQ,MAID3G,mBA1CA,CACXnM,QAAS,CACL8hB,SAAU,IAwCgB,CAAEnU,WAAW,GAAhCxB,CAAwComB,qNCtCvD,MAAMG,GAAUC,eAAK,IAAMC,QAAA7f,IAAA,CAAAla,EAAAg6B,EAAA,IAAAh6B,EAAAg6B,EAAA,KAAAx3B,KAAAxC,EAAAqR,KAAA,aACrB4oB,GAAmBt4B,GACrB4T,EAAAtS,EAAAC,cAACg3B,EAAA,SAAD,CAAUC,SAAU5kB,EAAAtS,EAAAC,cAACk3B,EAAA,EAAD,CAAU5zB,QAAQ,mCAClC+O,EAAAtS,EAAAC,cAAC22B,GAAYl4B,IAuDN04B,UAhDF,IAEL9kB,EAAAtS,EAAAC,cAAC4lB,EAAA,OAAD,KACIvT,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CACIwR,OAAK,EACL9wB,KAAK,QACLjF,IAAKg2B,KAAKC,MACVnoB,OAAS1Q,GAAU4T,EAAAtS,EAAAC,cAACu3B,GAADC,GAAA,GAAa/4B,EAAb,CAAoBM,cAAc,OAEzDsT,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CACIwR,OAAK,EACL9wB,KAAK,gBACLjF,IAAKg2B,KAAKC,MACVnoB,OAAS1Q,GACDmkB,IAAYC,iBACLxQ,EAAAtS,EAAAC,cAAC4lB,EAAA,SAAD,CAAUxC,GAAG,UAEb/Q,EAAAtS,EAAAC,cAACu3B,GAADC,GAAA,GAAa/4B,EAAb,CAAoBM,cAAY,OAInDsT,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CAAOtf,KAAK,eAAe6I,OAAS1Q,GAAU4T,EAAAtS,EAAAC,cAACu3B,GAADC,GAAA,GAAa/4B,EAAb,CAAoBM,cAAc,OAChFsT,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CAAOtf,KAAK,eAAejB,UAAWsgB,KACtCtT,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CACItf,KAAK,uBACL6I,OAAQ,IACAyT,IAAYC,iBACLxQ,EAAAtS,EAAAC,cAAC4lB,EAAA,SAAD,CAAUxC,GAAG,UAEb/Q,EAAAtS,EAAAC,cAACy3B,GAAD,QAInBplB,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CAAOtf,KAAK,kBAAkB6I,OAAS1Q,GAAU4T,EAAAtS,EAAAC,cAAC+2B,GAADS,GAAA,GAAqB/4B,EAArB,CAA4BM,cAAc,OAC3FsT,EAAAtS,EAAAC,cAAC4lB,EAAA,MAAD,CACItf,KAAK,8BACL6I,OAAS1Q,GACDmkB,IAAYC,iBACLxQ,EAAAtS,EAAAC,cAAC4lB,EAAA,SAAD,CAAUxC,GAAG,UAEb/Q,EAAAtS,EAAAC,cAAC+2B,GAADS,GAAA,GAAqB/4B,EAArB,CAA4BM,cAAY,6YCzDvE,MAAM24B,EAAa7pB,IAAM8pB,cAAc,CACnCnpB,IAAK,KACLopB,WAAY,MAGRC,SAAUC,GAAgBJ,EASlC,SAASK,EAAQC,GAOb,SAASC,EAAWx5B,GAChB,OAAOtB,EAAA4C,EAAAC,cAAC03B,EAAWQ,SAAZ,KAAuBvd,GAAYxd,EAAA4C,EAAAC,cAACg4B,EAADnO,EAAA,GAAsBlP,EAAalc,KAGjF,OADAw5B,EAAW32B,YAAX,WAAAqF,OAAoCqxB,EAAiB12B,YAArD,KACO22B,EASX,SAASE,IACL,MAAM3pB,IAAEA,EAAF4pB,UAAOA,GAAcC,qBAAWX,GACtC,MAAO,CAAClpB,EAAK4pB,GAGFV,wvBCnCf,MAAM9oB,UAAmBlG,IACrBqF,YAAYlO,EAAM8a,EAAS2d,GACvBtqB,QACA,IAAIqf,EAAaiL,EACbz4B,aAAgByX,OAChB+V,EAAaxtB,GAEboO,KAAKpO,KAAOA,EACZoO,KAAKmB,QAAU,QACfnB,KAAK0M,QAAUA,EACf1M,KAAKsqB,kBAAmB,EACxBtqB,KAAKkU,oBAAsB,CAAC,0BAC5BlU,KAAKuW,UAAY,CAAC,OAAQ,SAC1BvW,KAAKmhB,WAAa,SAClBnhB,KAAK8T,eAAiB,CAClBC,cAAe,OACfC,kBAAmB,CACfpe,IAAK,IAETqe,qBAAsB,CAClBre,IAAK,MAIjBoK,KAAKuqB,MAAQnL,EACb,IAAK,MAAMhsB,KAAOgsB,EACV/V,OAAOmhB,UAAUC,eAAeC,KAAKtL,EAAYhsB,KACjD4M,KAAK5M,GAAOgsB,EAAWhsB,IAG/B4M,KAAKS,QAAUrP,IAAIsP,OAAOC,WAC1BX,KAAK2qB,QAAU3qB,KAAK2qB,QAAQzqB,KAAKF,MASrC4qB,mBACInwB,IAASmwB,mBAGbD,UACI,OAAO3qB,KAAK9H,KAGhB2yB,cAII,OAHyB7qB,KAAKjF,OAAO1J,KAAK0J,GAC/BA,EAAOC,KAAP,SAAwB8vB,gBAEXz5B,KAAKC,GAAYA,EAASC,MAGtDw5B,gBAAgB34B,GAAqBiJ,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,IAAAA,UAAA,GASjC,OAR4B2E,KAAKjF,OAAO1J,KAAK0J,GAClCA,EAAOC,KAAK,oBAAoBgwB,8BACnC,CACI7hB,MAAO/W,GAEX4N,KAAK4qB,qBAGcv5B,KAAKC,GAAYA,EAASC,MAGzD05B,kCAAkC74B,EAAIb,GAOlC,OANwByO,KAAKjF,OAAO1J,KAAK0J,GAC9BA,EAAOC,KAAK,oBAAoBkwB,2BAA2B,CAC9D/hB,MAAO/W,EACPb,UAMZ45B,wBAAwB/4B,GAAqBiJ,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,IAAAA,UAAA,GASzC,OARwB2E,KAAKjF,OAAO1J,KAAK0J,GAC9BA,EAAOC,KAAP,KAAoBowB,uCACvB,CACIjiB,MAAO/W,GAEX4N,KAAK4qB,qBAGUv5B,KAAKC,GAAYA,EAASC,MAGrD85B,uBAAuBj5B,GAAqBiJ,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,IAAAA,UAAA,GAWxC,OATuB2E,KAAKjF,OAAO1J,KAAK0J,GAE7BA,EAAOC,KAAK,oBAAoBswB,yCACnC,CACIC,eAAgBn5B,GAEpB4N,KAAK4qB,qBAGSv5B,KAAKC,GAAYA,EAASC,MAQpD8iB,cAkBI,OAjB4BrU,KAAKjF,OAAO1J,KAAK0J,IACzC,MAAMqkB,EAAarkB,EAAOywB,KAAKtM,YAAYve,WAAWye,WAChDkD,EAAO,GAEbjZ,OAAOC,KAAKtJ,MAAMyrB,QAAQC,IAClBA,KAAgBtM,GACI,WAAhBsM,IACApJ,EAAKoJ,GAAgB1rB,KAAK0rB,MAItC,MAAMC,EAAU,CACZp6B,KAAM+wB,EACNrE,eAAgB,oBAEpB,OAAOljB,EAAOC,KAAK,gBAAgB4wB,kBAAkBD,EAAS3rB,KAAK4qB,sBAE5Cv5B,KAAKC,GACrB,IAAIF,IAAIE,EAASC,OAQhCs6B,OAAOhY,GACH,IAAI8X,EACAG,EAUJ,OARAH,EAAU,CACNp6B,KAAMsiB,EACNoK,eAAgB,oBAEpB6N,EAAiB9rB,KAAKjF,OAAO1J,KAAK0J,GACvBA,EAAOC,KAAK,gBAAgB4wB,kBAAkBD,EAAS3rB,KAAK4qB,qBAoB3EmB,SAA2C,IAApCC,EAAoC3wB,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,GAAAA,UAAA,GAAzB2E,KAAMisB,EAAmB5wB,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,GAAAA,UAAA,GAAJ,GACnC,IAAI6wB,EAAO,GACPC,EAAQ,CAAI,QAAS,SAAU,QAAvBzzB,OAAA0zB,EAAkCH,IAC9C,IAAK,IAAII,KAAQL,EACRG,EAAS54B,SAAS84B,KACnBH,EAAKG,GAAQL,EAASK,IAG9B,OAAOH,EAQXxxB,WAAWtI,GAcP,OAbkB,IAAIuI,KAAmBC,aAAaC,IAAMC,yBAAyBC,OAEhF1J,KAAK0J,GACKA,EAAOC,KAAK,gBAAgBsxB,gCAC/B,CACIC,aAAcn6B,GAElB4N,KAAK4qB,qBAGZt1B,MAAMlF,IACHmF,QAAQnF,MAAMA,KAEIiB,KAAKC,GACpB,IAAIqP,EAAWrP,EAASC,OAUvCmJ,WAAW8xB,GACP,IAAIxjB,EAAQ,GACZ,GAAIwjB,GAAU,UAAWA,EAAQ,CAC7B,IAAK,MAAOp5B,EAAKzB,KAAU0X,OAAO2G,QAAQwc,EAAOxjB,OAC7CA,GAAK,GAAAtQ,OAAOtF,EAAP,KAAAsF,OAAc/G,EAAd,KAET66B,EAAOxjB,MAAQA,EAUnB,OARkB,IAAIrO,KAAmBC,aAAaC,IAAMC,yBAAyBC,OAEhF1J,KAAK0J,GACKA,EAAOC,KAAK,gBAAgByxB,iBAAiBD,EAAQ/xB,IAASmwB,qBAExEt1B,MAAMlF,IACHmF,QAAQnF,MAAMA,KAEEiB,KAAKC,IACzBA,EAAS8Y,IAAI3J,QAAUrP,IAAIsP,OAAOC,WAC3BrP,IAQfo7B,OAAOC,GACH,MAAMC,6UAAUx3B,CAAA,GAAQ4K,KAAK+rB,SAAb,GAA0B/rB,KAAK+rB,OAAOY,IAQtD,OAPuB3sB,KAAKjF,OAAO1J,KAAK0J,IACpC,MAAM4wB,EAAU,CACZY,aAAcK,EAAWx6B,GACzBb,KAAMq7B,GAEV,OAAO7xB,EAAOC,KAAK,gBAAgB6xB,gCAAgClB,KAEjDt6B,KAAKC,GAChB,IAAIqP,EAAWrP,EAASC,OASvCu7B,uBAAuB16B,GAcnB,OAb6B4N,KAAKjF,OAC7B1J,KAAK0J,GACKA,EAAOC,KAAK,gBAAgB+xB,0CAC/B,CACIR,aAAcn6B,GAElB4N,KAAK4qB,qBAGZt1B,MAAMlF,IACHmF,QAAQnF,MAAMA,KAY1B48B,uBAAuB56B,EAAI66B,GAmBvB,OAlBgCjtB,KAAKjF,OAChC1J,KAAK0J,IACF,MAAM4wB,EAAU,CACZY,aAAcn6B,EACdyC,KAAMo4B,EACNhP,eAAgBgP,EAAU/0B,MAE9B,OAAO6C,EAAOC,KAAK,gBAAgBkyB,0CAC/BvB,EACA3rB,KAAK4qB,iBAAiB,CAClB3M,eAAgB,2BAI3B3oB,MAAMlF,IACHmF,QAAQnF,MAAMA,KAY1BsK,cAActI,GAEV,OADkB,IAAIuI,KAAmBC,aAAaC,IAAMC,yBAAyBC,OAEhF1J,KAAK0J,GACKA,EAAOC,KAAK,gBAAgBmyB,mCAC/B,CACIZ,aAAcn6B,GAElB4N,KAAK4qB,qBAGZt1B,MAAMlF,IACHmF,QAAQnF,MAAMA,KAS1Bg9B,YAAYh7B,EAAIb,GAgBZ,OAf4ByO,KAAKjF,OAC5B1J,KAAK0J,IACF,MAAM4wB,EAAU,CACZY,aAAcn6B,EACdb,OACA0sB,eAAgB,oBAEpB,OAAOljB,EAAOC,KAAK,yBAAyBqyB,2CACxC1B,EACA3rB,KAAK4qB,sBAGZt1B,MAAMlF,IACHmF,QAAQnF,MAAMA,KAU1Bk9B,aAAal7B,GAaT,OAZ0B4N,KAAKjF,OAC1B1J,KAAK0J,GACKA,EAAOC,KAAK,yBAAyBuyB,0CACxC,CACIhB,aAAcn6B,GAElB4N,KAAK4qB,qBAGZt1B,MAAMlF,IACHmF,QAAQnF,MAAMA,KAW1Bo9B,eAAeC,EAAWC,EAAOn8B,GAc7B,OAb+ByO,KAAKjF,OAAO1J,KAAK0J,IAC5C,MAAM4wB,EAAU,CACZY,aAAckB,EACdl8B,OACAo8B,WAAYD,EACZzP,eAAgB,oBAEpB,OAAOljB,EAAOC,KAAK,yBACd4yB,uDAAuDjC,EAAS3rB,KAAK4qB,oBACrEt1B,MAAMlF,IACHmF,QAAQnF,MAAMA,OAW9By9B,YAAYJ,EAAWC,GAcnB,OAbyB1tB,KAAKjF,OACzB1J,KAAK0J,GACKA,EAAOC,KAAK,yBAAyB8yB,uDACxC,CACIvB,aAAckB,EACdE,WAAYD,GAEhB1tB,KAAK4qB,qBAGZt1B,MAAMlF,IACHmF,QAAQnF,MAAMA,KAY1B29B,2BAA2BxB,EAAcoB,EAAYxS,EAAY6S,GAsB7D,OArBgBhuB,KAAKjF,OAChB1J,KAAK0J,IACF,MAAM4wB,EAAU,CACZY,eACAoB,aACAxS,aACA6S,gBACA/P,eAAgB,oBAEpB,OAAOljB,EAAOC,KACV,yBACFizB,gEACEtC,EACA3rB,KAAK4qB,iBAAiB,CAClB3M,eAAgB,2BAI3B3oB,MAAMlF,IACHmF,QAAQnF,MAAMA,KAU1B89B,2BAA2B3B,EAAcmB,GAcrC,OAb2B1tB,KAAKjF,OAC3B1J,KAAK0J,IACF,MAAM4wB,EAAU,CACZY,eACAoB,WAAYD,GAEhB,OAAO3yB,EAAOC,KACV,yBACFmzB,+DAA+DxC,KAEpEr2B,MAAMlF,IACHmF,QAAQnF,MAAMA,KAU1Bg+B,eAAeX,EAAWC,GActB,OAb8B1tB,KAAKjF,OAC9B1J,KAAK0J,GACKA,EAAOC,KAAK,yBAAyBqzB,0DACxC,CACI9B,aAAckB,EACdE,WAAYD,GAEhB1tB,KAAK4qB,qBAGZt1B,MAAMlF,IACHmF,QAAQnF,MAAMA,KAW1Bk+B,kBAAkBb,EAAWC,EAAOa,GAgBhC,OAfiCvuB,KAAKjF,OAAO1J,KAAK0J,IAC9C,MAAM4wB,EAAU,CACZY,aAAckB,EACdE,WAAYD,EACZ74B,KAAM05B,EACNtQ,eAAgB,oBAEpB,OAAOljB,EAAOC,KAAK,yBAAyBizB,gEACxCtC,EACA3rB,KAAK4qB,iBAAiB,CAClB3M,eAAgB,2BAYhC8C,cAAc9B,GAkBV,OAjBuBjf,KAAKjF,OAAO1J,KAAK0J,IACpC,MAAM4wB,EAAU,CACZY,aAAcvsB,KAAK5N,GACnBo8B,cAAe/yB,KAAKC,UAAUujB,GAC9BhB,eAAgB,uBAEpB,OAAOljB,EAAOC,KAAK,gBACdyzB,wCACG9C,EACA3rB,KAAK4qB,iBAAiB,CAClB3M,eAAgB,yBAGvB3oB,MAAMlF,IACHmF,QAAQnF,MAAMA,OAGJiB,KAAKC,GAChB0O,MAQfmK,aAAyB,IAAd/X,EAAciJ,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,GAAAA,UAAA,GAAT2E,KAAK5N,GAajB,OAZmB4N,KAAKjF,OACnB1J,KAAK0J,GACKA,EAAOC,KAAK,gBAAgB0zB,wCAC/B,CACInC,aAAcn6B,GAElB4N,KAAK4qB,qBAGZt1B,MAAMlF,IACHmF,QAAQnF,MAAMA,MAMfuQ,glCCviBf,SAASguB,EAAWC,GAChB,OAAQA,GACJ,IAAK,YACD,MAAO,sBACX,IAAK,oBACD,MAAO,kDACX,IAAK,aACD,MAAO,gDACX,QACI,MAAO,uBAUnB,MAAMC,EAAaC,IAAIC,OAAQC,IAAD,CAC1BC,KAAMD,EAAI90B,SACVtI,KAAM,aACNs9B,MAAO,CACH,CACIt9B,KAAM,OACNb,SAAQ,CAACy7B,EAAQ76B,EAAO+D,EAAOgY,KACf,IAAItc,KACL+9B,mBAAmBx9B,QAMxCy9B,EAAcN,IAAIC,OAAQC,IAAD,CAC3BC,KAAMD,EAAI90B,SACVtI,KAAM,SACNs9B,MAAO,CACH,CACIt9B,KAAM,QACNb,SAAQ,CAACy7B,EAAQ76B,EAAO+D,EAAOgY,KACf,IAAItc,KACLi+B,kBAAkB19B,QAMvC29B,EAAiBR,IAAIC,OAAQC,IAAD,CAC9BC,KAAMD,EAAI90B,SACVtI,KAAM,WACNs9B,MAAO,CACH,CACIt9B,KAAM,OACNb,SAAQ,CAACy7B,EAAQ76B,EAAO+D,EAAOgY,KACf,IAAItc,KACLm+B,iBAAiB59B,QAMtC69B,EAAYV,IAAIC,OAAQC,IAAD,CACzBC,KAAMD,EAAI90B,SACVtI,KAAM,MACNs9B,MAAO,CACH,CACIt9B,KAAM,sBACNb,SAASy7B,EAAQ76B,EAAO+D,EAAOgY,GAC3B,MACMnF,EAAe,UADF5W,EAAM6W,OAAOvE,cAE1BwE,EAAmBC,IAAYC,MAAMJ,GAG3C,OAFAE,EAAiBG,MAAQ,EACzBH,EAAiBI,OAAS,EACnBzX,IAAI0X,OAAOL,SAM5BgnB,EAAiBX,IAAIC,OAAQC,IAAD,CAC9BC,KAAMD,EAAIU,SACV99B,KAAM,WACNs9B,MAAO,CACH,CACIt9B,KAAM,oBACNb,SAAQ,CAACy7B,EAAQ76B,EAAO+D,EAAOgY,KACf,IAAItc,KACLu+B,uBAAuBh+B,EAAMS,GAAIT,EAAMC,WAM5Dg+B,EAAa,CACftf,QAASwe,IAAI50B,SAAS21B,IAAI,IAAIC,MAAM,sCAAsCl8B,WACrExD,MAAO2/B,GACGA,EAAO/8B,IAAK5C,GAADgF,EAAA,GAAiBhF,EAAjB,CAAwBiF,QAAS,QAAUs5B,EAAWv+B,EAAM8H,UAEtFgZ,WAAY4d,IAAI50B,SAAS41B,MAAM,qCAAoCl8B,WAAWxD,MAAO2/B,IACjF,MAAMC,EAAS5D,EAAO2D,GAMtB,OALAA,EAAOtE,QAAQ,CAACwE,EAAK1e,KACjB,MAAM2e,EAAQ96B,EAAA,GAAQ66B,GACtBC,EAAS76B,QAAU,eAAiBs5B,EAAWsB,EAAI/3B,MACnD83B,EAAUze,GAAS2e,IAEhBF,IAEXpf,WAAYke,IAAI50B,SAAS21B,IAAI,IAAIC,MAAM,oDAAoDl8B,WACtFxD,MAAO2/B,GACGA,EAAO/8B,IAAK5C,GAADgF,EAAA,GAAiBhF,EAAjB,CAAwBiF,QAAS,WAAas5B,EAAWv+B,EAAM8H,UAEzFqU,KAAMsiB,EAAWsB,aAAa5jB,OAC9B6jB,MAAOhB,EAAYpkB,SAASolB,QAC5Bx6B,IAAKk5B,IAAI50B,SAASm2B,MAAMjgC,MAAO2/B,IAC3B,MAAMC,EAAS5D,EAAO2D,GAMtB,OALAA,EAAOtE,QAAQ,CAACwE,EAAK1e,KACjB,MAAM2e,EAAQ96B,EAAA,GAAQ66B,GACtBC,EAAS76B,QAAU,OAASs5B,EAAWsB,EAAI/3B,MAC3C83B,EAAUze,GAAS2e,IAEhBF,IAEXM,MAAOxB,IAAI50B,SAAS21B,IAAI,IAAIC,MAAM,sCAAsCl8B,WACnExD,MAAO2/B,GACGA,EAAO/8B,IAAK5C,GAADgF,EAAA,GAAiBhF,EAAjB,CAAwBiF,QAAS,SAAWs5B,EAAWv+B,EAAM8H,UAEvFq4B,SAAUjB,EAAeiB,WAAWhkB,OACpCiE,aAAcgf,EAAUjvB,MAAMiwB,sBAC9BC,YAAahB,EAAeiB,WAAWC,oBACvCC,eAAgB9B,IAAI3R,QAAQoB,MAAMuQ,IAAI50B,UAAU22B,IAAI,GAAGC,SACvDC,gBAAiBjC,IAAI50B,SAAStG,WAC9BhC,KAAMk9B,IAAI50B,SAAS22B,IAAI,GAAGhB,IAAI,KAC9BvP,MAAOwO,IAAI50B,SAASomB,MAAM,CAAE0Q,MAAM,IAAQp9B,YAG/Bg8B,2bCjIf,MAAM9/B,EAAYC,YAAYC,IAAD,CACzBihC,OAAQ,CACJr6B,SAAU5G,EAAMkT,WAAWguB,QAAQ,QAS3C,SAASzc,EAAOjkB,GACZ,MAAM0H,KACFA,EADE7C,QACIA,EADJnC,MACaA,EADbsN,QACoBA,EADpBxI,WAC6BA,EAD7BD,eACyCA,EADzC8J,KACyDA,EADzD/J,QAC+DA,EAD/Dq5B,aACwEA,GAC1E3gC,EACEU,EAAUpB,KACTshC,EAAQC,GAAapgC,mBAAS4Q,GAC/ByvB,EAAY,GACdp+B,EACAo+B,EAAU16B,SAAW,QAErB06B,EAAUh/B,UAAYpB,EAAQ+/B,OAGlC,IAGIljB,EAHAwjB,EAAa,MACb79B,YAAEA,GAAgB2B,EAItB,GAAuB,iBAAZA,GAAwBA,aAAmBm8B,OAAQ,CAC1D99B,EAAc2B,EACd,MAAOo8B,KAAUC,GAAQx5B,EACzB6V,EAAK,GAAArV,OAAM+4B,EAAM5mB,eAAZnS,OAA4Bg5B,EAAK9+B,KAAK,UAG3Cmb,EAAK,IAAArV,OAAOrD,EAAQgqB,KAAf,OAAA3mB,OAAyBrD,EAAQA,SAI1C,OAAQ6C,GACJ,IAAK,QACDq5B,EAAariC,EAAA4C,EAAAC,cAAC4/B,EAAA7/B,EAAD8pB,EAAA,CAAW1rB,MAAM,SAAYohC,IAC1C,MACJ,IAAK,UACDC,EAAariC,EAAA4C,EAAAC,cAAC6/B,EAAA9/B,EAAD8pB,EAAA,CAAa1rB,MAAM,SAAYohC,IAC5C,MACJ,IAAK,YACDC,EAAariC,EAAA4C,EAAAC,cAAC8/B,EAAA//B,EAAD8pB,EAAA,CAAiB1rB,MAAM,SAAYohC,IAChD,MACJ,IAAK,OAGL,QACIC,EAAariC,EAAA4C,EAAAC,cAAC+/B,EAAAhgC,EAAD8pB,EAAA,CAAU1rB,MAAM,SAAYohC,IAGjD,OACIpiC,EAAA4C,EAAAC,cAACggC,EAAA,EAAD,CAAMnU,GAAIwT,EAAQY,eAAa,GAC3B9iC,EAAA4C,EAAAC,cAACkgC,EAAA,EAAD,CAAKC,OAAK,EAACC,GAAIj/B,EAAQ,EAAI,EAAGk/B,GAAIl/B,EAAQ,EAAI,EAAGm/B,GAAIn/B,EAAQ,EAAI,EAAGo/B,GAAIp/B,EAAQ,EAAI,GAChFhE,EAAA4C,EAAAC,cAACwgC,EAAA,EAAUv6B,EACP9I,EAAA4C,EAAAC,cAACwL,EAAA,EAAD,CAAMxG,WAAS,EAACxG,QAAS,EAAGoS,WAAW,SAAS6vB,KAAK,UACjDtjC,EAAA4C,EAAAC,cAACwL,EAAA,EAAD,CAAMvG,MAAI,GAAEu6B,GACZriC,EAAA4C,EAAAC,cAACwL,EAAA,EAAD,CAAMvG,MAAI,GACN9H,EAAA4C,EAAAC,cAAC0gC,EAAA,EAAD,CAAY3/B,QAAQ,YAAY4P,QAAQ,QAAQ+P,cAAY,GACvD1E,EACD7e,EAAA4C,EAAAC,cAAC0gC,EAAA,EAAD,CAAY3/B,QAAQ,SAASY,MAKzCxE,EAAA4C,EAAAC,cAACwL,EAAA,EAAD,CAAMxG,WAAS,EAACyb,QAAQ,WAAWjiB,QAAS,GACxCrB,EAAA4C,EAAAC,cAACwL,EAAA,EAAD,CAAMvG,MAAI,IACJe,GACE7I,EAAA4C,EAAAC,cAAA7C,EAAA4C,EAAAK,SAAA,KACIjD,EAAA4C,EAAAC,cAAC2gC,EAAA,EAAD,CAAQ15B,QAAS,IAAMwH,EAAQmyB,SAAUziC,MAAM,WAC3ChB,EAAA4C,EAAAC,cAAC6gC,EAAA,EAAD,CACIxgC,GAAG,oCACHC,eAAe,UAGvBnD,EAAA4C,EAAAC,cAAC2gC,EAAA,EAAD,CAAQ15B,QAAS,IAAMmsB,OAAOqD,SAASqK,SAAU3iC,MAAM,WAAvD,aAKNihC,GACEjiC,EAAA4C,EAAAC,cAAC2gC,EAAA,EAAD,CAAQ15B,QAASlB,GAAO,KAAWu5B,GAAU,IAASnhC,MAAM,WAA5D,cAWhCukB,EAAO9gB,aAAe,CAClBT,OAAO,EACPgF,KAAM,OACNH,gBAAgB,EAChBC,WAAY,CAAEC,UAAW,GACzB4J,MAAM,EACN/J,QAAS,KACTq5B,cAAc,GAGlB1c,EAAOza,UAAY,CACf9B,KAAMrE,IAAUi/B,MAAM,CAAC,QAAS,UAAW,OAAQ,cACnDz9B,QAASxB,IAAUA,UAAUqpB,UAAU,CAACrpB,IAAUqG,OAAQrG,IAAUoG,MAAM,MAAMlG,WAChFb,MAAOW,IAAUC,KACjB+N,KAAMhO,IAAUC,KAChBq9B,aAAct9B,IAAUC,KACxBgE,QAASjE,IAAUsG,KACnBpC,eAAgBlE,IAAUC,KAC1BkE,WAAYnE,IAAUoG,MAAM,CAAEhC,UAAWpE,IAAUyvB,SACnD9iB,QAAS3M,IAAUoG,MAAM,CAAE04B,OAAQ9+B,IAAUsG,OAAQpG,YAG1CmO,yBAAWuS,wWChI1B,MA0BMse,EAAqBviC,IAEvB,MAAMynB,QACFA,EADE/b,QAEFA,EAFE8R,SAGFA,EAHE9c,QAIFA,EAJEhB,MAKFA,EALE8iC,mBAMFA,EANE7lB,cAOFA,EAPEnb,UAQFA,EARE+f,KASFA,EATEkhB,KAUFA,EAVEr6B,KAWFA,EAXE9F,QAYFA,GACAtC,EACEmrB,EAAc,CAChBzrB,QACA8iC,qBACA7lB,gBACAnb,YACA+f,OACAkhB,OACAr6B,OACA9F,WAEEogC,EAAkBC,IAAW,CAC/Bz4B,CAACxJ,EAAQkiC,eAAgBl3B,IAE7B,OACIkI,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQmiC,SACpBjvB,EAAAtS,EAAAC,cAAC2iB,EAAA,EAADkH,EAAA,GAAYD,EAAZ,CAAyBrpB,UAAW4gC,EAAiBn5B,SAAUke,IAC1DjK,GAEJiK,GAAW7T,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkB1Z,KAAM,GAAItG,UAAWpB,EAAQgxB,mBAKvE6Q,EAAkBp/B,aAAe,CAC7BskB,SAAS,EACT/b,SAAS,EACThM,MAAO,UACP6J,UAAU,EACVi5B,oBAAoB,EACpBhhC,WAAW,EACXihC,MAAM,EACNr6B,KAAM,SACNV,KAAM,SACNpF,QAAS,OACTqa,eAAe,EACf4E,KAAM,IAIVghB,EAAkB/4B,UAAY,CAC1Bie,QAASpkB,IAAUC,KACnBoI,QAASrI,IAAUC,KACnBka,SAAUna,IAAUioB,KAAK/nB,WACzB7C,QAAS2C,IAAUoG,MAAM,CACrBm5B,cAAev/B,IAAUqG,OACzBm5B,QAASx/B,IAAUqG,OACnBgoB,eAAgBruB,IAAUqG,SAC3BnG,WAIH7D,MAAO2D,IAAUi/B,MAAM,CAAC,UAAW,UAAW,UAAW,cAIzD/4B,SAAUlG,IAAUC,KAKpBk/B,mBAAoBn/B,IAAUC,KAI9BqZ,cAAetZ,IAAUC,KAIzB9B,UAAW6B,IAAUC,KAKrBie,KAAMle,IAAUqG,OAIhB+4B,KAAMp/B,IAAUC,KAKhB8E,KAAM/E,IAAUi/B,MAAM,CAAC,QAAS,SAAU,UAI1C56B,KAAMrE,IAAUqG,OAIhBpH,QAASe,IAAUi/B,MAAM,CAAC,OAAQ,SAAU,SAEjC3wB,YAtICnS,IAAD,CACXqjC,QAAS,CACLxgC,OAAQ7C,EAAMO,QAAQ,GACtBiG,SAAU,YAEd48B,cAAe,CACX7uB,gBAAiBsK,IAAM,KACvBykB,UAAW,CACP/uB,gBAAiBsK,IAAM,OAG/BqT,eAAgB,CACZhyB,MAAO2e,IAAM,KACbrY,SAAU,WACV+8B,IAAK,MACLC,KAAM,MACN7uB,WAAY,GACZrU,YAAa,MAqHN6R,CAAmB4wB,GAAnB5wB,wCCtIf,MAAMsxB,EAAejjC,IACjB,MAAM6E,QAAEA,GAAY7E,EAEpB,OACI4T,EAAAtS,EAAAC,cAAA,OAAKO,UAAU,2BACX8R,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACyb,QAAQ,SAAS7P,WAAW,SAASpS,QAAS,EAAG+B,UAAU,2BACvE8R,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAAC08B,GAAI,EAAGx8B,GAAI,EAAGD,GAAI,IACzBmN,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAAC4L,WAAW,UACvByB,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACiX,GAAI,EAAGhX,GAAI,IAClBmN,EAAAtS,EAAAC,cAACk3B,EAAA,EAAD,CAAU32B,UAAU,yBAExB8R,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACiX,GAAI,GAAIhX,GAAI,IACnBmN,EAAAtS,EAAAC,cAAA,OAAKO,UAAU,yBACX8R,EAAAtS,EAAAC,cAACka,EAAA,EAAD,CAAOhU,UAAW,EAAG07B,QAAM,EAACrhC,UAAU,kBACjC+C,UAWrCo+B,EAAYz5B,UAAY,CACpB3E,QAASxB,IAAUqG,OAAOnG,YCpD9BlF,EAAAC,EAAAC,EAAA,sBAAAk6B,EAAA,sCCAAp6B,EAAAC,EAAAC,EAAA,sBAAA6kC,IAAA/kC,EAAAC,EAAAC,EAAA,sBAAAyS,IAAA3S,EAAAC,EAAAC,EAAA,sBAAAsS,IAAA,IAAApS,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,IAAAQ,EAAAR,EAAAM,EAAAC,GAAAykC,EAAAhlC,EAAA,MAAAilC,EAAAjlC,EAAA,IAuBA,MAAMwS,EAAe,CACjB0yB,KAAM,QACNC,aAAc,gBACd1yB,WAAY,gBACZC,mBAAoB,+BACpB0yB,YAAa,wBACbC,SAAU,qBACVC,cAAe,+BACfC,cAAe,0BACfC,SAAU,iBACVC,eAAgB,kCAChBC,cAAe,yBACfC,OAAQ,0BACRC,oBAAqB,iDACrBC,QAAS,0BACTC,iBAAkB,4BAClBC,SAAU,0BACVC,QAAS,yCACTC,gBAAiB,iDACjBC,YAAa,eACbC,YAAa,eACbC,aAAc,iBACdC,cAAe,iBACfC,mBAAoB,oCACpBC,qBAAsB,sCACtBC,SAAU,0BACVC,OAAQ,qCACRC,UAAW,aACXC,SAAU,0BACVC,OAAQ,UACRC,SAAU,mCACVC,kBAAmB,gCAGjBn0B,EAAiB,CACnBo0B,KAAM,OACNC,IAAK,MACLC,IAAK,MACLr0B,OAAQ,UAQG,MAAMmyB,UAAwBh0B,IAAMC,UAU/CnF,iBAAiBq7B,EAAqBC,GAClC,MAAMC,EAAathB,IAAYuhB,UAAUlrB,OAEzC,OADmBmrB,IAAUC,oBAAoBL,EAAqBC,GACpD3kC,KAAM++B,GACb6F,EAAW1iC,SAAS68B,IASnCtwB,YAAYtP,GACRuP,MAAMvP,GACNwP,KAAKtK,MAAQ,GAOjBmwB,oBACI,MAAQxkB,aAAc00B,EAAqBv0B,eAAgBw0B,GAA0Bh2B,KAAKxP,MACzEojC,EAAgByC,UAAUN,EAAqBC,GACvD3kC,KAAMilC,IACXt2B,KAAKM,SAAS,CAAEg2B,gBASxBp1B,SACI,MAAM8M,SAAEA,GAAahO,KAAKxP,OACpB8lC,UAAEA,GAAct2B,KAAKtK,MAC3B,OAAI4gC,GACOtoB,GAEJ,MAIf4lB,EAAgB55B,UAAY,CACxBgU,SAAUna,IAAUioB,KAAK/nB,WACzBsN,aAAcxN,IAAUqG,OAAOnG,WAC/ByN,eAAgB3N,IAAUqG,OAAOnG,8CC/HrClF,EAAAC,EAAAC,EAAA,sBAAAwnC,IAAA,IAAAtnC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAunC,EAAA3nC,EAAA,MAAA4nC,EAAA5nC,EAAA,MAAA6nC,EAAA7nC,EAAA,MAAA8nC,EAAA9nC,EAAA,MAAA+nC,EAAA/nC,EAAA,MAAAgoC,EAAAhoC,EAAA,MAAAioC,EAAAjoC,EAAA,IAAAkoC,EAAAloC,EAAAM,EAAA2nC,GAAAE,EAAAnoC,EAAA,IAae,SAAS0nC,EAAc/lC,GAClC,MAAMud,MACFA,EADE1Y,QACKA,EADL4hC,YACcA,EADdC,QAC2BA,EAD3Br1B,KACoCA,EADpCs1B,SAC0CA,GAC5C3mC,EAOJ,SAAS2P,EAAmBhL,GACpBA,IAAWohC,EAAca,OAAOC,GAChCF,GAAS,GAETA,GAAS,GAIjB,OACIjoC,EAAA4C,EAAAC,cAACykC,EAAA,EAAD,CAAQ30B,KAAMA,EAAM/J,QAASqI,GACzBjR,EAAA4C,EAAAC,cAAC0kC,EAAA,EAAD,KAAc1oB,GACd7e,EAAA4C,EAAAC,cAAC2kC,EAAA,EAAD,KACIxnC,EAAA4C,EAAAC,cAAC4kC,EAAA,EAAD,KAAoBthC,IAExBnG,EAAA4C,EAAAC,cAAC6kC,EAAA,EAAD,KACI1nC,EAAA4C,EAAAC,cAAC8kC,EAAA,EAAD,CAAQ79B,QAAS,IAAMmH,EAAmBo2B,EAAca,OAAOE,QAASpnC,MAAM,WACzE+mC,GAEL/nC,EAAA4C,EAAAC,cAAC8kC,EAAA,EAAD,CAAQ79B,QAAS,IAAMmH,EAAmBo2B,EAAca,OAAOC,IAAKnnC,MAAM,WACrEgnC,KAOrBX,EAAc5iC,aAAe,CACzBoa,MAAO7e,EAAA4C,EAAAC,cAACilC,EAAA,EAAD,CAAkB5kC,GAAG,2CAA2CC,eAAe,mBACtFgD,QAASnG,EAAA4C,EAAAC,cAACilC,EAAA,EAAD,CAAkB5kC,GAAG,yCAAyCC,eAAe,kBACtF6kC,QAAShoC,EAAA4C,EAAAC,cAACilC,EAAA,EAAD,CAAkB5kC,GAAG,+BAA+BC,eAAe,OAC5E4kC,YAAa/nC,EAAA4C,EAAAC,cAACilC,EAAA,EAAD,CAAkB5kC,GAAG,mCAAmCC,eAAe,WACpF8kC,SAAU,QAEdZ,EAAcv8B,UAAY,CACtB+T,MAAOla,IAAUqG,OACjB7E,QAASxB,IAAUqG,OACnB+8B,YAAapjC,IAAUqG,OACvBg9B,QAASrjC,IAAUqG,OACnB2H,KAAMhO,IAAUC,KAAKC,WACrBojC,SAAUtjC,IAAUsG,KACpBwY,KAAM9e,IAAUoG,MAAM,CAClBgb,cAAephB,IAAUsG,OAC1BpG,YAEPwiC,EAAca,OAAS,CACnBC,GAAI,KACJC,OAAQ,0mBCxCZ,SAASC,EAAcC,GAEnB,OADmB,KAAOA,EAAKC,UAAU,EAAG,IACxB,IAOxB,SAASC,EAAqBF,GAC1B,OAAOA,EAAKC,UAAU,EAAG,GAO7B,SAASE,EAAWnnC,GAChB,MAAMU,QACFA,EADE0mC,UACOA,EADPpzB,MACkBA,EADlB7C,OACyBA,GAC3BnR,EAQEqnC,EAAoB,CACtBrzB,MAAO,GACP7C,OAAQ,IAGNm2B,EAAQ,GACd,IAAK,IAAIrqB,EAAI,EAAGA,GAAK,EAAGA,IACpB,IAAK,IAAIsqB,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACzB,MAAM7nC,EAAQ,KAAO0nC,EAAUI,KAAQ,GAAavqB,EAAU,GAAJsqB,IAAkBE,SAAS,IACrFH,EAAM92B,KAAKoD,EAAAtS,EAAAC,cAAA,OAAA6pB,EAAA,CACPxoB,IAAKqa,EAAI,IAAMsqB,GACXF,EAFG,CAIPK,KAAMR,EAAqBxnC,GAC3BioC,YAAaZ,EAAcrnC,GAC3BkoC,EAAG,IAAU,GAAJ3qB,EACT4qB,EAAG,GAAKN,MAIpB,MAAMO,EAAa,IAAMV,EAAUW,MAAMN,SAAS,IAClD,OACI7zB,EAAAtS,EAAAC,cAAA,OAAKyS,MAAOA,EAAO7C,OAAQA,EAAQrP,UAAWpB,EAAQsnC,UAClDp0B,EAAAtS,EAAAC,cAAA,OAAA6pB,EAAA,GA5Ba,CACjBpX,MAAO,IACP7C,OAAQ,KA0BJ,CAAwBu2B,KAAMR,EAAqBY,GAAaH,YAAaZ,EAAce,MAC1FR,GAKbH,EAAW39B,UAAY,CACnB9I,QAAS2C,IAAUoG,MAAM,IAAIlG,WAC7ByQ,MAAO3Q,IAAUoG,MAAM,IAAIlG,WAC3B4N,OAAQ9N,IAAUoG,MAAM,IAAIlG,WAC5B6jC,UAAW/jC,IAAUoG,MAAM,CAAE+9B,IAAKnkC,IAAUyvB,OAAQiV,MAAO1kC,IAAUyvB,SAAUvvB,YAGpEoO,kBAxEA,CACXq2B,SAAU,CACNz1B,OAAQ,UAER01B,UAAW,UAoEJt2B,CAAmBw1B,GCpDlC,MAAMe,UAAuBC,gBAOzBz3B,SACI,MAAMhQ,QACFA,EADEqP,IACOA,EADPiE,MACYA,EADZ7C,OACmBA,EADnB3R,MAC2BA,EAD3B4oC,UACkCA,GACpC54B,KAAKxP,OAEHqoC,SACFA,EADEzlC,IACQA,EADRlD,MACaA,EADb4oC,gBACoBA,GACtBF,EACJ,IAGIpW,EACAoV,EACAmB,EACAC,EANAC,EAAM14B,EACS,iBAARA,IAAkB04B,EAAM14B,EAAI3O,MAClCqnC,IAAKA,EAAM,WAKhB,MAAMC,EAAalpC,EAAMwT,OAAO6W,UAAU8e,YAG1C,GAAI/lC,GAAOylC,EACPG,EAAc5lC,OACX,GAAiB,QAAbmN,EAAIrI,KACX8gC,EAAchpC,EAAMwT,OAAO6W,UAAUqW,SAAS5N,SAC3C,CACHN,EAAQ4W,IAAcC,WAAW,GAAGC,MAAMh+B,OAC1C,MAAMi+B,GAAmBN,EAAIO,WAAW,GAAKP,EAAIO,WAAWP,EAAI39B,OAAS,IAAMknB,EAC/EwW,EAAcI,IAAcC,WAAW,GAAGC,MAAMC,GAAiBnnC,GAYrE,OARIwlC,EADa,QAAbr3B,EAAIrI,KACQlI,EAAMwT,OAAO6W,UAAUqW,SAASyI,YACV,iBAApBL,GAAgCI,EAAW59B,OAASw9B,EAEtDI,EAAWJ,GAGXI,EADZH,GAAyBE,EAAIO,WAAW,GAAKP,EAAIO,WAAWP,EAAI39B,OAAS,IAAM49B,EAAW59B,QAI1F8I,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQuoC,YAAan1B,MAAO,CAAEE,UAC1CJ,EAAAtS,EAAAC,cAAC6a,EAAA,EAAD,CAAMta,UAAWpB,EAAQ4xB,KAAMxe,MAAO,CAAE1N,SAAU+K,EAAQrR,YAAaqR,EAAS,EAAGzR,UAC9E8oC,GAEL50B,EAAAtS,EAAAC,cAAC2nC,EAAD,CAAYl1B,MAAOA,EAAO7C,OAAQA,EAAQi2B,UAAWA,MAMrEc,EAAe/kC,aAAe,CAC1BgO,OAAQ,IACR6C,MAAO,IACPo0B,UAAW,CACPC,SAAU,KACVzlC,IAAK,KACLlD,MAAO,GACP4oC,gBAAiB,OAIzBJ,EAAe1+B,UAAY,CACvB9I,QAAS2C,IAAUoG,MAAM,IAAIlG,WAC7B4N,OAAQ9N,IAAUyvB,OAClB9e,MAAO3Q,IAAUyvB,OACjBsV,UAAW/kC,IAAUoG,MAAM,IAC3BsG,IAAK1M,IAAUoG,MAAM,IAAIlG,WACzB4lC,aAAc9lC,IAAUoG,MAAM,IAAIlG,WAClC/D,MAAO6D,IAAUoG,MAAM,IAAIlG,YAGhBoO,kBA7FA,CACX2gB,KAAM,GACN2W,YAAa,CACTjjC,SAAU,WACV8xB,SAAU,CACN9xB,SAAU,WACVg9B,KAAM,SAuFgB,CAAE7vB,WAAW,GAAhCxB,CAAwCu2B,0UChEvD,MAAMkB,EAAYzU,OAAOhvB,KAAOgvB,OAAO0U,UACjCC,EAAiB,CACnB30B,OAAQ,cACRN,aAAc,MACd9B,OAAQ,UACRpB,OAAQ,GACR+C,QAAS,UACTlO,SAAU,WACV+M,UAAW,SACXiB,MAAO,OACP3R,OAAQ,UA2IZ,SAASknC,EAAWvpC,GAChB,OAAO4T,EAAAtS,EAAAC,cAACgQ,EAAA,EAADi4B,EAAA,CAAOznB,UAAU,MAAS/hB,IAMrC,MAAMsoB,WAAsBjZ,YAMxBC,YAAYtP,GACRuP,MAAMvP,GADSypC,EAAAj6B,KAAA,cAyDL,CAAC7K,EAAQwd,IAAS,KAC5B,GAAe,oBAAXxd,EACA6K,KAAKM,SAAS,CAAEuB,MAAM,SACnB,GAAe,sBAAX1M,EAAgC,CACvC,MAAMoL,IAAEA,GAAQP,KAAKxP,OACf0pC,YACFA,EADEC,mBACWA,EADXtB,SAC+BA,EAD/BuB,YACyCA,EADzCC,sBACsDA,EADtDxlC,KAC6EA,GAC/EmL,KAAKtK,MACT,IAAI4kC,EACJ,GAAoB,WAAhBJ,EAA0B,CAC1B,IAAK35B,EAAInO,KAAOyC,EAKZ,YAJAkM,IAAM3Q,MAAMuiB,EAAKsC,cAAc,CAC3B7iB,GAAI,kFACJC,eAAgB,2DAKxBioC,EAAUzlC,EAAK,OACZ,CACH,IAAKslC,IAAuBC,IAAgBC,EAKxC,YAJAt5B,IAAM3Q,MAAMuiB,EAAKsC,cAAc,CAC3B7iB,GAAI,2BACJC,eAAgB,8BAIxB,MAAMkoC,EAAc,CAChBnnC,IAAK+mC,EACLtB,WACA3oC,MAAOkqC,EACPtB,gBAAiBuB,GAEfG,EAAO,IAAIC,KAAK,CAACh/B,KAAKC,UAAU6+B,IAAe,CAAEriC,KAAM,qBAC7DoiC,EAAU,IAAII,KAAK,CAACF,GAAO,gBAAiB,CAAEtiC,KAAM,qBAGxD8H,KAAK26B,gBAAgBT,EAAa35B,EAAInO,GAAIkoC,EAAS3nB,MA9FxCsnB,EAAAj6B,KAAA,eAmGJ,CAACvI,EAAOyiC,KACnBl6B,KAAKM,SAAS,CAAE45B,kBApGDD,EAAAj6B,KAAA,wBAuGMpO,GAAU6F,IAC/BuI,KAAKM,SAAS,CAAE5F,CAAC9I,GAAO6F,EAAM/F,OAAOC,UAxGtBsoC,EAAAj6B,KAAA,aA2GLm6B,IACVn6B,KAAKM,SAAS,CAAE65B,yBA5GDF,EAAAj6B,KAAA,uBA+GKo6B,IACpBp6B,KAAKM,SAAS,CAAE85B,YAAaA,EAAYQ,QAhH1BX,EAAAj6B,KAAA,mBAmHCq6B,IAChBr6B,KAAKM,SAAS,CAAE+5B,4BAlHhBr6B,KAAKtK,MAAQ,CACTmM,MAAM,EACNhN,KAAM,KACNwlB,UAAW,KACX6f,YAAa,SACbrB,SAAUO,IAAcC,WAAW,GAAGznC,KACtCipC,aAAc,KACdV,mBAAoB,KACpBjqC,MAAO,KACPkqC,YAAa,KACbtB,gBAAiB,KACjBuB,sBAAuB,KACvBS,WAAW,EACXC,aAAa,GAEjB/6B,KAAKg7B,YAAch7B,KAAKg7B,YAAY96B,KAAKF,MACzCA,KAAKub,YAAcvb,KAAKub,YAAYrb,KAAKF,MAM7C6lB,oBACI7lB,KAAKi7B,YAGTnV,mBAAmBC,GAEX/lB,KAAKxP,MAAM0qC,cAAgBnV,EAAUmV,aACrCl7B,KAAKi7B,YAObjV,uBACQhmB,KAAKtK,MAAM2kB,WACXuf,EAAUuB,gBAAgBn7B,KAAKtK,MAAM2kB,WAS7C1lB,OAAOymC,GACHp7B,KAAKM,SAAS,CAAEzL,KAAMumC,IAyE1B7f,cACI,MAAM1mB,KAAEA,EAAFwmC,QAAQA,GAAYr7B,KAAKtK,MAC3Bb,GACA+kC,EAAUuB,gBAAgBE,GAE9Br7B,KAAKM,SAAUg7B,IAAD,CACVz5B,MAAM,EACNhN,KAAM,KACNulC,YAAakB,EAAOprC,MACpBmqC,sBAAuBiB,EAAOj5B,WAC9B83B,mBAAoBmB,EAAOT,gBAUnCF,gBAAgBT,EAAa/wB,EAAOtU,EAAM8d,GACtC3S,KAAKM,SAAS,CAAEw6B,WAAW,IAC3B,MACIv6B,KAAKE,QAAEA,EAAFrO,GAAWA,GADdmpC,eAEFA,GACAv7B,KAAKxP,OACiBiQ,IAAY+6B,IAAI96B,OAAOC,YAC3C,IAAIA,KAAaqsB,uBAAuB56B,EAAIyC,IAC5C,IAAI2mC,KAAMC,gBAAgBrpC,EAAIyC,IAG/BxD,KAAK,KACF0P,IAAM7L,KAAKyd,EAAKsC,cAAc,CAC1B7iB,GAAI,gFACJC,eAAgB,qCAEA,WAAhB6nC,EACAl6B,KAAKM,SAAS,CAAEuB,MAAM,EAAOwY,UAAWuf,EAAU8B,gBAAgB7mC,KAElEmL,KAAKM,SAAUg7B,IAAD,CACVz5B,MAAM,EACNwY,UAAWxlB,EAAKwmC,QAChBR,aAAcS,EAAOnB,mBACrBjqC,MAAOorC,EAAOlB,YACdtB,gBAAiBwC,EAAOjB,yBAGhCkB,MAEHjmC,MAAOlF,IAIJ2Q,IAAM3Q,MAAMuiB,EAAKsC,cAAc,CAC3B7iB,GAAI,8EACJC,eAAgB,uEAGvBmD,QAAQ,KACLwK,KAAKM,SAAS,CAAEw6B,WAAW,MASvCG,YACI,MACI16B,KAAKE,QAAEA,EAAFrO,GAAWA,EAAX8F,KAAeA,IACpB8H,KAAKxP,MACT,GAAa,QAAT0H,EAAgB,EACUuI,IAAY+6B,IAAI96B,OAAOC,YAC3C,IAAIA,KAAamsB,uBAAuB16B,IACxC,IAAIopC,KAAMG,gBAAgBvpC,IAEdf,KAAMC,IACpB,GAAIA,GAAYA,EAASgxB,KACrB,GAAyC,qBAArChxB,EAASysB,QAAQ,gBAAwC,CACzD,MAAM6d,EAAWngC,KAAKkN,MAAMrX,EAASgxB,MACrCtiB,KAAKM,SAAS,CACVu6B,aAAce,EAASxoC,IACvB+mC,mBAAoByB,EAASxoC,IAC7BylC,SAAU+C,EAAS/C,SACnB3oC,MAAO0rC,EAAS1rC,MAChBkqC,YAAawB,EAAS1rC,MACtB4oC,gBAAiB8C,EAAS9C,gBAC1BuB,sBAAuBuB,EAAS9C,gBAChCze,UAAW,YAEZ,GAAI/oB,GAAYA,EAASgxB,KAAK1pB,KAAO,EAAG,CAC3C,MAAMhD,EAAMgkC,EAAU8B,gBAAgBpqC,EAASgxB,MAC/CtiB,KAAKM,SAAS,CAAE+Z,UAAWzkB,OAGpCJ,QAAQ,KACPwK,KAAKM,SAAS,CAAEy6B,aAAa,OAKzCc,oBACI,MAAMhnC,KACFA,EADEqlC,YACIA,EADJC,mBACiBA,EADjBC,YACqCA,EADrCC,sBACkDA,EADlDS,UACyEA,GAC3E96B,KAAKtK,MACT,MAAoB,WAAhBwkC,IACSrlC,GAAQA,EAAK,KAAOimC,IAGpBX,GAAsBE,GAAyBD,IAAgBU,EAOhF55B,SACI,MAAMX,IACFA,EADErP,QACGA,EADHsT,MACYA,EADZ7C,OACmBA,EADnBm6B,WAC2BA,EAD3B9rC,MACuCA,EADvC2iB,KAC8CA,GAChD3S,KAAKxP,MACH0oC,EAAalpC,EAAMwT,OAAO6W,UAAU8e,aACpCtkC,KACFA,EADEwlB,UAEFA,EAFE6f,YAGFA,EAHEW,aAIFA,EAJEV,mBAKFA,EALEjqC,MAMFA,EANEkqC,YAOFA,EAPEtB,gBAQFA,EAREuB,sBASFA,EATES,UAUFA,EAVEC,YAWFA,GACA/6B,KAAKtK,MACT,IAAImjC,SAAEA,GAAa74B,KAAKtK,MACnBmjC,IAAUA,EAAWO,IAAcC,WAAW,GAAGznC,MACtD,IAOImqC,EAPA3jB,EAAe,GAkCnB,OAhCIA,EADA7X,EAAIE,QACWF,EAAIE,UAAY+6B,IAAI96B,OAAOC,WAA3B,iBAAAjI,OACQ6H,EAAInO,GADZ,sBAAAsG,OACqC6H,EAAInO,GADzC,aAGH,SAAAsG,OAAY6H,EAAI8X,QAAhB,eAAA3f,OAAqC6H,EAAInO,GAAzC,YAWZ2pC,EARChB,EAOM1gB,EACAjW,EAAAtS,EAAAC,cAAA,OAAK4P,OAAQA,EAAQ6C,MAAOA,EAAOqU,IAAKwB,EAAW2hB,IAAI,gBAAgB1pC,UAAWpB,EAAQ+qC,QAG7F73B,EAAAtS,EAAAC,cAACmqC,EAAD,CACI13B,MAAOA,EACP7C,OAAQA,EACRpB,IAAKA,EACLq4B,UAAW,CACPxlC,IAAKynC,EACL3qC,QACA4oC,kBACAD,WACAt4B,SAlBR6D,EAAAtS,EAAAC,cAAA,OAAKO,UAAU,oBACX8R,EAAAtS,EAAAC,cAAA,OAAKO,UAAU,0BACf8R,EAAAtS,EAAAC,cAAA,OAAKO,UAAU,2BAuBvB8R,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACK2pC,EACG13B,EAAAtS,EAAAC,cAACoqC,EAAA,EAAD,CACIC,aAAW,EACX9pC,UAAWpB,EAAQmrC,MACnBrjC,QAASgH,KAAKg7B,YAAY,kBAAmBroB,IAE5CopB,EACD33B,EAAAtS,EAAAC,cAAA,QAAMO,UAAWpB,EAAQorC,gBACzBl4B,EAAAtS,EAAAC,cAAA,QAAMO,UAAWpB,EAAQqrC,aACrBn4B,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAYvV,UAAU,OAAOtE,QAAQ,YAAY5C,MAAM,WACnDkU,EAAAtS,EAAAC,cAACyqC,EAAA1qC,EAAD,SAKZsS,EAAAtS,EAAAC,cAACmjB,EAAA,EAAD,CAAM5iB,UAAWpB,EAAQurC,mBAAoBtnB,GAAIiD,GAC5C2jB,GAIT33B,EAAAtS,EAAAC,cAAC2qC,EAAA,EAAD,CACIC,oBAAqB5C,EACrB6C,kBAAgB,qBAChBC,sBAAoB,EACpBh7B,KAAM7B,KAAKtK,MAAMmM,KACjB/J,QAASkI,KAAKub,YACdvpB,UAAU,OACVgoB,SAAS,KACT8iB,YAAU,GAEV14B,EAAAtS,EAAAC,cAACka,EAAA,EAAD,CAAO0nB,QAAM,EAACrhC,UAAWpB,EAAQ6rC,aAC7B34B,EAAAtS,EAAAC,cAACub,EAAA,EAAD,CAAYpd,MAAM,UAAU8I,QAASgH,KAAKub,YAAa/jB,aAAW,SAC9D4M,EAAAtS,EAAAC,cAAC6a,EAAA,EAAD,eAEJxI,EAAAtS,EAAAC,cAACirC,EAAA,EAAD,CACIxlC,aAAW,eACX5F,KAAK,eACLU,UAAWpB,EAAQ+rC,MACnBtrC,MAAOqO,KAAKtK,MAAMwkC,YAClBzpC,SAAUuP,KAAKk9B,cAEf94B,EAAAtS,EAAAC,cAACorC,EAAA,EAAD,CACIxrC,MAAM,SACNgG,QAASyM,EAAAtS,EAAAC,cAACqrC,EAAA,EAAD,CAAOltC,MAAM,YACtBgC,MACIkS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,8DACHC,eAAe,aAI3B+R,EAAAtS,EAAAC,cAACorC,EAAA,EAAD,CACIxrC,MAAM,SACNgG,QAASyM,EAAAtS,EAAAC,cAACqrC,EAAA,EAAD,CAAOltC,MAAM,YACtBgC,MACIkS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,8DACHC,eAAe,eAOnC+R,EAAAtS,EAAAC,cAACsrC,EAAA,EAAD,KACqB,WAAhBnD,GACG91B,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACxG,QAAS,GACrB6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,GACXmN,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQosC,gBACpBl5B,EAAAtS,EAAAC,cAAA,OACIO,UAAWpB,EAAQmqC,QACnBxiB,IACIhkB,GAAQA,EAAKyG,OAAS,EAChBs+B,EAAU8B,gBAAgB7mC,EAAK,IAC/B0oC,IAAeC,IAAI9wB,QACjB,0CAEZsvB,IAAI,wBAIhB53B,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,GACXmN,EAAAtS,EAAAC,cAAC0rC,EAAA,EAAD,CACI7sC,UAAU,EACVuI,OAAO,UACP7G,UAAWpB,EAAQwsC,SACnBC,gBAAiBzsC,EAAQ0sC,WACzBC,gBAAiB3sC,EAAQ4sC,WACzBnpC,OAASopC,IACL/9B,KAAKrL,OAAOopC,KAGftsC,IAAA,IAACusC,aAAEA,EAAFC,cAAgBA,GAAjBxsC,EAAA,OACG2S,EAAAtS,EAAAC,cAAA,MAASisC,EAAa,CAAE15B,MAAOw1B,IAC3B11B,EAAAtS,EAAAC,cAAA,QAAWksC,KACX75B,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQgtC,iBACpB95B,EAAAtS,EAAAC,cAAC6a,EAAA,EAAD,CAAMta,UAAWpB,EAAQitC,UAAzB,gBACA/5B,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,KACIvI,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,eACHC,eAAe,8CAUlC,WAAhB6nC,GACG91B,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAMhV,WAAS,EAACxG,QAAS,GACrB6T,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,EAAG3E,UAAWpB,EAAQktC,iBACjCh6B,EAAAtS,EAAAC,cAACmqC,EAAD,CACI13B,MAAOA,EACP7C,OAAQA,EACRpB,IAAKA,EACLq4B,UAAW,CACPxlC,IAAK+mC,EACLjqC,MAAOkqC,EACPtB,gBAAiBuB,EACjBxB,WACAt4B,UAIZ6D,EAAAtS,EAAAC,cAACga,EAAA,EAAD,CAAM/U,MAAI,EAACC,GAAI,GACXmN,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQmtC,iBACpBj6B,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAYvV,UAAU,IAAItE,QAAQ,YAAYR,UAAWpB,EAAQotC,UAC7Dl6B,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GACI,uEAGJC,eAAe,qBAGvB+R,EAAAtS,EAAAC,cAACwsC,EAAA,EAAD,CACIC,QAAM,EACN7sC,MAAOqO,KAAKtK,MAAMmjC,SAClBpoC,SAAUuP,KAAKy+B,sBAAsB,aAEpCrF,IAAcC,WAAWrmC,IAAK0rC,GAC3Bt6B,EAAAtS,EAAAC,cAAA,UAAQJ,MAAO+sC,EAAI9sC,MAAO8sC,EAAI9sC,SAI1CwS,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAYvV,UAAU,IAAItE,QAAQ,QAAQR,UAAWpB,EAAQK,MACzD6S,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,sEACHC,eAAe,0DAGvB+R,EAAAtS,EAAAC,cAAA,OAAKuS,MAAO,CAAEjC,WAAY,UAAWs8B,UAAW,IAAKpwB,SAAU,WA3dnG,SAA0BsqB,GACtB,IAAK,IAAIprB,EAAI,EAAGA,EAAI2rB,IAAcC,WAAW/9B,OAAQmS,IACjD,GAAI2rB,IAAcC,WAAW5rB,GAAG7b,OAASinC,EACrC,OAAOO,IAAcC,WAAW5rB,GAAG6rB,MAydNsF,CAAiB/F,GAAU7lC,IAAK8vB,GAC7B1e,EAAAtS,EAAAC,cAAC6a,EAAA,EAAD,CAAMta,UAAWpB,EAAQ2tC,SAAU7lC,QAAS,IAAMgH,KAAK8+B,WAAWhc,EAAK1wB,KAClE0wB,EAAK1wB,MAIlBgS,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQmtC,iBACpBj6B,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAYvV,UAAU,IAAItE,QAAQ,YAAYR,UAAWpB,EAAQotC,UAC7Dl6B,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GACI,iFAGJC,eAAe,kCAI3B+R,EAAAtS,EAAAC,cAACgtC,EAAA,aAAD,CACI7uC,MAAO8P,KAAKtK,MAAMxF,OAAS,UAC3B8uC,iBAAkBh/B,KAAKi/B,uBAE3B76B,EAAAtS,EAAAC,cAAA,OAAKO,UAAWpB,EAAQmtC,iBACpBj6B,EAAAtS,EAAAC,cAAC4a,EAAA,EAAD,CAAYvV,UAAU,IAAItE,QAAQ,YAAYR,UAAWpB,EAAQotC,UAC7Dl6B,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GACI,yEAGJC,eAAe,0BAI1B6mC,EAAWlmC,IAAI,CAAC4kC,EAAWrmB,IACxBnN,EAAAtS,EAAAC,cAAA,OACIO,UAAWpB,EAAQguC,oBACnBlmC,QAAS,IAAMgH,KAAKm/B,iBAAiB5tB,GACrC3P,UAAW,QAEXwC,EAAAtS,EAAAC,cAAC2nC,EAAD,CAAYl1B,MAAO,IAAK7C,OAAQ,IAAKi2B,UAAWA,SAOxExzB,EAAAtS,EAAAC,cAACqtC,EAAA,EAAD,CAAe9sC,UAAWpB,EAAQmuC,WAC9Bj7B,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CACI3a,SAAUiG,KAAK67B,oBACf/oC,QAAQ,YACR5C,MAAM,UACN0I,KAAK,QACLI,QAASgH,KAAKg7B,YAAY,oBAAqBroB,IAE9B,WAAhBunB,GAA4BY,GACzB12B,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,kEACHC,eAAe,WAEnB+R,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkB1Z,KAAM,MAGf,WAAhBshC,IAA6BY,GAC1B12B,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,gEACHC,eAAe,SAIN,WAAhB6nC,GAA4BY,GACzB12B,EAAAtS,EAAAC,cAAAqS,EAAAtS,EAAAK,SAAA,KACIiS,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,qEACHC,eAAe,cAEnB+R,EAAAtS,EAAAC,cAACugB,EAAA,EAAD,CAAkB1Z,KAAM,MAGf,WAAhBshC,IAA6BY,GAC1B12B,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,kEACHC,eAAe,YAK3B+R,EAAAtS,EAAAC,cAAC2iB,EAAA,EAAD,CAAQ5hB,QAAQ,YAAY8F,KAAK,QAAQI,QAASgH,KAAKub,aACnDnX,EAAAtS,EAAAC,cAACia,EAAA,EAAD,CACI5Z,GAAG,kEACHC,eAAe,gBAU/CymB,GAAcnlB,aAAe,CACzBgO,OAAQ,IACR6C,MAAO,IACPs3B,YAAY,GAGhBhjB,GAAc9e,UAAY,CACtBuG,IAAK1M,IAAUoG,MAAM,IAAIlG,WACzB7C,QAAS2C,IAAUoG,MAAM,IAAIlG,WAC7B4N,OAAQ9N,IAAUyvB,OAClB9e,MAAO3Q,IAAUyvB,OACjBwY,WAAYjoC,IAAUC,KACtB6e,KAAM9e,IAAUoG,MAAM,IAAIlG,WAC1B/D,MAAO6D,IAAUoG,MAAM,IAAIlG,WAC3BmnC,YAAarnC,IAAUyvB,OAAOvvB,WAC9BwnC,eAAgB1nC,IAAUsG,KAAKpG,YAGpBqhB,gBAAW0U,YAAQ3nB,YA7sBlBnS,IAAD,CACX4tC,WAAY,CACRr5B,gBAAiBsK,IAAM,KAE3B6uB,SAAU,CACNv4B,OAAQ,cAAgBnV,EAAMG,QAAQqD,QAAQnD,KAC9CwU,aAAc,MACd9B,OAAQ,UACRpB,OAAQ,qBACR+C,QAAO,GAAAhM,OAAK1I,EAAMO,QAAQ,GAAnB,UACPiG,SAAU,WACV+M,UAAW,SACXiB,MAAO,OACP3R,OAAQ,UAEZqrC,gBAAiB,CACbv8B,OAAQ,OACRe,QAAS,OACTC,WAAY,SACZS,eAAgB,SAChBklB,SAAU,CACN1xB,SAAU,IACV1G,MAAOF,EAAMG,QAAQqD,QAAQnD,OAGrC4rC,MAAO,CAEHxD,UAAW,SAEf4C,QAAS,CACL15B,OAAQ3R,EAAMO,QAAQ,KAE1ButC,WAAY,CACRv5B,gBAAiB+6B,IAAI,KAEzB7C,mBAAoB,CAChB55B,eAAgB,OAChB3S,MAAOF,EAAMG,QAAQmY,KAAKvO,UAE9BsiC,MAAO,CACH/I,UAAW,CACP7W,OAAQ,EACR8iB,mBAAoB,CAChBC,QAAS,MAIrBlD,cAAe,CACX9lC,SAAU,WACVg9B,KAAM,EACNiM,MAAO,EACPlM,IAAK,EACL1Y,OAAQ,EACRtW,gBAAiBvU,EAAMG,QAAQsV,OAAOi6B,MACtCF,QAAS,IAEbjD,YAAa,CACT/lC,SAAU,WACVg9B,KAAM,EACNiM,MAAO,EACPlM,IAAK,EACL1Y,OAAQ,EACRnY,QAAS,OACTC,WAAY,SACZS,eAAgB,SAChBlT,MAAOF,EAAMG,QAAQsV,OAAOC,OAEhCu3B,MAAO,CACHv6B,QAAS,OACTY,cAAe,MACfoB,QAAS,cAEbq4B,YAAa,CACTr6B,QAAS,OACTY,cAAe,OAEnBu7B,SAAU,CACNr6B,MAAO,GACP3R,OAAQ,GACRkQ,OAAQ,WAEZu7B,SAAU,CACNr5B,YAAa,IAEjBo5B,gBAAiB,CACb37B,QAAS,OACTY,cAAe,MACfX,WAAY,SACZgC,UAAW,GACX6e,aAAc,IAElBjyB,KAAM,CACFiyB,aAAc,IAElB4a,gBAAiB,CACbuB,UAAW,CACPnpC,SAAU,QACVmO,UAAW,KAGnBu6B,oBAAqB,CACjBn8B,OAAQ,UACRkC,YAAa,GACbvC,QAAS,eACTyC,OAAQ,kBAEZk6B,UAAW,CACPrb,UACI,uGACJ5gB,eAAgB,aAChBsB,QAAS,oBAEb44B,eAAgB,CACZlb,WAAY,MA4lBiC,CAAEze,WAAW,GAAhCxB,CAAwC2W,ksBCjvBnE,SAASngB,EAAcinC,GAAwB,IAAZC,EAAYxkC,UAAAC,OAAA,QAAA5E,IAAA2E,UAAA,IAAAA,UAAA,GAC9CykC,EAAQF,EACZ,MAAMG,EAASF,EAAK,IAAO,KAC3B,GAAIG,KAAKC,IAAIH,GAASC,EAClB,OAAOD,EAAQ,KAEnB,MAAMI,EAAQL,EACR,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxD,IAAIM,GAAK,EACT,GACIL,GAASC,IACPI,QACGH,KAAKC,IAAIH,IAAUC,GAAUI,EAAID,EAAM5kC,OAAS,GACzD,OAAOwkC,EAAMM,QAAQ,GAAK,IAAMF,EAAMC,GAG1C,MAAME,EAAY,CACdl9B,KAAM,EACNT,QAAS,OACTY,cAAe,SACfX,WAAY,SACZ+B,QAAS,aACT47B,YAAa,EACbz7B,aAAc,EACd07B,YAAa,UACbC,YAAa,SACbj8B,gBAAiB,UACjBrU,MAAO,UACPuwC,QAAS,OACT3+B,WAAY,2BAGV4+B,EAAc,CAChBH,YAAa,WAGXI,EAAc,CAChBJ,YAAa,WAGXK,EAAc,CAChBL,YAAa,WASF,SAASM,EAAcrwC,GAClC,MAAM6E,QACFA,EADEV,OACOA,EADPvE,MACeA,EADf4d,SACsBA,EADtB7U,OACgCA,GAClC3I,EACEswC,EAAiBC,YAAY,CAAEpsC,YAC/BqpC,aACFA,EADEC,cACYA,EADZ+C,aAC2BA,EAD3BC,aACyCA,EADzCC,aACuDA,GACzDJ,EAEEx8B,EAAQ68B,kBACV,iVAAA/rC,CAAA,GACOirC,EADP,GAEQW,EAAeN,EAAc,GAFrC,GAGQO,EAAeN,EAAc,GAHrC,GAIQO,EAAeN,EAAc,IAErC,CAACI,EAAcE,EAAc9wC,IAI3BgxC,EAAkB,CACpBn+B,WAHUY,cAGQX,WAAWD,WAC7BM,UAAW,UAGf,OACIrU,EAAA4C,EAAAC,cAAA,WAASO,UAAU,YAAYgS,MAAO88B,GAClClyC,EAAA4C,EAAAC,cAAA,MAASisC,EAAa,CAAE15B,UACpBpV,EAAA4C,EAAAC,cAAA,QAAA6pB,EAAA,GAAWqiB,IAAX,CAA4BrtC,UAAU,EAAOuI,OAAQA,KACpD6U,GAAY9e,EAAA4C,EAAAC,cAAA,SAAIsD,KAKjCwrC,EAAcltC,aAAe,CACzB0B,QAAS,0DACTV,OAAQ,OACR0sC,eAAe,EACfrzB,SAAU,KACV5d,OAAO,EACP+I,OAAQ,KAEZ0nC,EAAc7mC,UAAY,CACtB3E,QAASxB,IAAUqG,OACnBvF,OAAQd,IAAUsG,KAClBhB,OAAQtF,IAAUqG,OAClBmnC,cAAextC,IAAUC,KACzBka,SAAUna,IAAUqpB,UAAU,CAACrpB,IAAUqa,QAASra,IAAUspB,QAC5D/sB,MAAOyD,IAAUqpB,UAAU,CAACrpB,IAAUC,KAAMD,IAAUoG,MAAM","file":"DeferredAPIs.bundle.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n}));\n\n/**\n * Trottling Policies dropdown selector used in minimized API Create form\n * @export\n * @param {*} props\n * @returns {React.Component}\n */\nexport default function SelectPolicies(props) {\n    const {\n        onChange, policies: selectedPolicies, multiple, helperText, isAPIProduct, validate,\n    } = props;\n    const [policies, setPolicies] = useState({});\n    const classes = useStyles();\n    useEffect(() => {\n        API.policies('subscription').then((response) => setPolicies(response.body));\n    }, []);\n    const handleValidateAndChange = ({ target: { value, name } }) => {\n        validate('policies', value);\n        onChange({ target: { name, value } });\n    };\n    if (!policies.list) {\n        return <CircularProgress />;\n    } else {\n        return (\n            <TextField\n                fullWidth\n                select\n                label={(\n                    <>\n                        <FormattedMessage\n                            id='Apis.Create.Components.SelectPolicies.business.plans'\n                            defaultMessage='Business plan(s)'\n                        />\n                        {isAPIProduct && (<sup className={classes.mandatoryStar}>*</sup>)}\n                    </>\n                )}\n                value={selectedPolicies}\n                name='policies'\n                onChange={handleValidateAndChange}\n                SelectProps={{\n                    multiple,\n                    renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                }}\n                helperText={isAPIProduct ? helperText + 'API Product' : helperText + 'API'}\n                margin='normal'\n                variant='outlined'\n                InputProps={{\n                    id: 'itest-id-apipolicies-input',\n                }}\n            >\n                {policies.list.map((policy) => (\n                    <MenuItem\n                        dense\n                        disableGutters={multiple}\n                        id={policy.name}\n                        key={policy.name}\n                        value={policy.displayName}\n                    >\n                        {multiple && <Checkbox color='primary' checked={selectedPolicies.includes(policy.name)} />}\n                        <ListItemText primary={policy.displayName} secondary={policy.description} />\n                    </MenuItem>\n                ))}\n            </TextField>\n        );\n    }\n}\n\nSelectPolicies.defaultProps = {\n    policies: [],\n    multiple: true,\n    required: false,\n    isAPIProduct: PropTypes.bool.isRequired,\n    helperText: 'Select one or more throttling policies for the ',\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport Banner from 'AppComponents/Shared/Banner';\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using OpenAPI UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using OpenAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideOpenAPI(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const { inputType, inputValue } = apiInputs;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({});\n    const [isValidating, setIsValidating] = useState(false);\n\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one OpenAPI file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateOpenAPIByFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, info },\n                } = response;\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    setValidity({ ...isValid, file: { message: 'OpenAPI content validation failed!' } });\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'OpenAPI content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: validFile });\n            });\n    }\n\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object returned from Joi `.validate()` method\n     */\n    function validateURL(value) {\n        const state = APIValidation.url.required().validate(value).error;\n        // State `null` means URL is valid, We do backend validation only in valid URLs\n        if (state === null) {\n            setIsValidating(true);\n            API.validateOpenAPIByUrl(apiInputs.inputValue, { returnContent: true }).then((response) => {\n                const {\n                    body: { isValid: isValidURL, info, content },\n                } = response;\n                if (isValidURL) {\n                    info.content = content;\n                    inputsDispatcher({ action: 'preSetAPI', value: info });\n                    setValidity({ ...isValid, url: null });\n                } else {\n                    setValidity({ ...isValid, url: { message: 'OpenAPI content validation failed!' } });\n                }\n                onValidate(isValidURL);\n                setIsValidating(false);\n            });\n            // Valid URL string\n            // TODO: Handle catch network or api call failures ~tmkb\n        } else {\n            setValidity({ ...isValid, url: state });\n            onValidate(false);\n        }\n    }\n\n    useEffect(() => {\n        if (inputValue) {\n            if (inputType === ProvideOpenAPI.INPUT_TYPES.FILE) {\n                onDrop([inputValue]);\n            } else if (inputType === ProvideOpenAPI.INPUT_TYPES.URL) {\n                validateURL(inputValue);\n            }\n        }\n    }, [inputType, inputValue]);\n\n    // TODO: Use validation + input to separate component that can be share with wsdl,swagger,graphql URL inputs ~tmkb\n    const isInvalidURL = Boolean(isValid.url);\n    let urlStateEndAdornment = null;\n    if (isValidating) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CircularProgress />\n            </InputAdornment>\n        );\n    } else if (isValid.url !== undefined) {\n        if (isInvalidURL) {\n            urlStateEndAdornment = (\n                <InputAdornment position='end'>\n                    <ErrorOutlineIcon fontSize='large' color='error' />\n                </InputAdornment>\n            );\n        } else {\n            urlStateEndAdornment = (\n                <InputAdornment position='end'>\n                    <CheckIcon fontSize='large' color='primary' />\n                </InputAdornment>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Grid container spacing={5}>\n                <Grid item xs={12} md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <>\n                                <sup className={classes.mandatoryStar}>*</sup>\n                                {' '}\n                                <FormattedMessage\n                                    id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.type'\n                                    defaultMessage='Input Type'\n                                />\n                            </>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input type'\n                            value={apiInputs.inputType}\n                            onChange={(event) => inputsDispatcher({ action: 'inputType', value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                value={ProvideOpenAPI.INPUT_TYPES.URL}\n                                control={<Radio color='primary' />}\n                                label='OpenAPI URL'\n                            />\n                            <FormControlLabel\n                                value={ProvideOpenAPI.INPUT_TYPES.FILE}\n                                control={<Radio color='primary' />}\n                                label='OpenAPI File'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                {isValid.file\n                    && (\n                        <Grid item md={11}>\n                            <Banner\n                                onClose={() => setValidity({ file: null })}\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='error'\n                                message={isValid.file.message}\n                            />\n                        </Grid>\n                    )}\n                <Grid item xs={10} md={11}>\n                    {isFileInput ? (\n                        <>\n                            {apiInputs.inputValue ? (\n                                <List>\n                                    <ListItem key={apiInputs.inputValue.path}>\n                                        <ListItemAvatar>\n                                            <Avatar>\n                                                <InsertDriveFile />\n                                            </Avatar>\n                                        </ListItemAvatar>\n                                        <ListItemText\n                                            primary={`${apiInputs.inputValue.path} -\n                                    ${humanFileSize(apiInputs.inputValue.size)}`}\n                                        />\n                                        <ListItemSecondaryAction>\n                                            <IconButton\n                                                edge='end'\n                                                aria-label='delete'\n                                                onClick={() => {\n                                                    inputsDispatcher({ action: 'inputValue', value: null });\n                                                    inputsDispatcher({ action: 'isFormValid', value: false });\n                                                }}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            ) : (\n                                <DropZoneLocal\n                                    error={isValid.file}\n                                    onDrop={onDrop}\n                                    files={apiInputs.inputValue}\n                                    accept='.json,application/json,.yaml'\n                                >\n                                    {isValidating ? (<CircularProgress />)\n                                        : ([\n                                            <FormattedMessage\n                                                id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.file.dropzone'\n                                                defaultMessage='Drag & Drop files here {break} or {break} Browse files'\n                                                values={{ break: <br /> }}\n                                            />,\n                                            <Button\n                                                color='primary'\n                                                variant='contained'\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Create.OpenAPI.Steps.ProvideOpenAPI.Input.file.upload'\n                                                    defaultMessage='Browse File to Upload'\n                                                />\n                                            </Button>,\n                                        ]\n                                        )}\n                                </DropZoneLocal>\n                            )}\n                        </>\n                    ) : (\n                        <TextField\n                            autoFocus\n                            id='outlined-full-width'\n                            label='OpenAPI URL'\n                            placeholder='Enter OpenAPI URL'\n                            fullWidth\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                            value={apiInputs.inputValue}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    validateURL(value);\n                                },\n                                endAdornment: urlStateEndAdornment,\n                            }}\n                            // 'Give the URL of OpenAPI endpoint'\n                            helperText={(isValid.url && isValid.url.message) || 'Click away to validate the URL'}\n                            error={isInvalidURL}\n                            disabled={isValidating}\n                        />\n                    )}\n                </Grid>\n                <Grid item xs={2} md={5} />\n            </Grid>\n        </>\n    );\n}\n\nProvideOpenAPI.defaultProps = {\n    onValidate: () => { },\n};\nProvideOpenAPI.INPUT_TYPES = {\n    URL: 'url',\n    FILE: 'file',\n};\nProvideOpenAPI.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n        inputValue: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport API from 'AppData/api';\n\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of a Scopes\n */\nclass Wsdl extends Resource {\n    /**\n     * Validate a WSDL file or an archive\n     *\n     * @static\n     * @param {*} file WSDL file or archive\n     * @returns {*} WSDL validation response\n     * @memberof Wsdl\n     */\n    static validateFileOrArchive(file) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then((client) => {\n            return client.apis.Validation.validateWSDLDefinition({ file });\n        });\n    }\n\n    /**\n     * Validate a WSDL URL\n     *\n     * @static\n     * @param {*} url WSDL URL\n     * @returns {*} WSDL validation response\n     * @memberof Wsdl\n     */\n    static validateUrl(url) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then((client) => {\n            return client.apis.Validation.validateWSDLDefinition({ url });\n        });\n    }\n\n    /**\n     * Importing a WSDL and creating an API by a .wsdl file or a WSDL archive zip file\n     *\n     * @static\n     * @param {*} url WSDL url\n     * @param {*} additionalProperties additional properties of the API eg: name, version, context\n     * @param {*} implementationType SOAPTOREST or SOAP\n     * @returns {API} API object which was created\n     * @memberof Wsdl\n     */\n    static importByUrl(url, additionalProperties, implementationType = 'SOAP') {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then((client) => {\n            const promisedResponse = client.apis.APIs.importWSDLDefinition({\n                url,\n                additionalProperties: JSON.stringify(additionalProperties),\n                implementationType,\n            });\n\n            return promisedResponse.then((response) => new API(response.body));\n        });\n    }\n\n    /**\n     * Importing a WSDL and creating an API by a .wsdl file or a WSDL archive zip file\n     *\n     * @static\n     * @param {*} file WSDL file or archive\n     * @param {*} additionalProperties additional properties of the API eg: name, version, context\n     * @param {*} implementationType SOAPTOREST or SOAP\n     * @returns {API} API object which was created\n     * @memberof Wsdl\n     */\n    static importByFileOrArchive(file, additionalProperties, implementationType = 'SOAP') {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient.then((client) => {\n            const promisedResponse = client.apis.APIs.importWSDLDefinition({\n                file,\n                additionalProperties: JSON.stringify(additionalProperties),\n                implementationType,\n            });\n\n            return promisedResponse.then((response) => new API(response.body));\n        });\n    }\n}\n\nexport default Wsdl;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport APIValidation from 'AppData/APIValidation';\nimport Wsdl from 'AppData/Wsdl';\nimport Banner from 'AppComponents/Shared/Banner';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using WSDL UI, This is handling the taking input of WSDL file or URL from the user\n * In the create API using WSDL wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideWSDL(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const isFileInput = apiInputs.inputType === 'file';\n    const isGenerateRESTAPI = apiInputs.type === 'SOAPTOREST';\n    const classes = useStyles();\n    const [isError, setValidity] = useState(); // If valid value is `null` else an error object will be there\n    const [isValidating, setIsValidating] = useState(false);\n    const isCreateMode = apiInputs.mode === 'create';\n\n    /**\n     * Handles WSDL validation response and returns the state.\n     *\n     * @param {*} response WSDL validation response\n     * @param {string} type of the input; file or url\n     * @returns {boolean} validation status\n     */\n    function handleWSDLValidationResponse(response, type) {\n        const isWSDLValid = response.body.isValid;\n        let success = false;\n        if (isWSDLValid) {\n            if (type === 'file') {\n                setValidity({ ...isError, file: null });\n            } else {\n                setValidity({ ...isError, url: null });\n            }\n            success = true;\n        } else if (type === 'file') {\n            setValidity({ ...isError, file: { message: 'WSDL content validation failed!' } });\n        } else {\n            setValidity({ ...isError, url: { message: 'Invalid WSDL URL!' } });\n        }\n        onValidate(isWSDLValid);\n        setIsValidating(false);\n        return success;\n    }\n\n    /**\n     * Handles WSDL validation error response.\n     *\n     * @param error {*} error object\n     * @param type {string} file/url type\n     */\n    function handleWSDLValidationErrorResponse(error, type) {\n        let message = 'Error occurred during validation';\n        if (error.response && error.response.body.description) {\n            message = error.response.body.description;\n        }\n        if (type === 'file') {\n            setValidity({ ...isError, file: { message } });\n        } else {\n            setValidity({ ...isError, url: { message } });\n        }\n        setIsValidating(false);\n    }\n\n    /**\n     * Trigger the onValidate call back after validating WSDL url from the state.\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {Object} state Validation state object\n     */\n    function validateUrl(state) {\n        if (state === null) {\n            setIsValidating(true);\n            Wsdl.validateUrl(apiInputs.inputValue).then((response) => {\n                handleWSDLValidationResponse(response, 'url');\n            }).catch((error) => {\n                handleWSDLValidationErrorResponse(error, 'url');\n            });\n        } else {\n            setValidity({ ...isError, url: state });\n            onValidate(false);\n        }\n    }\n\n    /**\n     * Trigger the provided onValidate callback after validating the provided WSDL file.\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {*} file WSDL file or archive\n     * @param {Object} state Validation state object\n     */\n    function validateFileOrArchive(file, state = null) {\n        if (state === null) {\n            setIsValidating(true);\n            Wsdl.validateFileOrArchive(file).then((response) => {\n                if (handleWSDLValidationResponse(response, 'file')) {\n                    inputsDispatcher({ action: 'inputValue', value: file });\n                }\n            }).catch((error) => {\n                handleWSDLValidationErrorResponse(error, 'file');\n            });\n        } else {\n            setValidity({ ...isError, file: state });\n            onValidate(false);\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        // Why `files[0]` below is , We only handle one wsdl file at a time, So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        validateFileOrArchive(files[0]);\n    }\n\n    /**\n     *  Render uploaded WSDL schema list\n     */\n    function renderUploadedList() {\n        return (\n            <List>\n                <ListItem key={apiInputs.inputValue.path}>\n                    <ListItemAvatar>\n                        <Avatar>\n                            <InsertDriveFile />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={`${apiInputs.inputValue.path} - ${humanFileSize(apiInputs.inputValue.size)}`}\n                    />\n                    <ListItemSecondaryAction>\n                        <IconButton\n                            edge='end'\n                            aria-label='delete'\n                            onClick={() => {\n                                inputsDispatcher({ action: 'inputValue', value: null });\n                                inputsDispatcher({ action: 'isFormValid', value: false });\n                            }}\n                        >\n                            <DeleteIcon />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </List>\n        );\n    }\n\n    const dropBoxControlLabel = isGenerateRESTAPI ? (\n        <FormattedMessage\n            id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.dropzone'\n            defaultMessage='Drag & Drop WSDL file {break} -or-'\n            values={{ break: <br /> }}\n        />\n    ) : (\n        <FormattedMessage\n            id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.archive.dropzone'\n            defaultMessage='Drag & Drop WSDL file/archive {break} -or-'\n            values={{ break: <br /> }}\n        />\n    );\n\n    /**\n     * Render file upload UI.\n     *\n     */\n    function renderFileUpload() {\n        if (apiInputs.inputValue) {\n            return renderUploadedList();\n        }\n        // TODO: Pass message saying accepting only one file ~tmkb\n        return (\n            <DropZoneLocal\n                error={isError && isError.file}\n                onDrop={onDrop}\n                files={apiInputs.inputValue}\n                accept='.bz,.bz2,.gz,.rar,.tar,.zip,.7z,.wsdl'\n            >\n                {isValidating ? (<CircularProgress />)\n                    : (\n                        <>\n                            { dropBoxControlLabel }\n                            <Button\n                                color='primary'\n                                variant='contained'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.file.upload'\n                                    defaultMessage='Browse File to Upload'\n                                />\n                            </Button>\n                        </>\n                    )}\n            </DropZoneLocal>\n        );\n    }\n\n    let urlStateEndAdornment = null;\n    if (isValidating) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CircularProgress />\n            </InputAdornment>\n        );\n    } else if (isError && isError.url) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <ErrorOutlineIcon fontSize='large' color='error' />\n            </InputAdornment>\n        );\n    } else if (isError && !isError.url) {\n        urlStateEndAdornment = (\n            <InputAdornment position='end'>\n                <CheckIcon fontSize='large' color='primary' />\n            </InputAdornment>\n        );\n    }\n\n    return (\n        <>\n            <Grid container spacing={5}>\n                {isCreateMode\n                && (\n                    <Grid item md={12}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>\n                                <>\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                    {' '}\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.implementation.type'\n                                        defaultMessage='Implementation Type'\n                                    />\n                                </>\n                            </FormLabel>\n                            <RadioGroup\n                                aria-label='Implementation type'\n                                value={apiInputs.type ? apiInputs.type : 'SOAP'}\n                                onChange={\n                                    (event) => {\n                                        inputsDispatcher({ action: 'type', value: event.target.value });\n                                        inputsDispatcher({ action: 'isFormValid', value: false });\n                                        inputsDispatcher({ action: 'inputValue', value: null });\n                                        inputsDispatcher({ action: 'inputType', value: 'url' });\n                                    }\n                                }\n                            >\n                                <FormControlLabel\n                                    value='SOAP'\n                                    control={<Radio color='primary' />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Create.WSDL.Steps.ProvideWSDL.passthrough.label'\n                                            defaultMessage='Pass Through'\n                                        />\n                                    )}\n                                />\n                                <FormControlLabel\n                                    value='SOAPTOREST'\n                                    control={<Radio color='primary' />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Create.WSDL.Steps.ProvideWSDL.SOAPtoREST.label'\n                                            defaultMessage='Generate REST APIs'\n                                        />\n                                    )}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n                )}\n                <Grid item md={12}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>\n                            <>\n                                <sup className={classes.mandatoryStar}>*</sup>\n                                {' '}\n                                <FormattedMessage\n                                    id='Apis.Create.WSDL.Steps.ProvideWSDL.Input.type'\n                                    defaultMessage='Input Type'\n                                />\n                            </>\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Input type'\n                            value={apiInputs.inputType}\n                            onChange={(event) => inputsDispatcher({ action: 'inputType', value: event.target.value })}\n                        >\n                            <FormControlLabel\n                                value='url'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.url.label'\n                                        defaultMessage='WSDL URL'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                value='file'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Create.WSDL.Steps.ProvideWSDL.file.label.wsdl.file.archive'\n                                        defaultMessage='WSDL File/Archive'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                {isError && isError.file\n                    && (\n                        <Grid item md={11}>\n                            <Banner\n                                onClose={() => setValidity({ file: null })}\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='error'\n                                message={isError.file.message}\n                            />\n                        </Grid>\n                    )}\n                <Grid item md={11}>\n                    {isFileInput ? renderFileUpload()\n                        : (\n                            <TextField\n                                autoFocus\n                                id='outlined-full-width'\n                                label='WSDL URL'\n                                placeholder='Enter WSDL URL'\n                                fullWidth\n                                margin='normal'\n                                variant='outlined'\n                                onChange={({ target: { value } }) => inputsDispatcher({ action: 'inputValue', value })}\n                                value={apiInputs.inputValue}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                InputProps={{\n                                    onBlur: ({ target: { value } }) => {\n                                        validateUrl(APIValidation.url.required().validate(value).error);\n                                    },\n                                    endAdornment: urlStateEndAdornment,\n                                }}\n                                helperText={\n                                    (isError && isError.url && isError.url.message) || 'Click away to validate the URL'\n                                }\n                                error={isError && Boolean(isError.url)}\n                                disabled={isValidating}\n                            />\n                        )}\n\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nProvideWSDL.defaultProps = {\n    onValidate: () => { },\n};\nProvideWSDL.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n        mode: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFile from '@material-ui/icons/InsertDriveFile';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport API from 'AppData/api';\nimport DropZoneLocal, { humanFileSize } from 'AppComponents/Shared/DropZoneLocal';\nimport Banner from 'AppComponents/Shared/Banner';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n    },\n}));\n\n/**\n * Sub component of API Create using GraphQL UI, This is handling the taking input of GraphQL file or URL from the user\n * In the create API using OpenAPI wizard first step out of 2 steps\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function ProvideGraphQL(props) {\n    const { apiInputs, inputsDispatcher, onValidate } = props;\n    const { inputValue } = apiInputs;\n    const classes = useStyles();\n    // If valid value is `null`,that means valid, else an error object will be there\n    const [isValid, setValidity] = useState({ file: null });\n    const [isValidating, setIsValidating] = useState(false);\n    /**\n     *\n     *\n     * @param {*} files\n     */\n    function onDrop(files) {\n        setIsValidating(true);\n\n        // Why `files.pop()` below is , We only handle one graphQL file at a time,\n        // So if use provide multiple, We would only\n        // accept the first file. This information is shown in the dropdown helper text\n        const file = files.pop();\n        let validFile = null;\n        API.validateGraphQLFile(file)\n            .then((response) => {\n                const {\n                    body: { isValid: isValidFile, graphQLInfo },\n                } = response;\n                if (isValidFile) {\n                    validFile = file;\n                    inputsDispatcher({ action: 'graphQLInfo', value: graphQLInfo });\n                    setValidity({ ...isValid, file: null });\n                } else {\n                    setValidity({ ...isValid, file: { message: 'GraphQL content validation failed!' } });\n                }\n            })\n            .catch((error) => {\n                setValidity({ ...isValid, file: { message: 'GraphQL content validation failed!' } });\n                console.error(error);\n            })\n            .finally(() => {\n                setIsValidating(false); // Stop the loading animation\n                onValidate(validFile !== null); // If there is a valid file then validation has passed\n                // If the given file is valid , we set it as the inputValue else set `null`\n                inputsDispatcher({ action: 'inputValue', value: validFile });\n            });\n    }\n\n    useEffect(() => {\n        if (inputValue) {\n            onDrop([inputValue]);\n        }\n    }, [inputValue]);\n\n    return (\n        <>\n            <Grid container spacing={5}>\n                {!apiInputs.inputValue && (\n                    <Grid item md={12}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>\n                                <>\n                                    <sup className={classes.mandatoryStar}>*</sup>\n                                    {' '}\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.type'\n                                        defaultMessage='Provide GraphQL File'\n                                    />\n                                </>\n                            </FormLabel>\n                        </FormControl>\n                    </Grid>\n                )}\n                {isValid.file\n                    && (\n                        <Grid item md={11}>\n                            <Banner\n                                onClose={() => setValidity({ file: null })}\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='error'\n                                message={isValid.file.message}\n                            />\n                        </Grid>\n                    )}\n                <Grid item md={11}>\n                    {apiInputs.inputValue ? (\n                        <List>\n                            <ListItem key={apiInputs.inputValue.path}>\n                                <ListItemAvatar>\n                                    <Avatar>\n                                        <InsertDriveFile />\n                                    </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText\n                                    primary={`${apiInputs.inputValue.path} - \n                                    ${humanFileSize(apiInputs.inputValue.size)}`}\n                                />\n                                <ListItemSecondaryAction>\n                                    <IconButton\n                                        edge='end'\n                                        aria-label='delete'\n                                        onClick={() => {\n                                            inputsDispatcher({ action: 'inputValue', value: null });\n                                            inputsDispatcher({ action: 'isFormValid', value: false });\n                                        }}\n                                    >\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    ) : (\n                        <DropZoneLocal\n                            error={isValid.file}\n                            onDrop={onDrop}\n                            files={apiInputs.inputValue}\n                            accept='.graphql,text/plain'\n                        >\n                            {isValidating ? (<CircularProgress />)\n                                : ([\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.file.dropzone'\n                                        defaultMessage='Drag & Drop files here {break} or {break} Browse files'\n                                        values={{ break: <br /> }}\n                                    />,\n                                    <Button\n                                        color='primary'\n                                        variant='contained'\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.GraphQL.Steps.ProvideGraphQL.Input.file.upload'\n                                            defaultMessage='Browse File to Upload'\n                                        />\n                                    </Button>,\n                                ]\n                                )}\n                        </DropZoneLocal>\n                    )}\n                </Grid>\n            </Grid>\n        </>\n    );\n}\n\nProvideGraphQL.defaultProps = {\n    onValidate: () => {},\n};\nProvideGraphQL.propTypes = {\n    apiInputs: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    inputsDispatcher: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","import React from 'react';\n\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core/';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Slide from '@material-ui/core/Slide';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport API from 'AppData/api';\nimport { resourceMethod, resourcePath, ScopeValidation } from 'AppData/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = (theme) => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    deleteWrapper: {\n        flex: 0,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: theme.spacing(2),\n    },\n    delete: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        color: theme.custom.deleteButtonColor,\n        justifyContent: 'center',\n        cursor: 'pointer',\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n});\n\n/**\n * Handle Delete an API from API Overview/Details page\n *\n * @class DeleteApiButton\n * @extends {React.Component}\n */\nclass DeleteApiButton extends React.Component {\n    /**\n     *Creates an instance of DeleteApiButton.\n     * @param {*} props @inheritDoc\n     * @memberof DeleteApiButton\n     */\n    constructor(props) {\n        super(props);\n        this.handleApiDelete = this.handleApiDelete.bind(this);\n        this.handleRequestClose = this.handleRequestClose.bind(this);\n        this.handleRequestOpen = this.handleRequestOpen.bind(this);\n        this.state = { openMenu: false };\n    }\n\n    /**\n     * Handle Delete button close event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestClose() {\n        this.setState({ openMenu: false });\n    }\n\n    /**\n     * Handle Delete button onClick event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestOpen() {\n        this.setState({ openMenu: true });\n    }\n\n    /**\n     *\n     * Send API delete REST API request\n     * @param {*} e\n     * @memberof DeleteApiButton\n     */\n    handleApiDelete() {\n        const { api, history } = this.props;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            API.deleteProduct(api.id).then((response) => {\n                if (response.status !== 200) {\n                    console.log(response);\n                    Alert.error('Something went wrong while deleting the API Product!');\n                    return;\n                }\n                const redirectURL = '/api-products';\n                Alert.success('API Product ' + api.name + ' was deleted successfully!');\n                history.push(redirectURL);\n            }).catch((error) => {\n                if (error.status === 409) {\n                    Alert.error('[ ' + api.name + ' ] : ' + error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while deleting the API Product!');\n                }\n            });\n        } else {\n            api.delete().then((response) => {\n                if (response.status !== 200) {\n                    console.log(response);\n                    Alert.error('Something went wrong while deleting the API!');\n                    return;\n                }\n                const redirectURL = '/apis';\n                Alert.success('API ' + api.name + ' was deleted successfully!');\n                history.push(redirectURL);\n            }).catch((error) => {\n                if (error.status === 409) {\n                    Alert.error('[ ' + api.name + ' ] : ' + error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while deleting the API!');\n                }\n            });\n        }\n    }\n\n    /**\n     *\n     * @inheritDoc\n     * @returns {React.Component} inherit docs\n     * @memberof DeleteApiButton\n     */\n    render() {\n        const { api, onClick, classes } = this.props;\n        const type = api.apiType === API.CONSTS.APIProduct ? 'API Product ' : 'API ';\n        const version = api.apiType === API.CONSTS.APIProduct ? null : '-' + api.version;\n        const deleteHandler = onClick || this.handleApiDelete;\n\n        let path = resourcePath.SINGLE_API;\n\n        if (api.apiType === API.CONSTS.APIProduct) {\n            path = resourcePath.SINGLE_API_PRODUCT;\n        }\n\n        return (\n            <>\n                {/* allowing delete based on scopes */}\n                <ScopeValidation resourceMethod={resourceMethod.DELETE} resourcePath={path}>\n                    <div className={classes.deleteWrapper}>\n                        <VerticalDivider height={70} />\n                        <a\n                            id='itest-id-deleteapi-icon-button'\n                            onClick={this.handleRequestOpen}\n                            onKeyDown={this.handleRequestOpen}\n                            className={classes.delete}\n                        >\n                            <div>\n                                <DeleteIcon />\n                            </div>\n                            <Typography variant='caption'>\n                                <FormattedMessage\n                                    id='Apis.Details.components.DeleteApiButton.delete'\n                                    defaultMessage='Delete'\n                                />\n                            </Typography>\n                        </a>\n                    </div>\n                </ScopeValidation>\n                <Dialog open={this.state.openMenu} transition={Slide}>\n                    <DialogTitle>\n                        <FormattedMessage\n                            id='Apis.Details.components.DeleteApiButton.title'\n                            defaultMessage='Delete {type}'\n                            values={{ type }}\n                        />\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.text.description'\n                                defaultMessage='{type} <b> {name} {version} </b> will be deleted permanently.'\n                                values={{\n                                    b: (msg) => <b>{msg}</b>,\n                                    type,\n                                    name: api.name,\n                                    version,\n                                }}\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button dense onClick={this.handleRequestClose}>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                        <Button\n                            id='itest-id-deleteconf'\n                            onClick={() => {\n                                deleteHandler();\n                                this.handleRequestClose();\n                            }}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.delete'\n                                defaultMessage='Delete'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nDeleteApiButton.defaultProps = {\n    onClick: false,\n};\n\nDeleteApiButton.propTypes = {\n    api: PropTypes.shape({\n        delete: PropTypes.func,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    onClick: PropTypes.func,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(DeleteApiButton));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { useTheme } from '@material-ui/styles';\nimport Chip from '@material-ui/core/Chip';\nimport PropTypes from 'prop-types';\n\nfunction MethodView(props) {\n    const theme = useTheme();\n    const { method, className } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method.toLowerCase()] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method.toLowerCase()]);\n    }\n    return (\n        <Chip\n            label={method}\n            className={className || ''}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, width: 65,\n            }}\n        />\n    );\n}\nMethodView.propTypes = {\n    className: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n};\n\nexport default MethodView;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable array-callback-return */\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"operationObj\"] }] */\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Icon from '@material-ui/core/Icon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport queryString from 'query-string';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport cloneDeep from 'lodash.clonedeep';\nimport PropTypes from 'prop-types';\nimport API from 'AppData/api';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport MethodView from 'AppComponents/Apis/Details/ProductResources/MethodView';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport CONSTS from 'AppData/Constants';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst useStyles = makeStyles((theme) => ({\n    searchWrapper: {\n        padding: 0,\n        marginTop: theme.spacing(1),\n        '& input': {\n            padding: '12px 14px',\n        },\n    },\n    paper: {\n        height: '100%',\n        borderRadius: 0,\n    },\n    apiWrapper: {\n        overflowY: 'auto',\n        height: 349,\n    },\n    ResourceWrapper: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        '& .frame': {\n            overflowY: 'auto',\n            height: 328,\n            border: '1px solid ' + theme.palette.grey[400],\n            borderRadius: theme.spacing(1),\n        },\n        '& .frame::-webkit-scrollbar': {\n            '-webkit-appearance': 'none',\n        },\n        '& .frame::-webkit-scrollbar:vertical': {\n            width: 11,\n        },\n        '& .frame::-webkit-scrollbar:horizontal': {\n            height: 11,\n        },\n        '& .frame::-webkit-scrollbar-thumb': {\n            borderRadius: theme.spacing(1),\n            border: '2px solid' + theme.palette.common.white,\n            backgroundColor: theme.palette.grey[400],\n        },\n        '& .frame.rightFrame': {\n            height: 369,\n        },\n    },\n    SelectedResourceWrapper: {\n        overflowY: 'auto',\n        overflowX: 'auto',\n        height: 321,\n    },\n    leftMost: {\n        background: theme.palette.grey[700],\n        color: theme.palette.getContrastText(theme.palette.grey[700]),\n        padding: theme.spacing(1),\n    },\n    rightMost: {\n        background: theme.palette.grey[600],\n        color: theme.palette.getContrastText(theme.palette.grey[600]),\n        padding: theme.spacing(1),\n    },\n    colTitle: {\n        background: theme.palette.grey[400],\n        color: theme.palette.getContrastText(theme.palette.grey[400]),\n        padding: theme.spacing(1),\n        fontWeight: 200,\n        minHeight: 25,\n    },\n    treeItemMain: {\n        background: theme.palette.grey[100],\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n        padding: theme.spacing(1),\n    },\n    treeItemMainWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n    treeItem: {\n        '& .material-icons': {\n            fontSize: theme.spacing(2),\n            cursor: 'pointer',\n            marginRight: theme.spacing(1),\n        },\n        display: 'flex',\n        alignItems: 'center',\n        padding: '6px 0',\n    },\n    hr: {\n        flex: 1,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n    },\n    methodView: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    middleText: {\n        flex: 1,\n    },\n    selectedApi: {\n        background: theme.palette.grey[100],\n    },\n    selectedTitle: {\n        padding: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(2),\n        textDecorate: 'none',\n    },\n    selectedApiDescription: {\n        padding: '0px 16px',\n    },\n    messageWrapper: {\n        padding: theme.spacing(3),\n    },\n    tootBar: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        margin: '0 16px',\n        background: theme.palette.grey[100],\n        color: theme.palette.getContrastText(theme.palette.grey[100]),\n        padding: 5,\n        borderRadius: 5,\n        '& a': {\n            cursor: 'pointer',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n        },\n    },\n    inactiveIcon: {\n        color: theme.palette.grey[300],\n    },\n}));\n\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction ProductResourcesEdit(props) {\n    const classes = useStyles();\n    const {\n        apiResources, setApiResources, isStateCreate, api, resourceNotFountMessage,\n    } = props;\n\n    // Define states\n    const [allApis, setAllApis] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n    const [searchText, setSearchText] = useState('');\n    const [selectedApiPaths, setSelectedApiPaths] = useState([]);\n    const [selectedApi, setSelectedApi] = useState(null);\n    const [fromSearch, setFromSearch] = useState(false);\n    // Initialize the rest api libraries\n    const apiRestClient = new API();\n\n    /**\n     * This method is filtering apis base on the searchText entered. In no searchText provided it will give all apis.\n     *\n     * @param {*} [text=null]\n     * @returns a promise\n     */\n    const filterAPIs = (text = null) => {\n        if (text) {\n            // Build the search query and update\n            const inputValue = text.trim().toLowerCase();\n            const composeQuery = '?query=name:' + inputValue + ' type:HTTP';\n            const composeQueryJSON = queryString.parse(composeQuery);\n            // TODO we need to make the limit and offset changeable from the UI ( paggination )\n            composeQueryJSON.limit = 100;\n            composeQueryJSON.offset = 0;\n            return API.search(composeQueryJSON);\n        } else {\n            return API.all({\n                query: {\n                    type: 'HTTP',\n                },\n            });\n        }\n    };\n    const addPropsToSelectedApiPaths = (paths, apiId, latestApiResources = apiResources) => {\n        /* Add checked field to each resource object */\n        Object.keys(paths).map((key) => {\n            const methodObj = paths[key];\n            Object.keys(methodObj).map((innerKey) => {\n                // We are setting the check property at this level because we need to\n                // add resources for each verb ( post, get, put etc.. )\n                methodObj[innerKey].checked = false;\n\n                // We need to check the latestApiResources for the same\n                // API/Resource Name / Verb and  indicate it differently\n                // Loop latestApiResources object\n                const target = key;\n                const verb = innerKey;\n                let resourceFound = false;\n                if (latestApiResources) {\n                    Object.keys(latestApiResources).map((resourcekey) => {\n                        const apiResource = latestApiResources[resourcekey];\n\n                        // Check if the the api slected from UI is same as the operation api id checking\n                        if (apiResource && apiId === apiResource.apiId) {\n                            // API is the same\n                            Object.keys(apiResource.operations).map((operationKey) => {\n                                const operation = apiResource.operations[operationKey];\n                                if (\n                                    operation\n                                    && operation.target === target\n                                    && operation.verb.toLowerCase() === verb.toLowerCase()\n                                ) {\n                                    // Operation is already there\n                                    resourceFound = true;\n                                }\n                            });\n                        }\n                    });\n                }\n                if (resourceFound) {\n                    methodObj[innerKey].allreadyAdded = true;\n                } else {\n                    methodObj[innerKey].allreadyAdded = false;\n                }\n            });\n        });\n        setSelectedApiPaths(paths);\n    };\n\n    // Get the api swagger after an api is selected\n    const getApiSwagger = (apiSelected) => {\n        const { id } = apiSelected;\n        const promisedAPI = apiRestClient.getSwagger(id);\n        promisedAPI\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    addPropsToSelectedApiPaths(response.obj.paths, id);\n                    setSelectedApi(apiSelected);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n    const handleSearchTextChange = (event) => {\n        const apiPromise = filterAPIs(event.target.value);\n        apiPromise\n            .then((response) => {\n                const {\n                    body: { list },\n                } = response;\n                const filteredList = list.filter((theApi) => theApi.status !== 'PROTOTYPED');\n                if (filteredList.length > 0) {\n                    setSelectedApi(list[0]);\n                }\n                setAllApis(filteredList);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n        setSearchText(event.target.value);\n        setFromSearch(event.target.value);\n    };\n    const updateResourceTree = (resourceToAdd, action, inputApiResources = null) => {\n        let updateStateHere = false;\n        let newApiResources = null;\n        if (!inputApiResources) {\n            // If a copy of the state variable is not passed from the calling method we\n            // have to make a copy inside here before doing modifications to that\n            newApiResources = cloneDeep(apiResources);\n            updateStateHere = true;\n        } else {\n            newApiResources = inputApiResources;\n        }\n        const {\n            target, verb, apiId, name,\n        } = resourceToAdd;\n        const newResource = {\n            id: null,\n            target,\n            verb: verb.toUpperCase(),\n            authType: null,\n            throttlingPolicy: null,\n            scopes: [],\n        };\n        let apiFound = false;\n\n        // Loop copy of apiResources object\n        Object.keys(newApiResources).map((key, indexA) => {\n            const apiResource = newApiResources[key];\n\n            // Check if the the api slected from UI is same as the operation api id trying to remove.\n            if (apiResource && apiId === apiResource.apiId) {\n                apiFound = true;\n                let operationFound = false;\n                Object.keys(apiResource.operations).map((innerKey, indexB) => {\n                    const operation = apiResource.operations[innerKey];\n                    if (\n                        operation\n                        && operation.target === target\n                        && operation.verb.toLowerCase() === verb.toLowerCase()\n                    ) {\n                        // Operation is already there\n                        operationFound = true;\n                        if (action === 'remove') {\n                            if (apiResource.operations.length > 1) {\n                                apiResource.operations.splice(indexB, 1);\n                            } else {\n                                newApiResources.splice(indexA, 1);\n                            }\n                        }\n                    }\n                });\n                // Operation not added .. so we need to add that\n                if (!operationFound && action === 'add') {\n                    apiResource.operations.push(newResource);\n                }\n            }\n        });\n\n        if (!apiFound) {\n            // Add api object\n            newApiResources.push({\n                name,\n                apiId,\n                operations: [newResource],\n            });\n        }\n        // When we are adding the resources in a loop we do not care about the return but we simply set the state here.\n        if (updateStateHere) {\n            setApiResources(newApiResources);\n            // We need to call this in order to set other properties\n            if (apiId === selectedApi.id) {\n                addPropsToSelectedApiPaths(cloneDeep(selectedApiPaths), apiId, newApiResources);\n            }\n        }\n        return newApiResources;\n    };\n\n    const updateCheckBox = (key, innerKey) => {\n        // we need to copy the object from the state and modify it before set it to the state\n        const prevSelectedApiPaths = { ...selectedApiPaths };\n\n        // Now we inverse the checked value\n        prevSelectedApiPaths[key][innerKey].checked = !prevSelectedApiPaths[key][innerKey].checked;\n\n        // Then we set state\n        setSelectedApiPaths(prevSelectedApiPaths);\n    };\n    const addSelectedResourcesToTree = (addAll = false) => {\n        /* Add checked field to each resource object */\n        const newApiResources = cloneDeep(apiResources);\n        Object.keys(selectedApiPaths).map((key) => {\n            const methodObj = selectedApiPaths[key];\n            Object.keys(methodObj).map((innerKey) => {\n                // We are setting the check property at this level because we need to\n                // add resources for each verb ( post, get, put etc.. )\n                if (methodObj[innerKey].checked || addAll) {\n                    // We need to add this to apiResources array\n                    updateResourceTree(\n                        {\n                            target: key,\n                            verb: innerKey,\n                            apiId: selectedApi.id,\n                            name: selectedApi.name,\n                        },\n                        'add',\n                        newApiResources,\n                    );\n                }\n            });\n        });\n        setApiResources(newApiResources);\n        addPropsToSelectedApiPaths(cloneDeep(selectedApiPaths), selectedApi.id, newApiResources);\n    };\n    useEffect(() => {\n        // Get all apis\n        const apiPromise = filterAPIs();\n        apiPromise\n            .then((response) => {\n                const {\n                    body: { list },\n                } = response;\n                const filteredList = list.filter((theApi) => theApi.lifeCycleStatus !== 'PROTOTYPED');\n\n                setAllApis(filteredList);\n                if (filteredList.length > 0) {\n                    setSelectedApi(filteredList[0]);\n                    getApiSwagger(filteredList[0]);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }, []);\n    if (notFound) {\n        return <ResourceNotFound message={resourceNotFountMessage} />;\n    }\n    return (\n        <>\n            {allApis.length === 0 && !fromSearch ? (\n                <Grid container>\n                    <Typography className={classes.messageWrapper}>\n                        <FormattedMessage\n                            id='Apis.Details.ProductResources.ProductResourcesWorkspace.ApisnotFound'\n                            defaultMessage='No REST APIs are created yet'\n                        />\n                    </Typography>\n                </Grid>\n            ) : (\n                <>\n                    {!isStateCreate && (\n                        <Grid container>\n                            <>\n                                <Grid item xs={8} className={classes.leftMost}>\n                                    <FormattedMessage\n                                        id='Apis.Details.ProductResources.ProductResourcesWorkspace.find.and.select'\n                                        defaultMessage='Find and select resources for the API Product'\n                                    />\n                                </Grid>\n                                <Grid item xs={4} className={classes.rightMost}>\n                                    <FormattedMessage\n                                        id='Apis.Details.ProductResources.ProductResourcesWorkspace.selected'\n                                        defaultMessage='Selected resources of API Product'\n                                    />\n                                    <div />\n                                </Grid>\n                            </>\n                        </Grid>\n                    )}\n                    <Grid container>\n                        {/* ************************************************ */}\n                        {/* 1st column API search and select column          */}\n                        {/* ************************************************ */}\n                        <Grid item xs={3}>\n                            <div className={classes.colTitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.ProductResources.ProductResourcesWorkspace.select.an.api'\n                                    defaultMessage='Select an API'\n                                />\n                            </div>\n                            <Paper>\n                                <ListItem className={classes.searchWrapper}>\n                                    <TextField\n                                        id='outlined-full-width'\n                                        label='API'\n                                        style={{ margin: 8 }}\n                                        placeholder='Filter APIs'\n                                        helperText='Filter by name'\n                                        onChange={handleSearchTextChange}\n                                        value={searchText}\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </ListItem>\n                                <div className={classes.apiWrapper}>\n                                    <List dense>\n                                        {allApis.map((apiObj) => {\n                                            const labelId = `checkbox-list-label-${apiObj.id}`;\n\n                                            return (\n                                                <ListItem\n                                                    key={apiObj.id}\n                                                    role={undefined}\n                                                    dense\n                                                    button\n                                                    className={\n                                                        selectedApi\n                                                        && apiObj.id === selectedApi.id\n                                                        && classes.selectedApi\n                                                    }\n                                                >\n                                                    <ListItemText\n                                                        id={labelId}\n                                                        primary={apiObj.name}\n                                                        secondary={`${apiObj.version} - ${apiObj.context}`}\n                                                        onClick={() => getApiSwagger(apiObj)}\n                                                    />\n                                                </ListItem>\n                                            );\n                                        })}\n                                    </List>\n                                </div>\n                            </Paper>\n                        </Grid>\n                        {/* ************************************************ */}\n                        {/* 2nd column Resource Selection                    */}\n                        {/* ************************************************ */}\n                        <Grid item xs={5}>\n                            <Paper className={classes.paper}>\n                                <div className={classes.colTitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.ProductResources.ProductResourcesEdit.api.resources'\n                                        defaultMessage='Select API Resources'\n                                    />\n                                </div>\n                                {selectedApi && (\n                                    <Typography variant='h5' className={classes.selectedTitle}>\n                                        {selectedApi.name}\n                                    </Typography>\n                                )}\n                                <div className={classes.tootBar}>\n                                    <a\n                                        onClick={() => addSelectedResourcesToTree()}\n                                        onKeyDown={() => addSelectedResourcesToTree()}\n                                    >\n                                        <Typography variant='body2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.ProductResources.ProductResourcesWorkspace.\n                                        toolbar.add.selected'\n                                                defaultMessage='Add Selected'\n                                            />\n                                        </Typography>\n                                        <Icon>fast_forward</Icon>\n                                    </a>\n                                    <VerticalDivider />\n                                    <a\n                                        onClick={() => addSelectedResourcesToTree(true)}\n                                        onKeyDown={() => addSelectedResourcesToTree(true)}\n                                    >\n                                        <Typography variant='body2'>\n                                            <FormattedMessage\n                                                id='Apis.Details.ProductResources.ProductResourcesWorkspace.toolbar.\n                                                add.all'\n                                                defaultMessage='Add All'\n                                            />\n                                        </Typography>\n                                        <Icon>fast_forward</Icon>\n                                    </a>\n                                </div>\n                                <div className={classes.ResourceWrapper}>\n                                    <div className='frame'>\n                                        <List dense>\n                                            {Object.keys(selectedApiPaths).map((key) => {\n                                                const path = selectedApiPaths[key];\n                                                const labelId = `checkbox-list-label-${key}`;\n                                                return Object.keys(path).map((innerKey) => {\n                                                    const methodObj = path[innerKey];\n                                                    return (\n                                                        CONSTS.HTTP_METHODS.includes(innerKey) && (\n                                                            <ListItem\n                                                                key={`${innerKey} - ${key}`}\n                                                                role={undefined}\n                                                                dense\n                                                            >\n                                                                <ListItemIcon style={{ minWidth: 35 }}>\n                                                                    <Checkbox\n                                                                        edge='start'\n                                                                        checked={methodObj.checked}\n                                                                        tabIndex={-1}\n                                                                        disableRipple\n                                                                        onChange={() => updateCheckBox(key, innerKey)}\n                                                                        color='primary'\n                                                                        disabled={methodObj.allreadyAdded}\n                                                                    />\n                                                                </ListItemIcon>\n                                                                <ListItemText\n                                                                    id={labelId}\n                                                                    primary={(\n                                                                        <div>\n                                                                            <MethodView\n                                                                                method={innerKey}\n                                                                                className={classes.methodView}\n                                                                            />\n                                                                            <span>{key}</span>\n                                                                        </div>\n                                                                    )}\n                                                                    secondary={\n                                                                        methodObj['x-auth-type']\n                                                                    && methodObj['x-throttling-tier']\n                                                                    && `${methodObj['x-auth-type']} - ${\n                                                                        methodObj['x-throttling-tier']\n                                                                    }`\n                                                                    }\n                                                                    onClick={() => updateResourceTree(\n                                                                        {\n                                                                            target: key,\n                                                                            verb: innerKey,\n                                                                            apiId: selectedApi.id,\n                                                                            name: selectedApi.name,\n                                                                        },\n                                                                        'add',\n                                                                    )}\n                                                                    className={classes.middleText}\n                                                                />\n                                                                <ListItemSecondaryAction>\n                                                                    {methodObj.allreadyAdded && (\n                                                                        <Icon className={classes.inactiveIcon}>\n                                                                        chevron_right\n                                                                        </Icon>\n                                                                    )}\n                                                                    {!methodObj.allreadyAdded && (\n                                                                        <IconButton\n                                                                            edge='end'\n                                                                            aria-label='comments'\n                                                                            onClick={() => updateResourceTree(\n                                                                                {\n                                                                                    target: key,\n                                                                                    verb: innerKey,\n                                                                                    apiId: selectedApi.id,\n                                                                                    name: selectedApi.name,\n                                                                                },\n                                                                                'add',\n                                                                            )}\n                                                                        >\n                                                                            <Icon>chevron_right</Icon>\n                                                                        </IconButton>\n                                                                    )}\n                                                                </ListItemSecondaryAction>\n                                                            </ListItem>\n                                                        )\n                                                    );\n                                                });\n                                            })}\n                                        </List>\n                                    </div>\n                                </div>\n                            </Paper>\n                        </Grid>\n                        {/* ************************************************ */}\n                        {/* Third column with  selected resources            */}\n                        {/* ************************************************ */}\n                        <Grid item xs={4}>\n                            <Paper className={classes.paper}>\n                                <div className={classes.colTitle} />\n                                {api.name && (\n                                    <>\n                                        <Typography variant='h5' className={classes.selectedTitle}>\n                                            {api.name}\n                                        </Typography>\n                                    </>\n                                )}\n                                <div className={classes.ResourceWrapper}>\n                                    <div className='frame rightFrame'>\n                                        {allApis.length > 0 && apiResources && apiResources.length === 0 && (\n                                            <div className={classes.messageWrapper}>\n                                                <Typography component='p'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.ProductResources.ProductResourcesWorkspace.\n                                                    empty.title'\n                                                        defaultMessage='Use the left side panel to add resources'\n                                                    />\n                                                </Typography>\n                                            </div>\n                                        )}\n                                        {apiResources\n                                        && apiResources.length > 0\n                                        && Object.keys(apiResources).map((key) => {\n                                            const apiResource = apiResources[key];\n                                            return (\n                                                <div key={apiResource.name}>\n                                                    <div className={classes.treeItemMain}>{apiResource.name}</div>\n                                                    <div className={classes.treeItemMainWrapper}>\n                                                        {Object.keys(apiResource.operations).map((innerKey) => {\n                                                            const operation = apiResource.operations[innerKey];\n                                                            const { target, verb } = operation;\n                                                            return (\n                                                                <div\n                                                                    key={`${apiResource.apiId}_${verb}_${target}`}\n                                                                    className={classes.treeItem}\n                                                                >\n                                                                    <MethodView\n                                                                        method={verb}\n                                                                        className={classes.methodView}\n                                                                    />\n                                                                    <Typography variant='body2'>{target}</Typography>\n                                                                    <hr className={classes.hr} />\n                                                                    <Icon\n                                                                        onClick={() => updateResourceTree(\n                                                                            {\n                                                                                target,\n                                                                                verb,\n                                                                                apiId: apiResource.apiId,\n                                                                                name: apiResource.name,\n                                                                            },\n                                                                            'remove',\n                                                                        )}\n                                                                    >\n                                                                        delete\n                                                                    </Icon>\n                                                                </div>\n                                                            );\n                                                        })}\n                                                    </div>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </>\n            )}\n        </>\n    );\n}\nProductResourcesEdit.propTypes = {\n    apiResources: PropTypes.instanceOf(Array).isRequired,\n    setApiResources: PropTypes.func.isRequired,\n    isStateCreate: PropTypes.isRequired,\n    api: PropTypes.isRequired,\n    resourceNotFountMessage: PropTypes.string.isRequired,\n};\nexport default ProductResourcesEdit;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!./redirecting.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!./redirecting.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!./redirecting.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body,html{height:100%}.redirect-flex-container{display:flex;flex-direction:column;height:100%;background:#efefef;margin:auto}.redirect-flex-container .redirect-grid-container{height:100vh}.redirect-flex-container .redirect-main-content{flex:1;align-items:flex-start;justify-content:center}.redirect-loadingbar{float:right}.redirect-paper{border-left:2px solid #f17a20;fontSize:medium;padding:15px}#react-root{height:100%}@media (max-width:601px){.redirect-paper{align-items:flex-start;display:flex;width:100%;height:100%}}\", \"\"]);\n\n// exports\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={3} />\n            <Grid item sm={12} md={6}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\nAPICreateBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { InputAdornment, IconButton, Icon } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\n\nimport SelectPolicies from './SelectPolicies';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    helperTextContext: {\n        '& p': {\n            textOverflow: 'ellipsis',\n            width: 400,\n            display: 'block',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n        },\n    },\n    endpointValidChip: {\n        color: 'green',\n        border: '1px solid green',\n    },\n    endpointInvalidChip: {\n        color: '#ffd53a',\n        border: '1px solid #ffd53a',\n    },\n    endpointErrorChip: {\n        color: 'red',\n        border: '1px solid red',\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n    iconButtonValid: {\n        padding: theme.spacing(1),\n        color: green[500],\n    },\n}));\n\n/**\n *\n * Return the actual API context that will be exposed in the gateway.\n * If the context value contains `{version}` placeholder text it will be replaced with the actual version value.\n * If there is no such placeholder text in the context, The version will be appended to the context\n * i:e /context/version\n * Parameter expect an object containing `context` and `version` properties.\n * @param {String} context API Context\n * @param {String} version API Version string\n * @returns {String} Derived actual context string\n */\nfunction actualContext({ context, version }) {\n    let initialContext = '{context}/{version}';\n    if (context) {\n        initialContext = context;\n        if (context.indexOf('{version}') < 0) {\n            initialContext = context + '/{version}';\n        }\n    }\n    if (version) {\n        initialContext = initialContext.replace('{version}', version);\n    }\n    return initialContext;\n}\n\n/**\n * This method used to  compare the context values\n * @param {*} value  input value\n * @param {*} result resulted value\n * @returns {Boolean} true or false\n */\nfunction checkContext(value, result) {\n    const contextVal = value.includes('/') ? value.toLowerCase() : '/' + value.toLowerCase();\n    if (contextVal === '/' + result.toLowerCase().slice(result.toLowerCase().lastIndexOf('/') + 1)\n     || contextVal === result.toLowerCase()) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Improved API create default form\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultAPIForm(props) {\n    const {\n        onChange, onValidate, api, isAPIProduct, isWebSocket,\n    } = props;\n    const classes = useStyles();\n    const [validity, setValidity] = useState({});\n    const [isEndpointValid, setIsEndpointValid] = useState();\n    const [statusCode, setStatusCode] = useState('');\n    const [isUpdating, setUpdating] = useState(false);\n    const [isErrorCode, setIsErrorCode] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    // Check the provided API validity on mount, TODO: Better to use Joi schema here ~tmkb\n    useEffect(() => {\n        onValidate(Boolean(api.name)\n                && (isAPIProduct || Boolean(api.version))\n                && Boolean(api.context)\n                && Boolean(api.policies));\n    }, []);\n\n    const updateValidity = (newState) => {\n        let isFormValid = Object.entries(newState).length > 0\n            && Object.entries(newState)\n                .map(([, value]) => value === null || value === undefined)\n                .reduce((acc, cVal) => acc && cVal); // Aggregate the individual validation states\n        // TODO: refactor following redundant validation.\n        // The valid state should available in the above reduced state ~tmkb\n        // if isAPIProduct gets true version validation has been skipped\n        isFormValid = isFormValid\n            && Boolean(api.name)\n            && (isAPIProduct || Boolean(api.version))\n            && Boolean(api.context)\n            && (!isAPIProduct || newState.policy === null);\n        onValidate(isFormValid, validity);\n        setValidity(newState);\n    };\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {string} field The input field.\n     * @param {string} value Validation state object\n     */\n    function validate(field, value) {\n        switch (field) {\n            case 'name': {\n                const nameValidity = APIValidation.apiName.required().validate(value, { abortEarly: false }).error;\n                if (nameValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + value).then((result) => {\n                        if (result.body.list.length > 0 && value.toLowerCase() === result.body.list[0]\n                            .name.toLowerCase()) {\n                            updateValidity({\n                                ...validity,\n                                name: { details: [{ message: 'Name ' + value + ' already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, name: nameValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, name: nameValidity });\n                }\n                break;\n            }\n            case 'context': {\n                const contextValidity = APIValidation.apiContext.required().validate(value, { abortEarly: false })\n                    .error;\n                const apiContext = value.includes('/') ? value : '/' + value;\n                if (contextValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + apiContext).then((result) => {\n                        if (result.body.list.length > 0 && checkContext(value, result.body.list[0].context)) {\n                            updateValidity({\n                                ...validity,\n                                context: { details: [{ message: apiContext + ' context already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, context: contextValidity, version: null });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, context: contextValidity });\n                }\n                break;\n            }\n            case 'version': {\n                const versionValidity = APIValidation.apiVersion.required().validate(value).error;\n                if (versionValidity === null) {\n                    const apiVersion = api.context.includes('/') ? api.context + '/' + value : '/'\n                    + api.context + '/' + value;\n                    APIValidation.apiParameter.validate('context:' + api.context\n                    + ' version:' + value).then((result) => {\n                        // version of APIProduct equals to 1.0.0\n                        if (result.body.list.length > 0 && (\n                            (result.body.list[0].version !== undefined\n                            && (result.body.list[0].version.toLowerCase()\n                                === value.toLowerCase())) || value === '1.0.0')) {\n                            updateValidity({\n                                ...validity,\n                                version: { message: apiVersion + ' context with version already exists' },\n                            });\n                        } else {\n                            updateValidity({ ...validity, version: versionValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, version: versionValidity });\n                }\n                break;\n            }\n            case 'policies': {\n                const policyValidity = value && value.length > 0;\n                updateValidity({\n                    ...validity,\n                    policy:\n                        policyValidity || !isAPIProduct\n                            ? null\n                            : { message: 'Need to select at least one policy to create an API Product' },\n                });\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    }\n\n    function testEndpoint(endpoint) {\n        setUpdating(true);\n        const restApi = new API();\n        restApi.testEndpoint(endpoint)\n            .then((result) => {\n                if (result.body.error !== null) {\n                    setStatusCode(result.body.error);\n                    setIsErrorCode(true);\n                } else {\n                    setStatusCode(result.body.statusCode + ' ' + result.body.statusMessage);\n                    setIsErrorCode(false);\n                }\n                if (result.body.statusCode >= 200 && result.body.statusCode < 300) {\n                    setIsEndpointValid(true);\n                    setIsErrorCode(false);\n                } else {\n                    setIsEndpointValid(false);\n                }\n            }).finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    return (\n        <Grid item md={11}>\n            <form noValidate autoComplete='off'>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    id='outlined-name'\n                    error={validity.name}\n                    label={(\n                        <>\n                            <FormattedMessage id='Apis.Create.Components.DefaultAPIForm.name' defaultMessage='Name' />\n                            <sup className={classes.mandatoryStar}>*</sup>\n                        </>\n                    )}\n                    helperText={\n                        validity.name\n                        && validity.name.details.map((detail, index) => {\n                            return <div style={{ marginTop: index !== 0 && '10px' }}>{detail.message}</div>;\n                        })\n                    }\n                    value={api.name}\n                    name='name'\n                    onChange={onChange}\n                    InputProps={{\n                        id: 'itest-id-apiname-input',\n                        onBlur: ({ target: { value } }) => {\n                            validate('name', value);\n                        },\n                    }}\n                    margin='normal'\n                    variant='outlined'\n                />\n                <Grid container spacing={2}>\n                    {!isAPIProduct ? (\n                        <>\n                            <Grid item md={8} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id='outlined-name'\n                                    error={validity.context}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.api.context'\n                                                defaultMessage='Context'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apicontext-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div style={{ marginTop: index !== 0 && '10px' }}>\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        || `API will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    classes={{ root: classes.helperTextContext }}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                            <Grid item md={4} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    error={validity.version}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.version'\n                                                defaultMessage='Version'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='version'\n                                    value={api.version}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apiversion-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('version', value);\n                                        },\n                                    }}\n                                    helperText={validity.version && validity.version.message}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    ) : (\n                        <>\n                            <Grid item md={12}>\n                                <TextField\n                                    fullWidth\n                                    id='outlined-name'\n                                    error={validity.context}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.api.product.context'\n                                                defaultMessage='Context'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div style={{ marginTop: index !== 0 && '10px' }}>\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        || `API Product will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                {!isAPIProduct && (\n                    <TextField\n                        fullWidth\n                        id='itest-id-apiendpoint-input'\n                        label='Endpoint'\n                        name='endpoint'\n                        value={api.endpoint}\n                        onChange={onChange}\n                        helperText={\n                            validity.endpointURL && (\n                                <span>\n                                    Enter a valid\n                                    <a\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                        href='http://tools.ietf.org/html/rfc3986'\n                                    >\n                                        RFC 3986\n                                    </a>\n                                    {' '}\n                                    URI\n                                </span>\n                            )\n                        }\n                        error={validity.endpointURL}\n                        margin='normal'\n                        variant='outlined'\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position='end'>\n                                    {statusCode && (\n                                        <Chip\n                                            label={statusCode}\n                                            className={isEndpointValid ? classes.endpointValidChip : iff(\n                                                isErrorCode,\n                                                classes.endpointErrorChip, classes.endpointInvalidChip,\n                                            )}\n                                            variant='outlined'\n                                        />\n                                    )}\n                                    {!isWebSocket && (\n                                        <IconButton\n                                            className={isEndpointValid ? classes.iconButtonValid : classes.iconButton}\n                                            aria-label='TestEndpoint'\n                                            onClick={() => testEndpoint(api.endpoint)}\n                                            disabled={isUpdating}\n                                        >\n                                            {isUpdating\n                                                ? <CircularProgress size={20} />\n                                                : (\n                                                    <Icon>\n                                                check_circle\n                                                    </Icon>\n                                                )}\n                                        </IconButton>\n                                    )}\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                )}\n\n                <SelectPolicies\n                    policies={api.policies}\n                    isAPIProduct={isAPIProduct}\n                    onChange={onChange}\n                    validate={validate}\n                    isValid={validity.policies}\n                />\n            </form>\n            <Grid container direction='row' justify='flex-end' alignItems='center'>\n                <Grid item>\n                    <Typography variant='caption' display='block' gutterBottom>\n                        <sup style={{ color: 'red' }}>*</sup>\n                        {' '}\nMandatory fields\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultAPIForm.defaultProps = {\n    onValidate: () => {},\n    api: {}, // Uncontrolled component\n    isWebSocket: false,\n};\nDefaultAPIForm.propTypes = {\n    api: PropTypes.shape({}),\n    isAPIProduct: PropTypes.shape({}).isRequired,\n    isWebSocket: PropTypes.shape({}),\n    onChange: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport API from 'AppData/api';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport Banner from 'AppComponents/Shared/Banner';\n\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APIProduct from 'AppData/APIProduct';\nimport AuthManager from 'AppData/AuthManager';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction APICreateDefault(props) {\n    const {\n        isWebSocket, isAPIProduct, history, intl,\n    } = props;\n    const { settings } = useAppContext();\n    const [pageError, setPageError] = useState(null);\n    const [isCreating, setIsCreating] = useState();\n    const [isPublishing, setIsPublishing] = useState(false);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n    const isPublishable = apiInputs.endpoint && apiInputs.policies && apiInputs.policies.length !== 0;\n    const isAPICreateDisabled = !(apiInputs.name && apiInputs.version && apiInputs.context) || isCreating\n                                 || isPublishing;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setIsCreating(true);\n        const {\n            name, version, context, endpoint, policies,\n        } = apiInputs;\n        let promisedCreatedAPI;\n        const apiData = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        apiData.gatewayEnvironments = settings.environment.map((env) => env.name);\n        if (isWebSocket) {\n            apiData.type = 'WS';\n        }\n        if (isAPIProduct) {\n            const newAPIProduct = new APIProduct(apiData);\n            promisedCreatedAPI = newAPIProduct\n                .saveProduct(apiData)\n                .then((apiProduct) => {\n                    Alert.info('API Product created successfully');\n                    history.push(`/api-products/${apiProduct.id}/overview`);\n                    return apiProduct;\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        // TODO add i18n ~tmkb\n                        const message = 'Something went wrong while adding the API Product';\n                        Alert.error(message);\n                        setPageError(message);\n                    }\n                    console.error(error);\n                });\n        } else {\n            const newAPI = new API(apiData);\n            promisedCreatedAPI = newAPI\n                .save()\n                .then((api) => {\n                    Alert.info('API created successfully');\n                    return api;\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        const message = 'Something went wrong while adding the API';\n                        Alert.error(message);\n                        setPageError(message);\n                    }\n                    console.error(error);\n                    setIsPublishing(false); // We don't publish if something when wrong\n                })\n                .finally(() => {\n                    setIsCreating(false);\n                });\n        }\n        return promisedCreatedAPI.finally(() => setIsCreating(false));\n    }\n\n    /**\n     *\n     *\n     */\n    function createAndPublish() {\n        setIsPublishing(true);\n        createAPI().then((api) => api\n            .publish()\n            .then((response) => {\n                const { workflowStatus } = response.body;\n                if (workflowStatus === APICreateDefault.WORKFLOW_STATUS.CREATED) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Create.Default.APICreateDefault.success.publishStatus',\n                        defaultMessage: 'Lifecycle state change request has been sent',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Create.Default.APICreateDefault.success.otherStatus',\n                        defaultMessage: 'API updated succesfully',\n                    }));\n                }\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                } else {\n                    const message = 'Something went wrong while publishing the API';\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Create.Default.APICreateDefault.error.errorMessage',\n                        defaultMessage: message,\n                    }));\n                    setPageError(message);\n                }\n                console.error(error);\n            })\n            .finally(() => {\n                setIsPublishing(false);\n            }));\n    }\n\n    /**\n     *\n     *\n     */\n    function createAPIOnly() {\n        createAPI().then((api) => {\n            history.push(`/apis/${api.id}/overview`);\n        });\n    }\n    let pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.heading'\n                    defaultMessage='Create an API'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.sub.heading'\n                    defaultMessage={\n                        'Create an API by providing a Name, a Version, a Context,'\n                        + ' Backend Endpoint(s) (optional), and Business Plans (optional).'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    if (isAPIProduct) {\n        pageTitle = (\n            <>\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.heading'\n                        defaultMessage='Create an API Product'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.sub.heading'\n                        defaultMessage={\n                            'Create an API Product by providing a Name, a Context,'\n                            + ' and Business Plans (optional).'\n                        }\n                    />\n                </Typography>\n            </>\n        );\n    } else if (isWebSocket) {\n        pageTitle = (\n            <>\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.heading'\n                        defaultMessage='Create a WebSocket API'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.sub.heading'\n                        defaultMessage={\n                            'Create a WebSocket API by providing a Name, a Context,'\n                            + ' and Business Plans (optional).'\n                        }\n                    />\n                </Typography>\n            </>\n        );\n    }\n\n    return (\n        <APICreateBase title={pageTitle}>\n            <Grid container direction='row' justify='center' alignItems='center' spacing={3}>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                <Grid item xs={12} />\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        isAPIProduct={isAPIProduct}\n                        isWebSocket={isWebSocket}\n                    />\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={isAPICreateDisabled}\n                                onClick={createAPIOnly}\n                            >\n                                Create\n                                {' '}\n                                {isCreating && !isPublishing && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        {!AuthManager.isNotPublisher() && (\n                            <Grid item>\n                                <Button\n                                    id='itest-id-apicreatedefault-createnpublish'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!isPublishable || isAPICreateDisabled}\n                                    onClick={createAndPublish}\n                                >\n                                    {!isPublishing && 'Create & Publish'}\n                                    {isPublishing && <CircularProgress size={24} />}\n                                    {isCreating && isPublishing && 'Creating API . . .'}\n                                    {!isCreating && isPublishing && 'Publishing API . . .'}\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='text'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\nAPICreateDefault.defaultProps = {\n    isWebSocket: false,\n    isAPIProduct: false,\n};\nAPICreateDefault.WORKFLOW_STATUS = {\n    CREATED: 'CREATED',\n};\nAPICreateDefault.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.shape({}),\n    isWebSocket: PropTypes.shape({}),\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default withRouter(injectIntl(APICreateDefault));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateProductBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item sm={12} md={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={2} />\n            <Grid item sm={12} md={8}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item sm={0} md={2} />\n        </Grid>\n    );\n}\nAPICreateProductBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport APIProduct from 'AppData/APIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport APICreateProductBase from 'AppComponents/Apis/Create/Components/APICreateProductBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport ProductResourcesEditWorkspace from 'AppComponents/Apis/Details/ProductResources/ProductResourcesEditWorkspace';\n\nconst useStyles = makeStyles((theme) => ({\n    Paper: {\n        height: '40px',\n    },\n    saveButton: {\n        padding: '0px 0px 0px 10px',\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(4),\n    },\n    alternativeLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiProductCreateWrapper(props) {\n    const { history } = props;\n    const [wizardStep, setWizardStep] = useState(0);\n    const [apiResources, setApiResources] = useState([]);\n    const { settings } = useAppContext();\n\n    const pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.heading'\n                    defaultMessage='Create an API Product'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.sub.heading'\n                    defaultMessage={\n                        'Create an API Product by providing a Name, a Context, Resources, '\n                        + 'and Business Plans (optional).'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'name':\n            case 'context':\n            case 'version':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'apiResources':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiProductCreateWrapper',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n    function getSteps() {\n        return [\n            <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.defineProvide'\n                defaultMessage='Define API Product'\n            />, <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.resources'\n                defaultMessage='Add Resources'\n            />];\n    }\n\n    const [isCreating, setCreating] = useState();\n    const classes = useStyles();\n    const steps = getSteps();\n\n    const createAPIProduct = () => {\n        setCreating(true);\n        const {\n            name, context, policies,\n        } = apiInputs;\n        const apiData = {\n            name,\n            context,\n            policies,\n            apis: apiResources,\n        };\n        apiData.gatewayEnvironments = settings.environment.map((env) => env.name);\n        apiData.transport = ['http', 'https'];\n        const newAPIProduct = new APIProduct(apiData);\n        newAPIProduct\n            .saveProduct(apiData)\n            .then((apiProduct) => {\n                Alert.info('API Product created successfully');\n                history.push(`/api-products/${apiProduct.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API Product');\n                }\n            })\n            .finally(() => setCreating(false));\n    };\n\n    return (\n        <>\n            <APICreateProductBase\n                title={pageTitle}\n            >\n                <Box>\n                    {wizardStep === 0 && (\n                        <Stepper alternativeLabel activeStep={0}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel className={classes.alternativeLabel}>{label}</StepLabel>\n                                </Step>\n                            ))}\n\n                        </Stepper>\n                    )}\n                    {wizardStep === 1 && (\n                        <Stepper alternativeLabel activeStep={1}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                </Step>\n                            ))}\n                        </Stepper>\n                    )}\n                </Box>\n                <Grid container spacing={2}>\n                    {wizardStep === 0 && <Grid item md={12} />}\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={wizardStep === 0 ? 11 : 12}>\n                        {wizardStep === 0 && (\n                            <DefaultAPIForm\n                                onValidate={handleOnValidate}\n                                onChange={handleOnChange}\n                                api={apiInputs}\n                                isAPIProduct\n                            />\n                        )}\n                        {wizardStep === 1 && (\n                            <ProductResourcesEditWorkspace\n                                apiResources={apiResources}\n                                setApiResources={setApiResources}\n                                isStateCreate\n                                api={apiInputs}\n                            />\n                        )}\n                    </Grid>\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={9}>\n                        <Grid\n                            className={wizardStep === 1 && classes.saveButton}\n                            container\n                            direction='row'\n                            justify='flex-start'\n                            alignItems='center'\n                            spacing={2}\n                        >\n                            <Grid item>\n                                {wizardStep === 1\n                                    && (\n                                        <Button\n                                            onClick={() => setWizardStep((step) => step - 1)}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.back'\n                                                defaultMessage='Back'\n                                            />\n                                        </Button>\n                                    )}\n                                {wizardStep === 0 && (\n                                    <Link to='/apis/'>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {wizardStep === 1 && (\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid || isCreating || (apiResources.length === 0)}\n                                        onClick={createAPIProduct}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.publish'\n                                            defaultMessage='Publish'\n                                        />\n                                        {isCreating && <CircularProgress size={24} />}\n                                    </Button>\n                                )}\n                                {wizardStep === 0 && (\n                                    <Button\n                                        onClick={() => setWizardStep((step) => step + 1)}\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.next'\n                                            defaultMessage='Next'\n                                        />\n                                    </Button>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </APICreateProductBase>\n        </>\n\n    );\n}\n\nApiProductCreateWrapper.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideOpenAPI from './Steps/ProvideOpenAPI';\n\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateOpenAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateOpenAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        additionalProperties.gatewayEnvironments = ['Production and Sandbox'];\n        const newAPI = new API(additionalProperties);\n        const promisedResponse = inputType === 'file'\n            ? newAPI.importOpenAPIByFile(inputValue) : newAPI.importOpenAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.heading'\n                            defaultMessage='Create an API using an OpenAPI definition.'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.sub.heading'\n                            defaultMessage='Create an API using an existing OpenAPI definition (swagger) file or URL.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.one'\n                                defaultMessage='Provide OpenAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} />\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    {wizardStep === 0 && (\n                        <ProvideOpenAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={() => setWizardStep((step) => step - 1)}>\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateOpenAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Wsdl from 'AppData/Wsdl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\nimport ProvideWSDL from './Steps/ProvideWSDL';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateWSDL(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const { settings } = useAppContext();\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'SOAP',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n        mode: 'create',\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, type,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: type === 'SOAPTOREST' ? 'address' : 'http',\n                sandbox_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n            };\n        }\n        additionalProperties.gatewayEnvironments = settings.environment.map((env) => env.name);\n        let promisedWSDLImport;\n        if (apiInputs.inputType === 'url') {\n            promisedWSDLImport = Wsdl.importByUrl(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        } else {\n            promisedWSDLImport = Wsdl.importByFileOrArchive(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        }\n        promisedWSDLImport\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.heading'\n                            defaultMessage='Expose a SOAP Service as a REST API'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.sub.heading'\n                            defaultMessage={\n                                'Expose an existing SOAP service as a REST API by importing the WSDL of the '\n                                + 'SOAP service.'\n                            }\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={wizardStep}>\n                    <Step>\n                        <StepLabel>Provide WSDL</StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>Create API</StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideWSDL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateWSDL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\n\nimport ProvideGraphQL from './Steps/ProvideGraphQL';\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateGraphQL(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'graphQLInfo':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateGraphQL',\n        inputType: 'file',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name,\n            version,\n            context,\n            endpoint,\n            policies,\n            implementationType,\n            inputValue,\n            graphQLInfo: { operations },\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n            operations,\n        };\n        const uploadMethod = 'file';\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        additionalProperties.gatewayEnvironments = ['Production and Sandbox'];\n        const newApi = new API(additionalProperties);\n        const apiData = {\n            additionalProperties: JSON.stringify(additionalProperties),\n            implementationType,\n            [uploadMethod]: uploadMethod,\n            file: inputValue,\n        };\n\n        newApi\n            .importGraphQL(apiData)\n            .then((response) => {\n                const uuid = response.obj.id;\n                Alert.info(`${name} API created successfully`);\n                history.push(`/apis/${uuid}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.heading'\n                            defaultMessage='Create an API using a GraphQL SDL definition'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.sub.heading'\n                            defaultMessage='Create an API by importing an existing GraphQL SDL definition.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                {wizardStep === 0 && (\n                    <Stepper alternativeLabel activeStep={0}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n                {wizardStep === 1 && (\n                    <Stepper alternativeLabel activeStep={1}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideGraphQL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateGraphQL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport APICreateDefault from 'AppComponents/Apis/Create/Default/APICreateDefault';\n\nconst ApiCreateWebSocket = () => {\n    return (<APICreateDefault isWebSocket />);\n};\nexport default ApiCreateWebSocket;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\n\nimport APICreateDefault from './Default/APICreateDefault';\nimport APIProductCreateWrapper from './APIProduct/APIProductCreateWrapper';\nimport ApiCreateSwagger from './OpenAPI/ApiCreateOpenAPI';\nimport ApiCreateWSDL from './WSDL/ApiCreateWSDL';\nimport ApiCreateGraphQL from './GraphQL/ApiCreateGraphQL';\nimport ApiCreateWebSocket from './WebSocket/ApiCreateWebSocket';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n\n\n/**\n *\n * Handle routing for all types of API create creations, If you want to add new API type create page,\n * Please use `APICreateBase` and `DefaultAPIForm` components to do so , Don't wrap `APICreateDefault` component\n * @param {*} props\n * @returns @inheritdoc\n */\nfunction APICreateRoutes(props) {\n    const { classes } = props;\n    return (\n        <main className={classes.content}>\n            <Switch>\n                <Route path='/apis/create/rest' component={APICreateDefault} />\n                <Route path='/api-products/create' component={APIProductCreateWrapper} />\n                <Route path='/apis/create/graphQL' component={ApiCreateGraphQL} />\n                <Route path='/apis/create/openapi' component={ApiCreateSwagger} />\n                <Route path='/apis/create/wsdl' component={ApiCreateWSDL} />\n                <Route path='/apis/create/ws' component={ApiCreateWebSocket} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </main>\n    );\n}\n\nAPICreateRoutes.propTypes = {\n    classes: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(APICreateRoutes);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport DeleteApiButton from 'AppComponents/Apis/Details/components/DeleteApiButton';\n\nimport ThumbnailView from './ThumbnailView';\n\nconst styles = (theme) => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    providerText: {\n        textTransform: 'capitalize',\n    },\n    apiDetails: { padding: theme.spacing(1) },\n    apiActions: { justifyContent: 'space-between', padding: `0px 0px ${theme.spacing(1)}px 8px` },\n    deleteProgress: {\n        color: green[200],\n        position: 'absolute',\n        marginLeft: '200px',\n    },\n    thumbHeader: {\n        width: '90%',\n        whiteSpace: 'nowrap',\n        color: theme.palette.text.secondary,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    contextBox: {\n        width: '110px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    thumbRightBy: {\n        'margin-right': '5px',\n    },\n});\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass APIThumb extends Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isHover: false, loading: false };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n        this.handleApiDelete = this.handleApiDelete.bind(this);\n    }\n\n    /**\n     *\n     * Delete an API listed in the listing page\n     * @param {React.SyntheticEvent} event OnClick event of delete button\n     * @param {String} [name=''] API Name use for alerting purpose only\n     * @memberof Listing\n     */\n    handleApiDelete() {\n        const { api: { id, name } } = this.props;\n        this.setState({ loading: true });\n        const { updateData, isAPIProduct } = this.props;\n        if (isAPIProduct) {\n            const promisedDelete = API.deleteProduct(id);\n            promisedDelete\n                .then((response) => {\n                    if (response.status !== 200) {\n                        Alert.info('Something went wrong while deleting the API Product!');\n                        return;\n                    }\n                    updateData(id);\n                    Alert.info(`API Product ${name} deleted Successfully`);\n                    this.setState({ loading: false });\n                })\n                .catch((error) => {\n                    if (error.status === 409) {\n                        Alert.error('[ ' + name + ' ] : ' + error.response.body.description);\n                        this.setState({ loading: false });\n                    } else {\n                        Alert.error('Something went wrong while deleting the API Product!');\n                        this.setState({ loading: false });\n                    }\n                });\n        } else {\n            const promisedDelete = API.delete(id);\n            promisedDelete\n                .then((response) => {\n                    if (response.status !== 200) {\n                        Alert.info('Something went wrong while deleting the API!');\n                        return;\n                    }\n                    updateData(id);\n                    Alert.info(`API ${name} deleted Successfully`);\n                    this.setState({ loading: false });\n                })\n                .catch((error) => {\n                    if (error.status === 409) {\n                        Alert.error('[ ' + name + ' ] : ' + error.response.body.description);\n                        this.setState({ loading: false });\n                    } else {\n                        Alert.error('Something went wrong while deleting the API!');\n                        this.setState({ loading: false });\n                    }\n                });\n        }\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const { isHover, loading } = this.state;\n        let overviewPath = '';\n        if (api.apiType) {\n            overviewPath = isAPIProduct ? `/api-products/${api.id}/overview` : `/apis/${api.id}/overview`;\n        } else {\n            overviewPath = `/apis/${api.apiUUID}/documents/${api.id}/details`;\n        }\n        if (isAPIProduct) {\n            api.apiType = API.CONSTS.APIProduct;\n        } else {\n            api.apiType = API.CONSTS.API;\n        }\n\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classes.card}\n            >\n                <CardMedia src='None' component={ThumbnailView} height={140} title='Thumbnail' api={api} />\n                <CardContent className={classes.apiDetails}>\n                    <div className={classes.textWrapper}>\n                        <Link to={overviewPath}>\n                            <Typography gutterBottom variant='h4' className={classes.thumbHeader} title={api.name}>\n                                {api.name}\n                            </Typography>\n                        </Link>\n                    </div>\n                    <div className={classes.row}>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.thumbBy}>\n                            <FormattedMessage id='by' defaultMessage='By' />\n                            <FormattedMessage id='colon' defaultMessage=' : ' />\n                            {api.provider}\n                        </Typography>\n                    </div>\n                    <div className={classes.thumbInfo}>\n                        {isAPIProduct ? null : (\n                            <div className={classes.row}>\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='subtitle1'>{api.version}</Typography>\n                                </div>\n\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='caption' gutterBottom align='left'>\n                                        <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                    </Typography>\n                                </div>\n                            </div>\n                        )}\n                        <div className={classes.row}>\n                            <div className={classes.thumbRight}>\n                                <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                    {api.context}\n                                </Typography>\n                            </div>\n\n                            <div className={classes.thumbRight}>\n                                <Typography variant='caption' gutterBottom align='right' className={classes.context}>\n                                    <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                                </Typography>\n                            </div>\n                        </div>\n                    </div>\n                </CardContent>\n                <CardActions className={classes.apiActions}>\n                    <Chip\n                        label={api.apiType === API.CONSTS.APIProduct ? api.state : api.lifeCycleStatus}\n                        color='default'\n                    />\n                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                        <Chip\n                            className={classes.thumbRightBy}\n                            label={api.transportType === undefined\n                                ? api.type : api.transportType}\n                            color='primary'\n                        />\n                    )}\n                    <DeleteApiButton onClick={this.handleApiDelete} api={api} />\n                    {loading && <CircularProgress className={classes.deleteProgress} />}\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nAPIThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        apiType: PropTypes.string.isRequired,\n    }).isRequired,\n    updateData: PropTypes.func.isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(APIThumb));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\n\nimport ThumbnailView from './ThumbnailView';\n\nconst styles = (theme) => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    providerText: {\n        textTransform: 'capitalize',\n    },\n    docDetails: { padding: theme.spacing(1) },\n    docActions: { justifyContent: 'space-between', padding: `0px 0px ${theme.spacing(1)}px 0px` },\n    deleteProgress: {\n        color: green[200],\n        position: 'absolute',\n        marginLeft: '200px',\n    },\n});\n\n/**\n *\n * Render Doc Card component in Search listing card view,containing essential Doc information like doc name ,\n * source type ect\n * @class DocThumb\n * @extends {Component}\n */\nclass DocThumb extends Component {\n    /**\n     *Creates an instance of DocThumb.\n     * @param {*} props\n     * @memberof DocThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isHover: false };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof DocThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof DocThumb\n     */\n    render() {\n        const { classes, doc } = this.props;\n        const { isHover } = this.state;\n\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classes.card}\n            >\n                <CardMedia src='None' component={ThumbnailView} height={140} title='Thumbnail' api={doc} />\n                <CardContent className={classes.docDetails}>\n                    <Typography gutterBottom variant='h5' component='h2'>\n                        {doc.name}\n                    </Typography>\n                    <Grid container>\n                        <Grid item md={6}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.sourceType'\n                                defaultMessage='Source Type'\n                            />\n:\n                            <Typography variant='body1'>{doc.sourceType}</Typography>\n                        </Grid>\n                        <Grid item md={6}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.apiName'\n                                defaultMessage='Api Name'\n                            />\n:\n                            <Typography className={classes.providerText} variant='body1' gutterBottom>\n                                {doc.apiName}\n                            </Typography>\n                        </Grid>\n                        <Grid item md={6}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.apiVersion'\n                                defaultMessage='Api Version'\n                            />\n:\n                            <Typography variant='body1' gutterBottom>\n                                {doc.apiVersion}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nDocThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        sourceType: PropTypes.string.isRequired,\n        apiName: PropTypes.string.isRequired,\n        apiVersion: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(DocThumb));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        marginRight: theme.spacing(2),\n    },\n    position: {\n        zIndex: theme.zIndex.apiCreateMenu,\n    },\n});\n\n/**\n * Button with dropdown menu\n *\n * @class MenuButton\n * @extends {React.Component}\n */\nclass MenuButton extends React.Component {\n    /**\n     *Creates an instance of MenuButton.\n     * @param {Object} props @inheritdoc\n     * @memberof MenuButton\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof MenuButton\n     */\n    handleToggle() {\n        this.setState((state) => ({ open: !state.open }));\n    }\n\n    /**\n     *\n     *\n     * @param {React.SyntheticEvent} event\n     * @memberof MenuButton\n     */\n    handleClose(event) {\n        if (this.anchorEl.contains(event.target)) {\n            return;\n        }\n        this.setState({ open: false });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof MenuButton\n     */\n    render() {\n        const {\n            classes, children, menuList, buttonProps,\n        } = this.props;\n        const { open } = this.state;\n        return (\n            <>\n                <Button\n                    id='itest-id-createapi'\n                    buttonRef={(node) => {\n                        this.anchorEl = node;\n                    }}\n                    aria-owns={open ? 'menu-list-grow' : null}\n                    aria-haspopup='true'\n                    onClick={this.handleToggle}\n                    {...buttonProps}\n                >\n                    {children}\n                    {' '}\n▼\n                </Button>\n                <Popper\n                    open={open}\n                    placement='bottom-start'\n                    anchorEl={this.anchorEl}\n                    transition\n                    disablePortal\n                    className={classes.position}\n                >\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            id='menu-list-grow'\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={this.handleClose}>{menuList}</ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </>\n        );\n    }\n}\n\nMenuButton.propTypes = {\n    classes: PropTypes.shape({ position: PropTypes.shape({}) }).isRequired,\n    menuList: PropTypes.element.isRequired,\n    children: PropTypes.shape({}).isRequired,\n    buttonProps: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(MenuButton);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    List, ListItem, ListItemText, Divider,\n} from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/styles';\nimport { Link } from 'react-router-dom';\n\nimport MenuButton from 'AppComponents/Shared/MenuButton';\nimport { FormattedMessage } from 'react-intl';\nimport AuthManager from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    links: {\n        textDecoration: 'none',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n}));\n\nconst APICreateMenu = (props) => {\n    const classes = useStyles();\n\n    const createTypes = (\n        <List>\n            <ListItem>\n                <Link id='itest-id-createdefault' to='/apis/create/rest' className={classes.links}>\n                    <ListItemText\n                        primary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.rest'\n                                defaultMessage='Design a New REST API'\n                            />\n                        )}\n                        secondary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.rest'\n                                defaultMessage='Design and prototype a new REST API'\n                            />\n                        )}\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/openapi' className={classes.links}>\n                    <ListItemText\n                        primary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.swagger'\n                                defaultMessage='I Have an Existing REST API'\n                            />\n                        )}\n                        secondary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.swagger'\n                                defaultMessage='Use an existing OpenAPI definition (swagger) file or URL'\n                            />\n                        )}\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/wsdl' className={classes.links}>\n                    <ListItemText\n                        primary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.soap'\n                                defaultMessage='I Have a SOAP Endpoint'\n                            />\n                        )}\n                        secondary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.soap'\n                                defaultMessage='Use an existing SOAP or import the WSDL'\n                            />\n                        )}\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/graphQL' className={classes.links}>\n                    <ListItemText\n                        primary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.graphql'\n                                defaultMessage='I Have a GraphQL SDL schema'\n                            />\n                        )}\n                        secondary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.graphql'\n                                defaultMessage='Import a GraphQL SDL schema'\n                            />\n                        )}\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/ws' className={classes.links}>\n                    <ListItemText\n                        primary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.ws'\n                                defaultMessage='Design New WebSocket API'\n                            />\n                        )}\n                        secondary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.ws'\n                                defaultMessage='Design and prototype a new WebSocket API'\n                            />\n                        )}\n                    />\n                </Link>\n            </ListItem>\n        </List>\n    );\n    return !AuthManager.isNotCreator() && <MenuButton {...props} menuList={createTypes} />;\n};\n\nAPICreateMenu.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired,\n};\nexport default APICreateMenu;\n","const getSwagger = (policyLevel) => ({\n    paths: {\n        '/order': {\n            post: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Create a new Order',\n                parameters: [\n                    {\n                        schema: { $ref: '#/definitions/Order' },\n                        description: 'Order object that needs to be added',\n                        name: 'body',\n                        required: true,\n                        in: 'body',\n                    },\n                ],\n                responses: {\n                    201: {\n                        headers: {\n                            Location: {\n                                description: 'The URL of the newly created resource.',\n                                type: 'string',\n                            },\n                            'Content-Type': {\n                                description: 'The content type of the body.',\n                                type: 'string',\n                            },\n                        },\n                        schema: { $ref: '#/definitions/Order' },\n                        description:\n                            'Created. Successful response with the newly created object as entity in'\n                            + 'the body. Location header contains URL of newly created entity.',\n                    },\n                    400: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Bad Request. Invalid request or validation error.',\n                    },\n                    415: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Unsupported Media Type. The entity of the request was in a not supported format.',\n                    },\n                },\n            },\n        },\n        '/menu': {\n            get: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Return a list of available menu items',\n                parameters: [],\n                responses: {\n                    200: {\n                        headers: {},\n                        schema: {\n                            items: { $ref: '#/definitions/MenuItem' },\n                            type: 'array',\n                        },\n                        description: 'OK. List of APIs is returned.',\n                    },\n                    304: {\n                        description:\n                            'Not Modified. Empty body because the client has already the latest'\n                            + ' version of the requested resource.',\n                    },\n                    406: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Acceptable. The requested media type is not supported',\n                    },\n                },\n            },\n        },\n        '/order/{orderId}': {\n            put: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Update an existing Order',\n                parameters: [\n                    {\n                        description: 'Order Id',\n                        name: 'orderId',\n                        format: 'string',\n                        type: 'string',\n                        required: true,\n                        in: 'path',\n                    },\n                    {\n                        schema: { $ref: '#/definitions/Order' },\n                        description: 'Order object that needs to be added',\n                        name: 'body',\n                        required: true,\n                        in: 'body',\n                    },\n                ],\n                responses: {\n                    200: {\n                        headers: {\n                            Location: {\n                                description: 'The URL of the newly created resource.',\n                                type: 'string',\n                            },\n                            'Content-Type': {\n                                description: 'The content type of the body.',\n                                type: 'string',\n                            },\n                        },\n                        schema: { $ref: '#/definitions/Order' },\n                        description: 'OK. Successful response with updated Order',\n                    },\n                    400: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Bad Request. Invalid request or validation error',\n                    },\n                    404: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Found. The resource to be updated does not exist.',\n                    },\n                    412: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description:\n                            'Precondition Failed. The request has not been performed because one '\n                            + 'of the preconditions is not met.',\n                    },\n                },\n            },\n            get: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Get details of an Order',\n                parameters: [\n                    {\n                        description: 'Order Id',\n                        name: 'orderId',\n                        format: 'string',\n                        type: 'string',\n                        required: true,\n                        in: 'path',\n                    },\n                ],\n                responses: {\n                    200: {\n                        schema: { $ref: '#/definitions/Order' },\n                        headers: {},\n                        description: 'OK Requested Order will be returned',\n                    },\n                    304: {\n                        description:\n                            'Not Modified. Empty body because the client has already the latest'\n                            + ' version of the requested resource.',\n                    },\n                    404: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Found. Requested API does not exist.',\n                    },\n                    406: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Acceptable. The requested media type is not supported',\n                    },\n                },\n            },\n            delete: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Delete an existing Order',\n                parameters: [\n                    {\n                        description: 'Order Id',\n                        name: 'orderId',\n                        format: 'string',\n                        type: 'string',\n                        required: true,\n                        in: 'path',\n                    },\n                ],\n                responses: {\n                    200: {\n                        description: 'OK. Resource successfully deleted.',\n                    },\n                    404: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Found. Resource to be deleted does not exist.',\n                    },\n                    412: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description:\n                            'Precondition Failed. The request has not been performed because one of the'\n                            + ' preconditions is not met.',\n                    },\n                },\n            },\n        },\n    },\n    schemes: ['https'],\n    produces: ['application/json'],\n    swagger: '2.0',\n    definitions: {\n        ErrorListItem: {\n            title: 'Description of individual errors that may have occored during a request.',\n            properties: {\n                message: {\n                    description: 'Description about individual errors occored',\n                    type: 'string',\n                },\n                code: { format: 'int64', type: 'integer' },\n            },\n            required: ['code', 'message'],\n        },\n        MenuItem: {\n            title: 'Pizza menu Item',\n            properties: {\n                price: { type: 'string' },\n                description: { type: 'string' },\n                name: { type: 'string' },\n                image: { type: 'string' },\n            },\n            required: ['name'],\n        },\n        Order: {\n            title: 'Pizza Order',\n            properties: {\n                customerName: { type: 'string' },\n                delivered: { type: 'boolean' },\n                address: { type: 'string' },\n                pizzaType: { type: 'string' },\n                creditCardNumber: { type: 'string' },\n                quantity: { type: 'number' },\n                orderId: { type: 'string' },\n            },\n            required: ['orderId'],\n        },\n        Error: {\n            title: 'Error object returned with 4XX HTTP status',\n            properties: {\n                message: {\n                    description: 'Error message.',\n                    type: 'string',\n                },\n                error: {\n                    items: { $ref: '#/definitions/ErrorListItem' },\n                    description:\n                        'If there are more than one error list them out. Ex. list out validation errors by each field.',\n                    type: 'array',\n                },\n                description: {\n                    description: 'A detail description about the error message.',\n                    type: 'string',\n                },\n                code: { format: 'int64', type: 'integer' },\n                moreInfo: {\n                    description: 'Preferably an url with more details about the error.',\n                    type: 'string',\n                },\n            },\n            required: ['code', 'message'],\n        },\n    },\n    consumes: ['application/json'],\n    info: {\n        title: 'PizzaShackAPI',\n        description: 'This is a RESTFul API for Pizza Shack online pizza delivery store.\\n',\n        license: {\n            name: 'Apache 2.0',\n            url: 'http://www.apache.org/licenses/LICENSE-2.0.html',\n        },\n        contact: {\n            email: 'architecture@pizzashack.com',\n            name: 'John Doe',\n            url: 'http://www.pizzashack.com',\n        },\n        version: '1.0.0',\n    },\n});\n\nexport default getSwagger;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Redirect from 'react-router-dom/Redirect';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport Create from '@material-ui/icons/Create';\nimport GetApp from '@material-ui/icons/GetApp';\nimport { PropTypes } from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport AuthManager from 'AppData/AuthManager';\nimport APICreateMenu from '../components/APICreateMenu';\nimport getSampleSwagger from './SamplePetStore.js';\n\nconst styles = (theme) => ({\n    buttonProgress: {\n        color: green[500],\n        position: 'relative',\n    },\n    headline: {\n        paddingTop: theme.spacing(1.25),\n        paddingLeft: theme.spacing(2.5),\n    },\n    head: {\n        paddingBottom: theme.spacing(2),\n        fontWeight: 200,\n    },\n    content: {\n        paddingBottom: theme.spacing(2),\n    },\n    buttonLeft: {\n        marginRight: theme.spacing(1),\n    },\n});\n\n/**\n * Show Initial Welcome card if no APIs are available to list\n * Handle deploying a sample API (Create and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\nclass SampleAPI extends Component {\n    /**\n     *Creates an instance of SampleAPI.\n     * @param {Object} props @inheritdoc\n     * @memberof SampleAPI\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            published: false,\n            api: null,\n            deploying: false,\n        };\n        this.sampleApi = new API();\n        this.handleDeploySample = this.handleDeploySample.bind(this);\n        this.createSampleAPI = this.createSampleAPI.bind(this);\n    }\n\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof SampleAPI\n     */\n    handleDeploySample() {\n        const { intl } = this.props;\n        this.setState({ deploying: true });\n        const promisedSampleAPI = this.createSampleAPI();\n        const swaggerUpdatePromise = promisedSampleAPI.then((sampleAPI) => {\n            sampleAPI.updateSwagger(getSampleSwagger('Unlimited'));\n            return sampleAPI;\n        });\n        swaggerUpdatePromise.catch((error) => {\n            console.error(error);\n            Alert.error(error);\n        });\n        if (!AuthManager.isNotPublisher()) {\n            swaggerUpdatePromise.then((sampleAPI) => {\n                sampleAPI.publish()\n                    .then(() => {\n                        this.setState({ published: true, api: sampleAPI });\n                        Alert.info(intl.formatMessage({\n                            id: 'Apis.Listing.SampleAPI.SampleAPI.created',\n                            defaultMessage: 'Sample PizzaShackAPI API created successfully',\n                        }));\n                    })\n                    .catch((error) => {\n                        this.setState({ deploying: false });\n                        Alert.error(error);\n                    });\n            });\n        } else {\n            swaggerUpdatePromise.then((sampleApi) => {\n                this.setState({ published: true, api: sampleApi });\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Listing.SampleAPI.SampleAPI.created',\n                    defaultMessage: 'Sample PizzaShackAPI API created successfully',\n                }));\n            })\n                .catch((error) => {\n                    Alert.error(error);\n                });\n        }\n    }\n\n    /**\n     * Construct the sample API date and invoke API.create method to create API\n     * @returns {Promise} SwaggerJs client promise appending an error handler and mapping response.obj as resolved value\n     * @memberof SampleAPI\n     */\n    createSampleAPI() {\n        const data = {\n            name: 'PizzaShackAPI',\n            description: 'This is a simple API for Pizza Shack online pizza delivery store.',\n            context: '/pizzashack',\n            version: '1.0.0',\n            transport: ['http', 'https'],\n            tags: ['pizza'],\n            policies: ['Unlimited'],\n            securityScheme: ['oauth2'],\n            visibility: 'PUBLIC',\n            gatewayEnvironments: ['Production and Sandbox'],\n            businessInformation: {\n                businessOwner: 'Jane Roe',\n                businessOwnerEmail: 'marketing@pizzashack.com',\n                technicalOwner: 'John Doe',\n                technicalOwnerEmail: 'architecture@pizzashack.com',\n            },\n            endpointConfig: {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: 'https://localhost:9443/am/sample/pizzashack/v1/api/',\n                },\n                production_endpoints: {\n                    url: 'https://localhost:9443/am/sample/pizzashack/v1/api/',\n                },\n            },\n            operations: [\n                {\n                    target: '/order/{orderId}',\n                    verb: 'GET',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/order/{orderId}',\n                    verb: 'DELETE',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/order/{orderId}',\n                    verb: 'PUT',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/menu',\n                    verb: 'GET',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/order',\n                    verb: 'POST',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n            ],\n        };\n\n        const sampleAPI = new API(data);\n        return sampleAPI.save().catch((error) => {\n            console.error(error);\n            this.setState({ deploying: false });\n            const { response } = error;\n            if (response) {\n                const { code, description, message } = response.body;\n                Alert.error(`ERROR[${code}] : ${description} | ${message}`);\n            } else {\n                Alert.error(error);\n            }\n        });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof SampleAPI\n     */\n    render() {\n        const { published, api, deploying } = this.state;\n        const { classes } = this.props;\n\n        if (published && api) {\n            const url = '/apis/' + api.id + '/overview';\n            return <Redirect to={url} />;\n        }\n        return (\n            <InlineMessage type='info' height={140}>\n                <div className={classes.contentWrapper}>\n                    <Typography variant='h5' component='h3' className={classes.head}>\n                        <FormattedMessage\n                            id='welcome.to.wso2.api.manager'\n                            defaultMessage='Welcome to WSO2 API Manager'\n                        />\n                    </Typography>\n                    <Typography component='p' className={classes.content}>\n                        <FormattedMessage\n                            id='Apis.Listing.SampleAPI.SampleAPI.description'\n                            defaultMessage={\n                                'WSO2 API Publisher enables API providers to '\n                                + ' publish APIs, share documentation, provision API keys and gather feedback'\n                                + ' on features, quality and usage. To get started, Create an API '\n                                + 'or Publish a sample API.'\n                            }\n                        />\n                    </Typography>\n                    <div className={classes.actions}>\n                        <APICreateMenu buttonProps={{\n                            size: 'small',\n                            color: 'primary',\n                            variant: 'contained',\n                            className: classes.buttonLeft,\n                        }}\n                        >\n                            <Create />\n                            <FormattedMessage id='create.new.api' defaultMessage='Create New API' />\n                        </APICreateMenu>\n                        {!AuthManager.isNotCreator()\n                            && (\n                                <Button\n                                    size='small'\n                                    color='primary'\n                                    disabled={deploying}\n                                    variant='contained'\n                                    onClick={this.handleDeploySample}\n                                >\n                                    <GetApp />\n                                    <FormattedMessage id='deploy.sample.api' defaultMessage='Deploy Sample API' />\n                                    {deploying && <CircularProgress size={24} className={classes.buttonProgress} />}\n                                </Button>\n                            )}\n                    </div>\n                </div>\n            </InlineMessage>\n        );\n    }\n}\n\nSampleAPI.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SampleAPI));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/icons/List';\nimport GridOn from '@material-ui/icons/GridOn';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport APICreateMenu from './APICreateMenu';\n\nconst styles = (theme) => ({\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    buttonRight: {\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n    },\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 35,\n        paddingRight: 20,\n    },\n    mainTitleWrapper: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    APICreateMenu: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    content: {\n        flexGrow: 1,\n    },\n    createButton: {\n        color: '#000000',\n        background: '#15b8cf',\n    },\n});\n\n/**\n *\n * @param props\n * @returns {*}\n */\nfunction getTitleForArtifactType(props) {\n    const {\n        isAPIProduct, query,\n    } = props;\n    if (query) {\n        return (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.search.results' defaultMessage='Search Result(s)' />\n        );\n    } else if (isAPIProduct) {\n        return (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.apiproduct(s)'\n                defaultMessage='API Product(s)'\n            />\n        );\n    } else {\n        return (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.api(s)' defaultMessage='API(s)' />\n        );\n    }\n}\n\n/**\n *\n * Renders the top menu\n * @param {*} props\n * @returns JSX\n */\nfunction TopMenu(props) {\n    const {\n        classes, data, setListType, theme, count, isAPIProduct, listType,\n    } = props;\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    if (count > 0) {\n        return (\n            <div className={classes.root}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    {data && (\n                        <>\n                            <Typography variant='h5' className={classes.mainTitle} component='div'>\n                                {isAPIProduct ? (\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.TopMenu.apiproducts'\n                                        defaultMessage='API Products'\n                                    />\n                                ) : (\n                                    <FormattedMessage id='Apis.Listing.components.TopMenu.apis' defaultMessage='APIs' />\n                                )}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='left' component='div'>\n                                <FormattedMessage\n                                    id='Apis.Listing.components.TopMenu.displaying'\n                                    defaultMessage='Displaying'\n                                />\n                                {' '}\n                                {' '}\n                                {count}\n                                {' '}\n                                {' '}\n                                {getTitleForArtifactType(props)}\n                            </Typography>\n                        </>\n                    )}\n                </div>\n                <VerticalDivider height={70} />\n                <div className={classes.APICreateMenu}>\n                    {isAPIProduct ? (\n                        <Link to='/api-products/create'>\n                            <Button variant='contained' className={classes.createButton}>\n                                <FormattedMessage\n                                    id='Apis.Listing.components.TopMenu.create.an.api.product'\n                                    defaultMessage='Create an API Product'\n                                />\n                            </Button>\n                        </Link>\n                    ) : (\n                        <APICreateMenu buttonProps={{\n                            variant: 'contained',\n                            color: 'primary',\n                            className: classes.button,\n                        }}\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.TopMenu.create.api'\n                                defaultMessage='Create API'\n                            />\n                        </APICreateMenu>\n                    )}\n                </div>\n                <div className={classes.buttonRight}>\n                    <IconButton\n                        className={classes.button}\n                        disabled={data.length === 0}\n                        onClick={() => setListType('list')}\n                    >\n                        <List color={listType === 'list' ? 'primary' : 'default'} />\n                    </IconButton>\n                    <IconButton\n                        className={classes.button}\n                        disabled={data.length === 0}\n                        onClick={() => setListType('grid')}\n                    >\n                        <GridOn color={listType === 'grid' ? 'primary' : 'default'} />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\n\nTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    setListType: PropTypes.func.isRequired,\n    listType: PropTypes.string.isRequired,\n    data: PropTypes.shape({ length: PropTypes.number }).isRequired,\n    count: PropTypes.number.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.string,\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(TopMenu);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PropTypes } from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Create from '@material-ui/icons/Create';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport AuthManager from 'AppData/AuthManager';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\n\n\nconst useStyles = makeStyles((theme) => ({\n    head: {\n        paddingBottom: theme.spacing(2),\n        fontWeight: 200,\n    },\n    content: {\n        paddingBottom: theme.spacing(2),\n    },\n}));\n\n/**\n * Show Initial Welcome card if no APIs are available to list\n * Handle deploying a sample API (Create and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\nfunction SampleAPI() {\n    const classes = useStyles();\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof SampleAPI\n     */\n\n    return (\n        <InlineMessage type='info' height={140}>\n            <div className={classes.contentWrapper}>\n                <Typography variant='h5' component='h3' className={classes.head}>\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPIProduct.manager'\n                        defaultMessage='Welcome to WSO2 API Manager'\n                    />\n                </Typography>\n                <Typography component='p' className={classes.content}>\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPIProduct.description'\n                        defaultMessage={\n                            'The API resources in an API product can come from'\n                            + ' one or more APIs, so you can mix and match resources from multiple'\n                            + ' API resources to create specialized feature sets.'\n                        }\n                    />\n                </Typography>\n                {!AuthManager.isNotCreator() && (\n                    <div className={classes.actions}>\n                        <Link id='itest-id-createdefault' to='/api-products/create' className={classes.links}>\n                            <Button\n                                size='small'\n                                color='primary'\n                                variant='contained'\n                                className='rightAlign'\n                            >\n\n                                <Create />\n                                <FormattedMessage\n                                    id='Apis.Listing.SampleAPI.SampleAPIProduct.create.new.api.product'\n                                    defaultMessage='Create New API Product'\n                                />\n                            </Button>\n                        </Link>\n                    </div>\n                )}\n            </div>\n        </InlineMessage>\n    );\n}\n\nSampleAPI.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default withRouter(injectIntl(SampleAPI));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport Icon from '@material-ui/core/Icon';\nimport ApiThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/ApiThumb';\nimport DocThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/DocThumb';\nimport { Progress } from 'AppComponents/Shared';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport SampleAPI from 'AppComponents/Apis/Listing/SampleAPI/SampleAPI';\nimport TopMenu from 'AppComponents/Apis/Listing/components/TopMenu';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport SampleAPIProduct from 'AppComponents/Apis/Listing/SampleAPI/SampleAPIProduct';\n\nconst styles = (theme) => ({\n    contentInside: {\n        padding: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        '& > div[class^=\"MuiPaper-root-\"]': {\n            boxShadow: 'none',\n            backgroundColor: 'transparent',\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n    },\n});\n\n/**\n *\n *\n * @class TableView\n * @extends {React.Component}\n */\nclass TableView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            apisAndApiProducts: null,\n            notFound: true,\n            displayCount: 0,\n            listType: props.theme.custom.defaultApiView,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = 10;\n        this.getLocalStorage();\n        this.setListType = this.setListType.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidMount() {\n        this.getLocalStorage();\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isAPIProduct, query } = this.props;\n        if (isAPIProduct !== prevProps.isAPIProduct || query !== prevProps.query) {\n            this.getLocalStorage();\n            this.getData();\n        }\n    }\n\n    componentWillUnmount() {\n        // The foollowing is resetting the styles for the mui-datatables\n        const { theme } = this.props;\n        const themeAdditions = {\n            overrides: {\n                MUIDataTable: {\n                    tableRoot: {\n                        display: 'table',\n                        '& tbody': {\n                            display: 'table-row-group',\n                        },\n                        '& thead': {\n                            display: 'table-header-group',\n                        },\n                    },\n                },\n            },\n        };\n        Object.assign(theme, themeAdditions);\n    }\n\n    getMuiTheme = () => {\n        const { listType } = this.state;\n        const { theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                    },\n                    tableRoot: {\n                        '& tbody': {\n                            backgroundColor: '#fff',\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                    },\n                },\n                MUIDataTableHeadCell: {\n                    fixedHeader: {\n                        zIndex: -1,\n                    },\n                },\n            },\n        };\n        if (listType === 'grid') {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                backgroundColor: 'transparent',\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(theme, muiTheme, themeAdditions);\n        return createMuiTheme(muiTheme);\n    };\n\n    // get apisAndApiProducts\n    getData = () => {\n        this.xhrRequest().then((data) => {\n            const { body } = data;\n            const { list, pagination, count } = body;\n            const { total } = pagination;\n            // When there is a count stored in the localstorage and it's greater than 0\n            // We check if the response in the rest api callls have 0 items.\n            // We remove the local storage and redo the api call\n            if (this.count > 0 && total === 0) {\n                this.page = 0;\n                this.removeLocalStorage();\n                this.getData();\n            }\n            this.count = total;\n            this.setState({ apisAndApiProducts: list, notFound: false, displayCount: count });\n        });\n    };\n\n    removeLocalStorage = () => {\n        const { isAPIProduct } = this.props;\n        const paginationSufix = isAPIProduct ? 'products' : 'apis';\n        window.localStorage.removeItem('pagination-' + paginationSufix);\n    }\n\n    getLocalStorage = () => {\n        const { isAPIProduct } = this.props;\n        const paginationSufix = isAPIProduct ? 'products' : 'apis';\n        const storedPagination = window.localStorage.getItem('pagination-' + paginationSufix);\n        if (storedPagination) {\n            const pagination = JSON.parse(storedPagination);\n            if (pagination.page && pagination.count && pagination.rowsPerPage) {\n                this.page = pagination.page;\n                this.count = pagination.count;\n                this.rowsPerPage = pagination.rowsPerPage;\n            }\n        }\n    };\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    setListType = (value) => {\n        this.setState({ listType: value });\n    };\n\n    setLocalStorage = () => {\n        // Set the page to the localstorage\n        const { isAPIProduct } = this.props;\n        const paginationSufix = isAPIProduct ? 'products' : 'apis';\n        const pagination = { page: this.page, count: this.count, rowsPerPage: this.rowsPerPage };\n        window.localStorage.setItem('pagination-' + paginationSufix, JSON.stringify(pagination));\n    };\n\n    changePage = (page) => {\n        this.page = page;\n        this.xhrRequest().then((data) => {\n            const { body } = data;\n            const { list, count } = body;\n            this.setState({\n                apisAndApiProducts: list,\n                notFound: false,\n                displayCount: count,\n            });\n            this.setLocalStorage();\n        });\n    };\n\n    xhrRequest = () => {\n        const { page, rowsPerPage } = this;\n        const { isAPIProduct, query } = this.props;\n        if (query) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return API.search(composeQuery);\n        }\n        if (isAPIProduct) {\n            return APIProduct.all({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return API.all({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    /**\n     *\n     * Update APIs list if an API get deleted in card or table view\n     * @param {String} apiUUID UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    updateData() {\n        const { page, rowsPerPage, count } = this;\n        if (count - 1 === rowsPerPage * page && page !== 0) {\n            this.page = page - 1;\n        }\n        this.getData();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof TableView\n     */\n    render() {\n        const {\n            intl, isAPIProduct, classes, query,\n        } = this.props;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                            const artifact = tableViewObj.state.apisAndApiProducts[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[1];\n                            const apiId = tableMeta.rowData[0];\n                            if (isAPIProduct) {\n                                return (\n                                    <Link to={'/api-products/' + apiId + '/overview'} className={classes.apiNameLink}>\n                                        <CustomIcon width={16} height={16} icon='api-product' strokeColor='#444444' />\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents/' + apiId + '/details'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n                                            <FormattedMessage\n                                                id='Apis.Listing.TableView.TableView.doc.flag'\n                                                defaultMessage=' [Doc]'\n                                            />\n                                            <span>{apiName}</span>\n                                        </Link>\n                                    );\n                                }\n                                return (\n                                    <Link to={'/apis/' + apiId + '/overview'} className={classes.apiNameLink}>\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const {\n            apisAndApiProducts, notFound, listType, displayCount,\n        } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                    default:\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                this.rowsPerPage = numberOfRows;\n                if (page * numberOfRows > count) {\n                    this.page = 0;\n                } else if (count - 1 === rowsPerPage * page && page !== 0) {\n                    this.page = page - 1;\n                }\n                this.getData();\n                this.setLocalStorage();\n            },\n        };\n        if (listType === 'grid') {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                const artifact = tableViewObj.state.apisAndApiProducts[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <DocThumb doc={artifact} />;\n                    } else if (artifact.type === 'APIPRODUCT') {\n                        artifact.state = 'PUBLISHED';\n                        return <ApiThumb api={artifact} isAPIProduct updateData={tableViewObj.updateData} />;\n                    } else {\n                        return (\n                            <ApiThumb api={artifact} isAPIProduct={isAPIProduct} updateData={tableViewObj.updateData} />\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.customRowRender = null;\n            options.title = true;\n            options.filter = false;\n            options.print = true;\n            options.download = true;\n            options.viewColumns = true;\n        }\n\n        if (!apisAndApiProducts) {\n            return <Progress />;\n        }\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        if (apisAndApiProducts.length === 0 && !query) {\n            return (\n                <>\n                    <TopMenu\n                        data={apisAndApiProducts}\n                        count={displayCount}\n                        setListType={this.setListType}\n                        isAPIProduct={isAPIProduct}\n                        listType={listType}\n                    />\n                    <div className={classes.contentInside}>\n                        {isAPIProduct ? (\n                            <SampleAPIProduct />\n                        ) : (\n                            <SampleAPI />\n                        )}\n                    </div>\n                </>\n            );\n        }\n\n        return (\n            <>\n                <TopMenu\n                    data={apisAndApiProducts}\n                    count={displayCount}\n                    setListType={this.setListType}\n                    isAPIProduct={isAPIProduct}\n                    listType={listType}\n                    query={query}\n                />\n                <div className={classes.contentInside}>\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\n                        <MUIDataTable title='' data={apisAndApiProducts} columns={columns} options={options} />\n                    </MuiThemeProvider>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(TableView));\n\nTableView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func.isRequired }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.string,\n    }).isRequired,\n    query: PropTypes.string,\n};\n\nTableView.defaultProps = {\n    query: '',\n};\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// TODO: DO we need this component ? this is a pure proxy just passing the props through this to children ? ~tmkb\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableView from './TableView/TableView';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n/**\n * Render the APIs Listing page, This is the Default Publisher Landing page as well\n *\n * @function Listing\n * @returns {React.Component} @inheritdoc\n */\nfunction Listing(props) {\n    const {\n        classes, isAPIProduct, theme, location: { search },\n    } = props;\n    return (\n        <main className={classes.content}>\n            <TableView isAPIProduct={isAPIProduct} theme={theme} query={search} />\n        </main>\n    );\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({\n        content: PropTypes.string,\n        contentInside: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.string,\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(Listing);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Progress from 'AppComponents/Shared/Progress';\nimport AuthManager from 'AppData/AuthManager';\nimport APICreateRoutes from './Create/APICreateRoutes';\n\nimport Listing from './Listing/Listing';\n\n\nconst Details = lazy(() => import('./Details/index' /* webpackChunkName: \"DeferredDetails\" */));\nconst DeferredDetails = (props) => (\n    <Suspense fallback={<Progress message='Loading Details component ...' />}>\n        <Details {...props} />\n    </Suspense>\n);\n\n/**\n * Have used key={Date.now()} for `Route` element in `/apis` and `/api-products`\n */\nconst Apis = () => {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/apis'\n                key={Date.now()}\n                render={(props) => <Listing {...props} isAPIProduct={false} />}\n            />\n            <Route\n                exact\n                path='/api-products'\n                key={Date.now()}\n                render={(props) => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <Listing {...props} isAPIProduct />;\n                    }\n                }}\n            />\n            <Route path='/apis/search' render={(props) => <Listing {...props} isAPIProduct={false} />} />\n            <Route path='/apis/create' component={APICreateRoutes} />\n            <Route\n                path='/api-products/create'\n                render={() => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <APICreateRoutes />;\n                    }\n                }}\n            />\n            <Route path='/apis/:apiUUID/' render={(props) => <DeferredDetails {...props} isAPIProduct={false} />} />\n            <Route\n                path='/api-products/:apiProdUUID/'\n                render={(props) => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <DeferredDetails {...props} isAPIProduct />;\n                    }\n                }}\n            />\n        </Switch>\n    );\n};\n\nexport default Apis;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\n\nconst APIContext = React.createContext({\n    api: null,\n    tenantList: [],\n});\n\nconst { Provider: APIProvider } = APIContext;\n\n/**\n * withAPI HOC can be used with class style components, To get the context with hooks useContext,\n * use the default export. Using hooks is preferred over class components due to its contribution to wrapper hell\n *\n * @param {*} WrappedComponent\n * @returns {React.Component} withAPI HOC\n */\nfunction withAPI(WrappedComponent) {\n    /**\n     *\n     * Higher order component which passes the API context to its child component\n     * @param {*} props\n     * @returns\n     */\n    function HOCWithAPI(props) {\n        return <APIContext.Consumer>{(context) => <WrappedComponent {...context} {...props} />}</APIContext.Consumer>;\n    }\n    HOCWithAPI.displayName = `withAPI(${WrappedComponent.displayName})`;\n    return HOCWithAPI;\n}\n\n\n/**\n * Provide current api object and method updateAPI function to update it. To be used with hooks\n *\n * @returns {Array} Multiple return values\n */\nfunction useAPI() {\n    const { api, updateAPI } = useContext(APIContext);\n    return [api, updateAPI];\n}\n\nexport default APIContext;\n\nexport {\n    withAPI, APIProvider, APIContext, useAPI,\n};\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable */\nimport API from 'AppData/api';\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of an API Product\n */\nclass APIProduct extends Resource {\n    constructor(name, context, kwargs) {\n        super();\n        let properties = kwargs;\n        if (name instanceof Object) {\n            properties = name;\n        } else {\n            this.name = name;\n            this.version = '1.0.0';\n            this.context = context;\n            this.isDefaultVersion = false;\n            this.gatewayEnvironments = ['Production and Sandbox'];\n            this.transport = ['http', 'https'];\n            this.visibility = 'PUBLIC';\n            this.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: '',\n                },\n                production_endpoints: {\n                    url: '',\n                },\n            };\n        }\n        this._data = properties;\n        for (const key in properties) {\n            if (Object.prototype.hasOwnProperty.call(properties, key)) {\n                this[key] = properties[key];\n            }\n        }\n        this.apiType = API.CONSTS.APIProduct;\n        this.getType = this.getType.bind(this);\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {object} Metadata for API request\n     * @private\n     */\n    _requestMetaData() {\n        Resource._requestMetaData();\n    }\n\n    getType() {\n        return this.type;\n    }\n\n    getSettings() {\n        const promisedSettings = this.client.then(client => {\n            return client.apis['Settings'].get_settings();\n        });\n        return promisedSettings.then(response => response.body);\n    }\n\n    getMonetization(id, callback = null) {\n        const promiseMonetization = this.client.then(client => {\n            return client.apis['API Monetization'].get_apis__apiId__monetization(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promiseMonetization.then(response => response.body);\n    }\n\n    configureMonetizationToApiProduct(id, body) {\n        const promised_status = this.client.then(client => {\n            return client.apis['API Monetization'].post_apis__apiId__monetize({\n                apiId: id,\n                body,\n            });\n        });\n        return promised_status;\n    }\n\n    getSubscriptionPolicies(id, callback = null) {\n        const promisePolicies = this.client.then(client => {\n            return client.apis['APIs'].get_apis__apiId__subscription_policies(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisePolicies.then(response => response.body);\n    }\n\n    getMonetizationInvoice(id, callback = null) {\n        debugger;\n        const promiseInvoice = this.client.then(client => {\n            debugger;\n            return client.apis['API Monetization'].get_subscriptions__subscriptionId__usage(\n                {\n                    subscriptionId: id\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promiseInvoice.then(response => response.body);\n    }\n\n    /**\n     * Create an API Product with the given parameters in template\n     * @param {Object} api_product_data - APIProduct data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating API Product\n     */\n    saveProduct() {\n        const promisedAPIResponse = this.client.then(client => {\n            const properties = client.spec.definitions.APIProduct.properties;\n            const data = {};\n\n            Object.keys(this).forEach(apiAttribute => {\n                if (apiAttribute in properties) {\n                    if (apiAttribute != 'apiType') {\n                        data[apiAttribute] = this[apiAttribute];\n                    }\n                }\n            });\n            const payload = {\n                body: data,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Products'].post_api_products(payload, this._requestMetaData());\n        });\n        return promisedAPIResponse.then(response => {\n            return new API(response.body);\n        });\n    }\n    /**\n     * Create an API Product with the given parameters in template and call the callback method given optional.\n     * @param {Object} apiData - API data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating and optionally calling the callback method.\n     */\n    create(apiData) {\n        let payload;\n        let promise_create;\n\n        payload = {\n            body: apiData,\n            'Content-Type': 'application/json',\n        };\n        promise_create = this.client.then(client => {\n            return client.apis['API Products'].post_api_products(payload, this._requestMetaData());\n        });\n\n        return promise_create;\n    }\n    /**\n     *\n     * Instance method of the API class to provide raw JSON object\n     * which is API body friendly to use with REST api requests\n     * Use this method instead of accessing the private _data object for\n     * converting to a JSON representation of an API object.\n     * Note: This is shallow coping\n     * Basically this is the revers operation in constructor.\n     * This method simply iterate through all the object properties\n     * and copy their values to new object excluding the properties in excludes list.\n     * So use this method sparingly!!\n     * @memberof API\n     * @param {Array} [userExcludes=[]] List of properties that are need to be excluded from the generated JSON object\n     * @returns {JSON} JSON representation of the API\n     */\n    toJSON(resource = this, userExcludes = []) {\n        var copy = {},\n            excludes = ['_data', 'client', 'type', ...userExcludes];\n        for (var prop in resource) {\n            if (!excludes.includes(prop)) {\n                copy[prop] = resource[prop];\n            }\n        }\n        return copy;\n    }\n\n    /**\n     * Get details of a given APIProduct\n     * @param id {string} UUID of the api-product.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    static get(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        const promisedAPIProduct = apiClient\n            .then(client => {\n                return client.apis['API Products'].get_api_products__apiProductId_(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedAPIProduct.then(response => {\n            return new APIProduct(response.body);\n        });\n    }\n\n    /**\n     *\n     * Static method for get all API Products for current environment user.\n     * @param {Object} params API Products filtering parameters i:e { \"name\": \"MyBank Product\"}\n     * @returns {Promise} promise object return from SwaggerClient-js\n     */\n    static all(params) {\n        let query = '';\n        if (params && 'query' in params) {\n            for (const [key, value] of Object.entries(params.query)) {\n                query += `${key}:${value},`;\n            }\n            params.query = query;\n        }\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        const promisedProducts = apiClient\n            .then(client => {\n                return client.apis['API Products'].get_api_products(params, Resource._requestMetaData());\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedProducts.then(response => {\n            response.obj.apiType = API.CONSTS.APIProduct;\n            return response;\n        });\n    }\n\n    /**\n     * Update an api Product via PUT HTTP method, Need to give the updated API Product object as the argument.\n     * @param apiProduct {Object} Updated API Product object(JSON) which needs to be updated\n     */\n    update(updatedProperties) {\n        const updatedAPI = { ...this.toJSON(), ...this.toJSON(updatedProperties) };\n        const promisedUpdate = this.client.then(client => {\n            const payload = {\n                apiProductId: updatedAPI.id,\n                body: updatedAPI,\n            };\n            return client.apis['API Products'].put_api_products__apiProductId_(payload);\n        });\n        return promisedUpdate.then(response => {\n            return new APIProduct(response.body);\n        });\n    }\n\n    /**\n     * Get the thumnail of an API Product\n     *\n     * @param id {string} UUID of the api product\n     */\n    getAPIProductThumbnail(id) {\n        const promisedAPIThumbnail = this.client\n            .then(client => {\n                return client.apis['API Products'].get_api_products__apiProductId__thumbnail(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n        return promisedAPIThumbnail;\n    }\n\n    /**\n     * Add new thumbnail image to an API Product\n     *\n     * @param {String} id id of the API Product\n     * @param {File} imageFile thumbnail image to be uploaded\n     */\n    addAPIProductThumbnail(id, imageFile) {\n        const promisedAddAPIThumbnail = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId: id,\n                    file: imageFile,\n                    'Content-Type': imageFile.type,\n                };\n                return client.apis['API Products'].put_api_products__apiProductId__thumbnail(\n                    payload,\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n        return promisedAddAPIThumbnail;\n    }\n\n    /**\n     *\n     * Delete an API Product given its UUID\n     * @static\n     * @param {String} id API Product UUID\n     */\n    static delete(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient\n            .then(client => {\n                return client.apis['API Products'].delete_api_products__apiProductId_(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    /**\n     * Add document to API Product\n     * @param {*} id API Product ID to which the document should be attached\n     * @param {*} body\n     */\n    addDocument(id, body) {\n        const promisedAddDocument = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId: id,\n                    body,\n                    'Content-Type': 'application/json',\n                };\n                return client.apis['API Product Documents'].post_api_products__apiProductId__documents(\n                    payload,\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedAddDocument;\n    }\n\n    /**\n     * Returns documents attached to a given API Product\n     *\n     * @param {String} id API Product UUID\n     */\n    getDocuments(id) {\n        const promisedDocuments = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].get_api_products__apiProductId__documents(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocuments;\n    }\n\n    /**\n     * Updates a product document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} body\n     */\n    updateDocument(productId, docId, body) {\n        const promisedUpdateDocument = this.client.then(client => {\n            const payload = {\n                apiProductId: productId,\n                body,\n                documentId: docId,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents']\n                .put_api_products__apiProductId__documents__documentId_(payload, this._requestMetaData())\n                .catch(error => {\n                    console.error(error);\n                });\n        });\n        return promisedUpdateDocument;\n    }\n\n    /**\n     * Get specified document attached to specified product\n     * @param {*} productId\n     * @param {*} docId\n     */\n    getDocument(productId, docId) {\n        const promisedDocument = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].get_api_products__apiProductId__documents__documentId_(\n                    {\n                        apiProductId: productId,\n                        documentId: docId,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocument;\n    }\n\n    /**\n     * Add inline content to a INLINE type document\n     * @param {*} apiProductId API Product ID\n     * @param {*} documentId Document ID\n     * @param {*} sourceType\n     * @param {*} inlineContent Content to be added to document\n     */\n    addInlineContentToDocument(apiProductId, documentId, sourceType, inlineContent) {\n        const promise = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId,\n                    documentId,\n                    sourceType,\n                    inlineContent,\n                    'Content-Type': 'application/json',\n                };\n                return client.apis[\n                    'API Product Documents'\n                ].post_api_products__apiProductId__documents__documentId__content(\n                    payload,\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promise;\n    }\n\n    /**\n     * Get the inline content of a given document\n     * @param {*} apiProductId\n     * @param {*} docId\n     */\n    getInlineContentOfDocument(apiProductId, docId) {\n        const promisedDocContent = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId,\n                    documentId: docId,\n                };\n                return client.apis[\n                    'API Product Documents'\n                ].get_api_products__apiProductId__documents__documentId__content(payload);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocContent;\n    }\n\n    /**\n     * Delete specified document\n     * @param {*} productId\n     * @param {*} docId\n     */\n    deleteDocument(productId, docId) {\n        const promiseDeleteDocument = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].delete_api_products__apiProductId__documents__documentId_(\n                    {\n                        apiProductId: productId,\n                        documentId: docId,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promiseDeleteDocument;\n    }\n\n    /**\n     * Add a File resource to a document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} fileToDocument\n     */\n    addFileToDocument(productId, docId, fileToDocument) {\n        const promiseAddFileToDocument = this.client.then(client => {\n            const payload = {\n                apiProductId: productId,\n                documentId: docId,\n                file: fileToDocument,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents'].post_api_products__apiProductId__documents__documentId__content(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n\n        return promiseAddFileToDocument;\n    }\n\n    /**\n     * Update an api swagger via PUT HTTP method\n     * @param {*} swagger\n     */\n    updateSwagger(swagger) {\n        const promisedUpdate = this.client.then(client => {\n            const payload = {\n                apiProductId: this.id,\n                apiDefinition: JSON.stringify(swagger),\n                'Content-Type': 'multipart/form-data',\n            };\n            return client.apis['API Products']\n                .put_api_products__apiProductId__swagger(\n                    payload,\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                )\n                .catch(error => {\n                    console.error(error);\n                });\n        });\n        return promisedUpdate.then(response => {\n            return this;\n        });\n    }\n\n    /**\n     * Get the swagger of an API Product\n     * @param id {String} UUID of the API Product in which the swagger is needed\n     */\n    getSwagger(id = this.id) {\n        const promiseGet = this.client\n            .then(client => {\n                return client.apis['API Products'].get_api_products__apiProductId__swagger(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promiseGet;\n    }\n}\n\nexport default APIProduct;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Joi from '@hapi/joi';\nimport API from 'AppData/api';\nimport queryString from 'query-string';\n\n/**\n * Get the base error message for error types.\n * This error overrides the default error messages of joi and adds simple error messages.\n *\n * @param {string} errorType The joi error type\n * @return {string} simplified error message.\n * */\nfunction getMessage(errorType) {\n    switch (errorType) {\n        case 'any.empty':\n            return 'should not be empty';\n        case 'string.regex.base':\n            return 'should not contain spaces or special characters';\n        case 'string.max':\n            return 'has exceeded the maximum number of characters';\n        default:\n            return 'should not be empty';\n    }\n}\n\n/*\n* eslint validation rule for no-unused-vars has been disabled in this component.\n* According to the Joi extension, it is required to provide required four input\n* arguments to custom Joi schema validate function.\n* Ref: https://hapi.dev/family/joi/?v=15.1.1#extendextension\n*/\nconst roleSchema = Joi.extend((joi) => ({\n    base: joi.string(),\n    name: 'systemRole',\n    rules: [\n        {\n            name: 'role',\n            validate(params, value, state, options) { // eslint-disable-line no-unused-vars\n                const api = new API();\n                return api.validateSystemRole(value);\n            },\n        },\n    ],\n}));\n\nconst scopeSchema = Joi.extend((joi) => ({\n    base: joi.string(),\n    name: 'scopes',\n    rules: [\n        {\n            name: 'scope',\n            validate(params, value, state, options) { // eslint-disable-line no-unused-vars\n                const api = new API();\n                return api.validateScopeName(value);\n            },\n        },\n    ],\n}));\n\nconst userRoleSchema = Joi.extend((joi) => ({\n    base: joi.string(),\n    name: 'userRole',\n    rules: [\n        {\n            name: 'role',\n            validate(params, value, state, options) { // eslint-disable-line no-unused-vars\n                const api = new API();\n                return api.validateUSerRole(value);\n            },\n        },\n    ],\n}));\n\nconst apiSchema = Joi.extend((joi) => ({\n    base: joi.string(),\n    name: 'api',\n    rules: [\n        {\n            name: 'isAPIParameterExist',\n            validate(params, value, state, options) { // eslint-disable-line no-unused-vars\n                const inputValue = value.trim().toLowerCase();\n                const composeQuery = '?query=' + inputValue;\n                const composeQueryJSON = queryString.parse(composeQuery);\n                composeQueryJSON.limit = 1;\n                composeQueryJSON.offset = 0;\n                return API.search(composeQueryJSON);\n            },\n        },\n    ],\n}));\n\nconst documentSchema = Joi.extend((joi) => ({\n    base: joi.object(),\n    name: 'document',\n    rules: [\n        {\n            name: 'isDocumentPresent',\n            validate(params, value, state, options) { // eslint-disable-line no-unused-vars\n                const api = new API();\n                return api.validateDocumentExists(value.id, value.name);\n            },\n        },\n    ],\n}));\n\nconst definition = {\n    apiName: Joi.string().max(30).regex(/^[^~!@#;:%^*()+={}|\\\\<>\"',&$\\s+]*$/).required()\n        .error((errors) => {\n            return errors.map((error) => ({ ...error, message: 'Name ' + getMessage(error.type) }));\n        }),\n    apiVersion: Joi.string().regex(/^[^~!@#;:%^*()+={}|\\\\<>\"',&/$]+$/).required().error((errors) => {\n        const tmpErrors = [...errors];\n        errors.forEach((err, index) => {\n            const tmpError = { ...err };\n            tmpError.message = 'API Version ' + getMessage(err.type);\n            tmpErrors[index] = tmpError;\n        });\n        return tmpErrors;\n    }),\n    apiContext: Joi.string().max(60).regex(/(?!.*\\/t\\/.*|.*\\/t$)^[^~!@#:%^&*+=|\\\\<>\"',&\\s]*$/).required()\n        .error((errors) => {\n            return errors.map((error) => ({ ...error, message: 'Context ' + getMessage(error.type) }));\n        }),\n    role: roleSchema.systemRole().role(),\n    scope: scopeSchema.scopes().scope(),\n    url: Joi.string().uri().error((errors) => {\n        const tmpErrors = [...errors];\n        errors.forEach((err, index) => {\n            const tmpError = { ...err };\n            tmpError.message = 'URL ' + getMessage(err.type);\n            tmpErrors[index] = tmpError;\n        });\n        return tmpErrors;\n    }),\n    alias: Joi.string().max(30).regex(/^[^~!@#;:%^*()+={}|\\\\<>\"',&$\\s+]*$/).required()\n        .error((errors) => {\n            return errors.map((error) => ({ ...error, message: 'Alias ' + getMessage(error.type) }));\n        }),\n    userRole: userRoleSchema.userRole().role(),\n    apiParameter: apiSchema.api().isAPIParameterExist(),\n    apiDocument: documentSchema.document().isDocumentPresent(),\n    operationVerbs: Joi.array().items(Joi.string()).min(1).unique(),\n    operationTarget: Joi.string().required(),\n    name: Joi.string().min(1).max(255),\n    email: Joi.string().email({ tlds: true }).required(),\n};\n\nexport default definition;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport Fade from '@material-ui/core/Fade';\n\n// Icon size reference https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Icon/Icon.js#L48\nconst useStyles = makeStyles((theme) => ({\n    xLarge: {\n        fontSize: theme.typography.pxToRem(64),\n    },\n}));\n/**\n *\n *\n * @export\n * @returns\n */\nfunction Banner(props) {\n    const {\n        type, message, dense, history, paperProps, disableActions, open, onClose, disableClose,\n    } = props;\n    const classes = useStyles();\n    const [isOpen, setIsOpen] = useState(open);\n    const iconProps = {};\n    if (dense) {\n        iconProps.fontSize = 'large';\n    } else {\n        iconProps.className = classes.xLarge;\n    }\n\n    let bannerIcon = null;\n    let { description } = message;\n\n    let title;\n    // TODO Check for an instance of FormattedMessage as well ~tmkb\n    if (typeof message === 'string' || message instanceof String) {\n        description = message;\n        const [first, ...rest] = type;\n        title = `${first.toUpperCase()}${rest.join('')}`; // Capitalize the first letter\n    } else {\n        // If `message` is an object, we expect it to be a REST API error response object\n        title = `[${message.code}]: ${message.message}`;\n    }\n\n    // IF add,remove or modify cases update the proptypes as well\n    switch (type) {\n        case 'error':\n            bannerIcon = <ErrorIcon color='error' {...iconProps} />;\n            break;\n        case 'warning':\n            bannerIcon = <WarningIcon color='error' {...iconProps} />;\n            break;\n        case 'successes':\n            bannerIcon = <CheckCircleIcon color='error' {...iconProps} />;\n            break;\n        case 'info':\n            bannerIcon = <InfoIcon color='error' {...iconProps} />;\n            break;\n        default:\n            bannerIcon = <InfoIcon color='error' {...iconProps} />;\n            break;\n    }\n    return (\n        <Fade in={isOpen} unmountOnExit>\n            <Box clone pt={dense ? 1 : 2} pr={dense ? 0 : 1} pb={dense ? 0 : 1} pl={dense ? 1 : 2}>\n                <Paper {...paperProps}>\n                    <Grid container spacing={2} alignItems='center' wrap='nowrap'>\n                        <Grid item>{bannerIcon}</Grid>\n                        <Grid item>\n                            <Typography variant='subtitle2' display='block' gutterBottom>\n                                {title}\n                                <Typography variant='body1'>{description}</Typography>\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container justify='flex-end' spacing={1}>\n                        <Grid item>\n                            {!disableActions && (\n                                <>\n                                    <Button onClick={() => history.goBack()} color='primary'>\n                                        <FormattedMessage\n                                            id='app.components.Shared.Banner.back'\n                                            defaultMessage='Back'\n                                        />\n                                    </Button>\n                                    <Button onClick={() => window.location.reload()} color='primary'>\n                                        Refresh\n                                    </Button>\n                                </>\n                            )}\n                            {!disableClose && (\n                                <Button onClick={onClose || (() => setIsOpen(false))} color='primary'>\n                                    CLOSE\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Box>\n        </Fade>\n    );\n}\nBanner.defaultProps = {\n    dense: false,\n    type: 'info',\n    disableActions: false,\n    paperProps: { elevation: 1 },\n    open: true,\n    onClose: null,\n    disableClose: false,\n};\n\nBanner.propTypes = {\n    type: PropTypes.oneOf(['error', 'warning', 'info', 'successes']),\n    message: PropTypes.PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]).isRequired,\n    dense: PropTypes.bool,\n    open: PropTypes.bool,\n    disableClose: PropTypes.bool,\n    onClose: PropTypes.func,\n    disableActions: PropTypes.bool,\n    paperProps: PropTypes.shape({ elevation: PropTypes.number }),\n    history: PropTypes.shape({ goBack: PropTypes.func }).isRequired,\n};\n\nexport default withRouter(Banner);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport { Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst styles = (theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n});\n\n/**\n * Provide animating button element with loading animation and success icon.\n * @param {Object} props React properties\n * @returns {React.Component} Button component\n */\nconst InteractiveButton = (props) => {\n    // TODO: This prop transformation can be nicely done with ES6  (Rest/Spread Properties) if use stage 2 support ~tmkb\n    const {\n        loading,\n        success,\n        children,\n        classes,\n        color,\n        disableFocusRipple,\n        disableRipple,\n        fullWidth,\n        href,\n        mini,\n        size,\n        variant,\n    } = props;\n    const buttonProps = {\n        color,\n        disableFocusRipple,\n        disableRipple,\n        fullWidth,\n        href,\n        mini,\n        size,\n        variant,\n    };\n    const buttonClassName = classNames({\n        [classes.buttonSuccess]: success,\n    });\n    return (\n        <div className={classes.wrapper}>\n            <Button {...buttonProps} className={buttonClassName} disabled={loading}>\n                {children}\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n        </div>\n    );\n};\n\nInteractiveButton.defaultProps = {\n    loading: false,\n    success: false,\n    color: 'default',\n    disabled: false,\n    disableFocusRipple: false,\n    fullWidth: false,\n    mini: false,\n    size: 'medium',\n    type: 'button',\n    variant: 'flat',\n    disableRipple: false,\n    href: '',\n};\n\n/* porpTypes taken from MUI button class */\nInteractiveButton.propTypes = {\n    loading: PropTypes.bool,\n    success: PropTypes.bool,\n    children: PropTypes.node.isRequired,\n    classes: PropTypes.shape({\n        buttonSuccess: PropTypes.string,\n        wrapper: PropTypes.string,\n        buttonProgress: PropTypes.string,\n    }).isRequired,\n    /**\n     * The color of the component. It supports those theme colors that make sense for this component.\n     */\n    color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n    /**\n     * If `true`, the button will be disabled.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * If `true`, the  keyboard focus ripple will be disabled.\n     * `disableRipple` must also be true.\n     */\n    disableFocusRipple: PropTypes.bool,\n    /**\n     * If `true`, the ripple effect will be disabled.\n     */\n    disableRipple: PropTypes.bool,\n    /**\n     * If `true`, the button will take up the full width of its container.\n     */\n    fullWidth: PropTypes.bool,\n    /**\n     * The URL to link to when the button is clicked.\n     * If defined, an `a` element will be used as the root node.\n     */\n    href: PropTypes.string,\n    /**\n     * If `true`, and `variant` is `'fab'`, will use mini floating action button styling.\n     */\n    mini: PropTypes.bool,\n    /**\n     * The size of the button.\n     * `small` is equivalent to the dense button styling.\n     */\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    /**\n     * @ignore\n     */\n    type: PropTypes.string,\n    /**\n     * The type of button.\n     */\n    variant: PropTypes.oneOf(['flat', 'raised', 'fab']),\n};\nexport default withStyles(styles)(InteractiveButton);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Progress from './Progress';\n\nimport './redirecting.css';\n\nconst Redirecting = (props) => {\n    const { message } = props;\n\n    return (\n        <div className='redirect-flex-container'>\n            <Grid container justify='center' alignItems='center' spacing={0} className='redirect-grid-container'>\n                <Grid item lg={6} md={8} xs={10}>\n                    <Grid container alignItems='center'>\n                        <Grid item sm={2} xs={12}>\n                            <Progress className='redirect-loadingbar' />\n                        </Grid>\n                        <Grid item sm={10} xs={12}>\n                            <div className='redirect-main-content'>\n                                <Paper elevation={5} square className='redirect-paper'>\n                                    {message}\n                                </Paper>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nRedirecting.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Redirecting;\n","import Alert from './Alert';\nimport ConfirmDialog from './ConfirmDialog';\nimport InteractiveButton from './InteractiveButton';\nimport Progress from './Progress';\nimport Redirecting from './Redirecting';\n\nexport {\n    Alert, ConfirmDialog, InteractiveButton, Progress, Redirecting,\n};\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* TODO: Move this file to components/Shared/ location ~tmkb */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport APIClient from 'AppData/APIClient';\nimport AuthManager from 'AppData/AuthManager';\n\nconst resourcePath = {\n    APIS: '/apis',\n    API_PRODUCTS: '/api-products',\n    SINGLE_API: '/apis/{apiId}',\n    SINGLE_API_PRODUCT: '/api-products/{apiProductId}',\n    API_SWAGGER: '/apis/{apiId}/swagger',\n    API_WSDL: '/apis/{apiId}/wsdl',\n    API_GW_CONFIG: '/apis/{apiId}/gateway-config',\n    API_THUMBNAIL: '/apis/{apiId}/thumbnail',\n    API_COPY: '/apis/copy-api',\n    API_LC_HISTORY: '/apis/{apiId}/lifecycle-history',\n    API_CHANGE_LC: '/apis/change-lifecycle',\n    API_LC: '/apis/{apiId}/lifecycle',\n    API_LC_PENDING_TASK: '/apis/{apiId}/lifecycle/lifecycle-pending-task',\n    API_DEF: '/apis/import-definition',\n    API_VALIDATE_DEF: '/apis/validate-definition',\n    API_DOCS: '/apis/{apiId}/documents',\n    API_DOC: \"'/apis/{apiId}/documents/{documentId}'\",\n    API_DOC_CONTENT: \"'/apis/{apiId}/documents/{documentId}/content'\",\n    EXPORT_APIS: '/export/apis',\n    IMPORT_APIS: '/import/apis',\n    SUBSCRIPTION: '/subscriptions',\n    SUBSCRIPTIONS: '/subscriptions',\n    BLOCK_SUBSCRIPTION: '/subscriptions/block-subscription',\n    UNBLOCK_SUBSCRIPTION: '/subscriptions/unblock-subscription',\n    POLICIES: \"'/policies/{tierLevel}'\",\n    POLICY: \"'/policies/{tierLevel}/{tierName}'\",\n    ENDPOINTS: '/endpoints',\n    ENDPOINT: '/endpoints/{endpointId}',\n    LABLES: '/labels',\n    WORKFLOW: '/workflows/{workflowReferenceId}',\n    SERVICE_DISCOVERY: '/external-resources/services',\n};\n\nconst resourceMethod = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n};\n\n/**\n * Show element iff user has proper scope for the view/action\n * @class ScopeValidation\n * @extends {React.Component}\n */\nexport default class ScopeValidation extends React.Component {\n    /**\n     *\n     * Get scope for resources\n     * @static\n     * @param {String} resourcePath\n     * @param {String} resourceMethod\n     * @returns Boolean\n     * @memberof AuthManager\n     */\n    static hasScopes(currentResourcePath, currentResourceMethod) {\n        const userScopes = AuthManager.getUser().scopes;\n        const validScope = APIClient.getScopeForResource(currentResourcePath, currentResourceMethod);\n        return validScope.then((scope) => {\n            return userScopes.includes(scope);\n        });\n    }\n\n    /**\n     * Creates an instance of ScopeValidation.\n     * @param {any} props @inheritDoc\n     * @memberof ScopeValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof ScopeValidation\n     */\n    componentDidMount() {\n        const { resourcePath: currentResourcePath, resourceMethod: currentResourceMethod } = this.props;\n        const hasScope = ScopeValidation.hasScopes(currentResourcePath, currentResourceMethod);\n        hasScope.then((haveScope) => {\n            this.setState({ haveScope });\n        });\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Return react component\n     * @memberof ScopeValidation\n     */\n    render() {\n        const { children } = this.props;\n        const { haveScope } = this.state;\n        if (haveScope) {\n            return children || null;\n        }\n        return null;\n    }\n}\n\nScopeValidation.propTypes = {\n    children: PropTypes.node.isRequired,\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n};\n\nexport { ScopeValidation, resourceMethod, resourcePath };\n","import React from 'react';\nimport {\n    Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * React component for handling confirmation dialog box.\n * @class ConfirmDialog\n * @extends {React.Component}\n */\nexport default function ConfirmDialog(props) {\n    const {\n        title, message, labelCancel, labelOk, open, callback,\n    } = props;\n\n    /**\n     * If user confirms the action invoke the callback with true else false\n     * @param {String} action One of ConfirmDialog.Action actions\n     * @memberof ConfirmDialog\n     */\n    function handleRequestClose(action) {\n        if (action === ConfirmDialog.Action.OK) {\n            callback(true);\n        } else {\n            callback(false);\n        }\n    }\n\n    return (\n        <Dialog open={open} onClose={handleRequestClose}>\n            <DialogTitle>{title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText>{message}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => handleRequestClose(ConfirmDialog.Action.CANCEL)} color='primary'>\n                    {labelCancel}\n                </Button>\n                <Button onClick={() => handleRequestClose(ConfirmDialog.Action.OK)} color='primary'>\n                    {labelOk}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nConfirmDialog.defaultProps = {\n    title: <FormattedMessage id='Apis.Shared.ConfirmDialog.please.confirm' defaultMessage='Please Confirm' />,\n    message: <FormattedMessage id='Apis.Shared.ConfirmDialog.are.you.sure' defaultMessage='Are you sure?' />,\n    labelOk: <FormattedMessage id='Apis.Shared.ConfirmDialog.ok' defaultMessage='OK' />,\n    labelCancel: <FormattedMessage id='Apis.Shared.ConfirmDialog.cancel' defaultMessage='Cancel' />,\n    callback: () => {},\n};\nConfirmDialog.propTypes = {\n    title: PropTypes.string,\n    message: PropTypes.string,\n    labelCancel: PropTypes.string,\n    labelOk: PropTypes.string,\n    open: PropTypes.bool.isRequired,\n    callback: PropTypes.func,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nConfirmDialog.Action = {\n    OK: 'ok',\n    CANCEL: 'cancel',\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <svg width={width} height={height} className={classes.svgImage}>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    width: PropTypes.shape({}).isRequired,\n    height: PropTypes.shape({}).isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport MaterialIcons from 'MaterialIcons';\nimport Background from './Background';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        '& span': {\n            position: 'absolute',\n            left: '50%',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        if (!str) str = 'default';\n        let count;\n        let colorPair;\n        let randomBackgroundIndex;\n        let IconElement;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        if (key && category) {\n            IconElement = key;\n        } else if (api.type === 'DOC') {\n            IconElement = theme.custom.thumbnail.document.icon;\n        } else {\n            count = MaterialIcons.categories[0].icons.length;\n            const randomIconIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % count;\n            IconElement = MaterialIcons.categories[0].icons[randomIconIndex].id;\n        }\n\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (typeof backgroundIndex === 'number' && colorPairs.length > backgroundIndex) {\n            // Obtain or generate background color pair\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height, marginLeft: -height / 2, color }}>\n                    {IconElement}\n                </Icon>\n                <Background width={width} height={height} colorPair={colorPair} />\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    iconSettings: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport { SketchPicker } from 'react-color';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport MaterialIcons from 'MaterialIcons';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Configurations from 'Config';\n\nimport ImageGenerator from './ImageGenerator';\nimport Background from './Background';\n\nconst windowURL = window.URL || window.webkitURL;\nconst dropzoneStyles = {\n    border: '1px dashed ',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\nconst styles = (theme) => ({\n    acceptDrop: {\n        backgroundColor: green[50],\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 'calc(100vh - 10em)',\n        padding: `${theme.spacing(2)}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span': {\n            fontSize: 100,\n            color: theme.palette.primary.main,\n        },\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    preview: {\n        height: theme.spacing(25),\n    },\n    rejectDrop: {\n        backgroundColor: red[50],\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    thumb: {\n        '&:hover': {\n            zIndex: 1,\n            '& $thumbBackdrop': {\n                opacity: 0.2,\n            },\n        },\n    },\n    thumbBackdrop: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.common.black,\n        opacity: 0.4,\n    },\n    thumbButton: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.common.white,\n    },\n    group: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: '0 0 0 20px',\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    iconView: {\n        width: 30,\n        margin: 10,\n        cursor: 'pointer',\n    },\n    subtitle: {\n        marginRight: 20,\n    },\n    subtitleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    body: {\n        marginBottom: 10,\n    },\n    imageGenWrapper: {\n        '& > div': {\n            position: 'fixed',\n            marginTop: 20,\n        },\n    },\n    backgroundSelection: {\n        cursor: 'pointer',\n        marginRight: 10,\n        display: 'inline-block',\n        border: 'solid 1px #ccc',\n    },\n    actionBox: {\n        boxShadow:\n            '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n        justifyContent: 'flex-start',\n        padding: '10px 0 10px 10px',\n    },\n    imageContainer: {\n        paddingTop: 10,\n    },\n});\n\n/**\n * Give the icons array from category name\n *\n * @param {*} category\n * @param {*} allKeys\n * @returns\n */\nfunction FindCategoryKeys(category) {\n    for (let i = 0; i < MaterialIcons.categories.length; i++) {\n        if (MaterialIcons.categories[i].name === category) {\n            return MaterialIcons.categories[i].icons;\n        }\n    }\n}\n/**\n * Slide up transition for modal\n *\n * @param {any} props Properties\n * @returns {Slide} Slide up transition\n */\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n/**\n * Provides a view for the API Thumbnail image.\n * This can be either user defined image uploaded earlier or a generated Image.\n */\nclass ThumbnailView extends Component {\n    /**\n     * Initializes the ThumbnailView Component\n     *\n     * @param {any} props Component properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            file: null,\n            thumbnail: null,\n            selectedTab: 'design',\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            selectedIconUpdate: null,\n            color: null,\n            colorUpdate: null,\n            backgroundIndex: null,\n            backgroundIndexUpdate: null,\n            uploading: false,\n            imageLoaded: false,\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    /**\n     * Load required data for showing the thumbnail view\n     */\n    componentDidMount() {\n        this.loadImage();\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.imageUpdate !== prevProps.imageUpdate) {\n            this.loadImage();\n        }\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.thumbnail);\n        }\n    }\n\n    /**\n     * Event listener for file drop on the dropzone\n     *\n     * @param {File} acceptedFile dropped file\n     */\n    onDrop(acceptedFile) {\n        this.setState({ file: acceptedFile });\n    }\n\n\n    /**\n     * @param {SyntheticEvent} e React event object\n     */\n    handleClick = (action, intl) => () => {\n        if (action === 'btnEditAPIThumb') {\n            this.setState({ open: true });\n        } else if (action === 'btnUploadAPIThumb') {\n            const { api } = this.props;\n            const {\n                selectedTab, selectedIconUpdate, category, colorUpdate, backgroundIndexUpdate, file,\n            } = this.state;\n            let fileObj;\n            if (selectedTab === 'upload') {\n                if (!api.id && !file) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.validation.error',\n                        defaultMessage: 'Invalid file or API information is not set correctly.',\n                    }));\n                    return;\n                }\n                /* eslint prefer-destructuring: [\"error\", {VariableDeclarator: {object: true}}] */\n                fileObj = file[0];\n            } else {\n                if (!selectedIconUpdate && !colorUpdate && !backgroundIndexUpdate) {\n                    Alert.error(intl.formatMessage({\n                        id: 'the.icon.is.not.modified',\n                        defaultMessage: 'The icon is not modified',\n                    }));\n                    return;\n                }\n                const newIconJson = {\n                    key: selectedIconUpdate,\n                    category,\n                    color: colorUpdate,\n                    backgroundIndex: backgroundIndexUpdate,\n                };\n                const blob = new Blob([JSON.stringify(newIconJson)], { type: 'application/json' });\n                fileObj = new File([blob], 'FileName.json', { type: 'application/json' });\n            }\n\n            this.uploadThumbnail(selectedTab, api.id, fileObj, intl);\n        }\n    };\n\n\n    handleChange = (event, selectedTab) => {\n        this.setState({ selectedTab });\n    };\n\n    handleSelectionChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    selectIcon = (selectedIconUpdate) => {\n        this.setState({ selectedIconUpdate });\n    };\n\n    handleChangeComplete = (colorUpdate) => {\n        this.setState({ colorUpdate: colorUpdate.hex });\n    };\n\n    selectBackground = (backgroundIndexUpdate) => {\n        this.setState({ backgroundIndexUpdate });\n    };\n\n\n    /**\n     * Handle modal close event\n     */\n    handleClose() {\n        const { file, preview } = this.state;\n        if (file) {\n            windowURL.revokeObjectURL(preview);\n        }\n        this.setState((cState) => ({\n            open: false,\n            file: null,\n            colorUpdate: cState.color,\n            backgroundIndexUpdate: cState.background,\n            selectedIconUpdate: cState.selectedIcon,\n        }));\n    }\n\n    /**\n     * Add new thumbnail image to an API\n     *\n     * @param {String} apiId ID of the API to be updated\n     * @param {File} file new thumbnail image file\n     */\n    uploadThumbnail(selectedTab, apiId, file, intl) {\n        this.setState({ uploading: true });\n        const {\n            api: { apiType, id },\n            setImageUpdate,\n        } = this.props;\n        const promisedThumbnail = apiType === Api.CONSTS.APIProduct\n            ? new APIProduct().addAPIProductThumbnail(id, file)\n            : new Api().addAPIThumbnail(id, file);\n\n        promisedThumbnail\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.upload.success',\n                    defaultMessage: 'Thumbnail uploaded successfully',\n                }));\n                if (selectedTab === 'upload') {\n                    this.setState({ open: false, thumbnail: windowURL.createObjectURL(file) });\n                } else {\n                    this.setState((cState) => ({\n                        open: false,\n                        thumbnail: file.preview,\n                        selectedIcon: cState.selectedIconUpdate,\n                        color: cState.colorUpdate,\n                        backgroundIndex: cState.backgroundIndexUpdate,\n                    }));\n                }\n                setImageUpdate();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.upload.error',\n                    defaultMessage: 'Error occurred while uploading new thumbnail. Please try again.',\n                }));\n            })\n            .finally(() => {\n                this.setState({ uploading: false });\n            });\n    }\n\n    /**\n     * Load the image from the backend and keeps in the component state\n     *\n     * @memberof ThumbnailView\n     */\n    loadImage() {\n        const {\n            api: { apiType, id, type },\n        } = this.props;\n        if (type !== 'DOC') {\n            const promisedThumbnail = apiType === Api.CONSTS.APIProduct\n                ? new APIProduct().getAPIProductThumbnail(id)\n                : new Api().getAPIThumbnail(id);\n\n            promisedThumbnail.then((response) => {\n                if (response && response.data) {\n                    if (response.headers['content-type'] === 'application/json') {\n                        const iconJson = JSON.parse(response.data);\n                        this.setState({\n                            selectedIcon: iconJson.key,\n                            selectedIconUpdate: iconJson.key,\n                            category: iconJson.category,\n                            color: iconJson.color,\n                            colorUpdate: iconJson.color,\n                            backgroundIndex: iconJson.backgroundIndex,\n                            backgroundIndexUpdate: iconJson.backgroundIndex,\n                            thumbnail: null,\n                        });\n                    } else if (response && response.data.size > 0) {\n                        const url = windowURL.createObjectURL(response.data);\n                        this.setState({ thumbnail: url });\n                    }\n                }\n            }).finally(() => {\n                this.setState({ imageLoaded: true });\n            });\n        }\n    }\n\n    saveDisableEnable() {\n        const {\n            file, selectedTab, selectedIconUpdate, colorUpdate, backgroundIndexUpdate, uploading,\n        } = this.state;\n        if (selectedTab === 'upload') {\n            return !(file && file[0]) || uploading; // If no files is uploaded retrun true\n        } else {\n            // If one of them is selected we return false\n            return !(selectedIconUpdate || backgroundIndexUpdate || colorUpdate) || uploading;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            api, classes, width, height, isEditable, theme, intl,\n        } = this.props;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n        const {\n            file,\n            thumbnail,\n            selectedTab,\n            selectedIcon,\n            selectedIconUpdate,\n            color,\n            colorUpdate,\n            backgroundIndex,\n            backgroundIndexUpdate,\n            uploading,\n            imageLoaded,\n        } = this.state;\n        let { category } = this.state;\n        if (!category) category = MaterialIcons.categories[0].name;\n        let overviewPath = '';\n        if (api.apiType) {\n            overviewPath = api.apiType === Api.CONSTS.APIProduct\n                ? `/api-products/${api.id}/overview` : `/apis/${api.id}/overview`;\n        } else {\n            overviewPath = `/apis/${api.apiUUID}/documents/${api.id}/details`;\n        }\n        let view;\n        if (!imageLoaded) {\n            view = (\n                <div className='image-load-frame'>\n                    <div className='image-load-animation1' />\n                    <div className='image-load-animation2' />\n                </div>\n            );\n        } else if (thumbnail) {\n            view = <img height={height} width={width} src={thumbnail} alt='API Thumbnail' className={classes.media} />;\n        } else {\n            view = (\n                <ImageGenerator\n                    width={width}\n                    height={height}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n\n        return (\n            <>\n                {isEditable ? (\n                    <ButtonBase\n                        focusRipple\n                        className={classes.thumb}\n                        onClick={this.handleClick('btnEditAPIThumb', intl)}\n                    >\n                        {view}\n                        <span className={classes.thumbBackdrop} />\n                        <span className={classes.thumbButton}>\n                            <Typography component='span' variant='subtitle1' color='inherit'>\n                                <EditIcon />\n                            </Typography>\n                        </span>\n                    </ButtonBase>\n                ) : (\n                    <Link className={classes.suppressLinkStyles} to={overviewPath}>\n                        {view}\n                    </Link>\n                )}\n\n                <Dialog\n                    TransitionComponent={Transition}\n                    aria-labelledby='thumb-dialog-title'\n                    disableBackdropClick\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth='true'\n                    maxWidth='lg'\n                    fullScreen\n                >\n                    <Paper square className={classes.popupHeader}>\n                        <IconButton color='inherit' onClick={this.handleClose} aria-label='Close'>\n                            <Icon>close</Icon>\n                        </IconButton>\n                        <RadioGroup\n                            aria-label='APIThumbnail'\n                            name='apiThumbnail'\n                            className={classes.group}\n                            value={this.state.selectedTab}\n                            onChange={this.handleChange}\n                        >\n                            <FormControlLabel\n                                value='design'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.design'\n                                        defaultMessage='Design'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                value='upload'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.upload'\n                                        defaultMessage='Upload'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </Paper>\n\n                    <DialogContent>\n                        {selectedTab === 'upload' && (\n                            <Grid container spacing={4}>\n                                <Grid item xs={3}>\n                                    <div className={classes.imageContainer}>\n                                        <img\n                                            className={classes.preview}\n                                            src={\n                                                file && file.length > 0\n                                                    ? windowURL.createObjectURL(file[0])\n                                                    : Configurations.app.context\n                                                      + '/site/public/images/api/api-default.png'\n                                            }\n                                            alt='Thumbnail Preview'\n                                        />\n                                    </div>\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <Dropzone\n                                        multiple={false}\n                                        accept='image/*'\n                                        className={classes.dropzone}\n                                        activeClassName={classes.acceptDrop}\n                                        rejectClassName={classes.rejectDrop}\n                                        onDrop={(dropFile) => {\n                                            this.onDrop(dropFile);\n                                        }}\n                                    >\n                                        {({ getRootProps, getInputProps }) => (\n                                            <div {...getRootProps({ style: dropzoneStyles })}>\n                                                <input {...getInputProps()} />\n                                                <div className={classes.dropZoneWrapper}>\n                                                    <Icon className={classes.dropIcon}>cloud_upload</Icon>\n                                                    <Typography>\n                                                        <FormattedMessage\n                                                            id='upload.image'\n                                                            defaultMessage='Click or drag the image to upload.'\n                                                        />\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Dropzone>\n                                </Grid>\n                            </Grid>\n                        )}\n                        {selectedTab === 'design' && (\n                            <Grid container spacing={4}>\n                                <Grid item xs={3} className={classes.imageGenWrapper}>\n                                    <ImageGenerator\n                                        width={width}\n                                        height={height}\n                                        api={api}\n                                        fixedIcon={{\n                                            key: selectedIconUpdate,\n                                            color: colorUpdate,\n                                            backgroundIndex: backgroundIndexUpdate,\n                                            category,\n                                            api,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Listing.components'\n                                                    + '.ImageGenerator.ThumbnailView.select.category'\n                                                }\n                                                defaultMessage='Select Category'\n                                            />\n                                        </Typography>\n                                        <Select\n                                            native\n                                            value={this.state.category}\n                                            onChange={this.handleSelectionChange('category')}\n                                        >\n                                            {MaterialIcons.categories.map((cat) => (\n                                                <option value={cat.name}>{cat.name}</option>\n                                            ))}\n                                        </Select>\n                                    </div>\n                                    <Typography component='p' variant='body1' className={classes.body}>\n                                        <FormattedMessage\n                                            id='Apis.Listing.components.ImageGenerator.ThumbnailView.select.an.icon'\n                                            defaultMessage='Select an icon from the Material Icons for your API.'\n                                        />\n                                    </Typography>\n                                    <div style={{ background: '#efefef', maxHeight: 180, overflow: 'scroll' }}>\n                                        {FindCategoryKeys(category).map((icon) => (\n                                            <Icon className={classes.iconView} onClick={() => this.selectIcon(icon.id)}>\n                                                {icon.id}\n                                            </Icon>\n                                        ))}\n                                    </div>\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Listing.components.ImageGenerator.ThumbnailView.select.'\n                                                    + 'color.for.the.icon'\n                                                }\n                                                defaultMessage='Select a color for the icon'\n                                            />\n                                        </Typography>\n                                    </div>\n                                    <SketchPicker\n                                        color={this.state.color || '#ffffff'}\n                                        onChangeComplete={this.handleChangeComplete}\n                                    />\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Listing.components.ImageGenerator.'\n                                                    + 'ThumbnailView.select.background'\n                                                }\n                                                defaultMessage='Select a Background'\n                                            />\n                                        </Typography>\n                                    </div>\n                                    {colorPairs.map((colorPair, index) => (\n                                        <div\n                                            className={classes.backgroundSelection}\n                                            onClick={() => this.selectBackground(index)}\n                                            onKeyDown={() => {}}\n                                        >\n                                            <Background width={100} height={100} colorPair={colorPair} />\n                                        </div>\n                                    ))}\n                                </Grid>\n                            </Grid>\n                        )}\n                    </DialogContent>\n                    <DialogActions className={classes.actionBox}>\n                        <Button\n                            disabled={this.saveDisableEnable()}\n                            variant='contained'\n                            color='primary'\n                            size='small'\n                            onClick={this.handleClick('btnUploadAPIThumb', intl)}\n                        >\n                            {selectedTab === 'design' && uploading && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.saving.btn'\n                                        defaultMessage='Saving'\n                                    />\n                                    <CircularProgress size={16} />\n                                </>\n                            )}\n                            {selectedTab === 'design' && !uploading && (\n                                <FormattedMessage\n                                    id='Apis.Listing.components.ImageGenerator.ThumbnailView.save.btn'\n                                    defaultMessage='Save'\n                                />\n                            )}\n\n                            {selectedTab !== 'design' && uploading && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.uploading.btn'\n                                        defaultMessage='Uploading'\n                                    />\n                                    <CircularProgress size={16} />\n                                </>\n                            )}\n                            {selectedTab !== 'design' && !uploading && (\n                                <FormattedMessage\n                                    id='Apis.Listing.components.ImageGenerator.ThumbnailView.upload.btn'\n                                    defaultMessage='Upload'\n                                />\n                            )}\n                        </Button>\n\n                        <Button variant='contained' size='small' onClick={this.handleClose}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.ThumbnailView.cancel.btn'\n                                defaultMessage='CANCEL'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nThumbnailView.defaultProps = {\n    height: 190,\n    width: 250,\n    isEditable: false,\n};\n\nThumbnailView.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    isEditable: PropTypes.bool,\n    intl: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    imageUpdate: PropTypes.number.isRequired,\n    setImageUpdate: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withAPI(withStyles(styles, { withTheme: true })(ThumbnailView)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport { useTheme } from '@material-ui/core/styles';\n\n/**\n *\n * Convert raw byte values to human readable format\n * @param {Number} bytes number of bytes\n * @param {boolean} [si=false]\n * @returns {String} Human readable string format\n */\nexport function humanFileSize(bytesParam, si = false) {\n    let bytes = bytesParam; // To prevent `no-param-reassign` eslint rule violation\n    const thresh = si ? 1000 : 1024;\n    if (Math.abs(bytes) < thresh) {\n        return bytes + ' B';\n    }\n    const units = si\n        ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\n    let u = -1;\n    do {\n        bytes /= thresh;\n        ++u;\n    } while (Math.abs(bytes) >= thresh && u < units.length - 1);\n    return bytes.toFixed(1) + ' ' + units[u];\n}\n\nconst baseStyle = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '100px 20px',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n};\n\nconst activeStyle = {\n    borderColor: '#2196f3',\n};\n\nconst acceptStyle = {\n    borderColor: '#00e676',\n};\n\nconst rejectStyle = {\n    borderColor: '#ff1744',\n};\n\n/**\n *\n * Provide a class friendly Dropzone wrapper using hooks.\n * @export\n * @returns\n */\nexport default function DropZoneLocal(props) {\n    const {\n        message, onDrop, error, children, accept,\n    } = props;\n    const dropZoneObject = useDropzone({ onDrop });\n    const {\n        getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject,\n    } = dropZoneObject;\n\n    const style = useMemo(\n        () => ({\n            ...baseStyle,\n            ...(isDragActive ? activeStyle : {}),\n            ...(isDragAccept ? acceptStyle : {}),\n            ...(isDragReject ? rejectStyle : {}),\n        }),\n        [isDragActive, isDragReject, error],\n    );\n    const theme = useTheme();\n\n    const containerStyles = {\n        fontFamily: theme.typography.fontFamily,\n        textAlign: 'center',\n    };\n\n    return (\n        <section className='container' style={containerStyles}>\n            <div {...getRootProps({ style })}>\n                <input {...getInputProps()} multiple={false} accept={accept} />\n                {children || <p>{message}</p>}\n            </div>\n        </section>\n    );\n}\nDropZoneLocal.defaultProps = {\n    message: \"Drag 'n' drop some files here, or click to select files\",\n    onDrop: () => {},\n    showFilesList: true,\n    children: null,\n    error: false,\n    accept: '*',\n};\nDropZoneLocal.propTypes = {\n    message: PropTypes.string,\n    onDrop: PropTypes.func,\n    accept: PropTypes.string,\n    showFilesList: PropTypes.bool,\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]),\n    error: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({})]),\n};\n"],"sourceRoot":""}