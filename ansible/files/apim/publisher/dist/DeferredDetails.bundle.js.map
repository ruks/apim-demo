{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Apis/Details/components/LastUpdatedTime.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Resources.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Operations.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/ProductResources.jsx","webpack:///./source/src/app/data/stringFormatter.js","webpack:///./source/src/app/components/Apis/Details/NewOverview/Policies.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Configuration.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/CustomizedStepper.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/BusinessInformation.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/MetaData.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Overview.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/DefaultVersion.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Description.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/AccessControl.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/StoreVisibility.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Tags.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APICategories.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/DesignConfigurations.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/ResponseCaching.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/CORSConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/SchemaValidation.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/MaxBackendTps.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/EditMediationPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Flow.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/apiSecurityConstants.js","webpack:///./source/src/app/components/Apis/Details/Configuration/components/AuthorizationHeader.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/ApplicationLevel.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/SelectEndpoint.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/UploadCertificate.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/Certificates.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Transports.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/TransportLevel.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/APISecurity.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/RuntimeConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleImage.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/CheckboxLabels.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifecyclePending.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleUpdate.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleHistory.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycle.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/CreateEditForm.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/GoToEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Create.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/MarkdownEditor.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Edit.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Delete.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/DeleteMultiple.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Download.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Listing.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/View.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/EditContent.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/index.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/APIRateLimiting.jsx","webpack:///./source/src/app/components/Apis/Details/Operations/Operation.jsx","webpack:///./source/src/app/components/Apis/Details/Operations/Operations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/DescriptionAndSummary.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/operationUtils.js","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/OperationGovernance.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/AWSLambdaSettings.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/parameterUtils.js","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/AddParameter.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/RequestBody.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/EditParameter.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/ListParameters.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/Parameters.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/CloseConfirmation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/PolicyEditor.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/SOAPToRESTListing.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/Operation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/GroupOfOperations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/SpecErrors.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/AddOperation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/GoToDefinitionLink.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/OperationsSelector.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/SaveOperations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/Resources.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/APIOperations.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/APIProductOperations.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/ProductResourcesEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/NewEndpointCreate.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/GenericResource.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/InlineEndpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/endpointUtils.js","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/EndpointSecurity.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GenericEndpoint.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GenericEndpointAdd.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/EndpointListing.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/LoadBalanceConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/LoadbalanceFailoverConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/AdvancedConfig/AdvanceEndpointConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/AWSLambda/Credentials.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/EndpointOverview.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/MicroGateway.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/Invoice.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionsTable.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionPoliciesManage.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/TenantAutocomplete.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionAvailability.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/Subscriptions.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentAdd.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentOptions.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentReply.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comment.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comments.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/CreateScope.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/EditScope.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/Delete.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/Scopes.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/index.jsx","webpack:///./source/src/app/components/Apis/Details/Security/AddPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/Security/SecurityOverview.jsx","webpack:///./source/src/app/components/Apis/Details/Security/index.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/APISecurityAudit.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/ImportDefinition.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/APIDefinition.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/WSDL.jsx","webpack:///./source/src/app/components/Apis/Details/GoTo/RouteMappings.jsx","webpack:///./source/src/app/components/Apis/Details/GoTo/GoTo.jsx","webpack:///./source/src/app/components/Apis/Details/components/CreateNewVersionButton.jsx","webpack:///./source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx","webpack:///./source/src/app/components/Apis/Details/BusinessInformation/BusinessInformation.jsx","webpack:///./source/src/app/components/Apis/Details/Properties/EditableRow.jsx","webpack:///./source/src/app/components/Apis/Details/Properties/Properties.jsx","webpack:///./source/src/app/components/Apis/Details/Monetization/BusinessPlans.jsx","webpack:///./source/src/app/components/Apis/Details/Monetization/index.jsx","webpack:///./source/src/app/components/Apis/Details/ExternalStores/ExternalStores.jsx","webpack:///./source/src/app/components/Apis/Details/NewVersion/NewVersion.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx"],"names":["map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","LeftMenuItem","props","selected","setSelected","useState","classes","theme","Icon","to","history","text","route","routeToCheck","leftMenu","custom","strokeColor","palette","getContrastText","background","iconSize","leftMenuIconSize","ditectCurrentMenu","location","pathname","test1","RegExp","test2","match","useEffect","listen","react_default","a","createElement","react_router_dom","className","classNames","leftLInk","[object Object]","leftLink_IconLeft","style","backgroundColor","appBarSelected","React","cloneElement","leftLink_Icon","noIcon","CustomIcon","width","height","icon","Typography","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","defaultProps","propTypes","PropTypes","shape","divider","string","isRequired","number","func","appBar","element","withRouter","withStyles","color","textTransform","leftMenuTextStyle","textAlign","overflow","textOverflow","whiteSpace","paddingLeft","LeftMenu","leftMenuWidth","fontFamily","typography","position","bottom","left","top","paddingTop","spacing","paddingBottom","paddingRight","fontSize","caption","cursor","textDecoration","display","alignItems","diplay","withTheme","LastUpdatedTime","lastUpdatedTime","float","Tooltip","title","moment","calendar","aria-label","variant","lib","defaultMessage","fromNow","content","RenderMethodBase","method","chipColor","resourceChipColors","chipTextColor","console","log","Chip","label","toUpperCase","marginRight","RenderMethod","Resources","Component","constructor","super","this","state","paths","restApi","Api","componentDidMount","api","getSwagger","then","response","undefined","obj","setState","catch","error","status","notFound","doRedirectToLogin","render","parentClasses","Fragment","titleWrapper","type","component","Box","p","contentWrapper","key","path","root","heading","innerKey","CONSTS","HTTP_METHODS","includes","subHeading","Launch_default","marginLeft","push","flexDirection","marginBottom","maxHeight","overflowY","methodLower","toLowerCase","operationChipColor","Operations","ApiContext","Consumer","_ref","Table","padding","operations","length","item","TableRow","borderStyle","TableCell","target","Operations_RenderMethod","verb","py","marginTop","ProductResources","PureComponent","apiResources","apis","margin","resource","name","operation","resourceRow","ProductResources_RenderMethod","capitalizeFirstLetter","charAt","slice","lowerCaseString","Policies","Grid","xs","md","lg","subtitle","policies","index","withAPI","HUMAN_READABLE_SCHEMES","oauth2","basic_auth","mutualssl","api_key","Configuration","useContext","APIContext","container","placement","tabIndex","tooltip","htmlTooltip","Button","helpButton","HelpOutline_default","helpIcon","transport","upperCaseString","notConfigured","securityScheme","filter","filteredItem","join","accessControl","accessControlRoles","workflowStatus","visibility","visibleRoles","NewOverview_Policies","apiType","API","APIProduct","tags","tag","font-size","useStyles","makeStyles","button","secondary","gridRequirements","justifyContent","gridSmall","gridEndpoint","iconTrue","green","iconFalse","grey","arrowIcon","right","default","zIndex","overviewArrow","flexBasis","maxWidth","stepper","box","borderRight","pointerStart","overviewStepper","backgrounds","completed","&:before","borderLeft","borderLeftColor","borderTop","borderBottom","pointerMiddle","active","&:after","wrapperBackground","pointerEnd","inactive","pointerMiddleCompleted","pointerEndActive","pointerEndCompleted","stepIcon","CustomizedSteppers","updateAPI","useAPI","settings","user","useAppContext","isEndpointAvailable","endpointConfig","isTierAvailable","isPrototypedAvailable","implementation_status","lifecycleState","setlifecycleState","isUpdating","setUpdating","tenantList","userNameSplit","split","tenantDomain","devportalUrl","concat","storeUrl","updateLCStateOfAPI","apiId","updateLcState","Alert","body","description","info","finally","errorResponse","JSON","stringify","message","getLcState","result","activeStep","step2Class","step3Class","Stepper","alternativeLabel","Step","StepLabel","StepIconProps","Check_default","Close_default","rel","href","viewInStoreLauncher","onClick","disabled","AuthManager","isNotPublisher","CircularProgress","size","finalLifecycleState","BusinessInformation","businessInformation","businessOwner","technicalOwner","contextType","MetaData","provider","context","version","createdTime","interactive","NewOverview_BusinessInformation","showEndpoint","getProductionEndpoint","getSandboxEndpoint","Endpoints","url","endpointSecurity","Overview","newApi","loadEndpoints","NewOverview_Endpoints","align","mainTitle","s","Paper","NewOverview_MetaData","NewOverview_Configuration","specialGap","NewOverview_Operations","NewOverview_ProductResources","NewOverview_Resources","getResourcesClassForAPIs","_objectSpread","mixins","gutters","buttonSuccess","&:hover","checkItem","chip","& span","imageContainer","imageWrapper","resourceTitle","ListRoot","flex","minWidth","pxToRem","border","& b","fontWeight","fontWeightMedium","lifecycleWrapper","lifecycleIcon","leftSideWrapper","DefaultVersion","configDispatcher","apiFromContext","mt","FormControl","FormLabel","RadioGroup","value","isDefaultVersion","onChange","action","FormControlLabel","isRestricted","control","Radio","Description","TextField","multiline","rows","fullWidth","AccessControl","roleValidity","setRoleValidity","userRoleValidity","setUserRoleValidity","isNone","invalidRoles","setInvalidRoles","select","SelectProps","MenuProps","menu","helperText","MenuItem","ChipInput_default","alwaysShowPlaceholder","placeholder","blurBehavior","InputProps","endAdornment","InputAdornment","Error_default","onAdd","role","systemRolePromise","APIValidation","validate","base64url","encode","userRolePromise","userRole","_toConsumableArray","handleRoleValidationFailure","chipRenderer","_ref2","onDelete","existingRole","handleRoleDeletion","red","StoreVisibility","roleExists","setRoleExists","isRestrictedByRoles","tenants","setTenants","getTenantsByState","TENANT_STATE_ACTIVE","count","StoreVisibility_toConsumableArray","Tags","isTagValid","setIsTagValid","invalidTags","setInvalidTags","regexPattern","test","Tags_toConsumableArray","substring","currentInvalidTags","existingTag","oldTag","APICategories","categories","setCategories","selectedCategories","apiCategories","list","multiple","renderValue","Array","isArray","ListItemText","primary","category","dense","disableGutters","Checkbox","checked","paper","paperCenter","itemPadding","arrowForwardIcon","arrowBackIcon","expansionPanel","expansionPanelDetails","lineHeight","btnSpacing","copyAPIConfig","lifeCycleStatus","authorizationHeader","responseCachingEnabled","cacheTimeout","enableSchemaValidation","DesignConfigurations_toConsumableArray","maxTps","wsdlUrl","corsConfiguration","corsConfigurationEnabled","accessControlAllowCredentials","accessControlAllowOrigins","accessControlAllowHeaders","accessControlAllowMethods","DesignConfigurations","setIsUpdating","apiConfig","useReducer","configAction","nextState","DesignConfigurations_objectSpread","invalidTagsExist","find","Container","elevation","px","ThumbnailView","isEditable","components_APICategories","pt","iconSpace","actionSpace","ResponseCaching","isResponseCachingEnabled","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","Switch","ExpansionPanelDetails","CORSConfiguration","isCorsEnabled","isAllowAllOrigins","event","accessControlAllowOrigin","CORSConfiguration_toConsumableArray","oldOrigin","accessControlAllowHeader","oldHeader","newValue","accessControlAllowMethod","oldMethod","_ref3","SchemaValidation","isOpen","setIsOpen","bind","componentDidUpdate","prevProps","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","gutterBottom","DialogActions","bool","MaxBackendTps","defaultExpanded","production","sandbox","row","labelPlacement","Collapse","in","MaxBackendTps_objectSpread","FormHelperText","dropzoneStyles","borderRadius","EditMediationPolicy","updateMediationPolicy","selectedMediationPolicy","setEditing","editing","intl","globalMediationPolicies","setGlobalMediationPolicies","seqCustom","setSeqCustom","provideBy","setProvideBy","NONE","localSelectedPolicyFile","setLocalSelectedPolicyFile","updatePoliciesFromBE","globalPromise","getGlobalMediationPolicies","customPromise","getMediationPolicies","Promise","all","values","EditMediationPolicy_toConsumableArray","seq","process","setActivePolicy","policy","assign","shared","onDrop","policyFile","newPolicy","addMediationPolicy","policyType","formatMessage","saveMediationPolicy","handleChange","getAttribute","handleDownload","policyToDownload","getGlobalMediationPolicyContent","Utils","forceDownload","downloadGlobalMediationPolicyContent","getMediationPolicyContent","done","document","downloadCustomMediationPolicyContent","handleDelete","policyToDelete","deleteMediationPolicy","deleteCustomMediationPolicy","disableBackdropClick","disableEscapeKeyDown","dividers","inputValue","radioWrapper","es","dropzone","activeClassName","acceptDrop","rejectClassName","rejectDrop","dropFile","getRootProps","getInputProps","_extends","accept","dropZoneWrapper","Icon_Icon","dropIcon","radioGroup","IconButton","inputProps","seq_id","seq_name","seq_type","injectIntl","formControl","main","InFlow","editIcon","EditRounded_default","MediationPolicies_EditMediationPolicy","flexGrow","itemWrapper","subTitle","subTitleDescription","flowWrapper","textTrim","production_endpoints","isDynamicEndpoints","pb","m","DEFAULT_API_SECURITY_OAUTH2","API_SECURITY_BASIC_AUTH","API_SECURITY_API_KEY","API_SECURITY_MUTUAL_SSL","API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY","API_SECURITY_MUTUAL_SSL_MANDATORY","AuthorizationHeader","bottomSpace","ApplicationLevel","haveMultiLevelSecurity","mandatoryValue","FormGroup","_ref4","arrayOf","SelectEndpoint","endpoint","isEndpointEmpty","endpoints","autoFocus","condition","otherwise","iff","required","ep","fileinput","& span.material-icons","uploadedFile","certificatesHeader","addCertificateBtn","borderColor","borderWidth","certificateList","certDetailsHeader","uploadCertDialogHeader","UploadCertificate","uploadCertificate","isMutualSSLEnabled","uploadCertificateOpen","setUploadCertificateOpen","aliasList","alias","setAlias","setPolicy","setEndpoint","isSaving","setSaving","certificate","setCertificate","setIsEndpointEmpty","isPoliciesEmpty","setPoliciesEmpty","aliasValidity","setAliasValidity","isRejected","setIsRejected","closeCertificateUpload","SelectPolicies","onBlur","aliasValidation","isValid","details","handleAliasOnBlur","getHelperText","maxLength","file","certificateFile","extension","InsertDriveFile_default","certificates","alertWrapper","warningIcon","warningColor","& .material-icons","deleteIcon","dark","deleteIconDisable","Certificates","deleteCertificate","setCertificateList","openCertificateDetails","setOpenCertificateDetails","anchor","certificateToDelete","setCertificateToDelete","isDeleting","setDeleting","direction","List_List","cert","ListItem","ListItemAvatar","tier","ListItemSecondaryAction","edge","certAlias","getClientCertificateStatus","currentTarget","getCertificateStatus","err","showCertificateDetails","certificateAlias","deleteCertificateByAlias","subject","Transports","TransportLevel","clientCertificates","setClientCertificates","getAllClientCertificates","resp","GeneralConfiguration_Certificates","addClientCertificate","tmpCertificates","TransportLevel_toConsumableArray","deleteClientCertificate","APISecurity","apiContext","isAPIProduct","isPrototyped","components_TransportLevel","RuntimeConfiguration_toConsumableArray","RuntimeConfiguration","RuntimeConfiguration_objectSpread","schema","newState","noMandatoryOAuthBasicAuth","noMandatoryMutualSSL","mediationPolicies","cloneDeep","inPolicy","setInPolicy","outPolicy","setOutPolicy","faultPolicy","setFaultPolicy","getMediationPoliciesToSave","newMediationPolicies","isEmpty","justify","components_SchemaValidation","Flow","ArrowForward_default","mb","ArrowBack_default","components_Endpoints","LifeCycleImage","highLightMe","startsWith","opacity","xmlns","viewBox","transform","d","isolation","mixBlendMode","fill","strokeWidth","strokeLinejoin","y","x","letterSpacing","wordSpacing","clipRule","fillRule","stroke","strokeLinecap","stateButton","grid","labelsGrid","CheckboxLabels","isCertAvailable","isAppLayerSecurityMandatory","isBusinessPlanAvailable","endpointImplementationType","lifecyclePending","currentState","useIntl","setOpen","transition","Slide","cleanupPendingTask","LifeCycleUpdate","updateLifeCycleState","WORKFLOW_STATUS","CREATED","APPROVED","pageError","apiUUID","promisedUpdate","lifecycleChecklist","checkList","handleUpdate","preventDefault","lcState","handleChangeCheckList","certList","lifecycleStates","LifeCycleUpdate_toConsumableArray","availableTransitions","isWorkflowPending","lcMap","Map","set","isPrototype","lifecycleButtons","LifeCycleUpdate_objectSpread","displayName","LifecyclePending","lifeCycleImage","src","alt","LifeCycle_LifeCycleImage","ScopeValidation","resourcePath","API_CHANGE_LC","resourceMethod","POST","buttonsWrapper","transitionState","data-value","Banner","disableActions","paperProps","LifeCycleHistory","table","TableHead","firstCol","TableBody","lcHistory","reverse","entry","previousState","postState","scope","Avatar","avatar","Person_default","personIcon","previous","post","updatedTime","LifeCycle","updateData","promisedAPI","get","promisedLcState","promisedLcHistory","getLcHistory","promisedClientCerts","clientCerts","checkItems","privateJetModeEnabled","LifeCycle_toConsumableArray","LifeCycle_LifeCycleUpdate","historyHead","LifeCycle_LifeCycleHistory","Shared","contentAreaWidth","CreateEditForm","CreateEditForm_defineProperty","sourceType","summary","sourceUrl","otherTypeName","acceptedFile","restAPI","docPromise","addDocument","inlineContent","docId","updateDocument","disableName","nameNotDuplicate","invalidUrl","nameEmpty","summeryEmpty","urlEmpty","getDocument","doc","apiNotFound","field","arguments","apiDocument","isDocumentPresent","showNameHelper","getUrlHelperText","setSaveDisabled","addNewOther","FormControlOdd","InputLabelProps","shrink","onKeyUp","formControlFirst","group","changeType","formControlLabel","typeTextWrapper","changeSource","setDisable","_ref5","_ref6","InlineMessage","saveDisabled","oneOf","GoToEdit","urlPrefix","listingPath","displayAddContent","docContentEditPath","documentId","Create","newDoc","setNewDoc","createEditForm","useRef","sm","titleLink","Documents_CreateEditForm","innerRef","node","Divider","promiseWrapper","addFileToDocument","getDocumentsList","Documents_GoToEdit","addNewWrapper","addNewHeader","h6","MonacoEditor","lazy","t","ReactMarkdown","Transition","MarkdownEditor_extends","MarkdownEditor","showAtOnce","setCode","toggleOpen","updateDoc","getInlineContentOfDocument","fullScreen","TransitionComponent","square","popupHeader","docName","addInlineContentToDocument","splitWrapper","react","fallback","language","options","selectOnLineNumbers","newCode","editorDidMount","editor","monaco","focus","markdownViewWrapper","source","Edit_extends","Edit","Delete","runAction","deleteDoc","deleteDocument","apiName","DeleteMultiple","docsToDelete","docs","deleteDocs","docPromises","data","docIndexObj","instanceOf","Download","isFileAvailable","setIsFileAvailable","isSuccessful","setIsSuccessful","getFileForDocument","TextEditor","LinkGenerator","Listing","showAddDocs","toggleAddDocs","getDocuments","errorData","parse","messageTxt","oldState","setFoo","foo","_this","showActionsColumn","print","download","viewColumns","customToolbar","search","onRowsDelete","rowData","rowMeta","that","columns","customBodyRender","tableMeta","actionTable","Documents_MarkdownEditor","Documents_Edit","Documents_Delete","Documents_Download","Documents_DeleteMultiple","API_PRODUCTS","AddCircle_default","buttonIcon","Documents_Create","dist_default","head","actions","& td","& td:first-child","messageBox","& button","View","params","setDoc","loadContentForDoc","leftCell","View_ReactMarkdown","lib_default","html","displayURL","displayURLLink","docTitle","docBadge","replace","EditContent_TextEditor","Documents","react_router","exact","EditContent","DocCreate","ResourceNotFound","RateLimitingLevels","RESOURCE","APIRateLimiting","operationRateLimits","currentApiThrottlingPolicy","apiThrottlingPolicy","setApiThrottlingPolicy","setIsSaving","isResourceLevel","rateLimitingLevel","operationRateLimitMessage","ml","light","userSelection","minHeight","pl","rateLimit","disabledAction","memo","Operation","isSecurity","handleScopeChange","handlePolicyChange","newoperation","Operation_objectSpread","scopes","Operation_toConsumableArray","handleUpdateList","throttlingPolicy","authType","apiPolicies","isOperationRateLimiting","dropdownScopes","bindings","chipActive","Select","dropDown","fieldName","tempScope","auth","flexWrap","textField","link","listItem","resourceRoot","deleteButton","pathDisplay","descriptionWrapper","scopeSelect","descriptionWrapperUp","addParamRow","propsForm","deleteLink","verticalAlign","filterKeyWord","handleApiThrottlePolicy","updateOperations","setFilterByKeyWord","newOperation","updatedList","resourceNotFoundMessage","components_APIRateLimiting","searchWrapper","Operations_Operation","buttonMain","array","addResource","DescriptionAndSummary","operationsDispatcher","disableUpdate","spec","VERSIONS","V3","V2","getVersion","openapi","swagger","getOperationScopes","openAPIVersion","security","mapAPIOperations","temp","rest","_objectWithoutProperties","isRef","isReference","OperationGovernance","autoWidth","IconComponent","ArrowDropDownIcon","renderInput","ref","other","AWSLambdaSettings_objectWithoutProperties","AWSLambdaSettings_extends","AWSLambdaSettings_objectSpread","inputRef","inputRoot","input","inputInput","renderSuggestion","suggestionProps","suggestion","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","indexOf","object","oneOfType","IntegrationDownshift","arns","timeout","setTimeout","downshift_esm","onSelect","changes","clearSelection","getItemProps","getLabelProps","getMenuProps","openMenu","_getInputProps","onFocus","showEmpty","deburr","trim","inputLength","keep","getSuggestions","min","max","step","Math","floor","milliSeconds","parseInt","newTimeout","handleTimeoutMin","handleTimeoutSec","supportedDataTypes","2.0","formData","query","header","3.x","cookie","matched","getSupportedDataTypes","specVersion","paramType","parameterContainer","checkBox","AddParameter","inputLabel","labelWidth","setLabelWidth","initParameter","getParameter","newParameter","newParameterDispatcher","AddParameter_objectSpread","current","offsetWidth","isParameterExist","isParameterExistValue","parameters","clearInputs","addNewParameter","InputLabel","htmlFor","getContentAnchorEl","anchorOrigin","vertical","horizontal","getParameterTypes","paramIn","onKeyPress","Clear_default","RequestBody","contentType","hideParameterEdit","requestBody","Edit_default","Delete_default","form","EditParameter","editingParameter","setEditingParameter","parameter","parameterActionDispatcher","currentParameter","paramAction","nextParameter","EditParameter_objectSpread","handleClose","isEditing","disableTypography","dataType","format","getDataFormats","overflowX","ListParameters","resolvedSpec","isRefParam","paramCopy","entries","operationComponents_RequestBody","Parameters","haveParameters","operationComponents_AddParameter","CloseConfirmation","closeEditor","forwardRef","Fade","PolicyEditor_extends","PolicyEditor","prefersDarkMode","originalResourcePolicy","selectedPolicy","setPolicyContent","resourcePoliciesDispatcher","setPageError","openConfirmation","setOpenConfirmation","saving","editorOptions","readOnly","smoothScrolling","wordWrap","editorProps","AppBar","Toolbar","updateResourcePolicy","success","disableShrink","PolicyEditor_MonacoEditor","SOAPToRESTListing","resourcePolicy","resourcePolicyIn","setResourcePolicyIn","resourcePolicyOut","setResourcePolicyOut","out","useMediaQuery","openEditor","setOpenEditor","selectedTab","setTabIndex","Tabs","indicatorColor","textColor","tab","Tab","SOAPToRESTListing_MonacoEditor","SOAPToRESTListing_objectSpread","highlight","disableDelete","onMarkAsDelete","markAsDelete","hideParameters","isExpanded","setIsExpanded","customButton","paperStyles","customDivider","linearProgress","highlightSelected","hexToRGBA","contentNoMargin","overlayUnmarkDelete","operationDeleteUndo","apiOperation","isUsedInAPIProduct","usedProductIds","toggleDelete","stopPropagation","expanded","disableRipple","disableTouchRipple","aria-controls","Badge","invisible","disableFocusRipple","ReportProblemOutlined_default","Boolean","endpoint_type","resourcePolicies","x-wso2-new","GroupOfOperations","openAPI","children","currentTagInfo","tagInfo","SpecErrors","specErrors","ErrorOutline_default","primaryTypographyProps","inset","VerbElement","isButton","customMenu","useMenuStyles","SUPPORTED_VERBS","AddOperation","newOperations","newOperationsDispatcher","AddOperation_objectSpread","verbs","addOperation","operationTarget","operationVerbs","warning","remaining","verbElements","allSelected","Fab","Add_default","GoToDefinitionLink","OperationsSelector","selectedOperations","setSelectedOperation","isIndeterminate","mr","ClearAll_default","DeleteSweep_default","SaveOperations","updateOpenAPI","onBackdropClick","operationProps","disableRateLimiting","hideAPIDefinitionLink","disableMultiSelect","disableAddOperation","setOperationRateLimits","markedOperations","openAPISpec","setOpenAPISpec","setArns","setResolvedSpec","errors","currentPolicies","policyAction","nextResourcePolicies","Resources_objectSpread","httpVerb","currentOperations","operationAction","updatedOperation","addedOperations","findIndex","bodyIndex","para","paraObj","extractPathParameters","alreadyExistCount","currentVerb","warn","x-auth-type","responses","200","useCallback","currentSelections","nextSelectedOperations","localAPI","useMemo","resolveAndUpdateSpec","rawSpec","specCopy","SwaggerParser","updateSwagger","getAmznResourceNames","isSOAPToREST","promisedInPolicies","getResourcePolicies","promisedOutPolicies","inPolicies","outPolicies","mappedPolicies","components_AddOperation","verbObject","components_Operation","Resources_extends","copyOfOperations","prototype","hasOwnProperty","call","isSelectAll","reject","verbInfo","APIOperations","Resources_Resources_Resources","APIProductOperations","buttonWrapper","ProductResourcesEdit","apiCopy","setApiResources","updating","ProductResourcesEditWorkspace","NewEndpointCreate","generateEndpointConfig","endpointImplType","setImplType","endpointTypes","inlineMessageContainer","Card","endpointTypeCard","CardContent","cardContent","types","option","CardActions","cardActions","GenericResource","scriptContent","originalScript","showReset","setShowReset","GenericResource_objectSpread","resourcePathContainer","prototypeResourceHeader","chipExpansionPanel","scriptResetButton","genericResourceContent","GenericResource_MonacoEditor","xMediationScriptProperty","defaultScript","InlineEndpoints","updatePaths","onScriptChange","tmpPaths","mockScripts","setMockScripts","getGeneratedMockScriptsOfAPI","mediationScript","script","i","getGeneratedMockScriptOfAPI","Prototype_GenericResource","getEndpointTypeProperty","endpointsToList","config","apply","endpointUtils_toConsumableArray","sandbox_endpoints","sandbox_failovers","production_failovers","createEndpointConfig","endpointType","tmpEndpointConfig","failOver","access_method","amznAccessKey","amznSecretKey","amznRegion","getEndpointTemplate","template_not_supported","EndpointSecurity","securityInfo","onChangeEndpointAuth","endpointSecurityInfo","setEndpointSecurityInfo","username","password","securityValidity","setSecurityValidity","authTypes","tmpSecurity","validateAndUpdateSecurityInfo","EndpointSecurity_objectSpread","GeneralConfiguration","epConfig","handleToggleEndpointSecurity","handleEndpointSecurityChange","isConfigExpanded","setConfigExpand","endpointCertificates","setEndpointCertificates","setAliasList","getEndpointCertificates","aliases","filteredCertificates","generalConfigPanel","configHeaderContainer","secondaryHeading","hidden","generalConfigContent","endpointConfigSection","securityHeading","GeneralConfiguration_EndpointSecurity","addCertificate","GeneralConfiguration_toConsumableArray","deleteEndpointCertificate","endpointTypeSelect","boxShadow","flexShrink","GenericEndpoint","endpointURL","editEndpoint","setAdvancedConfigOpen","deleteEndpoint","serviceUrl","setServiceUrl","isEndpointValid","setIsEndpointValid","statusCode","setStatusCode","isErrorCode","setIsErrorCode","endpointInputWrapper","endpointValidChip","endpointErrorChip","endpointInvalidChip","isWebSocket","iconButtonValid","iconButton","apiID","testEndpoint","statusMessage","GenericEndpointAdd","addEndpoint","EndpointListing","apiEndpoints","epType","failOvers","addNewEndpoint","removeEndpoint","setEndpointType","setEndpoints","selectedRef","listingWrapper","Endpoints_GenericEndpointAdd","Endpoints_GenericEndpoint","epTypeWrapper","epTypeName","epInput","leftArrow","leftArrowLight","dialogHeader","listItemOdd","&:focus","algorithms","sessionManagementOps","defaultTemplateObj","algoClassName","algoCombo","sessionManagement","sessionTimeOut","LoadBalanceConfig","handleLBConfigChange","closeLBConfigDialog","lbConfig","setLbConfigObject","algoClassNameError","setAlgoClassNameError","tmpLBConfig","LoadBalanceConfig_objectSpread","handleFieldChange","algo","configButtonContainer","LoadbalanceFailoverConfig","endpointsDispatcher","toggleAdvanceConfig","globalEpType","handleEndpointCategorySelect","isLBConfigOpen","setLBConfigOpen","newURL","endpointConfigCopy","endpointTemplate","epConfigProperty","endpointList","endpointConfigProperty","indexToRemove","tmpEndpoints","splice","LoadbalanceFailoverConfig_objectSpread","getEndpointTypeHeading","endpointsTypeSelectWrapper","lpConfigWrapper","lbConfigBtn","wrapper","endpointsWrapperLeft","endpointName","Endpoints_EndpointListing","endpointsWrapperRight","configDialogHeader","Endpoints_LoadBalanceConfig","PaperProps","itemHeight","AdvanceEndpointConfig","advanceConfig","isSOAPEndpoint","onSaveAdvanceConfig","onCancel","advanceConfigObj","setAdvanceConfig","optimize","actionDuration","actionSelect","factor","retryDelay","retryErroCode","retryTimeOut","suspendDuration","suspendErrorCode","suspendMaxDuration","errorCodes","actionItems","messageTypes","optimizeOptions","AdvanceEndpointConfig_objectSpread","handleConfigFieldChange","di","configContainer","configSubContainer","Input","messageType","advanceDialogActions","selectField","banner","Credentials","newEndpointConfig","Credentials_objectSpread","labelId","region","EndpointOverview","swaggerDef","saveAndRedirect","supportedEnpointTypes","setSupportedEndpointType","setEpConfig","advanceConfigOptions","setAdvancedConfigOptions","endpointCategory","setEndpointCategory","prod","typeChangeConfirmation","setTypeChangeConfirmation","openDialog","supportedTypeLists","apiObject","supportedEndpointTypes","getSupportedType","availableEndpoints","getEndpointType","getEndpoints","handleOnChangeEndpointCategoryChange","endpointProp","modifiedEndpoint","endpointTypeProperty","changeEndpointType","selectedKey","tmpConfig","generatedEndpointConfig","EndpointOverview_objectSpread","handleEndpointTypeSelect","advanceEPConfig","endpointInfo","getAdvanceConfig","overviewWrapper","Prototype_InlineEndpoints","endpointContainer","defaultEndpointWrapper","Endpoints_GeneralConfiguration","tmpSecurityInfo","Endpoints_LoadbalanceFailoverConfig","AdvancedConfig_AdvanceEndpointConfig","selectedEndpoints","endpointTypesWrapper","listing","sandboxHeading","borderRightStyle","borderRightWidth","endpointTypesSelectWrapper","addLabel","defaultSwagger","setSwagger","endpointValidity","setAPIEndpointsValid","apiDispatcher","initState","Endpoints_objectSpread","implementationType","generateMockScripts","res","isAddressEndpoint","currentEndpointConfig","getEndpointTemplateByType","toJSON","saveAPI","isRedirect","isValidEndpoint","Endpoints_NewEndpointCreate","endpointsContainer","Endpoints_EndpointOverview","swaggerObj","onChangeAPI","errorMessageContainer","endpointValidityMessage","buttonSection","implSelectRadio","gatewayPaper","emptyBox","MicroGateway","selectedMgLabel","setSelectedMgLabel","mgLabels","setMgLabels","microgatewayLabelsGet","MicroGateway_toConsumableArray","env","access_urls","saveButton","Environments","gatewayEnvironments","setGatewayEnvironments","Environments_toConsumableArray","labels","environment","serverUrl","ws","wss","http","https","filterType","sort","selectableRowsHeader","selectableRows","pagination","Invoice","subscriptionId","isMonetizedUsagePolicy","isNotAuthorized","showPopup","setShowPopup","showErrorPopup","setShowErrorPopup","invoice","setInvoice","handleAlertClose","getMonetizationInvoice","invoiceData","properties","invoiceItem","insideArray","subscriptionStatus","BLOCKED","PROD_BLOCKED","SubscriptionTablePagination","page","rowsPerPage","onChangePage","FirstPage_default","KeyboardArrowLeft_default","ceil","KeyboardArrowRight_default","LastPage_default","SubscriptionsTable","subscriptions","totalSubscription","searchQuery","rowsPerPageOptions","emptyColumnHeight","subscriberClaims","formatSubscriptionStateString","blockSubscription","blockProductionOnly","unblockSubscription","handleChangePage","handleChangeRowsPerPage","filterSubscriptions","isMonetizedPolicy","renderClaims","isNotCreator","fetchSubscriptionData","getSubscriptionBlockingButtons","blockSubscriptions","messages","defineMessages","errorMessage","unblockSubscriptions","total","getSubscriberInfo","prevState","SubscriptionsTable_objectSpread","getMonetization","monetizationStatus","enabled","getSubscriptionPolicies","filteredPolicies","tierPlan","policyName","monetizationAttributes","pricePerRequest","claimsObject","subscriberHeader","claims","claim","hover","noDataMessage","InfoToolTip","Info_default","BLOCK_SUBSCRIPTION","Subscriptions_Invoice","customFooter","TablePagination","colSpan","onChangeRowsPerPage","ActionsComponent","subMails","emails","v","email","URI","reduce","b","names","k","Tip","headline","popupHeadline","& th","searchDiv","searchRoot","searchInput","searchIconButton","tableColumnSize","tableColumnSize2","dialogColumnSize","dialog","invoiceTable","uniqueCell","disableColor","SubscriptionPoliciesManage","subscriptionPolicies","setPolices","newSelectedPolicies","SubscriptionPoliciesManage_toConsumableArray","subscriptionPoliciesPaper","gridLabel","TenantAutocomplete_objectWithoutProperties","TenantAutocomplete_extends","TenantAutocomplete_objectSpread","DownshiftMultiple","setTenantList","suggestions","setInputValue","handleKeyDown","newSelectedItem","TenantAutocomplete_toConsumableArray","inputValue2","tenantList2","onKeyDown","startAdornment","handleInputChange","setsuggestions","newSuggestions","tenant","domain","inputType","textControl","selectEmpty","subscriptionAvailabilityPaper","tenantsList","SimpleSelect","setAvailability","currentAvailability","subscriptionAvailability","setValues","availability","isSpecificTenants","isUIElementDisabled","subscriptionAvailableTenants","availabilityValue","SubscriptionAvailability_objectSpread","autoComplete","onSubmit","displayEmpty","TenantAutocomplete_IntegrationDownshift","Subscriptions","setSubscriptions","updateInProgress","setUpdateInProgress","Subscriptions_toConsumableArray","Subscriptions_SubscriptionPoliciesManage","Progress","Subscriptions_SubscriptionsTable","CommentAdd","commentText","currentLength","inputChange","handleClickAddComment","handleClickCancel","handleCategoryChange","filterCommentToAddReply","toggleShowReply","commentToFilter","parentCommentId","commentId","allComments","commentsUpdate","comment","addComment","newComment","addedComment","replies","cancelButton","zeroMinWidth","maxCommentLength","commentIcon","unig","CommentEdit","handleClickUpdateComment","filterCommentToUpdate","filterCommentToUpdateReply","toggleShowEdit","commentToEdit","updateComment","updatedComment","replyIndex","CommentOptions","showAddComment","showEditComment","handleClickOpen","editIndex","displayDate","timestamp","localDate","Date","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","canDelete","createdBy","getUser","adminRole","canModify","entryPoint","Grid_default","verticalSpace","disable","VerticalDivider","time","overflowWrap","CommentReply","deleteComment","keyCount","getKey","handleClickDeleteComment","handleShowEdit","handleConfirmDialog","filterRemainingComments","filterCommentToDelete","commentIdOfCommentToDelete","parentCommentIdOfCommentToDelete","remainingComments","remainingReplies","comments","AccountBox_default","noWrap","Comments_CommentEdit","CommentReply_extends","Comments_CommentOptions","ConfirmDialog","labelCancel","labelOk","callback","Comment","handleShowReply","Comment_extends","Comments_CommentAdd","Comments_CommentReply","Comments","totalComments","startCommentsToDisplay","updateCommentList","handleExpandClick","handleLoadMoreComments","getAllComments","commentList","commentsLimit","newStart","difference","newTotal","ArrowDropDownCircleOutlined_default","aria-expanded","titleSub","unmountOnExit","Comments_Comment","loadMoreLink","ArrowDropDown_default","CreateScope","validRoles","invalidRolesArray","api_uuid","valid","invalid","apiScopes","apiScope","scopeAddDisabled","addScope","validateScopeName","handleScopeNameInput","validateScopeDescription","handleRoleAddition","CreateScope_toConsumableArray","exist","aScope","promisedApiUpdate","redirectURL","titleGrid","descriptionForm","progress","helpText","hint","extraPadding"," & .MuiGrid-item","EditScope","EditScope_defineProperty","thisScope","scopeName","EditScope_objectSpread","updateScope","handleInputs","EditScope_toConsumableArray","SvgIcon_default","confirm","ops","op","setOpenLocal","deleteScope","Scopes","api_data","editUrl","Scopes_Delete","scopesList","resources","buttonProgress","Scope","Scopes_CreateScope","Scopes_extends","Scopes_EditScope","additionalProperties","AddPolicy","AddPolicy_defineProperty","uuid","policyId","getThreatProtectionPolicy","formattedPolicy","getThreatProtectionPolicies","currentApi","handlePolicyAdd","addThreatProtectionPolicyToApi","n","addJsonContent","formatPolicy","toggleShowAddPolicy","SecurityOverview","SecurityOverview_defineProperty","showAddPolicy","updatePolicyData","policyIds","threatProtectionPolicies","updatedPolicies","deletePolicy","associatedApi","deleteThreatProtectionPolicyFromApi","Security_AddPolicy","tableLayout","Security","APISecurityAudit","APISecurityAudit_defineProperty","createMuiTheme","useNextVariants","overrides","MUIDataTableBodyCell","MUIDataTableSelectCell","MUIDataTableToolbarSelect","searchTerm","lastTerms","termObject","regexPatterns","appendedString","j","getModel","findNextMatch","lineNumber","range","endLineNumber","column","finalMatchIndex","revealLineInCenter","startLineNumber","deltaDecorations","Range","startColumn","endColumn","isWholeLine","inlineDecoration","glyphMarginClassName","contentLine","report","overallScore","numErrors","externalApiId","loading","apiDefinition","criticalityObject","1","2","3","4","5","getSecurityAuditReport","grade","redirectUrl","getRowData","issues","rowType","dataObject","rowObject","specificDescription","pointer","criticality","roundScore","score","tooManyImpacted","pointersAffected","tooManyError","getMoreDetailUrl","baseUrl","round","reportObject","linkToDetailedReport","errorColumns","glyphMargin","responsive","expandableRows","expandableRowsOnClick","renderExpandableRow","tableRow","columnOne","react_monaco_editor_lib_default","columnTwo","referenceErrorTypography","referenceTypography","subheadingTypography","paperDiv","rootPaper","sectionHeadingTypography","linkText","linkToDetailedReportText","afterLinkText","auditSummaryDiv","auditSummarySubDiv","visibility_sensor_default","isVisible","progressScore","index_esm","circularProgressBarScore","circularProgressBarScoreFooter","auditSummaryDivRight","overallScoreText","totalNumOfErrorsText","totalNumOfErrors","overallCriticalityText","overallCriticality","securitySummary","rc_progress_es","percent","dataValidationSummary","MuiThemeProvider","getMuiTheme","semanticErrors","getErrorMuiTheme","validationErrors","warnings","securityNumOfIssuesText","securityNumOfIssues","issueCounter","securityScoreText","securityScore","securityCriticalityText","securityCriticality","dataNumOfIssuesText","dataNumOfIssues","dataScoreText","dataScore","dataCriticalityText","dataCriticality","htmlToolTip","margin-left","background-color","importDefinitionDialogHeader","ImportDefinition","setSchemaDefinition","openAPIDefinitionImport","setOpenAPIDefinitionImport","isImporting","setIsImporting","isGraphQL","isGraphql","isSOAP","apiInputs","inputsDispatcher","inputAction","ImportDefinition_objectSpread","formValidity","mode","updateGraphQLSchema","validateGraphQLFile","graphQLInfo","graphQLSchema","updateGraphQLAPIDefinition","schemaDefinition","handleOnValidate","isFormValid","dialogTitle","dialogContent","ProvideOpenAPI","onValidate","btnText","ProvideGraphQL","ProvideWSDL","CloudUploadRounded_default","isFileInput","updateWSDLByFileOrArchive","updateWSDLByUrl","updateWSDL","reader","FileReader","onloadend","readAsText","newAPI","updateAPIDefinitionByFile","updateAPIDefinitionByUrl","updateOASDefinition","EditorDialog","APIDefinition","schemaContent","graphQL","swaggerModified","convertTo","getConvertToFormat","isAuditApiClicked","securityAuditProperties","isSwaggerValid","handleNo","handleOk","hasJsonStructure","onAuditApiClick","onChangeFormatClick","openUpdateConfirmation","updateSwaggerDefinition","onChangeSwaggerContent","promisedApi","getSchema","json2yaml","formattedString","yaml","load","modifiedContent","definition","APIDefinition_extends","swaggerContent","specFormat","toFormat","parsedContent","resourceNotFountMessage","downloadLink","fileName","encodeURIComponent","topBar","CloudDownloadRounded_default","apiToken","collectionId","LockRounded_default","SwapHorizontalCircle_default","APIDefinition_APISecurityAudit","APIDefinition_MonacoEditor","onEditContent","AppContext","converterWrapper","swaggerEditorWrapper","WSDL","isArchive","wsdl","loadWSDLInEditor","handleDownloadWSDLZip","getWSDLInfo","getWSDL","downloadWidget","downloadButtonContent","WSDL_MonacoEditor","cursorStyle","common","apiOnly","productOnly","graphqlOnly","goToSearch","linkButton","goToWrapper","downshiftWrapper","GoTo_objectWithoutProperties","GoTo_extends","GoTo_objectSpread","handleClickAway","aria-haspopup","GoTo","showSearch","setShowSearch","ClickAwayListener","onClickAway","GoTo_toConsumableArray","CreateNewVersionButton","API_COPY","createNewVersionWrapper","createNewVersion","LibraryAdd_default","A200","backLink","backIcon","backText","createNewVersionButtonColor","APIDetailsTopMenu","imageUpdate","isVisibleInStore","isDownlodable","break","infoItem","dateWrapper","GoTo_GoTo","components_CreateNewVersionButton","buttonClass","downloadApi","exportApi","zipFile","downloadApiFlex","DeleteApiButton","alignSelf","lastUpdatedTypography","BusinessInformation_defineProperty","isValidBusinessOwnerEmail","isValidTechnicalOwnerEmail","isFormUpdated","emailStatus","businessOwnerEmail","technicalOwnerEmail","handleSubmit","noValidate","paperRoot","EditableRow","oldKey","oldValue","apiAdditionalProperties","newKey","setKey","setValue","editMode","setEditMode","validateEmpty","itemValue","saveRow","addProperty","Save_default","DeleteForever_default","Properties","additionalPropertiesTemp","setAdditionalProperties","showAddProperty","setShowAddProperty","propertyKey","setPropertyKey","propertyValue","setPropertyValue","isAdditionalPropertiesStale","setIsAdditionalPropertiesStale","isKeyWord","toggleAddProperty","additionalPropertiesCopy","oldRow","newRow","handleAddToList","items","Properties_EditableRow","Properties_extends","renderAdditionalProperties","BusinessPlans","monetizedPolices","monetizationQuery","policiesList","tableHeadCell","tableHeadTitle","stateWrapper","tableCel","rightDataColumn","Monetization","Monetization_defineProperty","monStatus","property","getMonetizationData","apiProduct","getSettings","configureMonetizationToApiProduct","cState","configureMonetizationToApi","monetizationAttribute","Monetization_BusinessPlans","viewInExStoreLink","black","ExternalStores","allExternalStores","setAllExternalStores","publishedExternalStores","setPublishedExternalStores","externalStoresEnabled","resourceNotFoundMessageText","titleMessage","bodyMessage","getPublishedExternalStores","publishedStoreIds","store","reason","getAllExternalStores","ExternalStores_toConsumableArray","publishAPIToExternalStores","successfulStores","CreateNewVersion","NewVersion_defineProperty","newVersion","empty","alreadyExists","hasSpecialChars","isDefaultVersionBool","createNewAPIVersion","redirectToReferrer","handleVersionChange","handleDefaultVersionChange","transformOrigin","Details","subPathKey","subPath","subPaths","matchPath","setAPI","setAPIProduct","setImageUpdate","isValidURL","apiProdUUID","getLeftMenuItemForDefinitionByType","pathPrefix","apiDefinitionMenuItem","Shared_LeftMenuItem","Code_default","getLeftMenuItemForResourcesByType","VerticalSplit_default","_updatedProperties","updatedProperties","toJson","update","updatedAPI","pageLocation","settingsContext","environmentLabel","getCurrentEnvironment","leftMenuIconMainSize","leftLInkMain","Build_default","Settings_default","GamesOutlined_default","RssFeed_default","Autorenew_default","PersonPinCircleOutlined_default","VpnKey_default","Business_default","List_default","LibraryBooks_default","LocalAtm_default","Store_default","components_APIDetailsTopMenu","contentInside","components_LastUpdatedTime","from","BASE","OVERVIEW_PRODUCT","NewOverview_Overview","OVERVIEW","API_DEFINITION","Details_APIDefinition_APIDefinition","APIDefinition_WSDL","API_DEFINITION_PRODUCT","SCHEMA_DEFINITION","LIFE_CYCLE","Details_LifeCycle_LifeCycle","CONFIGURATION","RUNTIME_CONFIGURATION","CONFIGURATION_PRODUCT","RUNTIME_CONFIGURATION_PRODUCT","ENDPOINTS","Details_Endpoints_Endpoints","ENVIRONMENTS","OPERATIONS","Details_Operations_Operations","RESOURCES_PRODUCT","RESOURCES_PRODUCT_EDIT","RESOURCES","SCOPES","Details_Scopes","DOCUMENTS","Details_Documents","DOCUMENTS_PRODUCT","SUBSCRIPTIONS","Subscriptions_Subscriptions","SUBSCRIPTIONS_PRODUCT","SECURITY","Details_Security","COMMENTS","Details_Comments_Comments","BUSINESS_INFO","Details_BusinessInformation_BusinessInformation","BUSINESS_INFO_PRODUCT","PROPERTIES","Properties_Properties","PROPERTIES_PRODUCT","NEW_VERSION","NewVersion","MONETIZATION","Details_Monetization","MONETIZATION_PRODUCT","EXTERNAL_STORES","BASE_PRODUCT","freeze","leftMenuActive","detailsContent"],"mappings":"8EAAA,IAAAA,EAAA,CACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,gBAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,YAAA,KACAC,eAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,QAAA,KACAC,WAAA,KACAC,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","file":"DeferredDetails.bundle.js","sourcesContent":["var map = {\n\t\"./af\": 1315,\n\t\"./af.js\": 1315,\n\t\"./ar\": 1316,\n\t\"./ar-dz\": 1317,\n\t\"./ar-dz.js\": 1317,\n\t\"./ar-kw\": 1318,\n\t\"./ar-kw.js\": 1318,\n\t\"./ar-ly\": 1319,\n\t\"./ar-ly.js\": 1319,\n\t\"./ar-ma\": 1320,\n\t\"./ar-ma.js\": 1320,\n\t\"./ar-sa\": 1321,\n\t\"./ar-sa.js\": 1321,\n\t\"./ar-tn\": 1322,\n\t\"./ar-tn.js\": 1322,\n\t\"./ar.js\": 1316,\n\t\"./az\": 1323,\n\t\"./az.js\": 1323,\n\t\"./be\": 1324,\n\t\"./be.js\": 1324,\n\t\"./bg\": 1325,\n\t\"./bg.js\": 1325,\n\t\"./bm\": 1326,\n\t\"./bm.js\": 1326,\n\t\"./bn\": 1327,\n\t\"./bn.js\": 1327,\n\t\"./bo\": 1328,\n\t\"./bo.js\": 1328,\n\t\"./br\": 1329,\n\t\"./br.js\": 1329,\n\t\"./bs\": 1330,\n\t\"./bs.js\": 1330,\n\t\"./ca\": 1331,\n\t\"./ca.js\": 1331,\n\t\"./cs\": 1332,\n\t\"./cs.js\": 1332,\n\t\"./cv\": 1333,\n\t\"./cv.js\": 1333,\n\t\"./cy\": 1334,\n\t\"./cy.js\": 1334,\n\t\"./da\": 1335,\n\t\"./da.js\": 1335,\n\t\"./de\": 1336,\n\t\"./de-at\": 1337,\n\t\"./de-at.js\": 1337,\n\t\"./de-ch\": 1338,\n\t\"./de-ch.js\": 1338,\n\t\"./de.js\": 1336,\n\t\"./dv\": 1339,\n\t\"./dv.js\": 1339,\n\t\"./el\": 1340,\n\t\"./el.js\": 1340,\n\t\"./en-SG\": 1341,\n\t\"./en-SG.js\": 1341,\n\t\"./en-au\": 1342,\n\t\"./en-au.js\": 1342,\n\t\"./en-ca\": 1343,\n\t\"./en-ca.js\": 1343,\n\t\"./en-gb\": 1344,\n\t\"./en-gb.js\": 1344,\n\t\"./en-ie\": 1345,\n\t\"./en-ie.js\": 1345,\n\t\"./en-il\": 1346,\n\t\"./en-il.js\": 1346,\n\t\"./en-nz\": 1347,\n\t\"./en-nz.js\": 1347,\n\t\"./eo\": 1348,\n\t\"./eo.js\": 1348,\n\t\"./es\": 1349,\n\t\"./es-do\": 1350,\n\t\"./es-do.js\": 1350,\n\t\"./es-us\": 1351,\n\t\"./es-us.js\": 1351,\n\t\"./es.js\": 1349,\n\t\"./et\": 1352,\n\t\"./et.js\": 1352,\n\t\"./eu\": 1353,\n\t\"./eu.js\": 1353,\n\t\"./fa\": 1354,\n\t\"./fa.js\": 1354,\n\t\"./fi\": 1355,\n\t\"./fi.js\": 1355,\n\t\"./fo\": 1356,\n\t\"./fo.js\": 1356,\n\t\"./fr\": 1357,\n\t\"./fr-ca\": 1358,\n\t\"./fr-ca.js\": 1358,\n\t\"./fr-ch\": 1359,\n\t\"./fr-ch.js\": 1359,\n\t\"./fr.js\": 1357,\n\t\"./fy\": 1360,\n\t\"./fy.js\": 1360,\n\t\"./ga\": 1361,\n\t\"./ga.js\": 1361,\n\t\"./gd\": 1362,\n\t\"./gd.js\": 1362,\n\t\"./gl\": 1363,\n\t\"./gl.js\": 1363,\n\t\"./gom-latn\": 1364,\n\t\"./gom-latn.js\": 1364,\n\t\"./gu\": 1365,\n\t\"./gu.js\": 1365,\n\t\"./he\": 1366,\n\t\"./he.js\": 1366,\n\t\"./hi\": 1367,\n\t\"./hi.js\": 1367,\n\t\"./hr\": 1368,\n\t\"./hr.js\": 1368,\n\t\"./hu\": 1369,\n\t\"./hu.js\": 1369,\n\t\"./hy-am\": 1370,\n\t\"./hy-am.js\": 1370,\n\t\"./id\": 1371,\n\t\"./id.js\": 1371,\n\t\"./is\": 1372,\n\t\"./is.js\": 1372,\n\t\"./it\": 1373,\n\t\"./it-ch\": 1374,\n\t\"./it-ch.js\": 1374,\n\t\"./it.js\": 1373,\n\t\"./ja\": 1375,\n\t\"./ja.js\": 1375,\n\t\"./jv\": 1376,\n\t\"./jv.js\": 1376,\n\t\"./ka\": 1377,\n\t\"./ka.js\": 1377,\n\t\"./kk\": 1378,\n\t\"./kk.js\": 1378,\n\t\"./km\": 1379,\n\t\"./km.js\": 1379,\n\t\"./kn\": 1380,\n\t\"./kn.js\": 1380,\n\t\"./ko\": 1381,\n\t\"./ko.js\": 1381,\n\t\"./ku\": 1382,\n\t\"./ku.js\": 1382,\n\t\"./ky\": 1383,\n\t\"./ky.js\": 1383,\n\t\"./lb\": 1384,\n\t\"./lb.js\": 1384,\n\t\"./lo\": 1385,\n\t\"./lo.js\": 1385,\n\t\"./lt\": 1386,\n\t\"./lt.js\": 1386,\n\t\"./lv\": 1387,\n\t\"./lv.js\": 1387,\n\t\"./me\": 1388,\n\t\"./me.js\": 1388,\n\t\"./mi\": 1389,\n\t\"./mi.js\": 1389,\n\t\"./mk\": 1390,\n\t\"./mk.js\": 1390,\n\t\"./ml\": 1391,\n\t\"./ml.js\": 1391,\n\t\"./mn\": 1392,\n\t\"./mn.js\": 1392,\n\t\"./mr\": 1393,\n\t\"./mr.js\": 1393,\n\t\"./ms\": 1394,\n\t\"./ms-my\": 1395,\n\t\"./ms-my.js\": 1395,\n\t\"./ms.js\": 1394,\n\t\"./mt\": 1396,\n\t\"./mt.js\": 1396,\n\t\"./my\": 1397,\n\t\"./my.js\": 1397,\n\t\"./nb\": 1398,\n\t\"./nb.js\": 1398,\n\t\"./ne\": 1399,\n\t\"./ne.js\": 1399,\n\t\"./nl\": 1400,\n\t\"./nl-be\": 1401,\n\t\"./nl-be.js\": 1401,\n\t\"./nl.js\": 1400,\n\t\"./nn\": 1402,\n\t\"./nn.js\": 1402,\n\t\"./pa-in\": 1403,\n\t\"./pa-in.js\": 1403,\n\t\"./pl\": 1404,\n\t\"./pl.js\": 1404,\n\t\"./pt\": 1405,\n\t\"./pt-br\": 1406,\n\t\"./pt-br.js\": 1406,\n\t\"./pt.js\": 1405,\n\t\"./ro\": 1407,\n\t\"./ro.js\": 1407,\n\t\"./ru\": 1408,\n\t\"./ru.js\": 1408,\n\t\"./sd\": 1409,\n\t\"./sd.js\": 1409,\n\t\"./se\": 1410,\n\t\"./se.js\": 1410,\n\t\"./si\": 1411,\n\t\"./si.js\": 1411,\n\t\"./sk\": 1412,\n\t\"./sk.js\": 1412,\n\t\"./sl\": 1413,\n\t\"./sl.js\": 1413,\n\t\"./sq\": 1414,\n\t\"./sq.js\": 1414,\n\t\"./sr\": 1415,\n\t\"./sr-cyrl\": 1416,\n\t\"./sr-cyrl.js\": 1416,\n\t\"./sr.js\": 1415,\n\t\"./ss\": 1417,\n\t\"./ss.js\": 1417,\n\t\"./sv\": 1418,\n\t\"./sv.js\": 1418,\n\t\"./sw\": 1419,\n\t\"./sw.js\": 1419,\n\t\"./ta\": 1420,\n\t\"./ta.js\": 1420,\n\t\"./te\": 1421,\n\t\"./te.js\": 1421,\n\t\"./tet\": 1422,\n\t\"./tet.js\": 1422,\n\t\"./tg\": 1423,\n\t\"./tg.js\": 1423,\n\t\"./th\": 1424,\n\t\"./th.js\": 1424,\n\t\"./tl-ph\": 1425,\n\t\"./tl-ph.js\": 1425,\n\t\"./tlh\": 1426,\n\t\"./tlh.js\": 1426,\n\t\"./tr\": 1427,\n\t\"./tr.js\": 1427,\n\t\"./tzl\": 1428,\n\t\"./tzl.js\": 1428,\n\t\"./tzm\": 1429,\n\t\"./tzm-latn\": 1430,\n\t\"./tzm-latn.js\": 1430,\n\t\"./tzm.js\": 1429,\n\t\"./ug-cn\": 1431,\n\t\"./ug-cn.js\": 1431,\n\t\"./uk\": 1432,\n\t\"./uk.js\": 1432,\n\t\"./ur\": 1433,\n\t\"./ur.js\": 1433,\n\t\"./uz\": 1434,\n\t\"./uz-latn\": 1435,\n\t\"./uz-latn.js\": 1435,\n\t\"./uz.js\": 1434,\n\t\"./vi\": 1436,\n\t\"./vi.js\": 1436,\n\t\"./x-pseudo\": 1437,\n\t\"./x-pseudo.js\": 1437,\n\t\"./yo\": 1438,\n\t\"./yo.js\": 1438,\n\t\"./zh-cn\": 1439,\n\t\"./zh-cn.js\": 1439,\n\t\"./zh-hk\": 1440,\n\t\"./zh-hk.js\": 1440,\n\t\"./zh-tw\": 1441,\n\t\"./zh-tw.js\": 1441\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2152;","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\n\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        textTransform: theme.custom.leftMenuTextStyle,\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.palette.background.leftMenu,\n        width: theme.custom.leftMenuWidth,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        fontSize: theme.custom.leftMenuIconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        diplay: 'none',\n    },\n});\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route,\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(theme.palette.background.leftMenu);\n    const iconSize = theme.custom.leftMenuIconSize;\n    const ditectCurrentMenu = (location) => {\n        const { pathname } = location;\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n    };\n    useEffect(() => {\n        const { location } = history;\n        ditectCurrentMenu(location);\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n\n    return (\n        <Link\n            className={classNames(\n                classes.leftLInk,\n                {\n                    [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                },\n                'leftLInk',\n            )}\n            to={to}\n            style={{ backgroundColor: selected ? theme.palette.background.appBarSelected : '' }}\n        >\n            {// If the icon pro ( which is comming from the React Material library )\n            // is coming we add css class and render.\n            // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n            // allow customers theme\n            // the product without compiling.\n                Icon ? (\n                    React.cloneElement(Icon, {\n                        className: classNames(\n                            classes.leftLink_Icon,\n                            {\n                                [classes.noIcon]: leftMenu === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        ),\n                    })\n                ) : (\n                // We can also add custom icons\n                    <CustomIcon\n                        strokeColor={strokeColor}\n                        width={iconSize}\n                        height={iconSize}\n                        icon={text}\n                        className={classNames(\n                            classes.leftLInk,\n                            {\n                                [classes.noIcon]: leftMenu === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        )}\n                    />\n                )\n            }\n            <Typography\n                className={classNames(\n                    classes.leftLInkText,\n                    {\n                        [classes.leftLInkText_IconLeft]: leftMenu === 'icon left',\n                        [classes.leftLInkText_NoText]: leftMenu === 'no text',\n                    },\n                    'leftLInkText',\n                )}\n            >\n                {text}\n            </Typography>\n        </Link>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({\n        divider: PropTypes.string,\n        leftLInk: PropTypes.string,\n        leftLink_IconLeft: PropTypes.string,\n        noIcon: PropTypes.string,\n        leftLink_Icon: PropTypes.string,\n        leftLInkText: PropTypes.string,\n        leftLInkText_IconLeft: PropTypes.string,\n        leftLInkText_NoText: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            leftMenu: PropTypes.string,\n            leftMenuIconSize: PropTypes.number,\n        }),\n        palette: PropTypes.shape({\n            getContrastText: PropTypes.func,\n            background: PropTypes.shape({\n                leftMenu: PropTypes.string,\n                appBar: PropTypes.string,\n            }),\n            leftMenu: PropTypes.string,\n        }),\n    }).isRequired,\n    Icon: PropTypes.element.isRequired,\n    text: PropTypes.string.isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    history: PropTypes.shape({\n        listen: PropTypes.func.isRequired,\n        location: PropTypes.string.isRequired,\n    }).isRequired,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Typography, Tooltip } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * API/Product last updated time.\n * @param {Parameter} props last updated time.\n * @returns {Property} The sum of the two numbers.\n */\nfunction LastUpdatedTime(props) {\n    const { lastUpdatedTime } = props;\n    return (\n        <div style={{ float: 'right' }}>\n            <Tooltip\n                title={moment(lastUpdatedTime).calendar()}\n                aria-label='add'\n            >\n                <Typography variant='caption' display='block'>\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.last.updated.time'\n                        defaultMessage='Last updated:'\n                    />\n                    {' '}\n                    {moment(lastUpdatedTime).fromNow()}\n                </Typography>\n            </Tooltip>\n        </div>\n    );\n}\n\nLastUpdatedTime.propTypes = {\n    lastUpdatedTime: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default (LastUpdatedTime);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport Typography from '@material-ui/core/Typography';\nimport Api from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\n\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method]);\n    }\n    return (\n        <Chip\n            label={method.toUpperCase()}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, marginRight: 5,\n            }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    heading: {\n        marginRight: 20,\n    },\n    contentWrapper: {\n        maxHeight: '125px',\n        overflowY: 'auto',\n    },\n};\n\nclass Resources extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            paths: null,\n        };\n        this.restApi = new Api();\n    }\n\n    componentDidMount() {\n        const { id } = this.props.api;\n        const promisedAPI = this.restApi.getSwagger(id);\n        promisedAPI\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    this.setState({ paths: response.obj.paths });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n    render() {\n        const { paths } = this.state;\n        if (this.state.notFound) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Resources.resource.not.found'\n                        defaultMessage='resource not found...'\n                    />\n                </div>\n            );\n        }\n        if (!paths) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Resources.loading'\n                        defaultMessage='loading...'\n                    />\n                </div>\n            );\n        }\n        const { classes, parentClasses, api } = this.props;\n        return (\n            <>\n                <div className={parentClasses.titleWrapper}>\n                    { api.type === 'GraphQL' ? (\n                        <Typography variant='h5' component='h3' className={parentClasses.title}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.operations'\n                                defaultMessage='Operation'\n                            />\n                        </Typography>\n                    )\n                        : (\n                            <Typography variant='h5' component='h3' className={parentClasses.title}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Resources.resources'\n                                    defaultMessage='Resources'\n                                />\n                            </Typography>\n                        )}\n                </div>\n                <Box p={1}>\n                    <div className={classes.contentWrapper}>\n                        {Object.keys(paths).map((key) => {\n                            const path = paths[key];\n                            return (\n                                <div className={classes.root}>\n                                    <Typography className={classes.heading} variant='body1'>\n                                        {key}\n                                    </Typography>\n                                    {Object.keys(path).map((innerKey) => {\n                                        return CONSTS.HTTP_METHODS.includes(innerKey)\n                                            ? <RenderMethod method={innerKey} /> : null;\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </div>\n                    <Link to={'/apis/' + api.id + '/resources'}>\n                        <Typography\n                            className={classes.subHeading}\n                            color='primary'\n                            display='inline'\n                            variant='caption'\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.ShowMore'\n                                defaultMessage='Show More'\n                            />\n                            <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                        </Typography>\n                    </Link>\n                </Box>\n            </>\n        );\n    }\n}\nResources.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(Resources);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport ApiContext from '../components/ApiContext';\n\nconst styles = (theme) => ({\n    contentWrapper: {\n        marginTop: theme.spacing(2),\n        maxHeight: '250px',\n        overflowY: 'auto',\n    },\n});\n\n/**\n *\n * @param {*} props\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    const methodLower = method.toLowerCase();\n    let chipColor = theme.custom.operationChipColor\n        ? theme.custom.operationChipColor[methodLower]\n        : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.operationChipColor[methodLower]);\n    }\n    return (\n        <Chip\n            label={method}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, fontSize: 9, width: 95,\n            }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n/**\n *\n * @param {*} props\n */\nfunction Operations(props) {\n    const { classes, parentClasses } = props;\n    return (\n        <ApiContext.Consumer>\n            {({ api }) => (\n                <>\n                    <div className={parentClasses.titleWrapper}>\n                        <Typography variant='h5' component='h3' className={parentClasses.title}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.operation'\n                                defaultMessage='Operations'\n                            />\n                        </Typography>\n                    </div>\n                    <div>\n                        <div className={classes.contentWrapper}>\n                            <Table style={{ padding: 20 }}>\n                                {api.operations\n                            && api.operations.length !== 0\n                            && api.operations.map((item) => (\n                                <TableRow style={{ borderStyle: 'hidden' }}>\n                                    <TableCell style={{ padding: 8 }}>\n                                        <Typography className={parentClasses.heading} component='p' variant='body1'>\n                                            {item.target}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell style={{ padding: 8 }}>\n                                        <RenderMethod method={item.verb} />\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            </Table>\n                        </div>\n                        <Box py={2}>\n                            <Link to={'/apis/' + api.id + '/operations'}>\n                                <Typography\n                                    className={classes.subHeading}\n                                    color='primary'\n                                    display='inline'\n                                    variant='caption'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Operations.ShowMore'\n                                        defaultMessage='Show More'\n                                    />\n                                    <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                                </Typography>\n                            </Link>\n                        </Box>\n                    </div>\n                </>\n            )}\n        </ApiContext.Consumer>\n    );\n}\n\nOperations.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(Operations);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * Render method base.\n * @param {*} props\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    const methodLower = method.toLowerCase();\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[methodLower] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[methodLower]);\n    }\n    return (\n        <Chip\n            label={method.toUpperCase()}\n            style={{ backgroundColor: chipColor, color: chipTextColor, height: 20 }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'left',\n        marginBottom: 10,\n        padding: 5,\n    },\n    heading: {\n        marginRight: 20,\n        paddingBottom: 10,\n    },\n    resourceRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: 10,\n    },\n};\n\n/**\n * Component to show api product resources in overview tab\n */\nclass ProductResources extends React.PureComponent {\n    /**\n     * @inheritDoc\n     */\n    render() {\n        const { classes, parentClasses, api } = this.props;\n        const apiResources = api.apis;\n        return (\n            <>\n                <div className={parentClasses.titleWrapper} style={{ margin: '20px 0 0' }}>\n                    <Typography variant='h5' component='h3' className={parentClasses.title}>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.ProductResources.resources'\n                            defaultMessage='Resources'\n                        />\n                    </Typography>\n                </div>\n                <div className={classes.root}>\n                    <div className={classes.contentWrapper}>\n                        {Object.keys(apiResources).map((key) => {\n                            const resource = apiResources[key];\n                            return (\n                                <div className={classes.root}>\n                                    <Typography className={classes.heading} variant='body1'>\n                                        {resource.name}\n                                    </Typography>\n                                    {Object.keys(resource.operations).map((innerKey) => {\n                                        const operation = (resource.operations)[innerKey];\n                                        return (\n                                            <div className={classes.resourceRow}>\n                                                <Typography className={classes.heading} variant='body1'>\n                                                    {operation.target}\n                                                </Typography>\n                                                <RenderMethod method={operation.verb} />\n\n                                            </div>\n                                        );\n                                    })}\n\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\nProductResources.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(ProductResources);\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n\n/**\n * Capitalize the first letter of a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction capitalizeFirstLetter(string) {\n    return string && string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Lowercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction lowerCaseString(string) {\n    return string.toLowerCase();\n}\n\n/**\n * Uppercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction upperCaseString(string) {\n    return string.toUpperCase();\n}\n\nexport { capitalizeFirstLetter, lowerCaseString, upperCaseString };\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Policies(props) {\n    const { parentClasses, api } = props;\n    return (\n        <>\n            <Grid item xs={12} md={6} lg={4}>\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Policies.business.plans'\n                        defaultMessage='Business Plans:'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                {/* Throttling Policies */}\n                <Typography component='p' variant='body1'>\n                    {api.policies\n                    && api.policies.length !== 0\n                    && api.policies.map((item, index) => (\n                        <span>\n                            {item}\n                            {api.policies.length !== index + 1 && ', '}\n                            {' '}\n                        </span>\n                    ))}\n                </Typography>\n            </Grid>\n        </>\n    );\n}\n\nPolicies.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Policies);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Box from '@material-ui/core/Box';\nimport API from 'AppData/api';\nimport { capitalizeFirstLetter, upperCaseString, lowerCaseString } from 'AppData/stringFormatter';\nimport APIContext from '../components/ApiContext';\nimport Policies from './Policies';\n\nconst HUMAN_READABLE_SCHEMES = {\n    oauth2: 'OAuth2',\n    basic_auth: 'Basic Auth',\n    mutualssl: 'Mutual TLS',\n    api_key: 'API Key',\n};\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Configuration(props) {\n    const { parentClasses } = props;\n    const { api } = useContext(APIContext);\n\n    return (\n        <>\n            <div>\n                <Typography variant='h5' component='h3' className={parentClasses.title}>\n                    <FormattedMessage id='Apis.Details.NewOverview.MetaData.config' defaultMessage='Configuration' />\n                </Typography>\n            </div>\n            <Box p={1}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Transports */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.transports'\n                                defaultMessage='Transports'\n                            />\n                            <Tooltip\n                                placement='top'\n                                tabIndex='-1'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.transport.tooltip'\n                                            defaultMessage={\n                                                'HTTP is less secure than HTTPS and '\n                                                + 'makes your API vulnerable to security threats.'\n                                            }\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.transport && api.transport.length !== 0 && (\n                                <>\n                                    {api.transport.map((item, index) => (\n                                        <span>\n                                            {upperCaseString(item)}\n                                            {api.transport.length !== index + 1 && ', '}\n                                        </span>\n                                    ))}\n                                </>\n                            )}\n                            {!api.transport && (\n                                <>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.transports.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </Typography>\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* API Security */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.securityScheme'\n                                defaultMessage='API Security'\n                            />\n                            <Tooltip\n                                placement='top'\n                                tabIndex='-1'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.securityScheme.tooltip'\n                                            defaultMessage='OAuth2 is used as the default security schema.'\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.securityScheme && api.securityScheme.length !== 0 && (\n                                <>\n                                    {api.securityScheme\n                                        .filter((item) => !item.includes('mandatory'))\n                                        .map((filteredItem) => HUMAN_READABLE_SCHEMES[filteredItem])\n                                        .join(' , ')}\n                                </>\n                            )}\n                            {!api.securityScheme && (\n                                <>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.securityScheme.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </Typography>\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Access Control */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.access.control'\n                                defaultMessage='Access Control'\n                            />\n                            <Tooltip\n                                placement='top'\n                                tabIndex='-1'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.access.control.all.tooltip'\n                                            defaultMessage={\n                                                'All : The API is viewable, '\n                                                + 'modifiable by all the publishers and creators.'\n                                            }\n                                        />\n                                        <br />\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.access.control.tooltip'\n                                            defaultMessage={\n                                                'Restricted by roles : The API can be viewable and'\n                                                + ' modifiable by only specific publishers and creators '\n                                                + 'with the roles that you specify'\n                                            }\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.accessControl && (\n                                <>\n                                    {capitalizeFirstLetter(lowerCaseString(api.accessControl))}\n                                </>\n                            )}\n                            {api.accessControl === 'RESTRICTED' && ' ( Visible to '}\n                            {api.accessControl === 'RESTRICTED' && api.accessControlRoles.join()}\n                            {api.accessControl === 'RESTRICTED' && ' ) '}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* workflowStatus */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.workflow.status'\n                                defaultMessage='Workflow Status'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.workflowStatus && <>{api.workflowStatus}</>}\n                            {!api.workflowStatus && (\n                                <>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.workflowStatus.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </Typography>\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Visibility */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.visibility.store'\n                                defaultMessage='Visibility on Developer Portal'\n                            />\n                            <Tooltip\n                                placement='top'\n                                tabIndex='-1'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.visibility.store.all.tooltip'\n                                            defaultMessage={\n                                                'Public: The API is accessible to everyone and can be advertised '\n                                                + 'in multiple developer portals - a central developer portal '\n                                                + 'and/or non-WSO2 developer portals.'\n                                            }\n                                        />\n                                        <br />\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.visibility.store.res.tooltip'\n                                            defaultMessage={\n                                                'Restricted by roles: The API is visible only to '\n                                                + 'specific user roles in the tenant developer portal that you specify.'\n                                            }\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {(api.visibility && api.visibility === 'PRIVATE')\n                                ? (\n                                    <>\n                                    Visible to my domain\n                                    </>\n                                )\n                                : (\n                                    <>\n                                        {capitalizeFirstLetter(lowerCaseString(api.visibility))}\n                                    </>\n                                )}\n                            {api.visibility === 'RESTRICTED' && ' ( Visible to '}\n                            {api.visibility === 'RESTRICTED' && api.visibleRoles.join()}\n                            {api.visibility === 'RESTRICTED' && ' ) '}\n                        </Typography>\n                    </Grid>\n                    <Policies parentClasses={parentClasses} />\n                    {api.apiType === API.CONSTS.APIProduct ? null : (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.MetaData.tags'\n                                        defaultMessage='Tags'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                {api.tags\n                                    && api.tags.map((tag) => (\n                                        <Chip\n                                            key={tag}\n                                            label={tag}\n                                            style={{\n                                                'font-size': 13,\n                                                height: 20,\n                                                marginRight: 5,\n                                            }}\n                                        />\n                                    ))}\n                                {api.tags.length === 0 && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.tags.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nConfiguration.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n};\n\nexport default Configuration;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Grid from '@material-ui/core/Grid';\nimport green from '@material-ui/core/colors/green';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport ApiContext, { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthManager from 'AppData/AuthManager';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '90%',\n    },\n    button: {\n        color: theme.palette.secondary,\n        marginRight: theme.spacing(1),\n    },\n    gridRequirements: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: theme.spacing(2),\n    },\n    gridSmall: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: 0,\n        marginTop: theme.spacing(1),\n    },\n    gridEndpoint: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: 0,\n        marginRight: theme.spacing(4.2),\n        marginTop: theme.spacing(0.5),\n    },\n    iconTrue: {\n        color: green[500],\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        marginRight: theme.spacing(1),\n    },\n    iconFalse: {\n        color: theme.palette.grey[500],\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        marginRight: theme.spacing(1),\n    },\n    arrowIcon: {\n        position: 'absolute',\n        top: '16px',\n        right: '-76px',\n        fontSize: '7.9461rem',\n        color: theme.palette.background.default,\n        zIndex: theme.zIndex.overviewArrow,\n    },\n    label: {\n        paddingLeft: '0',\n        paddingRight: '0',\n        flexBasis: '33.3333%',\n        maxWidth: '33.3333%',\n    },\n    stepper: {\n        background: 'transparent',\n        marginLeft: theme.spacing(10),\n    },\n    box: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'transparent',\n        padding: '2px',\n        height: '82px',\n        borderRight: '0',\n        marginRight: '0',\n    },\n    pointerStart: {\n        height: 82,\n        position: 'relative',\n        background: theme.custom.overviewStepper.backgrounds.completed,\n        marginRight: '21px',\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            right: '-41px',\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.overviewStepper.backgrounds.completed,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n    },\n    pointerMiddle: {\n        height: 82,\n        position: 'relative',\n        background: theme.custom.overviewStepper.backgrounds.active,\n        margin: '0 20px',\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            right: '-41px',\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.overviewStepper.backgrounds.active,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.wrapperBackground,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n    },\n    pointerEnd: {\n        height: 82,\n        position: 'relative',\n        background: theme.custom.overviewStepper.backgrounds.inactive,\n        marginLeft: '21px',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.wrapperBackground,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n    },\n    pointerMiddleCompleted: {\n        background: theme.custom.overviewStepper.backgrounds.completed,\n        '&:before': {\n            borderLeftColor: theme.custom.overviewStepper.backgrounds.completed,\n        },\n    },\n    pointerEndActive: {\n        background: theme.custom.overviewStepper.backgrounds.active,\n    },\n    pointerEndCompleted: {\n        background: theme.custom.overviewStepper.backgrounds.completed,\n    },\n    stepIcon: {\n        fontSize: theme.custom.overviewStepper.iconSize,\n    },\n}));\n\n/**\n * This component renders the API steps\n *\n */\nexport default function CustomizedSteppers() {\n    const [api, updateAPI] = useAPI();\n    const classes = useStyles();\n    const { settings, user } = useAppContext();\n    const isEndpointAvailable = api.endpointConfig !== null;\n    const isTierAvailable = api.policies.length !== 0;\n    const isPrototypedAvailable = api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped';\n    const [lifecycleState, setlifecycleState] = useState([]);\n    const [isUpdating, setUpdating] = useState(false);\n    const { tenantList } = useContext(ApiContext);\n    const userNameSplit = user.name.split('@');\n    const tenantDomain = userNameSplit[userNameSplit.length - 1];\n    let devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview`;\n    if (tenantList && tenantList.length > 0) {\n        devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview?tenant=${tenantDomain}`;\n    }\n\n    useEffect(() => {\n        api.getLcState(api.id)\n            .then((result) => {\n                setlifecycleState(result.body.state);\n            });\n    }, []);\n\n    /**\n * Update the LifeCycle state of the API\n *\n */\n    function updateLCStateOfAPI(apiId, state) {\n        setUpdating(true);\n        const promisedUpdate = api.updateLcState(apiId, state);\n        promisedUpdate\n            .then(() => {\n                updateAPI()\n                    .then()\n                    .catch((error) => {\n                        if (error.response) {\n                            Alert.error(error.response.body.description);\n                        } else {\n                            Alert.error('Something went wrong while updating the API');\n                        }\n                        console.error(error);\n                    });\n                Alert.info('Lifecycle state updated successfully');\n            })\n            .finally(() => setUpdating(false))\n            .catch((errorResponse) => {\n                console.log(errorResponse);\n                Alert.error(JSON.stringify(errorResponse.message));\n            });\n    }\n\n    /**\n * This function renders the final lifecycle state\n * @param {*} state\n */\n    function finalLifecycleState(state) {\n        switch (state) {\n            case 'Published':\n                return (\n                    <Grid xs={12} display='block'>\n                        <Grid xs={12}>\n                            <Typography variant='h5'>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.CustomizedStepper.published'\n                                    defaultMessage='Published'\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12}>\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href={devportalUrl}\n                                className={classes.viewInStoreLauncher}\n                            >\n                                <Typography\n                                    variant='h6'\n                                    color='primary'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.components.APIDetailsTopMenu.view.in.portal'\n                                        defaultMessage='View in Dev Portal'\n                                    />\n                                    <LaunchIcon style={{ marginLeft: '5px' }} fontSize='small' />\n                                </Typography>\n                            </a>\n                        </Grid>\n                    </Grid>\n                );\n            case 'Prototyped':\n                return (\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.prototyped'\n                            defaultMessage='Prototyped'\n                        />\n                    </Typography>\n                );\n            case 'Blocked':\n                return (\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.blocked'\n                            defaultMessage='Blocked'\n                        />\n                    </Typography>\n                );\n            case 'Deprecated':\n                return (\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.deprecated'\n                            defaultMessage='Deprecated'\n                        />\n                    </Typography>\n                );\n            case 'Retired':\n                return (\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.retired'\n                            defaultMessage='Retired'\n                        />\n                    </Typography>\n                );\n            default:\n                return (\n                    <Grid xs={12} display='block'>\n                        <Grid xs={12}>\n                            {isPrototypedAvailable ? (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => updateLCStateOfAPI(api.id, 'Deploy as a Prototype')}\n                                    disabled={api.workflowStatus === 'CREATED' || AuthManager.isNotPublisher()}\n                                >\n                                        Deploy as a prototype\n                                    {isUpdating && <CircularProgress size={20} />}\n                                </Button>\n\n                            ) : (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => updateLCStateOfAPI(api.id, 'Publish')}\n                                    disabled={(!isEndpointAvailable || !isTierAvailable)\n                                        || AuthManager.isNotPublisher() || api.workflowStatus === 'CREATED'}\n                                >\n                                        Publish\n                                    {isUpdating && <CircularProgress size={20} />}\n                                </Button>\n                            )}\n                        </Grid>\n                        {api.workflowStatus === 'CREATED' && (\n                            <Grid xs={12}>\n                                <Typography variant='caption' color='error'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.CustomizedStepper.pending'\n                                        defaultMessage='The request is pending'\n                                    />\n                                </Typography>\n                            </Grid>\n                        )}\n                    </Grid>\n                );\n        }\n    }\n\n\n    let activeStep = 0;\n    if (lifecycleState === 'Created' && ((isEndpointAvailable && isTierAvailable) || isPrototypedAvailable)) {\n        activeStep = 2;\n    } else if (lifecycleState === 'Created') {\n        activeStep = 1;\n    } else if (lifecycleState !== 'Created') {\n        activeStep = 3;\n    }\n\n    const step2Class = activeStep > 1 ? classes.pointerMiddleCompleted : '';\n    let step3Class;\n    if (activeStep === 2) {\n        step3Class = classes.pointerEndActive;\n    } else if (activeStep === 3) {\n        step3Class = classes.pointerEndCompleted;\n    } else {\n        step3Class = '';\n    }\n\n    return (\n        <div className={classes.root}>\n            <Stepper alternativeLabel activeStep={activeStep} className={classes.stepper}>\n                <Step className={classes.label}>\n                    <StepLabel style={{ position: 'relative' }} StepIconProps={{ classes: { root: classes.stepIcon } }}>\n                        <div className={classes.pointerStart}>\n                            <Box className={classes.box}>\n                                <Typography variant='h5'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.CustomizedStepper.create'\n                                        defaultMessage='Created'\n                                    />\n                                </Typography>\n                            </Box>\n                        </div>\n                    </StepLabel>\n                </Step>\n                <Step className={classes.label}>\n                    <StepLabel style={{ position: 'relative' }} StepIconProps={{ classes: { root: classes.stepIcon } }}>\n                        <div className={`${classes.pointerMiddle} ${step2Class}`}>\n                            <Box p={2} borderLeft='0' borderRight='0'>\n                                <Tooltip\n                                    title={isEndpointAvailable ? '' : 'You have to specify an endpoint for the API'}\n                                    placement='top'\n                                >\n                                    <Grid className={classes.gridEndpoint}>\n                                        {isEndpointAvailable ? (\n                                            <CheckIcon className={classes.iconTrue} />\n                                        ) : (\n                                            <CloseIcon className={classes.iconFalse} />\n                                        )}\n                                        <Typography variant='h7'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.CustomizedStepper.business.plan.endpoint'\n                                                defaultMessage='Endpoint'\n                                            />\n                                        </Typography>\n                                        <Link to={'/apis/' + api.id + '/endpoints'}>\n                                            <LaunchIcon\n                                                style={{ marginLeft: '5px' }}\n                                                color='primary'\n                                                fontSize='small'\n                                            />\n                                        </Link>\n                                    </Grid>\n                                </Tooltip>\n                                <Tooltip\n                                    title={isTierAvailable ? '' : 'You have to select the business plan for the API'}\n                                    placement='bottom'\n                                >\n                                    <Grid xs={12} className={classes.gridSmall}>\n                                        {isTierAvailable ? (\n                                            <CheckIcon className={classes.iconTrue} />\n                                        ) : (\n                                            <CloseIcon className={classes.iconFalse} />\n                                        )}\n                                        <Typography variant='h7'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.CustomizedStepper.business.plan.businessPlans'\n                                                defaultMessage=' Business plans'\n                                            />\n                                        </Typography>\n                                        <Link to={'/apis/' + api.id + '/subscriptions'}>\n                                            <LaunchIcon\n                                                style={{ marginLeft: '5px' }}\n                                                color='primary'\n                                                fontSize='small'\n                                            />\n                                        </Link>\n                                    </Grid>\n                                </Tooltip>\n                            </Box>\n                        </div>\n                    </StepLabel>\n                </Step>\n                <Step className={classes.label}>\n                    <StepLabel style={{ position: 'relative' }} StepIconProps={{ classes: { root: classes.stepIcon } }}>\n                        <div className={`${classes.pointerEnd} ${step3Class}`}>\n                            <Box className={classes.box}>\n                                {finalLifecycleState(lifecycleState)}\n                            </Box>\n                        </div>\n                    </StepLabel>\n                </Step>\n            </Stepper>\n        </div>\n    );\n}\n\nCustomizedSteppers.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n};\n\nCustomizedSteppers.contextType = ApiContext;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction BusinessInformation(props) {\n    const { parentClasses, api } = props;\n    return (\n        <>\n            <Grid item xs={12} md={6} lg={4}>\n                {/* Business Owner */}\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.BusinessInformation.business.owner'\n                        defaultMessage='Business Owner'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                <Typography component='p' variant='body1'>\n                    {api.businessInformation.businessOwner && (\n                        <>{api.businessInformation.businessOwner}</>\n                    )}\n                </Typography>\n                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                    {!api.businessInformation.businessOwner && (\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.BusinessInformation.business.owner.not.set'\n                                defaultMessage='-'\n                            />\n                        </>\n                    )}\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n                {/* Technical Owner */}\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.BusinessInformation.technical.owner'\n                        defaultMessage='Technical Owner'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                <Typography component='p' variant='body1'>\n                    {api.businessInformation.technicalOwner\n                        && <>{api.businessInformation.technicalOwner}</>}\n                </Typography>\n                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                    {!api.businessInformation.technicalOwner && (\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.BusinessInformation.technical.owner.not.set'\n                                defaultMessage='-'\n                            />\n                        </>\n                    )}\n                </Typography>\n            </Grid>\n        </>\n    );\n}\n\nBusinessInformation.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(BusinessInformation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport API from 'AppData/api';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport BusinessInformation from './BusinessInformation';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction MetaData(props) {\n    const { parentClasses } = props;\n    const [api] = useAPI();\n\n    return (\n        <>\n            <Typography variant='h5' component='h3' className={parentClasses.title}>\n                <FormattedMessage\n                    id='Apis.Details.NewOverview.MetaData.metadata'\n                    defaultMessage='Metadata'\n                />\n            </Typography>\n            <Box p={1}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} md={6} lg={4}>\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.description'\n                                defaultMessage='Description'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.description\n                            && (\n                                <>\n                                    {capitalizeFirstLetter(api.description)}\n                                </>\n                            )}\n                        </Typography>\n                        <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                            {!api.description\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.description.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Provider */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.provider'\n                                defaultMessage='Provider'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.provider && <>{api.provider}</>}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.context:'\n                                defaultMessage='Context:'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.context && <>{api.context}</>}\n                        </Typography>\n                    </Grid>\n                    {/* Version */}\n                    {api.apiType === API.CONSTS.API && (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.MetaData.version'\n                                        defaultMessage='Version'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                <Typography component='p' variant='body1'>\n                                    {api.version && <>{api.version}</>}\n                                </Typography>\n                            </Grid>\n                        </>\n                    )}\n                    {/* Type */}\n                    {api.apiType === API.CONSTS.APIProduct ? null : (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <>\n                                    <Typography\n                                        component='p'\n                                        variant='subtitle2'\n                                        className={parentClasses.subtitle}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.type:'\n                                            defaultMessage='Type:'\n                                        />\n                                    </Typography>\n                                </>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                <Typography component='p' variant='body1'>\n                                    {api.type && <>{api.type}</>}\n                                    {!api.type\n                                        && (\n                                            <>\n                                                <Typography\n                                                    component='p'\n                                                    variant='body1'\n                                                    className={parentClasses.notConfigured}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewOverview.MetaData.type.not.set'\n                                                        defaultMessage='-'\n                                                    />\n                                                </Typography>\n                                            </>\n                                        )}\n                                </Typography>\n                            </Grid>\n                        </>\n                    )}\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Created Time */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.created.time'\n                                defaultMessage='Created Time'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.createdTime\n                            && (\n                                <>\n                                    <Tooltip\n                                        title={moment(api.createdTime).calendar()}\n                                        aria-label='add'\n                                        interactive\n                                        placement='top-start'\n                                        tabIndex='-1'\n                                    >\n                                        <Typography variant='body1' display='block'>\n                                            {capitalizeFirstLetter(moment(api.createdTime).fromNow())}\n                                        </Typography>\n                                    </Tooltip>\n                                </>\n                            )}\n                            {!api.createdTime\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.createdTime.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Last Updated Time */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.last.updated.time'\n                                defaultMessage='Last Updated Time'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.lastUpdatedTime\n                            && (\n                                <>\n                                    <Tooltip\n                                        title={moment(api.lastUpdatedTime).calendar()}\n                                        aria-label='add'\n                                        interactive\n                                        placement='top-start'\n                                        tabIndex='-1'\n                                    >\n                                        <Typography variant='body1' display='block'>\n                                            {capitalizeFirstLetter(moment(api.lastUpdatedTime).fromNow())}\n                                        </Typography>\n                                    </Tooltip>\n                                </>\n                            )}\n                            {!api.lastUpdatedTime\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.lastUpdatedTime.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <BusinessInformation parentClasses={parentClasses} />\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nMetaData.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n};\n\nexport default MetaData;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Box from '@material-ui/core/Box';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst showEndpoint = (api, type) => {\n    if (api.endpointConfig) {\n        if (type === 'prod') {\n            return api.getProductionEndpoint();\n        }\n        if (type === 'sand') {\n            return api.getSandboxEndpoint();\n        }\n    }\n    return null;\n};\n\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Endpoints(props) {\n    const { parentClasses, api } = props;\n    const isPrototypedAvailable = api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped';\n\n    return (\n        <>\n            <div>\n                <Typography variant='h5' component='h3' className={parentClasses.title}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Endpoints.endpoints'\n                        defaultMessage='Endpoints'\n                    />\n                </Typography>\n            </div>\n            <Box p={1}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Production Endpoint (TODO) fix the endpoint\n                                            info when it's available with the api object */}\n                        { !isPrototypedAvailable ? (\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Endpoints.production.endpoint'\n                                    defaultMessage='Production Endpoint'\n                                />\n                            </Typography>\n                        )\n                            : (\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Endpoints.prototype.endpoint'\n                                        defaultMessage='Prototype Endpoint'\n                                    />\n                                </Typography>\n                            )}\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Tooltip\n                            placement='top'\n                            classes={{\n                                tooltip: parentClasses.htmlTooltip,\n                            }}\n                            title={\n                                showEndpoint(api, 'prod')\n                                && <>{showEndpoint(api, 'prod')}</>\n                            }\n                        >\n                            <Typography component='p' variant='body1' className={parentClasses.url}>\n                                {showEndpoint(api, 'prod')\n                                && <>{showEndpoint(api, 'prod')}</>}\n                            </Typography>\n                        </Tooltip>\n                        <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                            {!showEndpoint(api, 'prod') && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Endpoints.not.set'\n                                        defaultMessage='-'\n                                    />\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    {!isPrototypedAvailable && (\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                                it's available with the api object */}\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Endpoints.sandbox.endpoint'\n                                    defaultMessage='Sandbox Endpoint'\n                                />\n                            </Typography>\n                        </Grid>\n                    )}\n\n                    {!isPrototypedAvailable && (\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Tooltip\n                                placement='top'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={\n                                    showEndpoint(api, 'sand')\n                                    && <>{showEndpoint(api, 'sand')}</>\n                                }\n                            >\n                                <Typography component='p' variant='body1' className={parentClasses.url}>\n                                    {showEndpoint(api, 'sand')\n                                    && <>{showEndpoint(api, 'sand')}</>}\n                                </Typography>\n                            </Tooltip>\n                            <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                {!showEndpoint(api, 'sand') && (\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Endpoints.sandbox.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </>\n                                )}\n                            </Typography>\n                        </Grid>\n                    )}\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                            it's available with the api object */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Endpoints.endpoint.security'\n                                defaultMessage='Endpoint Security'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.endpointSecurity && <>{api.endpointSecurity.type}</>}\n                        </Typography>\n                        <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                            {!api.endpointSecurity\n                            && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Endpoints.security.not.set'\n                                        defaultMessage='-'\n                                    />\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nEndpoints.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Endpoints);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport green from '@material-ui/core/colors/green';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport API from 'AppData/api';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Resources from './Resources';\nimport Operations from './Operations';\nimport ProductResources from './ProductResources';\nimport Configuration from './Configuration';\nimport CustomizedStepper from './CustomizedStepper';\nimport MetaData from './MetaData';\nimport Endpoints from './Endpoints';\n\nconst styles = (theme) => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    contentWrapper: {\n        marginTop: theme.spacing(2),\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    checkItem: {\n        textAlign: 'center',\n    },\n    divider: {\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n        padding: 0,\n        height: 'auto',\n        '& span': {\n            padding: '0 5px',\n        },\n    },\n    imageContainer: {\n        display: 'flex',\n    },\n    imageWrapper: {\n        marginRight: theme.spacing(3),\n    },\n    subtitle: {\n        marginTop: theme.spacing(0),\n    },\n    specialGap: {\n        marginTop: theme.spacing(3),\n    },\n    resourceTitle: {\n        marginBottom: theme.spacing(3),\n    },\n    ListRoot: {\n        padding: 0,\n        margin: 0,\n    },\n    titleWrapper: {\n        display: 'flex',\n    },\n    title: {\n        flex: 1,\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    htmlTooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n    lifecycleWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    lifecycleIcon: {\n        fontSize: 36,\n        color: 'green',\n        marginRight: theme.spacing(1),\n    },\n    leftSideWrapper: {\n        paddingRight: theme.spacing(2),\n    },\n    notConfigured: {\n        color: 'rgba(0, 0, 0, 0.40)',\n    },\n    url: {\n        maxWidth: '100%',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\n\n/**\n * API Overview page\n *\n * @param {*} props\n * @returns\n */\nfunction Overview(props) {\n    const { classes, api: newApi } = props;\n    const { api } = useContext(ApiContext);\n    let loadEndpoints;\n\n    if (api.apiType === API.CONSTS.API) {\n        loadEndpoints = <Endpoints parentClasses={classes} api={api} />;\n    }\n    function getResourcesClassForAPIs(apiType) {\n        switch (apiType) {\n            case 'GRAPHQL':\n                return <Operations parentClasses={classes} api={api} />;\n            case 'APIProduct':\n                return <ProductResources parentClasses={classes} api={api} />;\n            case 'WS':\n                return '';\n            default:\n                return <Resources parentClasses={classes} api={api} />;\n        }\n    }\n\n    if (newApi.apiType === API.CONSTS.APIProduct) {\n        api.type = API.CONSTS.APIProduct;\n    }\n    return (\n        <>\n            <Typography variant='h4' align='left' className={classes.mainTitle}>\n                <FormattedMessage\n                    id='Apis.Details.Overview.Overview.topic.header'\n                    defaultMessage='Overview'\n                />\n            </Typography>\n            {api.type !== API.CONSTS.APIProduct && (\n                <Grid container spacing={12}>\n                    <Grid item xs={12} s={12} md={12} lg={12}>\n                        <CustomizedStepper />\n                    </Grid>\n                </Grid>\n            )}\n            <div className={classes.contentWrapper}>\n                <Paper className={classes.root}>\n                    <Grid container spacing={24}>\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid container spacing={24}>\n                                <Grid item xs={12} md={6} lg={6}>\n                                    <MetaData parentClasses={classes} />\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={6}>\n                                    <Configuration parentClasses={classes} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} md={12} lg={12}>\n                            <div className={classes.specialGap}>\n                                <Grid container spacing={24}>\n                                    <Grid item xs={12} md={6} lg={6}>\n                                        <Grid item xs={12} md={8} lg={8}>\n                                            {getResourcesClassForAPIs(api.type)}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} lg={6}>\n                                        {loadEndpoints}\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        </>\n    );\n}\n\nOverview.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(Overview);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport Box from '@material-ui/core/Box';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultVersion(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    return (\n        <Grid container spacing={1} alignItems='flex-start' xs={11}>\n            <Grid item>\n                <Box mt={4}>\n                    <FormControl component='fieldset' style={{ display: 'flex' }}>\n                        <FormLabel component='legend'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.isdefault.label'\n                                defaultMessage='Make this the default version'\n                            />\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Make this the default version'\n                            value={api.isDefaultVersion}\n                            onChange={({\n                                target: { value },\n                            }) => configDispatcher({\n                                action: 'isDefaultVersion', value: value === 'true',\n                            })}\n                            style={{ display: 'flow-root' }}\n                        >\n                            <FormControlLabel\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                value\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.isdefault.yes'\n                                        defaultMessage='Yes'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                value={false}\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.isdefault.no'\n                                        defaultMessage='No'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Box>\n            </Grid>\n            <Grid item xs={1}>\n                <Box mt={3}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.defaultversion.tooltip'\n                                defaultMessage={\n                                    'Indicates if this is the default version of the API. If an '\n                                    + 'API is invoked without specifying a version, the API Gateway will '\n                                    + 'route the request to the default version of the API.'\n                                }\n                            />\n                        )}\n                        aria-label='add'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultVersion.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Description(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n\n    return (\n        <TextField\n            id='outlined-multiline-static'\n            label='Description'\n            multiline\n            rows='4'\n            value={api.description}\n            margin='0'\n            fullWidth\n            variant='outlined'\n            onChange={(e) => configDispatcher({ action: 'description', value: e.target.value })}\n            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n        />\n    );\n}\n\nDescription.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * api.accessControl possible values are `NONE` and `RESTRICTED`\n * @export\n * @param {*} props\n * @returns\n */\nexport default function AccessControl(props) {\n    const [roleValidity, setRoleValidity] = useState(true);\n    const [userRoleValidity, setUserRoleValidity] = useState(true);\n    const { api, configDispatcher } = props;\n    const isNone = api.accessControl === 'NONE';\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n\n    const [invalidRoles, setInvalidRoles] = useState([]);\n    useEffect(() => {\n        if (invalidRoles.length === 0) {\n            setRoleValidity(true);\n            setUserRoleValidity(true);\n        }\n    }, [invalidRoles]);\n    const handleRoleAddition = (role) => {\n        const systemRolePromise = APIValidation.role.validate(base64url.encode(role));\n        const userRolePromise = APIValidation.userRole.validate(base64url.encode(role));\n        systemRolePromise.then(() => {\n            setRoleValidity(true);\n            userRolePromise.then(() => {\n                setUserRoleValidity(true);\n                configDispatcher({\n                    action: 'accessControlRoles',\n                    value: [...api.accessControlRoles, role],\n                });\n            }).catch((error) => {\n                if (error.status === 404) {\n                    setUserRoleValidity(false);\n                    setInvalidRoles([...invalidRoles, role]);\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating user roles ' + error);\n                }\n            });\n        }).catch((error) => {\n            if (error.status === 404) {\n                setRoleValidity(false);\n                setInvalidRoles([...invalidRoles, role]);\n            } else {\n                Alert.error('Error when validating role: ' + role);\n                console.error('Error when validating roles ' + error);\n            }\n        });\n    };\n\n    const handleRoleDeletion = (role) => {\n        setInvalidRoles(invalidRoles.filter((existingRole) => existingRole !== role));\n        configDispatcher({\n            action: 'accessControlRoles',\n            value: api.accessControlRoles.filter((existingRole) => existingRole !== role),\n        });\n    };\n\n    const handleRoleValidationFailure = () => {\n        if (!roleValidity) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.Roles.Invalid'\n                    defaultMessage='Role is invalid'\n                />\n            );\n        } else if (!userRoleValidity) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.Roles.User.Invalid'\n                    defaultMessage='Role must be associated with the API creator'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                    defaultMessage='Enter valid role and press enter'\n                />\n            );\n        }\n    };\n\n    return (\n        <>\n            <Box style={{ position: 'relative', marginBottom: -12 }}>\n                <TextField\n                    fullWidth\n                    id='accessControl-selector'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.head.topic'\n                            defaultMessage='Publisher Access Control'\n                        />\n                    )}\n                    value={api.accessControl}\n                    name='accessControl'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'accessControl', value })}\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    helperText={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.form.helper.text'\n                            defaultMessage='There are no access restrictions by default'\n                        />\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                >\n                    <MenuItem value='NONE'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.dropdown.none'\n                            defaultMessage='All'\n                        />\n                    </MenuItem>\n                    <MenuItem value='RESTRICTED'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.dropdown.restricted'\n                            defaultMessage='Restrict by role(s)'\n                        />\n                    </MenuItem>\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AccessControl.tooltip.all'\n                                        defaultMessage='All :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AccessControl.tooltip.all.desc'\n                                    defaultMessage='The API is viewable, modifiable by all the publishers and creators.'\n                                />\n                                <br />\n                                <br />\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AccessControl.tooltip.restrict'\n                                        defaultMessage='Restricted by roles :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AccessControl.tooltip.restrict.\n                                    desc'\n                                    defaultMessage={'The API can be viewed and modified only by specific'\n                                    + ' publishers and creators with the roles that you specify'}\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='Publisher Access Control'\n                    placement='right-end'\n                    interactive\n                    className={classes.tooltip}\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n            {!isNone && (\n                <Box py={1} style={{ marginTop: 10 }}>\n                    <ChipInput\n                        fullWidth\n                        variant='outlined'\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.AccessControl.roles'\n                                defaultMessage='Roles'\n                            />\n                        )}\n                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                        value={api.accessControlRoles.concat(invalidRoles)}\n                        alwaysShowPlaceholder={false}\n                        placeholder='Enter roles and press Enter'\n                        blurBehavior='clear'\n                        InputProps={{\n                            endAdornment: (!roleValidity || !userRoleValidity) && (\n                                <InputAdornment position='end'>\n                                    <Error color='error' style={{ paddingBottom: 8 }} />\n                                </InputAdornment>\n                            ),\n                        }}\n                        onAdd={handleRoleAddition}\n                        error={!roleValidity || !userRoleValidity}\n                        helperText={handleRoleValidationFailure()}\n                        chipRenderer={({ value }, key) => (\n                            <Chip\n                                key={key}\n                                size='small'\n                                label={value}\n                                onDelete={() => {\n                                    handleRoleDeletion(value);\n                                }}\n                                style={{\n                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                    margin: '0 8px 12px 0',\n                                    float: 'left',\n                                }}\n                            />\n                        )}\n                    />\n                </Box>\n            )}\n        </>\n    );\n}\n\nAccessControl.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport CONSTS from 'AppData/Constants';\nimport API from 'AppData/api';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * api.accessControl possible values are `NONE` and `RESTRICTED`\n * @export\n * @param {*} props\n * @returns\n */\nexport default function StoreVisibility(props) {\n    const [roleValidity, setRoleValidity] = useState(true);\n    const [roleExists, setRoleExists] = useState(true);\n    const { api, configDispatcher } = props;\n    const [invalidRoles, setInvalidRoles] = useState([]);\n    const isRestrictedByRoles = api.visibility === 'RESTRICTED';\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    const restApi = new API();\n    const [tenants, setTenants] = useState([]);\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                setTenants(result.body.count);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (invalidRoles.length === 0) {\n            setRoleValidity(true);\n        }\n        if (api.visibility === 'RESTRICTED' && api.visibleRoles.length !== 0) {\n            setRoleExists(true);\n        }\n    }, [invalidRoles]);\n    const handleRoleAddition = (role) => {\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise.then(() => {\n            setRoleExists(true);\n            setRoleValidity(true);\n            configDispatcher({\n                action: 'visibleRoles',\n                value: [...api.visibleRoles, role],\n            });\n        }).catch((error) => {\n            if (error.status === 404) {\n                setRoleValidity(false);\n                setInvalidRoles([...invalidRoles, role]);\n            } else {\n                Alert.error('Error when validating role: ' + role);\n                console.error('Error when validating roles ' + error);\n            }\n        });\n    };\n\n    const handleRoleDeletion = (role) => {\n        if (invalidRoles.includes(role)) {\n            setInvalidRoles(invalidRoles.filter((existingRole) => existingRole !== role));\n        }\n        if (api.visibility === 'RESTRICTED' && api.visibleRoles.length > 1) {\n            setRoleExists(true);\n        } else {\n            setRoleExists(false);\n        }\n        configDispatcher({\n            action: 'visibleRoles',\n            value: api.visibleRoles.filter((existingRole) => existingRole !== role),\n        });\n    };\n\n    return (\n        <>\n            <Box style={{ position: 'relative' }}>\n                <TextField\n                    fullWidth\n                    id='storeVisibility-selector'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.head.topic'\n                            defaultMessage='Developer Portal Visibility'\n                        />\n                    )}\n                    value={api.visibility}\n                    name='storeVisibility'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'visibility', value })}\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    helperText={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.form.helper.text'\n                            defaultMessage='By default API is visible to all developer portal users'\n                        />\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                >\n                    <MenuItem value='PUBLIC'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.StoreVisibility.dropdown.public'\n                            defaultMessage='Public'\n                        />\n                    </MenuItem>\n                    <MenuItem value='RESTRICTED'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.dropdown.restrict'\n                            defaultMessage='Restrict by role(s)'\n                        />\n                    </MenuItem>\n                    {tenants !== 0\n                        && (\n                            <MenuItem value='PRIVATE'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.dropdown.private'\n                                    defaultMessage='Visible to my domain'\n                                />\n                            </MenuItem>\n                        )}\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.storeVisibility.tooltip.public'\n                                        defaultMessage='Public :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.tooltip.public.desc'\n                                    defaultMessage={\n                                        'The API is accessible to everyone and can be advertised '\n                                        + 'in multiple developer portals - a central developer portal '\n                                        + 'and/or non-WSO2 developer portals.'\n                                    }\n                                />\n                                <br />\n                                <br />\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.storeVisibility.tooltip.restrict'\n                                        defaultMessage='Restricted by roles(s) :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.tooltip.restrict.desc'\n                                    defaultMessage={\n                                        'The API is visible only to specific user'\n                                        + ' roles in the tenant developer portal that you specify.'\n                                    }\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='Store Visibility'\n                    placement='right-end'\n                    className={classes.tooltip}\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n            {isRestrictedByRoles && (\n                <Box py={2} style={{ marginTop: -10, marginBottom: 10 }}>\n                    <ChipInput\n                        fullWidth\n                        variant='outlined'\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.storeVisibility.roles'\n                                defaultMessage='Roles'\n                            />\n                        )}\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                        value={api.visibleRoles.concat(invalidRoles)}\n                        alwaysShowPlaceholder={false}\n                        placeholder='Enter roles and press Enter'\n                        blurBehavior='clear'\n                        InputProps={{\n                            endAdornment: !roleValidity && (\n                                <InputAdornment position='end'>\n                                    <Error color='error' style={{ paddingBottom: 8 }} />\n                                </InputAdornment>\n                            ),\n                        }}\n                        onAdd={handleRoleAddition}\n                        error={!roleValidity || !roleExists}\n                        helperText={\n                            roleValidity ? (\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                                    defaultMessage='Enter valid role and press enter'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Roles.Invalid'\n                                    defaultMessage='Role is invalid'\n                                />\n                            )\n                        }\n                        chipRenderer={({ value }, key) => (\n                            <Chip\n                                key={key}\n                                size='small'\n                                label={value}\n                                onDelete={() => {\n                                    handleRoleDeletion(value);\n                                }}\n                                style={{\n                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                    margin: '0 8px 12px 0',\n                                    float: 'left',\n                                }}\n                            />\n                        )}\n                    />\n                </Box>\n            )}\n        </>\n    );\n}\n\nStoreVisibility.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ChipInput from 'material-ui-chip-input';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Tags(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    const [isTagValid, setIsTagValid] = useState(true);\n    const [invalidTags, setInvalidTags] = useState([]);\n    const regexPattern = /([~!@#;%^&*+=|\\\\<>\"'/,])/;\n    return (\n        <React.Fragment style={{ marginTop: 10 }}>\n            <ChipInput\n                fullWidth\n                variant='outlined'\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Tags.title'\n                        defaultMessage='Tags'\n                    />\n                )}\n                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                value={api.tags}\n                error={!isTagValid}\n                helperText={isTagValid ? (\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Tags.helper'\n                        defaultMessage='Press `Enter` after typing the tag name to add a new tag'\n                    />\n                ) : (\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Tags.error'\n                        defaultMessage={\n                            'The tag contains one or more illegal characters '\n                            + '( ~ ! @ # ; % ^ & * + = { } | < > , \\' \" \\\\\\\\ / ) .'\n                        }\n                    />\n                )}\n                onAdd={(tag) => {\n                    if (regexPattern.test(tag)) {\n                        setIsTagValid(false);\n                        setInvalidTags([...invalidTags, tag]);\n                    }\n                    configDispatcher({\n                        action: 'tags',\n                        value: [...api.tags, tag.length > 30 ? tag.substring(0, 30) : tag],\n                    });\n                }}\n                chipRenderer={({ value }, key) => (\n                    <Chip\n                        key={key}\n                        size='small'\n                        label={value}\n                        onDelete={() => {\n                            if (invalidTags.includes(value)) {\n                                const currentInvalidTags = invalidTags.filter((existingTag) => existingTag !== value);\n                                setInvalidTags(currentInvalidTags);\n                                if (currentInvalidTags.length === 0) {\n                                    setIsTagValid(true);\n                                }\n                            }\n                            configDispatcher({ action: 'tags', value: api.tags.filter((oldTag) => oldTag !== value) });\n                        }}\n                        style={{\n                            backgroundColor: regexPattern.test(value) ? red[300] : null,\n                            margin: '0 8px 12px 0',\n                            float: 'left',\n                        }}\n                    />\n                )}\n                style={{ display: 'flex' }}\n            />\n        </React.Fragment>\n    );\n}\n\nTags.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport API from 'AppData/api';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n}));\n\nfunction APICategories(props) {\n    const [categories, setCategories] = useState({});\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n\n    console.log(api.selectedCategories);\n\n    useEffect(() => {\n        API.apiCategories().then((response) => setCategories(response.body));\n    }, []);\n\n    if (!categories.list) {\n        return null;\n    } else {\n        return (\n            <Box style={{ position: 'relative', marginTop: 10 }}>\n                <TextField\n                    fullWidth\n                    select\n                    label={(\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.Configurations.api.categories'\n                                defaultMessage='API Categories'\n                            />\n                        </>\n                    )}\n                    name='categories'\n                    margin='normal'\n                    variant='outlined'\n                    value={api.categories}\n                    SelectProps={{\n                        multiple: true,\n                        renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                    }}\n                    onChange={(e) => configDispatcher({ action: 'categories', value: e.target.value })}\n                    InputProps={{\n                        id: 'itest-id-categories-input',\n                    }}\n                    helperText='Select API Categories for the API'\n                >\n                    { (categories.list.length === 0)\n                        ? (\n                            <MenuItem id='no-category-notification'>\n                                <ListItemText\n                                    primary='No API Categories defined yet. Please create an API Category first.'\n                                />\n                            </MenuItem>\n                        )\n                        : (\n                            categories.list.map((category) => (\n                                <MenuItem\n                                    dense\n                                    disableGutters\n                                    id={category.id}\n                                    key={category.name}\n                                    value={category.name}\n                                >\n                                    <Checkbox color='primary' checked={api.categories.includes(category.name)} />\n                                    <ListItemText primary={category.name} secondary={category.description} />\n                                </MenuItem>\n                            ))\n                        )}\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <FormattedMessage\n                                    id='Api.category.dropdown.tooltip'\n                                    defaultMessage={'API categories can be added via admin portal UI or admin REST'\n                                        + ' API. There has to be pre-defined API categories in the environment in order'\n                                        + ' to be attached to an API.'}\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='API Categories'\n                    placement='right-end'\n                    interactive\n                    className={classes.tooltip}\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n        );\n    }\n}\n\nAPICategories.defaultProps = {\n    categories: [],\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n\nexport default withAPI(APICategories);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\n\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport ThumbnailView from 'AppComponents/Apis/Listing/components/ImageGenerator/ThumbnailView';\nimport { isRestricted } from 'AppData/AuthManager';\nimport API from 'AppData/api.js';\nimport DefaultVersion from './components/DefaultVersion';\nimport Description from './components/Description';\nimport AccessControl from './components/AccessControl';\nimport StoreVisibility from './components/StoreVisibility';\nimport Tags from './components/Tags';\nimport APICategories from './components/APICategories';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing(3),\n    },\n    paperCenter: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    heading: {\n        fontSize: '1.1rem',\n        fontWeight: 400,\n        marginBottom: theme.spacing(0),\n    },\n    itemPadding: {\n        marginBottom: theme.spacing(3),\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 90,\n        right: -43,\n    },\n    arrowBackIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 30,\n        right: -71,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    btnSpacing: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    return {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        lifeCycleStatus: api.lifeCycleStatus,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        maxTps: api.maxTps,\n        transport: [...api.transport],\n        wsdlUrl: api.wsdlUrl,\n        securityScheme: [...api.securityScheme],\n        categories: [...api.categories],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n    };\n}\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DesignConfigurations() {\n    /**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\n    function configReducer(state, configAction) {\n        const { action, value } = configAction;\n        const nextState = copyAPIConfig(state);\n        switch (action) {\n            case 'description':\n            case 'isDefaultVersion':\n            case 'authorizationHeader':\n            case 'responseCachingEnabled':\n            case 'cacheTimeout':\n            case 'enableSchemaValidation':\n            case 'visibility':\n            case 'maxTps':\n            case 'categories':\n            case 'tags':\n                nextState[action] = value;\n                return nextState;\n            case 'accessControl':\n                nextState[action] = value;\n                if (value === 'NONE') {\n                    nextState.accessControlRoles = [];\n                }\n                return nextState;\n            case 'accessControlRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'visibleRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            default:\n                return state;\n        }\n    }\n    const { api, updateAPI } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n\n    const invalidTagsExist = apiConfig.tags.find((tag) => {\n        return (/([~!@#;%^&*+=|\\\\<>\"'/,])/.test(tag));\n    });\n\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSave() {\n        setIsUpdating(true);\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => setIsUpdating(false));\n    }\n\n    return (\n        <>\n            <Container maxWidth='md'>\n                <Grid container spacing={2}>\n                    <Grid item md={12}>\n                        <Typography variant='h5'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.Design.topic.header'\n                                defaultMessage='Design Configurations'\n                            />\n                        </Typography>\n                        {api.apiType === API.CONSTS.APIProduct\n                            ? (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.Design.APIProduct.sub.heading'\n                                        defaultMessage='Configure API Product visibility.'\n                                    />\n                                </Typography>\n                            )\n                            : (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.Design.sub.heading'\n                                        defaultMessage='Configure API visibility.'\n                                    />\n                                </Typography>\n                            )}\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>\n                            <div>\n                                <Box px={8} py={5}>\n                                    <Box py={1}>\n                                        <Grid container spacing={0}>\n                                            <Grid item xs={12} md={2}>\n                                                <ThumbnailView\n                                                    api={api}\n                                                    width={100}\n                                                    height={100}\n                                                    isEditable={!isRestricted(['apim:api_publish',\n                                                        'apim:api_create'], api)}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12} md={10}>\n                                                <Description api={apiConfig} configDispatcher={configDispatcher} />\n                                            </Grid>\n                                        </Grid>\n                                    </Box>\n                                    <Box py={1}>\n                                        <AccessControl api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <StoreVisibility api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <Tags api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <APICategories\n                                            api={apiConfig}\n                                            configDispatcher={configDispatcher}\n                                            categories={api.categories}\n                                        />\n                                    </Box>\n                                    <Box py={1}>\n                                        {api.apiType !== 'APIProduct' && (\n                                            <DefaultVersion api={apiConfig} configDispatcher={configDispatcher} />\n                                        )}\n                                    </Box>\n                                    <Box pt={2}>\n                                        <Button\n                                            disabled={\n                                                isUpdating || invalidTagsExist\n                                                || (apiConfig.visibility === 'RESTRICTED'\n                                                    && apiConfig.visibleRoles.length === 0)\n                                            }\n                                            type='submit'\n                                            variant='contained'\n                                            color='primary'\n                                            className={classes.btnSpacing}\n                                            onClick={handleSave}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.Configuration.save'\n                                                defaultMessage='Save'\n                                            />\n                                            {isUpdating && <CircularProgress size={15} />}\n                                        </Button>\n                                        <Link to={'/apis/' + api.id + '/overview'}>\n                                            <Button>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Configuration.Configuration.cancel'\n                                                    defaultMessage='Cancel'\n                                                />\n                                            </Button>\n                                        </Link>\n                                    </Box>\n                                    {isRestricted(['apim:api_create'], api) && (\n                                        <Box py={1}>\n                                            <Typography variant='body2' color='primary'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Configuration.Configuration.update.not.allowed'\n                                                    defaultMessage={\n                                                        '* You are not authorized to update particular fields of'\n                                                        + ' the API due to insufficient permissions'\n                                                    }\n                                                />\n                                            </Typography>\n                                        </Box>\n                                    )}\n                                </Box>\n                            </div>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { makeStyles } from '@material-ui/core';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    paper: {\n        padding: theme.spacing(0, 3),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ResponseCaching(props) {\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n    const isResponseCachingEnabled = api.responseCachingEnabled;\n\n    return (\n        <>\n            <ExpansionPanel className={classes.expansionPanel}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography className={classes.subHeading} variant='h6'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.response.caching'\n                            defaultMessage='Response Caching'\n                        />\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.ResponseCaching.tooltip'\n                                    defaultMessage={\n                                        'If enabled, the API response will be cached at the gateway level'\n                                        + ' to improve the response time and minimize the backend load'\n                                    }\n                                />\n                            )}\n                            aria-label='Response cache'\n                            placement='right-end'\n                            interactive\n                        >\n                            <HelpOutline className={classes.iconSpace} />\n                        </Tooltip>\n                    </Typography>\n                    <FormControlLabel\n                        className={classes.actionSpace}\n                        control={(\n                            <Switch\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                checked={api.responseCachingEnabled}\n                                onChange={({ target: { checked } }) => configDispatcher({\n                                    action: 'responseCachingEnabled',\n                                    value: checked,\n                                })}\n                                color='primary'\n                            />\n                        )}\n                    />\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                    <Grid container spacing={1} alignItems='flex-start'>\n                        <Grid item>\n                            {isResponseCachingEnabled && (\n                                <TextField\n                                    value={api.cacheTimeout}\n                                    onChange={({ target: { value } }) => configDispatcher({\n                                        action: 'cacheTimeout',\n                                        value,\n                                    })}\n                                    margin='normal'\n                                    helperText={(\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.cache.timeout'\n                                            defaultMessage='Cache Timeout (seconds)'\n                                        />\n                                    )}\n                                />\n                            )}\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nResponseCaching.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChipInput from 'material-ui-chip-input';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n * api.corsConfiguration possible values true and false\n * @export\n * @param {*} props\n * @returns\n */\nexport default function CORSConfiguration(props) {\n    const [apiFromContext] = useAPI();\n    const {\n        configDispatcher,\n        api: { corsConfiguration },\n    } = props;\n    const isCorsEnabled = corsConfiguration.corsConfigurationEnabled;\n    const isAllowAllOrigins = corsConfiguration.accessControlAllowOrigins[0] === '*'\n        && corsConfiguration.accessControlAllowOrigins.length === 1;\n    const classes = useStyles();\n\n    return (\n        <ExpansionPanel className={classes.expansionPanel}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.subHeading} variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.CORSConfiguration.cors.configuration'\n                        defaultMessage='CORS Configuration'\n                    />\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.CORSConfiguration.tooltip'\n                                defaultMessage='If enabled, the CORS configuration for the API will be enabled.'\n                            />\n                        )}\n                        aria-label='Response cache'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline className={classes.iconSpace} />\n                    </Tooltip>\n                </Typography>\n                <FormControlLabel\n                    className={classes.actionSpace}\n                    control={(\n                        <Switch\n                            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                            checked={corsConfiguration.corsConfigurationEnabled}\n                            onChange={({ target: { checked } }) => configDispatcher({\n                                action: 'corsConfigurationEnabled',\n                                value: checked,\n                            })}\n                            color='primary'\n                        />\n                    )}\n                />\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                <Grid container>\n                    <Grid item md={12}>\n                        {isCorsEnabled && (\n                            <Grid container>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    origins'\n                                            defaultMessage='Access Control Allow Origins'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Grid container>\n                                        <Grid item md={12}>\n                                            <FormControlLabel\n                                                style={{ display: 'flex' }}\n                                                control={(\n                                                    <Checkbox\n                                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                                        checked={isAllowAllOrigins}\n                                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: { checked, value },\n                                                        })}\n                                                        value='*'\n                                                        color='primary'\n                                                    />\n                                                )}\n                                                label='Allow All Origins'\n                                            />\n                                        </Grid>\n                                        {!isAllowAllOrigins && (\n                                            <Grid item md={12}>\n                                                <ChipInput\n                                                    style={{ marginBottom: 40, display: 'flex' }}\n                                                    value={corsConfiguration.accessControlAllowOrigins}\n                                                    helperText={(\n                                                        <FormattedMessage\n                                                            id={\n                                                                'Apis.Details.Configuration.components'\n                                                                + '.CORSConfigurations.origin.helper'\n                                                            }\n                                                            defaultMessage={\n                                                                'Press `Enter` after typing the origin name,'\n                                                                + 'to add a new origin'\n                                                            }\n                                                        />\n                                                    )}\n                                                    onAdd={(accessControlAllowOrigin) => {\n                                                        configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: {\n                                                                value: [\n                                                                    ...corsConfiguration.accessControlAllowOrigins,\n                                                                    accessControlAllowOrigin,\n                                                                ],\n                                                            },\n                                                        });\n                                                    }}\n                                                    onDelete={(accessControlAllowOrigin) => {\n                                                        configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: {\n                                                                value: corsConfiguration\n                                                                    .accessControlAllowOrigins\n                                                                    .filter(\n                                                                        (oldOrigin) => (\n                                                                            oldOrigin !== accessControlAllowOrigin),\n                                                                    ),\n                                                            },\n                                                        });\n                                                    }}\n                                                />\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    headers'\n                                            defaultMessage='Access Control Allow Headers'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <ChipInput\n                                        style={{ marginBottom: 40, display: 'flex' }}\n                                        value={corsConfiguration.accessControlAllowHeaders}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        helperText={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components.'\n                                                    + 'CORSConfigurations.header.helper'\n                                                }\n                                                defaultMessage={\n                                                    'Press `Enter` after typing the header name, '\n                                                    + 'to add a new header'\n                                                }\n                                            />\n                                        )}\n                                        onAdd={(accessControlAllowHeader) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowHeaders',\n                                                value: [\n                                                    ...corsConfiguration.accessControlAllowHeaders,\n                                                    accessControlAllowHeader,\n                                                ],\n                                            });\n                                        }}\n                                        onDelete={(accessControlAllowHeader) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowHeaders',\n                                                value: corsConfiguration.accessControlAllowHeaders\n                                                    .filter((oldHeader) => oldHeader !== accessControlAllowHeader),\n                                            });\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    methods'\n                                            defaultMessage='Access Control Allow Methods'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <ChipInput\n                                        style={{ marginBottom: 40, display: 'flex' }}\n                                        value={corsConfiguration.accessControlAllowMethods}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        helperText={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components'\n                                                    + '.CORSConfigurations.method.helper'\n                                                }\n                                                defaultMessage={\n                                                    'Press `Enter` after typing the method name,'\n                                                    + ' to add a new method'\n                                                }\n                                            />\n                                        )}\n                                        onAdd={(newValue) => {\n                                            let value = [...corsConfiguration.accessControlAllowMethods,\n                                                newValue.toUpperCase()];\n                                            if (\n                                                corsConfiguration\n                                                    .accessControlAllowMethods\n                                                    .find((method) => method === newValue.toUpperCase())\n                                            ) {\n                                                value = [...corsConfiguration.accessControlAllowMethods];\n                                            }\n                                            configDispatcher({\n                                                action: 'accessControlAllowMethods',\n                                                value,\n                                            });\n                                        }}\n                                        onDelete={(accessControlAllowMethod) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowMethods',\n                                                value: corsConfiguration\n                                                    .accessControlAllowMethods\n                                                    .filter((oldMethod) => oldMethod !== accessControlAllowMethod),\n                                            });\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={(\n                                            <Checkbox\n                                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                                checked={corsConfiguration.accessControlAllowCredentials}\n                                                onChange={({ target: { checked } }) => configDispatcher({\n                                                    action: 'accessControlAllowCredentials',\n                                                    value: checked,\n                                                })}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components'\n                                                    + '.CORSConfiguration.allow.credentials'\n                                                }\n                                                defaultMessage='Access Control Allow Credentials'\n                                            />\n                                        )}\n                                    />\n                                </Grid>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nCORSConfiguration.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = (theme) => ({\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 2.5,\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: theme.spacing(0, -1),\n        float: 'right',\n    },\n    paper: {\n        padding: theme.spacing(0, 3),\n        marginBottom: theme.spacing(3),\n    },\n});\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nclass SchemaValidation extends React.Component {\n    /**\n     *Creates an instance of SchemaValidation.\n     * @param {*} props\n     * @memberof SchemaValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false };\n        this.setIsOpen = this.setIsOpen.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @param {Object} prevProps\n     * @param {Object} prevState\n     * @memberof SchemaValidation\n     */\n    componentDidUpdate(prevProps) {\n        const { api } = this.props;\n        /*\n        This could have been done using hooks too, But at the moment it requires `useRef` hook to get the previous props\n        Hence using class component and its `componentDidUpdate` life cycle method to open the caution dialog box\n        For more info: https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n         */\n        if (!prevProps.api.enableSchemaValidation && api.enableSchemaValidation) {\n            this.setIsOpen(true);\n        }\n    }\n\n    /**\n     *\n     * Set isOpen state of the dialog box which shows the caution message when enabling schema validation\n     * @param {Boolean} isOpen Should dialog box is open or not\n     * @memberof SchemaValidation\n     */\n    setIsOpen(isOpen) {\n        this.setState({ isOpen });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @param {*} props\n     * @returns\n     * @memberof SchemaValidation\n     */\n    render() {\n        const { api, configDispatcher, classes } = this.props;\n        const { isOpen } = this.state;\n        const { api: apiFromContext } = this.context;\n\n        return (\n            <Paper className={classes.paper}>\n                <Grid container spacing={1} alignItems='flex-start'>\n                    <Grid item md={12}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.schema.validation'\n                                defaultMessage='Schema Validation'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.schema.validation.tooltip'\n                                        defaultMessage={'Enable the request and response '\n                                        + 'validation against the OpenAPI definition'}\n                                    />\n                                )}\n                                aria-label='Schema Validation'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                        <FormControlLabel\n                            className={classes.actionSpace}\n                            control={(\n                                <Switch\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={\n                                        api.enableSchemaValidation === undefined ? false : api.enableSchemaValidation\n                                    }\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'enableSchemaValidation',\n                                        value: checked,\n                                    })}\n                                    color='primary'\n                                />\n                            )}\n                        />\n                    </Grid>\n                </Grid>\n                <Dialog\n                    open={isOpen}\n                    onClose={() => this.setIsOpen(false)}\n                    aria-labelledby='alert-dialog-title'\n                    aria-describedby='alert-dialog-description'\n                >\n                    <DialogTitle id='alert-dialog-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.SchemaValidation.title'\n                            defaultMessage='Caution!'\n                        />\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='alert-dialog-description'>\n                            <Typography variant='subtitle1' display='block' gutterBottom>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.SchemaValidation.description'\n                                    defaultMessage={\n                                        'Enabling JSON schema validation will cause to build the'\n                                        + ' payload in every request and response. This will impact'\n                                        + ' the round trip time of an API request!'\n                                    }\n                                />\n                            </Typography>\n                            <Typography variant='subtitle2' display='block' gutterBottom>\n                                <b>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Configuration.components.SchemaValidation'\n                                        + '.description.question'}\n                                        defaultMessage='Do you want to enable schema validation?'\n                                    />\n                                </b>\n                            </Typography>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' variant='contained' onClick={() => this.setIsOpen(false)}>\n                            Yes\n                        </Button>\n                        <Button\n                            onClick={() => {\n                                this.setIsOpen(false);\n                                configDispatcher({\n                                    action: 'enableSchemaValidation',\n                                    value: false,\n                                });\n                            }}\n                            color='primary'\n                        >\n                            No\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Paper>\n        );\n    }\n}\n\nSchemaValidation.propTypes = {\n    api: PropTypes.shape({ enableSchemaValidation: PropTypes.bool }).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nSchemaValidation.contextType = ApiContext;\n\nexport default withStyles(styles)(SchemaValidation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Collapse } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1), // TODO: replace with <Box /> element `mb`\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function MaxBackendTps(props) {\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <ExpansionPanel className={classes.expansionPanel} defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.MaxBackendTps.maximum.backend.throughput'\n                                defaultMessage='Backend Throughput'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.MaxBackendTps.tooltip'\n                                        defaultMessage={'Limits the total number of calls the API Manager is allowed'\n                                        + ' to make to the backend'}\n                                    />\n                                )}\n                                aria-label='APISecurity'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>Maximum Throughput</FormLabel>\n                            <RadioGroup\n                                aria-label='change-max-TPS'\n                                value={api.maxTps === null ? 'unlimited' : 'specify'}\n                                onChange={(event) => {\n                                    configDispatcher({\n                                        action: 'maxTps',\n                                        value:\n                                            event.target.value === 'specify' ? { production: null, sandbox: null }\n                                                : null,\n                                    });\n                                }}\n                                row\n                            >\n                                <FormControlLabel\n                                    value='unlimited'\n                                    control={(\n                                        <Radio\n                                            color='primary'\n                                            disabled={isRestricted(['apim:api_create'], api)}\n                                        />\n                                    )}\n                                    label='Unlimited'\n                                    labelPlacement='end'\n\n                                />\n                                <FormControlLabel\n                                    value='specify'\n                                    control={(\n                                        <Radio\n                                            color='primary'\n                                            disabled={isRestricted(['apim:api_create'], api)}\n                                        />\n                                    )}\n                                    label='Specify'\n                                    labelPlacement='end'\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                        <Collapse in={api.maxTps !== null}>\n                            <Grid item xs={12} style={{ marginBottom: 10, position: 'relative' }}>\n                                <TextField\n                                    label='Max Production TPS'\n                                    margin='normal'\n                                    variant='outlined'\n                                    onChange={(event) => {\n                                        configDispatcher({\n                                            action: 'maxTps',\n                                            value: { ...api.maxTps, production: event.target.value },\n                                        });\n                                    }}\n                                    value={api.maxTps !== null ? api.maxTps.production : ''}\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    InputProps={{\n                                        endAdornment: <InputAdornment position='end'>TPS</InputAdornment>,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} style={{ marginBottom: 10, position: 'relative' }}>\n                                <TextField\n                                    label='Max Sandbox TPS'\n                                    margin='normal'\n                                    variant='outlined'\n                                    onChange={(event) => {\n                                        configDispatcher({\n                                            action: 'maxTps',\n                                            value: { ...api.maxTps, sandbox: event.target.value },\n                                        });\n                                    }}\n                                    value={api.maxTps !== null ? api.maxTps.sandbox : ''}\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    InputProps={{\n                                        endAdornment: <InputAdornment position='end'>TPS</InputAdornment>,\n                                    }}\n                                />\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.MaxBackendTps.formattedMessage'\n                                        defaultMessage='Maximum backend transactions per second in integers'\n                                    />\n                                </FormHelperText>\n                            </Grid>\n                        </Collapse>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nMaxBackendTps.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dropzone from 'react-dropzone';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Utils from 'AppData/Utils';\nimport API from 'AppData/api.js';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst dropzoneStyles = {\n    border: '1px dashed ',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\nconst styles = (theme) => ({\n    formControl: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing(2)}px 2px`,\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 'calc(100vh - 50em)',\n        padding: `${theme.spacing(2)}px ${theme.spacing(2)}px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        '& span': {\n            fontSize: 64,\n            color: theme.palette.primary.main,\n        },\n    },\n    radioWrapper: {\n        flexDirection: 'row',\n    },\n});\n/**\n * The component to manage IN mediation policies.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction EditMediationPolicy(props) {\n    const {\n        classes, updateMediationPolicy, selectedMediationPolicy, setEditing, editing, type, intl,\n    } = props;\n    const { api } = useContext(ApiContext);\n\n    const [globalMediationPolicies, setGlobalMediationPolicies] = useState(null);\n    // user uploaded api specific mediation policies\n    const [seqCustom, setSeqCustom] = useState(null);\n    const [provideBy, setProvideBy] = useState();\n    const { id: apiId } = api;\n    const NONE = 'none';\n    const [localSelectedPolicyFile, setLocalSelectedPolicyFile] = useState(selectedMediationPolicy);\n    function updatePoliciesFromBE() {\n        const globalPromise = API.getGlobalMediationPolicies();\n        const customPromise = API.getMediationPolicies(apiId);\n        Promise.all([globalPromise, customPromise])\n            .then((values) => {\n                setGlobalMediationPolicies([...values[0].obj.list.filter((seq) => seq.type === type)]);\n                setSeqCustom([...values[1].obj.list.filter((seq) => seq.type === type)]);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.MediationPolicies.Edit.EditMediationPolicy.error',\n                        defaultMessage: 'Error retrieving mediation policies',\n                    }));\n                }\n            });\n    }\n    function setActivePolicy(policy) {\n        if (policy.name !== NONE) {\n            Object.assign(policy, { content: '' });\n            setLocalSelectedPolicyFile(policy);\n            // updateMediationPolicy(policy);\n        } else {\n            Object.assign(policy, { content: '', id: NONE });\n            setLocalSelectedPolicyFile(policy);\n            // updateMediationPolicy(policy);\n        }\n    }\n    useEffect(() => {\n        if (selectedMediationPolicy) {\n            const { shared } = selectedMediationPolicy;\n            if (shared) {\n                setProvideBy('global');\n            } else if (selectedMediationPolicy.name === NONE) {\n                setProvideBy('none');\n            } else {\n                setProvideBy('custom');\n            }\n        } else {\n            setProvideBy('none');\n        }\n    }, [selectedMediationPolicy]);\n    useEffect(() => {\n        updatePoliciesFromBE();\n    }, []);\n\n    useEffect(() => {\n        if (provideBy === 'custom' && seqCustom && seqCustom.length > 0) {\n            setActivePolicy(seqCustom[0]);\n        } else if (provideBy === 'global' && globalMediationPolicies && globalMediationPolicies.length > 0) {\n            setActivePolicy(globalMediationPolicies[0]);\n        }\n    }, [provideBy]);\n\n    // useEffect(() => {\n    //     if (globalInMediationPolicies && globalInMediationPolicies.length > 0) {\n    //         setProvideBy('global');\n    //     } else if (inSeqCustom && inSeqCustom.length > 0) {\n    //         setProvideBy('custom');\n    //     } else {\n    //         setProvideBy('none');\n    //     }\n    // }, [globalInMediationPolicies, inSeqCustom]);\n    const saveMediationPolicy = (newPolicy) => {\n        const promisedApi = API.addMediationPolicy(newPolicy, apiId, type);\n        promisedApi\n            .then((response) => {\n                const {\n                    body: { id, type: policyType, name },\n                } = response;\n                updatePoliciesFromBE();\n                setLocalSelectedPolicyFile({\n                    id,\n                    type: policyType,\n                    name,\n                    shared: false,\n                    content: '',\n                });\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.MediationPolicies.Edit.EditMediationPolicy.success',\n                    defaultMessage: 'Mediation policy added successfully',\n                }));\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                if (errorResponse.response.body.description !== null) {\n                    Alert.error(errorResponse.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.MediationPolicies.Edit.AddMediationPolicy.error',\n                        defaultMessage: 'Error while adding mediation policy',\n                    }));\n                }\n            });\n    };\n    /**\n     * Handled the file upload action of the dropzone.\n     * @param {file} policy The accepted file list by the dropzone.\n     * */\n    const onDrop = (policy) => {\n        const policyFile = policy[0];\n        if (policyFile) {\n            saveMediationPolicy(policyFile);\n        }\n    };\n    /**\n     * Handles the mediation policy select event.\n     * @param {any} event The event pass to the layout\n     */\n    function handleChange(event) {\n        const policy = {\n            name: event.target.getAttribute('seq_name'),\n            id: event.target.getAttribute('seq_id'),\n            type: event.target.getAttribute('seq_type'),\n        };\n        setActivePolicy(policy);\n    }\n    /**\n     * Handles the Global mediation policy download.\n     * @param {any} policyToDownload policy file id that is to be downloaded.\n     */\n    function downloadGlobalMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getGlobalMediationPolicyContent(policyToDownload);\n        promisedGetContent\n            .then((response) => {\n                Utils.forceDownload(response);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n\n    /**\n     * Handles the custom mediation policy download.\n     * @param {any} policyToDownload policy file id that is to be downloaded.\n     */\n    function downloadCustomMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getMediationPolicyContent(policyToDownload, apiId);\n        promisedGetContent\n            .then((done) => {\n                Utils.forceDownload(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n    /**\n     * Handles the custom mediation policy delete.\n     * @param {any} policyToDelete policy file id that is to be deleted.\n     */\n    function deleteCustomMediationPolicy(policyToDelete) {\n        const promisedGetContent = API.deleteMediationPolicy(policyToDelete, api.id);\n        promisedGetContent\n            .then(() => {\n                setSeqCustom(seqCustom.filter((seq) => seq.id !== policyToDelete));\n                Alert.info(<FormattedMessage\n                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.delete.success'\n                    defaultMessage='Mediation policy deleted successfully.'\n                />);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.delete.error'\n                        defaultMessage='Error deleting the file'\n                    />);\n                }\n            });\n    }\n    const handleDownload = (policyToDownload) => {\n        const isGlobalMediationPolicy = globalMediationPolicies.filter(\n            (policy) => policy.id === policyToDownload,\n        ).length > 0;\n        if (isGlobalMediationPolicy) {\n            downloadGlobalMediationPolicyContent(policyToDownload);\n        } else {\n            downloadCustomMediationPolicyContent(policyToDownload);\n        }\n    };\n    const handleDelete = (policyToDelete) => {\n        const isGlobalMediationPolicy = globalMediationPolicies.filter(\n            (policy) => policy.id === policyToDelete,\n        ).length > 0;\n        if (isGlobalMediationPolicy) {\n            Alert.error(<FormattedMessage\n                id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.global.delete'\n                defaultMessage='Cannot delete Global mediation policies.'\n            />);\n        } else {\n            deleteCustomMediationPolicy(policyToDelete);\n        }\n    };\n    function cancelEditing() {\n        setEditing(false);\n    }\n    function doneEditing() {\n        updateMediationPolicy(localSelectedPolicyFile);\n        setEditing(false);\n    }\n    function handleChangeProvideBy(event) {\n        const inputValue = event.target.value;\n        setProvideBy(inputValue);\n        setActivePolicy({});\n    }\n    return (\n        <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            maxWidth='sm'\n            fullWidth\n            aria-labelledby='confirmation-dialog-title'\n            open={editing}\n        >\n            <DialogTitle id='confirmation-dialog-title'>\n                <FormattedMessage\n                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.select.policy'\n                    defaultMessage='Select a Mediation Policy'\n                />\n            </DialogTitle>\n            {globalMediationPolicies && seqCustom && (\n                <DialogContent dividers>\n                    <RadioGroup value={provideBy} onChange={handleChangeProvideBy} className={classes.radioWrapper}>\n                        <FormControlLabel\n                            value='none'\n                            control={<Radio color='primary' />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.none'\n                                    defaultMessage='None'\n                                />\n                            )}\n                        />\n                        <FormControlLabel\n                            value='global'\n                            control={<Radio color='primary' />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.common.policies'\n                                    defaultMessage='Common Policies'\n                                />\n                            )}\n                        />\n                        <FormControlLabel\n                            value='custom'\n                            control={<Radio color='primary' />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.custom.policies'\n                                    defaultMessage='Custom Policies'\n                                />\n                            )}\n                        />\n                    </RadioGroup>\n                    {provideBy === 'custom' && (\n                        <>\n                            <Dropzone\n                                multiple={false}\n                                className={classes.dropzone}\n                                activeClassName={classes.acceptDrop}\n                                rejectClassName={classes.rejectDrop}\n                                onDrop={(dropFile) => {\n                                    onDrop(dropFile);\n                                }}\n                            >\n                                {({ getRootProps, getInputProps }) => (\n                                    <div {...getRootProps({ style: dropzoneStyles })}>\n                                        <input {...getInputProps()} accept='application/xml,text/xml' />\n                                        <div className={classes.dropZoneWrapper}>\n                                            <Icon className={classes.dropIcon}>cloud_upload</Icon>\n                                            <Typography>\n                                                <FormattedMessage\n                                                    id={\n                                                        'Apis.Details.MediationPolicies.Edit.EditMediationPolicy.'\n                                                        + 'click.or.drop.to.upload.file'\n                                                    }\n                                                    defaultMessage='Click or drag the mediation file to upload.'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    </div>\n                                )}\n                            </Dropzone>\n                            <RadioGroup\n                                aria-label='inflow'\n                                name='inflow'\n                                className={classes.radioGroup}\n                                value={localSelectedPolicyFile.name}\n                                onChange={handleChange}\n                            >\n                                <FormLabel component='customPolicies'>\n                                    <FormattedMessage\n                                        id={\n                                            'Apis.Details.Edit.MediationPolicies.'\n                                            + 'EditMediationPolicies.custom.mediation.policies'\n                                        }\n                                        defaultMessage='Custom Mediation Policies'\n                                    />\n                                </FormLabel>\n                                {seqCustom.map((seq) => (\n                                    <div>\n                                        <IconButton onClick={() => handleDelete(seq.id)}>\n                                            <Icon>delete</Icon>\n                                        </IconButton>\n                                        <Button onClick={() => handleDownload(seq.id)}>\n                                            <Icon>arrow_downward</Icon>\n                                        </Button>\n                                        <FormControlLabel\n                                            control={(\n                                                <Radio\n                                                    inputProps={{\n                                                        seq_id: seq.id,\n                                                        seq_name: seq.name,\n                                                        seq_type: seq.type,\n                                                    }}\n                                                    color='primary'\n                                                />\n                                            )}\n                                            label={seq.name}\n                                            value={seq.name}\n                                            checked={localSelectedPolicyFile.name === seq.name}\n                                        />\n                                    </div>\n                                ))}\n                            </RadioGroup>\n                        </>\n                    )}\n                    {provideBy === 'global' && (\n                        <RadioGroup\n                            aria-label='inflow'\n                            name='inflow'\n                            className={classes.radioGroup}\n                            value={localSelectedPolicyFile.name}\n                            onChange={handleChange}\n                        >\n                            {globalMediationPolicies.map((seq) => (\n                                <div>\n                                    <Button onClick={() => handleDownload(seq.id)}>\n                                        <Icon>arrow_downward</Icon>\n                                    </Button>\n                                    <FormControlLabel\n                                        control={(\n                                            <Radio\n                                                inputProps={{\n                                                    seq_id: seq.id,\n                                                    seq_name: seq.name,\n                                                    seq_type: seq.type,\n                                                }}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label={seq.name}\n                                        value={seq.name}\n                                        checked={localSelectedPolicyFile.name === seq.name}\n                                    />\n                                </div>\n                            ))}\n                        </RadioGroup>\n                    )}\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={cancelEditing} color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.cancel.btn'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button\n                    onClick={doneEditing}\n                    color='primary'\n                    variant='contained'\n                    disabled={provideBy === 'custom' && seqCustom && seqCustom.length === 0}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.select.btn'\n                        defaultMessage='Select'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nEditMediationPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    selectedMediationPolicy: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n    setEditing: PropTypes.func.isRequired,\n    editing: PropTypes.bool.isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EditMediationPolicy));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Grid, withStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport EditMediationPolicy from 'AppComponents/Apis/Details/MediationPolicies/EditMediationPolicy';\nimport EditRounded from '@material-ui/icons/EditRounded';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n    itemWrapper: {\n        width: 'auto',\n        display: 'flex',\n    },\n    FormControl: {\n        padding: 10,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    subTitle: {\n        marginTop: 20,\n    },\n    subTitleDescription: {\n        marginBottom: 10,\n    },\n    flowWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    heading: {\n        margin: 'auto',\n        color: 'rgba(0, 0, 0, 0.40)',\n    },\n    paper: {\n        padding: '10px 24px',\n        width: 'auto',\n    },\n    editIcon: {\n        position: 'absolute',\n        top: 8,\n        right: 0,\n    },\n};\n\n/**\n * The base component of the IN mediation policy.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction InFlow(props) {\n    const {\n        classes, updateMediationPolicy, selectedMediationPolicy, type, isRestricted,\n    } = props;\n    const [editing, setEditing] = useState(false);\n\n    function startEditing() {\n        setEditing(true);\n    }\n    return (\n        <>\n            <Paper className={classes.paper}>\n                <Grid container spacing={2} alignItems='flex-start'>\n                    <Grid item md={12} style={{ position: 'relative', display: 'inline-flex' }}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.MediationPolicies.Mediation'\n                                defaultMessage='Message Mediation'\n                            />\n                        </Typography>\n                        <Typography className={classes.heading}>\n                            {selectedMediationPolicy && selectedMediationPolicy.name ? (\n                                <span>{selectedMediationPolicy.name}</span>\n                            ) : (\n                                <span>none</span>\n                            )}\n                        </Typography>\n                        <Button\n                            className={classes.editIcon}\n                            size='small'\n                            onClick={startEditing}\n                            disabled={isRestricted}\n                        >\n                            <EditRounded />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n            <EditMediationPolicy\n                setEditing={setEditing}\n                editing={editing}\n                updateMediationPolicy={updateMediationPolicy}\n                selectedMediationPolicy={selectedMediationPolicy}\n                type={type}\n            />\n        </>\n    );\n}\n\nInFlow.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n    selectedMediationPolicy: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(InFlow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Box from '@material-ui/core/Box';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst showEndpoint = function (api, type) {\n    if (api.endpointConfig) {\n        if (type === 'prod') {\n            return api.getProductionEndpoint();\n        }\n        if (type === 'sand') {\n            return api.getSandboxEndpoint();\n        }\n    }\n    return null;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    subtitle: {\n        marginTop: theme.spacing(0),\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    notConfigured: {\n        color: 'rgba(0, 0, 0, 0.40)',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    textTrim: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\n\n/**\n *\n *X\n * @param {*} props\n * @returns\n */\nfunction Endpoints(props) {\n    const { api } = props;\n    const classes = useStyles();\n    const isPrototypedAvailable = api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped';\n\n    /**\n     * Check whether the endpoint configuration is dynamic\n     *\n     * @param {object} endpointConfig The endpoint configuration of the api.\n     * @return {boolean} True if the endpoint config is dynamic.\n     * */\n    const isDynamicEndpoints = (endpointConfig) => {\n        if (!endpointConfig) {\n            return false;\n        }\n        if (endpointConfig.production_endpoints && !Array.isArray(endpointConfig.production_endpoints)) {\n            return endpointConfig.production_endpoints.url === 'default';\n        }\n        return false;\n    };\n\n    return (\n        <>\n            <ExpansionPanel className={classes.expansionPanel} defaultExpanded>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography className={classes.subHeading} variant='h6'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.Endpoints.endpoints'\n                            defaultMessage='Endpoints'\n                        />\n                    </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                    {isDynamicEndpoints(api.endpointConfig)\n                        ? (\n                            <Box pb={2}>\n                                <Typography component='p' variant='body1' className={classes.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.Endpoints.dynamic'\n                                        defaultMessage='Dynamic'\n                                    />\n                                </Typography>\n                            </Box>\n                        )\n                        : (\n                            <>\n                                <Box pb={2}>\n                                    {/* Production Endpoint (TODO) fix the endpoint\n                                                    info when it's available with the api object */}\n\n                                    { !isPrototypedAvailable ? (\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.production'\n                                                defaultMessage='Production'\n                                            />\n                                        </Typography>\n                                    ) : (\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.prototype'\n                                                defaultMessage='Prototype'\n                                            />\n                                        </Typography>\n                                    )}\n                                    {showEndpoint(api, 'prod')\n                                && (\n                                    <Tooltip\n                                        title={showEndpoint(api, 'prod')}\n                                        interactive\n                                    >\n                                        <Typography component='p' variant='body1' className={classes.textTrim}>\n                                            <>\n                                                {showEndpoint(api, 'prod')}\n                                            </>\n                                        </Typography>\n                                    </Tooltip>\n                                )}\n                                    <Typography component='p' variant='body1' className={classes.notConfigured}>\n                                        {!showEndpoint(api, 'prod') && (\n                                            <>\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Configuration.'\n                                                    + 'components.Endpoints.not.set'}\n                                                    defaultMessage='-'\n                                                />\n                                            </>\n                                        )}\n                                    </Typography>\n                                </Box>\n                                {!isPrototypedAvailable && (\n                                    <Box pb={2}>\n                                        {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                                it's available with the api object */}\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.sandbox'\n                                                defaultMessage='Sandbox'\n                                            />\n                                        </Typography>\n                                        {showEndpoint(api, 'sand')\n                                    && (\n                                        <Tooltip\n                                            title={showEndpoint(api, 'sand')}\n                                            interactive\n                                        >\n                                            <Typography component='p' variant='body1' className={classes.textTrim}>\n                                                <>\n                                                    {showEndpoint(api, 'sand')}\n                                                </>\n                                            </Typography>\n                                        </Tooltip>\n                                    )}\n                                        <Typography component='p' variant='body1' className={classes.notConfigured}>\n                                            {!showEndpoint(api, 'sand') && (\n                                                <>\n                                                    <FormattedMessage\n                                                        id={'Apis.Details.Configuration.components.Endpoints.sandbox.'\n                                                        + 'not.set'}\n                                                        defaultMessage='-'\n                                                    />\n                                                </>\n                                            )}\n                                        </Typography>\n                                    </Box>\n                                )}\n                            </>\n                        )}\n                    <Box width='100%' textAlign='right' m={1}>\n                        <Link to={'/apis/' + api.id + '/endpoints'}>\n                            <Typography style={{ marginLeft: '10px' }} color='primary' variant='caption'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.Endpoints.edit.api.endpoints'\n                                    defaultMessage='Edit API Endpoints'\n                                />\n                                <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                            </Typography>\n                        </Link>\n                    </Box>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nEndpoints.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Endpoints);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Check this file for more info  <CARBON_APIMGT>/components/apimgt/org.wso2.carbon.apimgt.impl\n// /src/main/java/org/wso2/carbon/apimgt/impl/APIConstants.java\n\nconst DEFAULT_API_SECURITY_OAUTH2 = 'oauth2';\nconst API_SECURITY_BASIC_AUTH = 'basic_auth';\nconst API_SECURITY_API_KEY = 'api_key';\nconst API_SECURITY_MUTUAL_SSL = 'mutualssl';\nconst API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY = 'oauth_basic_auth_api_key_mandatory';\nconst API_SECURITY_MUTUAL_SSL_MANDATORY = 'mutualssl_mandatory';\n\nexport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_MUTUAL_SSL,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function AuthorizationHeader(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n\n    return (\n        <Grid container spacing={1} alignItems='center'>\n            <Grid item xs={11}>\n                <TextField\n                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                    id='outlined-name'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.auth.header.label'\n                            defaultMessage='Authorization Header'\n                        />\n                    )}\n                    value={api.authorizationHeader || ' '}\n                    margin='normal'\n                    variant='outlined'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'authorizationHeader', value })}\n                    style={{ display: 'flex' }}\n                />\n            </Grid>\n            <Grid item xs={1}>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.AuthHeader.tooltip'\n                            defaultMessage={\n                                ' The header name that is used to send the authorization '\n                                + 'information. \"Authorization\" is the default header.'\n                            }\n                        />\n                    )}\n                    aria-label='Auth Header'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n}\n\nAuthorizationHeader.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AuthorizationHeader from 'AppComponents/Apis/Details/Configuration/components/AuthorizationHeader.jsx';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nimport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApplicationLevel(props) {\n    const {\n        haveMultiLevelSecurity, securityScheme, configDispatcher, api,\n    } = props;\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n\n    let mandatoryValue = 'optional';\n    // If not Oauth2, Basic auth or ApiKey security is selected, no mandatory values should be pre-selected\n    if (!(securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2) || securityScheme.includes(API_SECURITY_BASIC_AUTH)\n        || securityScheme.includes(API_SECURITY_API_KEY))) {\n        mandatoryValue = null;\n    } else if (!securityScheme.includes(API_SECURITY_MUTUAL_SSL)) {\n        mandatoryValue = API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY;\n    } else if (securityScheme.includes(API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY)) {\n        mandatoryValue = API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY;\n    }\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <ExpansionPanel className={classes.expansionPanel}>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.APISecurity.Components.\n                                    ApplicationLevel.http'\n                                defaultMessage='Application Level Security'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.APISecurity.tooltip'\n                                        defaultMessage={\n                                            'This option determines the type of security'\n                                            + ' that will be used to secure this API. An API can be secured '\n                                            + 'with either OAuth2/Basic/ApiKey or it can be secured with all of them. '\n                                            + 'If OAuth2 option is selected, relevant API will require a valid '\n                                            + 'OAuth2 token for successful invocation.'\n                                        }\n                                    />\n                                )}\n                                aria-label='APISecurity'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <FormGroup style={{ display: 'flow-root' }}>\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        checked={securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2)}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={DEFAULT_API_SECURITY_OAUTH2}\n                                        color='primary'\n                                    />\n                                )}\n                                label='OAuth2'\n                            />\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        checked={securityScheme.includes(API_SECURITY_BASIC_AUTH)}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={API_SECURITY_BASIC_AUTH}\n                                        color='primary'\n                                    />\n                                )}\n                                label='Basic'\n                            />\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        checked={securityScheme.includes(API_SECURITY_API_KEY)}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={API_SECURITY_API_KEY}\n                                        color='primary'\n                                    />\n                                )}\n                                label='Api Key'\n                            />\n                        </FormGroup>\n                        <FormControl className={classes.bottomSpace} component='fieldset'>\n                            <RadioGroup\n                                aria-label='HTTP security HTTP mandatory selection'\n                                name={API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY}\n                                value={mandatoryValue}\n                                onChange={({ target: { name, value } }) => configDispatcher({\n                                    action: 'securityScheme',\n                                    event: { name, value },\n                                })}\n                                row\n                            >\n                                <FormControlLabel\n                                    value={API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY}\n                                    control={(\n                                        <Radio\n                                            disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label='Mandatory'\n                                    labelPlacement='end'\n                                />\n                                <FormControlLabel\n                                    value='optional'\n                                    control={(\n                                        <Radio\n                                            disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label='Optional'\n                                    labelPlacement='end'\n                                />\n                            </RadioGroup>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.APISecurity.application.mandatory'\n                                    defaultMessage='Choose whether Application level security is mandatory or optional'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                        <AuthorizationHeader api={api} configDispatcher={configDispatcher} />\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nApplicationLevel.propTypes = {\n    configDispatcher: PropTypes.func.isRequired,\n    haveMultiLevelSecurity: PropTypes.bool.isRequired,\n    securityScheme: PropTypes.arrayOf(PropTypes.string).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React from 'react';\nimport { MenuItem, TextField } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nexport default function SelectEndpoint(props) {\n    const {\n        onChange,\n        endpoint,\n        isEndpointEmpty,\n        endpoints,\n    } = props;\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n    return (\n        <TextField\n            autoFocus\n            error={isEndpointEmpty || endpoints.length === 0}\n            helperText={endpoints.length === 0 ? (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.empty.error'\n                    defaultMessage='Save endpoints before adding the Certificate'\n                />\n            ) : iff(isEndpointEmpty, <FormattedMessage\n                id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.error'\n                defaultMessage='Endpoint should not be empty'\n            />, <FormattedMessage\n                id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.helpertext'\n                defaultMessage='Endpoint for the Certificate'\n            />)}\n            required\n            id='certificateEndpoint'\n            label={(\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint'\n                    defaultMessage='Endpoint'\n                />\n            )}\n            value={endpoint}\n            placeholder='Endpoint'\n            onChange={(event) => onChange(event.target.value)}\n            margin='normal'\n            variant='outlined'\n            fullWidth\n            select\n        >\n            {endpoints !== null && endpoints.map((ep) => {\n                if (ep) {\n                    return (<MenuItem value={ep.url}>{ep.url}</MenuItem>);\n                }\n                return null;\n            })}\n        </TextField>\n    );\n}\n\nSelectEndpoint.propTypes = {\n    endpoints: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    endpoint: PropTypes.string.isRequired,\n    isEndpointEmpty: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Icon,\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport Dropzone from 'react-dropzone';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport APIValidation from 'AppData/APIValidation';\nimport SelectEndpoint from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/SelectEndpoint';\nimport SelectPolicies from '../../../Create/Components/SelectPolicies';\n\nconst dropzoneStyles = {\n    border: '1px dashed #c4c4c4',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\n\nconst useStyles = makeStyles((theme) => ({\n    fileinput: {\n        display: 'none',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n    certificatesHeader: {\n        fontWeight: 600,\n        marginTop: 20,\n    },\n    addCertificateBtn: {\n        borderColor: '#c4c4c4',\n        borderRadius: '8px',\n        borderStyle: 'dashed',\n        borderWidth: 'thin',\n    },\n    certificateList: {\n        maxHeight: '250px',\n        overflow: 'scroll',\n    },\n    certDetailsHeader: {\n        fontWeight: '600',\n    },\n    uploadCertDialogHeader: {\n        fontWeight: '600',\n    },\n}));\n\n/**\n * This component is used to upload the certificates\n * @param {any} props The input props.\n * @returns {any} The HTML representation of the Certificates.\n */\nexport default function UploadCertificate(props) {\n    const {\n        endpoints,\n        uploadCertificate,\n        isMutualSSLEnabled,\n        uploadCertificateOpen,\n        setUploadCertificateOpen,\n        aliasList,\n    } = props;\n    const [alias, setAlias] = useState('');\n    const [policy, setPolicy] = useState('');\n    const [endpoint, setEndpoint] = useState('');\n    const [isSaving, setSaving] = useState(false);\n    const [certificate, setCertificate] = useState({ name: '', content: {} });\n    const [isEndpointEmpty, setIsEndpointEmpty] = useState(false);\n    const [isPoliciesEmpty, setPoliciesEmpty] = useState(false);\n    const [aliasValidity, setAliasValidity] = useState();\n    const classes = useStyles();\n    const [isRejected, setIsRejected] = useState(false);\n\n    const closeCertificateUpload = () => {\n        setUploadCertificateOpen(false);\n        setAliasValidity();\n        setCertificate({ name: '', content: '' });\n        setAlias('');\n        setEndpoint('');\n        setPolicy('');\n    };\n\n    /**\n     * On change functionality to handle the policy dropdown\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { value } = event.target;\n        setPolicy(value);\n    }\n\n    /**\n     * Method to validate the policies.\n     * @param {string} value selected policy.\n     * */\n    const onValidate = (value) => {\n        setPoliciesEmpty(value === '');\n    };\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     * */\n    const saveCertificate = () => {\n        setSaving(true);\n        if (isMutualSSLEnabled) {\n            uploadCertificate(certificate.content, policy, alias)\n                .then(closeCertificateUpload)\n                .finally(() => setSaving(false));\n        } else {\n            uploadCertificate(certificate.content, endpoint, alias)\n                .then(closeCertificateUpload)\n                .finally(() => setSaving(false));\n        }\n    };\n\n    /**\n     * Handled the file upload action of the dropzone.\n     *\n     * @param {array} file The accepted file list by the dropzone.\n     * */\n    const onDrop = (file) => {\n        const certificateFile = file[0];\n        const rejectedFiles = ['pem', 'txt', 'jks', 'key', 'ca-bundle'];\n        const extension = certificateFile.name.split('.');\n        if (rejectedFiles.includes(extension[1])) {\n            setIsRejected(true);\n        } else {\n            setIsRejected(false);\n        }\n        if (certificateFile) {\n            setCertificate({ name: certificateFile.name, content: certificateFile });\n        }\n    };\n\n    const handleEndpointOnChange = (value) => {\n        setEndpoint(value);\n        if (value) {\n            setIsEndpointEmpty(false);\n        } else {\n            setIsEndpointEmpty(true);\n        }\n    };\n\n    const handleAliasOnBlur = () => {\n        const aliasValidation = APIValidation.alias.required().validate(alias).error;\n        if (aliasValidation) {\n            setAliasValidity({ isValid: false, message: aliasValidation.details[0].message });\n        } else {\n            setAliasValidity({ isValid: true, message: '' });\n        }\n    };\n\n    const getHelperText = () => {\n        if (aliasValidity && !aliasValidity.isValid) {\n            return (aliasValidity.message);\n        } else if (aliasList && aliasList.includes(alias)) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias.exist.error'\n                    defaultMessage='Alias already exists'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias.default.message'\n                    defaultMessage='Alias for the Certificate'\n                />\n            );\n        }\n    };\n\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n    return (\n        <Dialog open={uploadCertificateOpen}>\n            <DialogTitle>\n                <Typography className={classes.uploadCertDialogHeader}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.uploadCertificate'\n                        defaultMessage='Upload Certificate'\n                    />\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Grid>\n                    <div>\n                        {isMutualSSLEnabled ? (\n                            <SelectPolicies\n                                multiple={false}\n                                policies={policy}\n                                helperText='Select a throttling policy for the certificate'\n                                onChange={handleOnChange}\n                                required\n                                validate={onValidate}\n                            />\n                        )\n                            : (\n                                <SelectEndpoint\n                                    endpoints={endpoints}\n                                    onChange={handleEndpointOnChange}\n                                    endpoint={endpoint}\n                                    isEndpointEmpty={isEndpointEmpty}\n                                    required\n                                />\n                            )}\n                        <TextField\n                            required\n                            id='certificateAlias'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias'\n                                    defaultMessage='Alias'\n                                />\n                            )}\n                            value={alias}\n                            placeholder='My Alias'\n                            onChange={(event) => setAlias(event.target.value)}\n                            onBlur={() => handleAliasOnBlur()}\n                            margin='normal'\n                            variant='outlined'\n                            error={\n                                (aliasValidity && !aliasValidity.isValid) || (aliasList && aliasList.includes(alias))\n                            }\n                            helperText={getHelperText()}\n                            fullWidth\n                            inputProps={{ maxLength: 45 }}\n                        />\n                        <Dropzone\n                            multiple={false}\n                            accept={\n                                'application/pkcs8,'\n                                    + 'application/pkcs10, application/pkix-crl,'\n                                    + 'application/pkcs7-mime,'\n                                    + 'application/x-x509-ca-cert,'\n                                    + 'application/x-x509-user-cert,'\n                                    + 'application/x-pkcs7-crl,'\n                                    + 'application/x-pkcs12,'\n                                    + 'application/x-pkcs7-certificates,'\n                                    + 'application/x-pkcs7-certreqresp,'\n                                    + '.p8, .p10, .cer, .cert, .p7c, .crt, .der, .p12, .pfx, .p7b, .spc, .p7r'\n                            }\n                            className={classes.dropzone}\n                            activeClassName={classes.acceptDrop}\n                            rejectClassName={classes.rejectDrop}\n                            onDrop={(dropFile) => {\n                                onDrop(dropFile);\n                            }}\n                        >\n                            {({ getRootProps, getInputProps }) => (\n                                <div {...getRootProps({ style: dropzoneStyles })}>\n                                    <input {...getInputProps()} />\n                                    <div className={classes.dropZoneWrapper}>\n                                        {certificate.name === '' ? (\n                                            <div>\n                                                <Icon style={{ fontSize: 56 }}>cloud_upload</Icon>\n                                                <Typography>\n                                                    <FormattedMessage\n                                                        id={\n                                                            'Apis.Details.Endpoints.GeneralConfiguration'\n                                                                + '.UploadCertificate.click.or.drop.to.upload.file'\n                                                        }\n                                                        defaultMessage={\n                                                            'Click or drag the certificate '\n                                                                + ' file to upload.'\n                                                        }\n                                                    />\n                                                </Typography>\n                                            </div>\n                                        ) : iff(\n                                            isRejected,\n                                            <div classNames={classes.uploadedFile}>\n                                                <InsertDriveFileIcon color='error' fontSize='large' />\n                                                <Box fontSize='h6.fontSize' color='error' fontWeight='fontWeightLight'>\n                                                    <Grid xs={12}>\n                                                        {certificate.name}\n                                                    </Grid>\n                                                    <Grid xs={12}>\n                                                        <Typography variant='caption' color='error'>\n                                                            <FormattedMessage\n                                                                id={\n                                                                    'Apis.Details.Endpoints.GeneralConfiguration'\n                                                            + '.UploadCertificate.invalid.file'\n                                                                }\n                                                                defaultMessage='Invalid file type'\n                                                            />\n                                                        </Typography>\n                                                    </Grid>\n                                                </Box>\n                                            </div>,\n                                            <div className={classes.uploadedFile}>\n                                                <InsertDriveFileIcon color='primary' fontSize='large' />\n                                                <Box fontSize='h6.fontSize' fontWeight='fontWeightLight'>\n                                                    <Typography>\n                                                        {certificate.name}\n                                                    </Typography>\n                                                </Box>\n                                            </div>,\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n                        </Dropzone>\n                    </div>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeCertificateUpload}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n                <Button\n                    onClick={saveCertificate}\n                    variant='contained'\n                    color='primary'\n                    autoFocus\n                    disabled={\n                        alias === '' || (aliasValidity && !aliasValidity.isValid)\n                            || (!isMutualSSLEnabled && endpoint === '')\n                            || certificate.name === ''\n                            || (isMutualSSLEnabled && isPoliciesEmpty)\n                            || isSaving || (aliasList && aliasList.includes(alias)) || isRejected\n                    }\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.config.save.button'\n                        defaultMessage='Save'\n                    />\n                    {isSaving && <CircularProgress size={24} />}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nUploadCertificate.defaultProps = {\n    isMutualSSLEnabled: false,\n    endpoints: [],\n};\n\nUploadCertificate.propTypes = {\n    certificates: PropTypes.shape({}).isRequired,\n    uploadCertificate: PropTypes.func.isRequired,\n    isMutualSSLEnabled: PropTypes.bool,\n    setUploadCertificateOpen: PropTypes.func.isRequired,\n    uploadCertificateOpen: PropTypes.bool.isRequired,\n    endpoints: PropTypes.shape([]),\n    aliasList: PropTypes.shape([]).isRequired,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Icon,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Typography,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UploadCertificate from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/UploadCertificate';\nimport API from '../../../../../data/api';\n\nconst useStyles = makeStyles((theme) => ({\n    fileinput: {\n        display: 'none',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n    certificatesHeader: {\n        fontWeight: 600,\n        marginTop: theme.spacing(1),\n    },\n    addCertificateBtn: {\n        borderColor: '#c4c4c4',\n        borderRadius: '8px',\n        borderStyle: 'dashed',\n        borderWidth: 'thin',\n    },\n    certificateList: {\n        maxHeight: '250px',\n        overflow: 'auto',\n    },\n    certDetailsHeader: {\n        fontWeight: '600',\n    },\n    uploadCertDialogHeader: {\n        fontWeight: '600',\n    },\n    alertWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    warningIcon: {\n        marginRight: 13,\n        color: theme.custom.warningColor,\n        '& .material-icons': {\n            fontSize: 30,\n        },\n    },\n    deleteIcon: {\n        color: theme.palette.error.dark,\n        cursor: 'pointer',\n    },\n    deleteIconDisable: {\n        color: theme.palette.disabled,\n    },\n}));\n/**\n * TODO: Generalize this component to work in Configuration page , upload mutual SSL certificates action\n * in source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/TransportLevel.jsx ~tmkb\n * The base component for advanced endpoint configurations.\n * @param {any} props The input props.\n * @returns {any} The HTML representation of the Certificates.\n */\nfunction Certificates(props) {\n    const {\n        certificates, uploadCertificate, deleteCertificate, isMutualSSLEnabled, apiId, endpoints, aliasList,\n    } = props;\n    const [certificateList, setCertificateList] = useState([]);\n    const [openCertificateDetails, setOpenCertificateDetails] = useState({ open: false, anchor: null, details: {} });\n    const [certificateToDelete, setCertificateToDelete] = useState({ open: false, alias: '' });\n    const [isDeleting, setDeleting] = useState(false);\n    const [uploadCertificateOpen, setUploadCertificateOpen] = useState(false);\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n\n\n    /**\n     * Show the selected certificate details in a popover.\n     *\n     * @param {any} event The button click event.\n     * @param {string} certAlias  The alias of the certificate which information is required.\n     * */\n    const showCertificateDetails = (event, certAlias) => {\n        if (!isMutualSSLEnabled) {\n            API.getCertificateStatus(certAlias)\n                .then((response) => {\n                    setOpenCertificateDetails({\n                        details: response.body,\n                        open: true,\n                        alias: certAlias,\n                        anchor: event.currentTarget,\n                    });\n                })\n                .catch((err) => {\n                    console.error(err);\n                });\n        } else {\n            API.getClientCertificateStatus(certAlias, apiId)\n                .then((response) => {\n                    setOpenCertificateDetails({\n                        details: response.body,\n                        open: true,\n                        alias: certAlias,\n                        anchor: event.currentTarget,\n                    });\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    };\n\n    /**\n     * Delete certificate represented by the alias.\n     *\n     * @param {string} certificateAlias The alias of the certificate that is needed to be deleted.\n     * */\n    const deleteCertificateByAlias = (certificateAlias) => {\n        setDeleting(true);\n        deleteCertificate(certificateAlias)\n            .then(() => setCertificateToDelete({ open: false, alias: '' }))\n            .finally(() => setDeleting(false));\n    };\n\n    useEffect(() => {\n        setCertificateList(certificates);\n    }, [certificates]);\n\n    return (\n        <Grid container direction='column'>\n            {/* TODO: Add list of existing certificates */}\n            <Grid>\n                <Typography className={classes.certificatesHeader}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificates'\n                        defaultMessage='Certificates'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item>\n                <List className={classes.certificateList}>\n                    {certificateList.length > 0 ? (\n                        certificateList.map((cert) => {\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Icon>lock</Icon>\n                                    </ListItemAvatar>\n                                    {isMutualSSLEnabled\n                                        ? (<ListItemText primary={cert.alias} secondary={cert.tier} />)\n                                        : <ListItemText primary={cert.alias} secondary={cert.endpoint} />}\n\n                                    <ListItemSecondaryAction>\n                                        <IconButton\n                                            edge='end'\n                                            onClick={(event) => showCertificateDetails(event, cert.alias)}\n                                        >\n                                            <Icon>info</Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                            onClick={() => setCertificateToDelete({ open: true, alias: cert.alias })}\n                                        >\n                                            <Icon className={isRestricted(['apim:api_create'], apiFromContext)\n                                                ? classes.deleteIconDisable : classes.deleteIcon}\n                                            >\n                                                {' '}\ndelete\n                                            </Icon>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            );\n                        })\n                    ) : (\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Icon color='primary'>info</Icon>\n                            </ListItemAvatar>\n                            <ListItemText>You do not have any certificates uploaded</ListItemText>\n                        </ListItem>\n                    )}\n                </List>\n                <List>\n                    <ListItem\n                        button\n                        disabled={(isRestricted(['apim:api_create'], apiFromContext))}\n                        className={classes.addCertificateBtn}\n                        onClick={() => setUploadCertificateOpen(true)}\n                    >\n                        <ListItemAvatar>\n                            <IconButton>\n                                <Icon>add</Icon>\n                            </IconButton>\n                        </ListItemAvatar>\n                        <ListItemText primary='Add Certificate' />\n                    </ListItem>\n                </List>\n            </Grid>\n            <Dialog open={certificateToDelete.open}>\n                <DialogTitle>\n                    <Typography className={classes.uploadCertDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.deleteCertificate'\n                            defaultMessage='Delete Certificate'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent className={classes.alertWrapper}>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.confirm.certificate.delete'\n                            defaultMessage='Do you want to delete '\n                        />\n                        {' '}\n                        { certificateToDelete.alias + '?'}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => deleteCertificateByAlias(certificateToDelete.alias)}\n                        variant='contained'\n                        color='primary'\n                        disabled={isDeleting}\n                        autoFocus\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.delete.ok.button'\n                            defaultMessage='OK'\n                        />\n                        {isDeleting && <CircularProgress size={24} />}\n\n                    </Button>\n                    <Button onClick={() => setCertificateToDelete({ open: false, alias: '' })}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.delete.cancel.button'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={openCertificateDetails.open}>\n                <DialogTitle>\n                    <Typography className={classes.certDetailsHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.details.of'\n                            defaultMessage='Details of'\n                        />\n                        {' ' + openCertificateDetails.alias}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.status'\n                            defaultMessage='Status'\n                        />\n                        {' : ' + openCertificateDetails.details.status}\n                    </Typography>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.subject'\n                            defaultMessage='Subject'\n                        />\n                        {' : ' + openCertificateDetails.details.subject}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setOpenCertificateDetails({ open: false, anchor: null, details: {} })}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.details.close.button'\n                            defaultMessage='Close'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <UploadCertificate\n                endpoints={endpoints}\n                certificates={certificates}\n                uploadCertificate={uploadCertificate}\n                isMutualSSLEnabled={isMutualSSLEnabled}\n                setUploadCertificateOpen={setUploadCertificateOpen}\n                uploadCertificateOpen={uploadCertificateOpen}\n                aliasList={aliasList}\n            />\n        </Grid>\n    );\n}\n\nCertificates.defaultProps = {\n    isMutualSSLEnabled: false,\n    apiId: '',\n};\n\nCertificates.propTypes = {\n    classes: PropTypes.shape({\n        fileinput: PropTypes.shape({}),\n        button: PropTypes.shape({}),\n    }).isRequired,\n    certificates: PropTypes.shape({}).isRequired,\n    uploadCertificate: PropTypes.func.isRequired,\n    deleteCertificate: PropTypes.func.isRequired,\n    apiId: PropTypes.string,\n    isMutualSSLEnabled: PropTypes.bool,\n    endpoints: PropTypes.shape([]).isRequired,\n    aliasList: PropTypes.shape([]).isRequired,\n};\nexport default injectIntl((Certificates));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { API_SECURITY_MUTUAL_SSL } from './APISecurity/components/apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        color: theme.palette.error.main,\n    },\n}));\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Transports(props) {\n    const { api, configDispatcher, securityScheme } = props;\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    const isMutualSSLEnabled = securityScheme.includes(API_SECURITY_MUTUAL_SSL);\n    const Validate = () => {\n        if (api.transport && api.transport.length === 0) {\n            return (\n                <Typography>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.transport.empty'\n                        defaultMessage='Please select at least one transport!'\n                    />\n                </Typography>\n            );\n        } else if (isMutualSSLEnabled && !api.transport.includes('https')) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.transport.sslHttps'\n                    defaultMessage='Please select Https as transport with mutual SSL!'\n                />\n            );\n        }\n        return null; // No errors :-)\n    };\n    return (\n        <Grid container spacing={1} alignItems='flex-start'>\n            <Grid item>\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.transports'\n                            defaultMessage='Transports'\n                        />\n                    </FormLabel>\n                    <FormGroup style={{ display: 'flow-root' }}>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={api.transport\n                                        ? api.transport.includes('http') : null}\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'transport',\n                                        event: { checked, value: 'http' },\n                                    })}\n                                    value='http'\n                                    color='primary'\n                                />\n                            )}\n                            label='HTTP'\n                        />\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={api.transport\n                                        ? api.transport.includes('https') : null}\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'transport',\n                                        event: { checked, value: 'https' },\n                                    })}\n                                    value='https'\n                                    color='primary'\n                                />\n                            )}\n                            label='HTTPS'\n                        />\n                    </FormGroup>\n                </FormControl>\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.Transports.tooltip'\n                            defaultMessage={\n                                'API will be exposed in selected transport(s) in the gateway(s)'\n                                + 'If Mutual SSL option is selected, a trusted client'\n                                + 'certificate should be presented to access the API'\n                            }\n                        />\n                    )}\n                    aria-label='Transports'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n            <Grid item>\n                <span className={classes.error}>\n                    <Validate />\n                </span>\n            </Grid>\n        </Grid>\n    );\n}\n\n\nTransports.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Certificates from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/Certificates';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Transports from 'AppComponents/Apis/Details/Configuration/components/Transports.jsx';\n\nimport {\n    API_SECURITY_MUTUAL_SSL,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n} from './apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction TransportLevel(props) {\n    const {\n        haveMultiLevelSecurity, securityScheme, configDispatcher, intl, id, api,\n    } = props;\n    const isMutualSSLEnabled = securityScheme.includes(API_SECURITY_MUTUAL_SSL);\n    const [apiFromContext] = useAPI();\n    const [clientCertificates, setClientCertificates] = useState([]);\n    const classes = useStyles();\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     *\n     * @param {string} certificate The certificate needs to be associated with the API\n     * @param {string} policy The tier to be used for the certificate.\n     * @param {string} alias The alias of the certificate to be deleted.\n     *\n     * */\n    const saveClientCertificate = (certificate, policy, alias) => {\n        return API.addClientCertificate(id, certificate, policy, alias).then((resp) => {\n            if (resp.status === 201) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.add.success',\n                    defaultMessage: 'Certificate added successfully',\n                }));\n                const tmpCertificates = [...clientCertificates];\n                tmpCertificates.push({\n                    apiId: resp.obj.apiId,\n                    alias: resp.obj.alias,\n                    tier: resp.obj.tier,\n                });\n                setClientCertificates(tmpCertificates);\n            }\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.alias.error',\n                    defaultMessage: 'Something went wrong while adding the API certificate',\n                }));\n            }\n        });\n    };\n\n    /**\n     * Method to delete the selected certificate.\n     *\n     * @param {string} alias The alias of the certificate to be deleted.\n     * */\n    const deleteClientCertificate = (alias) => {\n        return API.deleteClientCertificate(alias, id).then((resp) => {\n            setClientCertificates(() => {\n                if (resp.status === 200) {\n                    return clientCertificates.filter((cert) => {\n                        return cert.alias !== alias;\n                    });\n                } else {\n                    return -1;\n                }\n            });\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.delete.success',\n                defaultMessage: 'Certificate Deleted Successfully',\n            }));\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.delete.error',\n                    defaultMessage: 'Error while deleting certificate',\n                }));\n            }\n        });\n    };\n\n    // Get the client certificates from backend.\n    useEffect(() => {\n        API.getAllClientCertificates(id).then((resp) => {\n            const { certificates } = resp.obj;\n            setClientCertificates(certificates);\n        }).catch((err) => {\n            console.error(err);\n            setClientCertificates([]);\n        });\n    }, []);\n\n    let mandatoryValue = 'optional';\n    // If not mutual ssl security is selected, no mandatory values should be pre-selected\n    if (!isMutualSSLEnabled) {\n        mandatoryValue = 'null';\n    } else if (\n        !(securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2) || securityScheme.includes(API_SECURITY_BASIC_AUTH)\n            || securityScheme.includes(API_SECURITY_API_KEY))\n    ) {\n        mandatoryValue = API_SECURITY_MUTUAL_SSL_MANDATORY;\n    } else if (securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY)) {\n        mandatoryValue = API_SECURITY_MUTUAL_SSL_MANDATORY;\n    }\n    return (\n        <>\n            <Grid item xs={12}>\n                <ExpansionPanel className={classes.expansionPanel}>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.APISecurity.Components.\n                                    TransportLevel.transport.level.security'\n                                defaultMessage='Transport Level Security'\n                            />\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <Transports api={api} configDispatcher={configDispatcher} securityScheme={securityScheme} />\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={isMutualSSLEnabled}\n                                    onChange={({ target: { checked, value } }) => configDispatcher({\n                                        action: 'securityScheme',\n                                        event: { checked, value },\n                                    })}\n                                    value={API_SECURITY_MUTUAL_SSL}\n                                    color='primary'\n                                />\n                            )}\n                            label='Mutual SSL'\n                        />\n                        {isMutualSSLEnabled && (\n                            <FormControl component='fieldset'>\n                                <RadioGroup\n                                    aria-label='HTTP security SSL mandatory selection'\n                                    name={API_SECURITY_MUTUAL_SSL_MANDATORY}\n                                    value={mandatoryValue}\n                                    onChange={({ target: { name, value } }) => configDispatcher({\n                                        action: 'securityScheme',\n                                        event: { name, value },\n                                    })}\n                                    row\n                                >\n                                    <FormControlLabel\n                                        value={API_SECURITY_MUTUAL_SSL_MANDATORY}\n                                        control={(\n                                            <Radio\n                                                disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label='Mandatory'\n                                        labelPlacement='end'\n                                    />\n                                    <FormControlLabel\n                                        value='optional'\n                                        control={(\n                                            <Radio\n                                                disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label='Optional'\n                                        labelPlacement='end'\n                                    />\n                                </RadioGroup>\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.APISecurity.http.mandatory'\n                                        defaultMessage='Choose whether Transport level security is mandatory or\n                                        optional'\n                                    />\n                                </FormHelperText>\n                            </FormControl>\n                        )}\n                        {isMutualSSLEnabled && (\n                            // TODO:\n                            // This is half baked!!!\n                            // Refactor the Certificate component to share its capabilities in here and\n                            // endpoints page ~tmkb\n                            <Certificates\n                                isMutualSSLEnabled={isMutualSSLEnabled}\n                                certificates={clientCertificates}\n                                uploadCertificate={saveClientCertificate}\n                                deleteCertificate={deleteClientCertificate}\n                                apiId={id}\n                            />\n                        )}\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nTransportLevel.propTypes = {\n    configDispatcher: PropTypes.func.isRequired,\n    haveMultiLevelSecurity: PropTypes.bool.isRequired,\n    securityScheme: PropTypes.arrayOf(PropTypes.string).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    id: PropTypes.string.isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl((TransportLevel));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\n\n\nimport {\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './components/apiSecurityConstants';\nimport ApplicationLevel from './components/ApplicationLevel';\nimport TransportLevel from './components/TransportLevel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        color: theme.palette.error.main,\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APISecurity(props) {\n    const {\n        api: { securityScheme, id },\n        configDispatcher,\n        api,\n    } = props;\n    const apiContext = useContext(ApiContext);\n    const isAPIProduct = apiContext.api.apiType === 'APIProduct';\n    let isEndpointAvailable;\n    let isPrototyped;\n    if (isAPIProduct) {\n        isEndpointAvailable = false;\n        isPrototyped = false;\n    } else {\n        isEndpointAvailable = apiContext.api.endpointConfig !== null;\n        isPrototyped = apiContext.api.endpointConfig !== null\n             && apiContext.api.endpointConfig.implementation_status === 'prototyped';\n    }\n\n    const haveMultiLevelSecurity = securityScheme.includes(API_SECURITY_MUTUAL_SSL)\n        && (securityScheme.includes(API_SECURITY_BASIC_AUTH)\n        || securityScheme.includes(\n            DEFAULT_API_SECURITY_OAUTH2,\n        ) || securityScheme.includes(API_SECURITY_API_KEY));\n    const classes = useStyles();\n\n    // Check the validation conditions and return an error message\n    const Validate = () => {\n        if (\n            !securityScheme.includes(API_SECURITY_MUTUAL_SSL)\n            && !securityScheme.includes(API_SECURITY_BASIC_AUTH)\n            && !securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2)\n            && !securityScheme.includes(API_SECURITY_API_KEY)\n        ) {\n            return (\n                <Typography className={classes.bottomSpace}>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.APISecurity.emptySchemas'\n                        defaultMessage='Please select at least one API security method!'\n                    />\n                </Typography>\n            );\n        } else if (\n            // User has enabled both security levels and set both levels as optional\n            haveMultiLevelSecurity\n            && !(\n                securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY)\n                || securityScheme.includes(API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY)\n            )\n        ) {\n            return (\n                <Typography className={classes.bottomSpace}>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.APISecurity.allOptional'\n                        defaultMessage=\"Please select at least one API security level as 'Mandatory'!\"\n                    />\n                </Typography>\n            );\n        }\n        return null; // No errors :-)\n    };\n    return (\n        <>\n            <Grid container spacing={2} alignItems='flex-start'>\n                {(isAPIProduct || (!isEndpointAvailable || (isEndpointAvailable && !isPrototyped)))\n                && (\n                    <>\n                        <TransportLevel\n                            haveMultiLevelSecurity={haveMultiLevelSecurity}\n                            securityScheme={securityScheme}\n                            configDispatcher={configDispatcher}\n                            api={api}\n                            id={id}\n                        />\n                        <ApplicationLevel\n                            haveMultiLevelSecurity={haveMultiLevelSecurity}\n                            securityScheme={securityScheme}\n                            api={api}\n                            configDispatcher={configDispatcher}\n                            id={id}\n                        />\n                        <Grid item>\n                            <span className={classes.error}>\n                                <Validate />\n                            </span>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </>\n    );\n}\n\nAPISecurity.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport isEmpty from 'lodash/isEmpty';\nimport cloneDeep from 'lodash.clonedeep';\n\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ResponseCaching from './components/ResponseCaching';\nimport CORSConfiguration from './components/CORSConfiguration';\nimport SchemaValidation from './components/SchemaValidation';\nimport MaxBackendTps from './components/MaxBackendTps';\nimport Flow from './components/Flow';\nimport Endpoints from './components/Endpoints';\nimport APISecurity from './components/APISecurity/APISecurity';\n\nimport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './components/APISecurity/components/apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing(3),\n    },\n    paperCenter: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    heading: {\n        fontSize: '1.1rem',\n        fontWeight: 400,\n        marginBottom: theme.spacing(0),\n    },\n    itemPadding: {\n        marginBottom: theme.spacing(3),\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 90,\n        right: -43,\n    },\n    arrowBackIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 30,\n        right: -71,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    info: {\n        display: 'flex',\n        height: '100%',\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    return {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        lifeCycleStatus: api.lifeCycleStatus,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        maxTps: api.maxTps,\n        wsdlUrl: api.wsdlUrl,\n        transport: [...api.transport],\n        securityScheme: [...api.securityScheme],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n    };\n}\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function RuntimeConfiguration() {\n    /**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\n    function configReducer(state, configAction) {\n        const { action, value, event } = configAction;\n        const nextState = { ...copyAPIConfig(state) };\n        switch (action) {\n            case 'description':\n            case 'isDefaultVersion':\n            case 'authorizationHeader':\n            case 'responseCachingEnabled':\n            case 'cacheTimeout':\n            case 'enableSchemaValidation':\n            case 'accessControl':\n            case 'visibility':\n            case 'maxTps':\n            case 'tags':\n                nextState[action] = value;\n                return nextState;\n            case 'accessControlRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'visibleRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'securityScheme':\n                // If event came from mandatory selector of either Application level or Transport level\n                if (\n                    [API_SECURITY_MUTUAL_SSL_MANDATORY, API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY]\n                        .includes(event.name)\n                ) {\n                    // If user select not mandatory (optional) , Remove the respective schema, else add it\n                    if (event.value === 'optional') {\n                        return {\n                            ...copyAPIConfig(state),\n                            [action]: state[action].filter((schema) => schema !== event.name),\n                        };\n                    } else if (state[action].includes(event.name)) {\n                        return state; // Add for completeness, Ideally there couldn't exist this state\n                    } else {\n                        return { ...copyAPIConfig(state), [action]: [...state[action], event.name] };\n                    }\n                }\n                // User checked on one of api security schemas (either OAuth, Basic, ApiKey or Mutual SSL)\n                if (event.checked) {\n                    if (state[action].includes(event.value)) {\n                        return state; // Add for completeness, Ideally there couldn't exist this state\n                    } else {\n                        return { ...copyAPIConfig(state), [action]: [...state[action], event.value] };\n                    }\n                } else if (state[action].includes(event.value)) {\n                    // User has unchecked a security schema type\n                    const newState = {\n                        ...copyAPIConfig(state),\n                        [action]: state[action].filter((schema) => schema !== event.value),\n                    };\n                    if (\n                        !(\n                            newState[action].includes(DEFAULT_API_SECURITY_OAUTH2)\n                            || newState[action].includes(API_SECURITY_BASIC_AUTH)\n                            || newState[action].includes(API_SECURITY_API_KEY)\n                        )\n                    ) {\n                        const noMandatoryOAuthBasicAuth = newState[action]\n                            .filter((schema) => schema !== API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY);\n                        return {\n                            ...newState,\n                            [action]: noMandatoryOAuthBasicAuth,\n                        };\n                    } else if (!newState[action].includes(API_SECURITY_MUTUAL_SSL)) {\n                        const noMandatoryMutualSSL = newState[action]\n                            .filter((schema) => schema !== API_SECURITY_MUTUAL_SSL_MANDATORY);\n                        return {\n                            ...newState,\n                            [action]: noMandatoryMutualSSL,\n                        };\n                    }\n\n                    return newState;\n                } else {\n                    return state; // Add for completeness, Ideally there couldn't exist this state\n                }\n            case 'transport':\n                if (event.checked) {\n                    return { ...copyAPIConfig(state), transport: [...state.transport, event.value] };\n                } else {\n                    return {\n                        ...copyAPIConfig(state),\n                        transport: state.transport.filter((transport) => transport !== event.value),\n                    };\n                }\n            case 'accessControlAllowHeaders':\n            case 'accessControlAllowMethods':\n            case 'accessControlAllowCredentials':\n            case 'corsConfigurationEnabled':\n                nextState.corsConfiguration[action] = value;\n                return nextState;\n            case 'accessControlAllowOrigins':\n                if (event.checked) {\n                    nextState.corsConfiguration[action] = [event.value];\n                } else {\n                    nextState.corsConfiguration[action] = event.checked === false ? [] : event.value;\n                }\n                return nextState;\n            default:\n                return state;\n        }\n    }\n    const { api, updateAPI } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n    const mediationPolicies = cloneDeep(api.mediationPolicies || []);\n    const [inPolicy, setInPolicy] = useState(mediationPolicies.filter((seq) => seq.type === 'IN')[0]);\n    const [outPolicy, setOutPolicy] = useState(mediationPolicies.filter((seq) => seq.type === 'OUT')[0]);\n    const [faultPolicy, setFaultPolicy] = useState(mediationPolicies.filter((seq) => seq.type === 'FAULT')[0]);\n    const getMediationPoliciesToSave = () => {\n        const NONE = 'none';\n        const newMediationPolicies = [];\n        if (!(isEmpty(inPolicy) || inPolicy.name === NONE)) {\n            newMediationPolicies.push(inPolicy);\n        }\n        if (!(isEmpty(outPolicy) || outPolicy.name === NONE)) {\n            newMediationPolicies.push(outPolicy);\n        }\n        if (!(isEmpty(faultPolicy) || faultPolicy.name === NONE)) {\n            newMediationPolicies.push(faultPolicy);\n        }\n        return newMediationPolicies;\n    };\n    const updateInMediationPolicy = (policy) => {\n        setInPolicy({ id: policy.id, name: policy.name, type: policy.type });\n    };\n    const updateOutMediationPolicy = (policy) => {\n        setOutPolicy({ id: policy.id, name: policy.name, type: policy.type });\n    };\n    const updateFaultMediationPolicy = (policy) => {\n        setFaultPolicy({ id: policy.id, name: policy.name, type: policy.type });\n    };\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSave() {\n        setIsUpdating(true);\n        const newMediationPolicies = getMediationPoliciesToSave();\n        if (!api.isAPIProduct()) {\n            apiConfig.mediationPolicies = newMediationPolicies;\n        }\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => setIsUpdating(false));\n    }\n\n    return (\n        <>\n            <Box pb={3}>\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.RuntimeConfiguration.topic.header'\n                        defaultMessage='Runtime Configurations'\n                    />\n                </Typography>\n            </Box>\n            <div className={classes.contentWrapper}>\n                <Grid container direction='row' justify='space-around' alignItems='stretch' spacing={8}>\n                    <Grid item xs={12} md={7}>\n                        <Typography className={classes.heading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.section.request'\n                                defaultMessage='Request'\n                            />\n                        </Typography>\n                        <Grid\n                            direction=' column'\n                            justify='space-between'\n                            alignItems='stretch'\n                            spacing={6}\n                        >\n                            <Grid item xs={12} style={{ marginBottom: 30, position: 'relative' }}>\n                                <Paper className={classes.paper} elevation={0}>\n                                    <APISecurity api={apiConfig} configDispatcher={configDispatcher} />\n                                    <CORSConfiguration api={apiConfig} configDispatcher={configDispatcher} />\n                                    {api.type !== 'GRAPHQL'\n                                        && <SchemaValidation api={apiConfig} configDispatcher={configDispatcher} />}\n                                    {!api.isAPIProduct() && (\n                                        <Flow\n                                            api={apiConfig}\n                                            type='IN'\n                                            updateMediationPolicy={updateInMediationPolicy}\n                                            selectedMediationPolicy={inPolicy}\n                                            isRestricted={isRestricted(['apim:api_create'], api)}\n                                        />\n                                    )}\n                                </Paper>\n                                <ArrowForwardIcon className={classes.arrowForwardIcon} />\n                            </Grid>\n                            <Typography className={classes.heading} variant='h6'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.section.response'\n                                    defaultMessage='Response'\n                                />\n                            </Typography>\n                            <Grid item xs={12} style={{ position: 'relative' }}>\n                                <Box mb={3}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        {!api.isAPIProduct() && (\n                                            <Box mb={3}>\n                                                <Flow\n                                                    api={apiConfig}\n                                                    type='OUT'\n                                                    updateMediationPolicy={updateOutMediationPolicy}\n                                                    selectedMediationPolicy={outPolicy}\n                                                    isRestricted={isRestricted(['apim:api_create'], api)}\n                                                />\n                                            </Box>\n                                        )}\n                                        <ResponseCaching api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Paper>\n                                    <ArrowBackIcon className={classes.arrowBackIcon} />\n                                </Box>\n                            </Grid>\n                            {!api.isAPIProduct() && (\n                                <>\n                                    <Typography className={classes.heading} variant='h6'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.RuntimeConfiguration.section.fault'\n                                            defaultMessage='Fault'\n                                        />\n                                    </Typography>\n                                    <Grid item xs={12} style={{ position: 'relative' }}>\n                                        <Paper className={classes.paper} elevation={0}>\n                                            <Flow\n                                                api={apiConfig}\n                                                type='FAULT'\n                                                updateMediationPolicy={updateFaultMediationPolicy}\n                                                selectedMediationPolicy={faultPolicy}\n                                                isRestricted={isRestricted(['apim:api_create'], api)}\n                                            />\n                                        </Paper>\n                                    </Grid>\n                                </>\n                            )}\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <Typography className={classes.heading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.section.backend'\n                                defaultMessage='Backend'\n                            />\n                        </Typography>\n                        <Paper className={classes.paper} style={{ height: 'calc(100% - 75px)' }} elevation={0}>\n                            {!api.isAPIProduct() && (\n                                <>\n                                    <MaxBackendTps api={apiConfig} configDispatcher={configDispatcher} />\n                                    <Endpoints api={api} />\n                                </>\n                            )}\n\n                            {api.isAPIProduct() && (\n                                <Box alignItems='center' justifyContent='center' className={classes.info}>\n                                    <Typography variant='body1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.RuntimeConfiguration.backend.api.product.\n                                            endpoint'\n                                            defaultMessage='Please refer respective APIs for endpoint information'\n                                        />\n                                    </Typography>\n                                </Box>\n                            )}\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid container direction='row' alignItems='center' spacing={1} style={{ marginTop: 20 }}>\n                        <Grid item>\n                            <Button\n                                disabled={isUpdating\n                                || ((apiConfig.visibility === 'RESTRICTED' && apiConfig.visibleRoles.length === 0)\n                                    || isRestricted(['apim:api_create'], api))}\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                onClick={handleSave}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.save'\n                                    defaultMessage='Save'\n                                />\n                                {isUpdating && <CircularProgress size={15} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Grid item>\n                                <Typography variant='body2' color='primary'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.update.not.allowed'\n                                        defaultMessage={\n                                            '* You are not authorized to update particular fields of'\n                                            + ' the API due to insufficient permissions'\n                                        }\n                                    />\n                                </Typography>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n `max-len` es-lint rule has been disabled for the entire file due to the generated svg elements in the file.\n it's impossible to get them under 120 columns rule\n  */\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({\n    root: {\n        marginTop: 30,\n    },\n});\n\n/**\n *\n *\n * @class LifeCycleImage\n * @extends {React.Component}\n */\nclass LifeCycleImage extends React.Component {\n    /**\n     *\n     *\n     * @param {*} element\n     * @returns\n     * @memberof LifeCycleImage\n     */\n    highLightMe(element) {\n        const style = {};\n        if (!element.startsWith(this.props.lifeCycleStatus.toLowerCase())) {\n            style.opacity = 0.2;\n        }\n        return style;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof LifeCycleImage\n     */\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                width='633'\n                height='244'\n                viewBox='0 0 743.09858 287.34519'\n                id='svg5953'\n                className={classes.root}\n            >\n                <defs id='defs5955'>\n                    <path\n                        transform='scale(.26458)'\n                        id='path5588'\n                        d='m 1738.3694,290.45336 a 290.37688,290.37688 0 0 1 268.3994,-179.55952 290.37688,290.37688 0 0 1 5.8758,0.0595'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path5578'\n                        d='m 2103.6746,127.54094 a 290.37688,290.37688 0 0 1 193.3409,265.03704'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path5547'\n                        d='m 1748.9295,534.82816 a 290.37688,290.37688 0 0 0 257.8393,156.81941 290.37688,290.37688 0 0 0 5.8709,-0.0593'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path4189'\n                        d='m 1748.9295,534.82816 a 290.37688,290.37688 0 0 0 257.8393,156.81941 290.37688,290.37688 0 0 0 5.8709,-0.0593'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                </defs>\n                <g id='layer1' transform='translate(51.512 4.77)'>\n                    <path d='m 99,13.3622 24,0 0,24 -24,0 z' id='path6746' fill='none' />\n                    <g id='prototyped' style={this.highLightMe('prototyped')}>\n                        <text\n                            id='text6729'\n                            y='6.362'\n                            x='61'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                            fill='#2b2b2b'\n                        >\n                            <tspan y='6.362' x='61' id='tspan6731'>\n                                PROTOTYPED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6748'\n                            d='m 118,16.3622 -4.18,0 c -0.42,-1.16 -1.52,-2 -2.82,-2 -1.3,0 -2.4,0.84 -2.82,2 l -4.18,0 c -1.1,0 -2,0.9 -2,2 l 0,14 c 0,1.1 0.9,2 2,2 l 14,0 c 1.1,0 2,-0.9 2,-2 l 0,-14 c 0,-1.1 -0.9,-2 -2,-2 z m -7,0 c 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 0,-0.55 0.45,-1 1,-1 z m -2,14 -4,-4 1.41,-1.41 2.59,2.58 6.59,-6.59 1.41,1.42 -8,8 z'\n                        />\n                    </g>\n                    <path d='m 224.5,133.8622 24,0 0,24 -24,0 z' id='path6762' fill='none' />\n                    <g id='published' style={this.highLightMe('published')}>\n                        <text\n                            id='text6524'\n                            y='125.476'\n                            x='207'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.476' x='207' id='tspan6526'>\n                                PUBLISHED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6764'\n                            d='m 240.5,144.8622 c 1.66,0 2.99,-1.34 2.99,-3 0,-1.66 -1.33,-3 -2.99,-3 -1.66,0 -3,1.34 -3,3 0,1.66 1.34,3 3,3 z m -8,0 c 1.66,0 2.99,-1.34 2.99,-3 0,-1.66 -1.33,-3 -2.99,-3 -1.66,0 -3,1.34 -3,3 0,1.66 1.34,3 3,3 z m 0,2 c -2.33,0 -7,1.17 -7,3.5 l 0,2.5 14,0 0,-2.5 c 0,-2.33 -4.67,-3.5 -7,-3.5 z m 8,0 c -0.29,0 -0.62,0.02 -0.97,0.05 1.16,0.84 1.97,1.97 1.97,3.45 l 0,2.5 6,0 0,-2.5 c 0,-2.33 -4.67,-3.5 -7,-3.5 z'\n                        />\n                    </g>\n                    <g id='created' style={this.highLightMe('created')}>\n                        <text\n                            id='text6520'\n                            y='282.362'\n                            x='68'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='282.362' x='68' id='tspan6522'>\n                                CREATED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6778'\n                            d='m 97,238.8622 c -1.1,0 -1.99,0.9 -1.99,2 l -0.01,16 c 0,1.1 0.89,2 1.99,2 l 12.01,0 c 1.1,0 2,-0.9 2,-2 l 0,-12 -6,-6 -8,0 z m 7,7 0,-5.5 5.5,5.5 -5.5,0 z'\n                        />\n                    </g>\n                    <path d='m 91,236.8622 24,0 0,24 -24,0 z' id='path6780' fill='none' />\n                    <g id='deprecated' style={this.highLightMe('deprecated')}>\n                        <text\n                            id='text6536'\n                            y='125.476'\n                            x='397.858'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.476' x='397.858' id='tspan6538'>\n                                DEPRECATED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6794'\n                            d='m 433.52944,97.811947 c 0,1.1 0.9,2 2,2 l 8,0 c 1.1,0 2,-0.9 2,-2 l 0,-12 -12,0 0,12 z m 13,-15 -3.5,0 -1,-1 -5,0 -1,1 -3.5,0 0,2 14,0 0,-2 z'\n                        />\n                        <path id='path6796' d='m 427.52944,78.811947 24,0 0,24.000003 -24,0 z' fill='none' />\n                    </g>\n                    <path d='m 427.52944,236.8622 24,0 0,24 -24,0 z' id='path6810' clipRule='evenodd' fill='none' />\n                    <g id='blocked' style={this.highLightMe('blocked')}>\n                        <text\n                            id='text6532'\n                            y='282.362'\n                            x='386.858'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='282.362' x='386.858' id='tspan6534'>\n                                BLOCKED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6812'\n                            d='m 450.22944,255.8622 -9.1,-9.1 c 0.9,-2.3 0.4,-5 -1.5,-6.9 -2,-2 -5,-2.4 -7.4,-1.3 l 4.3,4.3 -3,3 -4.4,-4.3 c -1.2,2.4 -0.7,5.4 1.3,7.4 1.9,1.9 4.6,2.4 6.9,1.5 l 9.1,9.1 c 0.4,0.4 1,0.4 1.4,0 l 2.3,-2.3 c 0.5,-0.4 0.5,-1.1 0.1,-1.4 z'\n                        />\n                    </g>\n                    <g id='retired' style={this.highLightMe('retired')}>\n                        <text\n                            id='text6540'\n                            y='125.483'\n                            x='627.485'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.483' x='627.485' id='tspan6542'>\n                                RETIRED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6826'\n                            d='m 663.36667,89.811947 0,2 -13,0 0,-6 9,0 c 2.21,0 4,1.79 4,4 z m -20,3 0,2 6,0 0,2 8,0 0,-2 6,0 0,-2 -20,0 z m 5.14,-1.9 c 1.16,-1.19 1.14,-3.08 -0.04,-4.24 -1.19,-1.16 -3.08,-1.14 -4.24,0.04 -1.16,1.19 -1.14,3.08 0.04,4.24 1.19,1.16 3.08,1.14 4.24,-0.04 z'\n                        />\n                        <path id='path6828' d='m 641.36667,78.811947 24,0 0,24.000003 -24,0 z' fill='none' />\n                    </g>\n                    <g id='published_to_created' style={this.highLightMe('published_to_created')}>\n                        <path\n                            id='path6872'\n                            d='m 235.84375,184.86133 c -11.86654,31.99459 -35.12697,58.48216 -65.32031,74.38281 l -5.4624,15.71344 14.85695,3.63617 c 35.16928,-17.95415 62.42125,-48.3249 76.47461,-85.22656 l -15.28708,7.18109 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#065381'\n                        />\n                        <path\n                            id='path6985'\n                            d='m 178.61585,255.22337 -4.875,15.375 14.5,3.625'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 187.11585,249.22337 -4.875,15.375 14.5,3.625'\n                            id='path6987'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='created_to_published' style={this.highLightMe('created_to_published')}>\n                        <path\n                            id='path6850'\n                            d='m 202.80469,171.18359 c -8.60566,23.79669 -25.78994,43.52064 -48.1836,55.30469 l 15.33148,4.4495 -5.74163,15.30245 c 27.19915,-14.16065 48.15744,-37.93366 58.79687,-66.69335 l -4.08764,-14.98782 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#34b2e4'\n                        />\n                        <path\n                            d='m 200.07828,178.47337 15.66836,-6.25318 3.78013,13.89858'\n                            id='path6979'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            id='path6991'\n                            d='m 195.3937,187.48898 15.66836,-6.25318 3.78013,13.89858'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='prototyped_to_published' style={this.highLightMe('prototyped_to_published')}>\n                        <path\n                            id='path6874'\n                            d='m 181.42383,-4.0683594 5.18392,15.3553234 -15.14681,3.480614 c 26.97521,14.497097 48.38501,37.525806 60.88086,65.484375 l 16.41911,5.795641 4.09261,-14.231188 C 238.22018,39.231643 213.06477,12.507292 181.42383,-4.0683594 Z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#fe912a'\n                        />\n                        <path\n                            id='path6993'\n                            d='m 228.26421,71.982698 16.39604,5.833631 3.93328,-14.097941'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 224.76421,65.357698 16.39604,5.833631 3.93328,-14.097941'\n                            id='path6995'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='published_to_prototyped' style={this.highLightMe('published_to_prototyped')}>\n                        <path\n                            id='path6855'\n                            d='m 164.61328,27.712891 -16.76273,3.798407 6.57718,15.455499 c 19.64736,10.327117 35.3679,26.809879 44.75391,46.923828 l 6.94786,-12.105746 13.33339,3.763949 C 208.07457,60.73778 188.78631,40.399355 164.61328,27.712891 Z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#ffc95c'\n                        />\n                        <path\n                            id='path6997'\n                            d='m 163.43006,52.336437 -6.45235,-15.202795 16.61701,-3.535534'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='M 171.82695,57.993291 165.3746,42.790496 181.99161,39.254962'\n                            id='path6999'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='created_to_prototyped' style={this.highLightMe('created_to_prototyped')}>\n                        <path\n                            id='path6870'\n                            d='M 35.433594,-4.7226562 C -17.800688,22.43674 -51.366944,77.095386 -51.511719,136.85742 c 0.08726,60.42038 34.333636,115.59607 88.439453,142.48828 l -5.963174,-14.43529 14.818643,-3.6858 C -1.8626488,238.10436 -32.152993,189.83798 -32.251953,136.87891 -32.191581,84.271252 -2.3316563,36.239603 44.818359,12.90625 l 7.576833,-14.3582512 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#8b103e'\n                        />\n                        <path\n                            id='path7001'\n                            d='m 25.625,1.1122031 16.25,3 -7.125,13.7499999'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 16.375,7.1122031 16.25,2.9999999 -7.125,13.75'\n                            id='path7003'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='prototyped_to_created' style={this.highLightMe('prototyped_to_created')}>\n                        <path\n                            id='path6840'\n                            d='M 52.171875,26.720703 C 10.473112,47.61586 -15.897048,90.22032 -16,136.86133 c 0.06835,46.84095 26.630186,89.61173 68.585938,110.43945 l 18.169686,-5.17409 -8.489999,-14.63841 C 27.868397,210.36444 6.0894455,175.28511 6,136.86133 6.0597413,98.328986 27.932967,63.153267 62.464844,46.056641 l -14.466177,-4.2932 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#e34856'\n                        />\n                        <path\n                            id='path7005'\n                            d='m 39.421204,240.07329 17.677669,-4.94975 -7.778174,-14.49569'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 27.930719,230.8809 17.677669,-4.94975 -7.778174,-14.49569'\n                            id='path7007'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='deprecated_to_retired' style={this.highLightMe('deprecated_to_retired')}>\n                        <path\n                            id='rect7009'\n                            d='m 530.25049,110.51652 68.24164,0 9.89949,9.52539 -9.89949,9.40863 -68.24164,0 9.54594,-9.76218 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            id='path7016'\n                            d='m 589.97554,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            d='m 581.28804,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            id='path7018'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='published_to_deprecated' style={this.highLightMe('published_to_deprecated')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 306.25049,110.51652 68.24164,0 9.89949,9.52539 -9.89949,9.40863 -68.24164,0 9.54594,-9.76218 z'\n                            id='path7020'\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 365.97554,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            id='path7022'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7024'\n                            d='m 357.28804,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='published_to_blocked' style={this.highLightMe('published_to_blocked')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 306.92162,149.0749 92.7941,75.49823 1.41692,13.66474 -13.63383,0.80053 -92.79411,-75.49822 13.59185,-1.29876 z'\n                            id='path7026'\n                            color='#000'\n                            overflow='visible'\n                            fill='#65daad'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 392.87565,219.47284 1.33665,12.84698 -12.94218,0.70939'\n                            id='path7028'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7030'\n                            d='m 386.23855,213.86735 1.33664,12.84698 -12.94218,0.70939'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g\n                        id='blocked_to_published'\n                        transform='rotate(180 338.919 207.057)'\n                        style={this.highLightMe('blocked_to_published')}\n                    >\n                        <path\n                            id='path7039'\n                            d='m 306.92162,149.0749 92.7941,75.49823 1.41692,13.66474 -13.63383,0.80053 -92.79411,-75.49822 13.59185,-1.29876 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#64d0da'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            id='path7041'\n                            d='m 392.87565,219.47284 1.33665,12.84698 -12.94218,0.70939'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            d='m 386.23855,213.86735 1.33664,12.84698 -12.94218,0.70939'\n                            id='path7043'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='blocked_to_deprecated' style={this.highLightMe('blocked_to_deprecated')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 427.85405,225.05409 0,-68.24164 9.52539,-9.89949 9.40863,9.89949 0,68.24164 -9.76218,-9.54594 z'\n                            id='path7045'\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 428.37098,165.32904 8.95242,-9.31051 8.89273,9.42988'\n                            id='path7047'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7049'\n                            d='m 428.37098,174.01654 8.95242,-9.31051 8.89273,9.42988'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\nLifeCycleImage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    lifeCycleStatus: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(LifeCycleImage);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckIcon from '@material-ui/icons/Check';\nimport green from '@material-ui/core/colors/green';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nconst useStyles = makeStyles((theme) => ({\n    stateButton: {\n        marginRight: theme.spacing(),\n    },\n    paperCenter: {\n        padding: theme.spacing(2),\n        display: 'block',\n        alignItems: 'left',\n        justifyContent: 'center',\n    },\n    iconTrue: {\n        color: green[500],\n        marginRight: theme.spacing(1),\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconFalse: {\n        color: theme.palette.grey[500],\n        marginRight: theme.spacing(1),\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    grid: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'left',\n        alignItems: 'left',\n    },\n    labelsGrid: {\n        fontWeight: 600,\n        marginTop: theme.spacing(3),\n    },\n}));\n/**\n * This component renders the requirements list\n * @param {*} props\n */\nexport default function CheckboxLabels(props) {\n    const classes = useStyles();\n    const {\n        api, isMutualSSLEnabled, isCertAvailable, isAppLayerSecurityMandatory, isBusinessPlanAvailable,\n    } = props;\n    const isEndpointAvailable = api.endpointConfig !== null && !api.endpointConfig.implementation_status;\n    const isPrototypedAvailable = (api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped')\n        || api.endpointImplementationType === 'INLINE';\n\n    return (\n        <Paper className={classes.paperCenter}>\n            <Grid xs={12}>\n                <Typography variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.Configuration.requirements'\n                        defaultMessage='Requirements'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.Configuration.requirements.state.transition'\n                        defaultMessage='Requirements for next state transition'\n                    />\n                </Typography>\n            </Grid>\n            {(api.lifeCycleStatus === 'CREATED' || api.lifeCycleStatus === 'PROTOTYPED') && (\n                <>\n                    <Grid xs={12} className={classes.labelsGrid}>\n                        <Typography variant='subtitle2'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.publisher'\n                                defaultMessage='Publish'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid xs={12}>\n                        <Grid xs={12} className={classes.grid}>\n                            {isEndpointAvailable ? (\n                                <CheckIcon className={classes.iconTrue} />\n                            ) : (\n                                <CloseIcon className={classes.iconFalse} />\n                            )}\n                            <Typography>\n                                <FormattedMessage\n                                    id='Apis.Details.LifeCycle.CheckboxLabels.endpoints.provided'\n                                    defaultMessage='Endpoint provided'\n                                />\n                            </Typography>\n                            <Link to={'/apis/' + api.id + '/endpoints'}>\n                                <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                            </Link>\n                        </Grid>\n                        <>\n                            {isAppLayerSecurityMandatory && (\n                                <Grid xs={12} className={classes.grid}>\n                                    {isBusinessPlanAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <CloseIcon className={classes.iconFalse} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.CheckboxLabels.business.plans.selected'\n                                            defaultMessage='Business Plan(s) selected'\n                                        />\n                                    </Typography>\n                                    <Link to={'/apis/' + api.id + '/subscriptions'}>\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                            )}\n                            {isMutualSSLEnabled && (\n                                <Grid xs={12} className={classes.grid}>\n                                    {isCertAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <CloseIcon className={classes.iconFalse} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.CheckboxLabels.cert.provided'\n                                            defaultMessage='Certificate provided'\n                                        />\n                                    </Typography>\n                                    <Link to={'/apis/' + api.id + '/runtime-configuration'}>\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                            ) }\n                        </>\n                    </Grid>\n                    { api.type !== 'GRAPHQL' && (\n                        <>\n                            <Grid xs={12} className={classes.labelsGrid}>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.prototype'\n                                        defaultMessage='Deploy as a Prototype'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid xs={12}>\n                                <Grid xs={12} className={classes.grid}>\n                                    {isPrototypedAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <CloseIcon className={classes.iconFalse} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.prototype.endpoints.provided'\n                                            defaultMessage='Prototype Endpoint provided'\n                                        />\n                                    </Typography>\n                                    <Link to={'/apis/' + api.id + '/endpoints'}>\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </>\n                    )}\n                </>\n            )}\n            {api.lifeCycleStatus === 'PUBLISHED' && (\n                <>\n                    <Grid xs={12} className={classes.labelsGrid}>\n                        <Typography variant='subtitle2'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.prototype'\n                                defaultMessage='Deploy as a Prototype'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid xs={12}>\n                        <Grid xs={12} className={classes.grid}>\n                            {isPrototypedAvailable ? (\n                                <CheckIcon className={classes.iconTrue} />\n                            ) : (\n                                <CloseIcon className={classes.iconFalse} />\n                            )}\n                            <Typography>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.prototype.endpoints.provided'\n                                    defaultMessage='Prototype Endpoint provided'\n                                />\n                            </Typography>\n                            <Link to={'/apis/' + api.id + '/endpoints'}>\n                                <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </>\n            )}\n        </Paper>\n    );\n}\n\nCheckboxLabels.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core/';\nimport Slide from '@material-ui/core/Slide';\n\nconst lifecyclePending = (props) => {\n    const { currentState } = props;\n    const intl = useIntl();\n    const [isOpen, setOpen] = useState(false);\n    const [api, updateAPI] = useAPI();\n    const deleteTask = () => {\n        const { id } = api;\n        api.cleanupPendingTask(id)\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.success',\n                    defaultMessage: 'Lifecycle task deleted successfully',\n                }));\n                updateAPI();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.error',\n                    defaultMessage: 'Error while deleting task',\n                }));\n            });\n    };\n    return (\n        <Paper>\n            <Box display='block' p={2} mt={2}>\n                <Box display='block'>\n                    <Typography variant='h6'>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.pending'\n                            defaultMessage='Pending lifecycle state change.'\n                        />\n                    </Typography>\n                </Box>\n                <Box display='block' mt={0.5}>\n                    <Typography variant='subtitle2'>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.current.state'\n                            defaultMessage='Current state is'\n                        />\n                        {' '}\n                        {currentState}\n                    </Typography>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Button\n                        size='small'\n                        variant='contained'\n                        color='primary'\n                        onClick={() => setOpen(true)}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.delete.task'\n                            defaultMessage='Delete Task'\n                        />\n                    </Button>\n\n                </Box>\n            </Box>\n            <Dialog open={isOpen} transition={Slide}>\n                <DialogTitle>\n                    <FormattedMessage\n                        id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.title'\n                        defaultMessage='Delete Task'\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.text.description'\n                            defaultMessage='The life cycle task will be removed'\n                        />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button dense onClick={() => setOpen(false)}>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='text'\n                        color='primary'\n                        onClick={deleteTask}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog,delete'\n                            defaultMessage='Delete'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Paper>\n    );\n};\nlifecyclePending.propTypes = {\n    currentState: PropTypes.string.isRequired,\n};\nexport default lifecyclePending;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { CircularProgress } from '@material-ui/core';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Banner from 'AppComponents/Shared/Banner';\n\nimport LifeCycleImage from './LifeCycleImage';\nimport CheckboxLabels from './CheckboxLabels';\nimport LifecyclePending from './LifecyclePending';\nimport { API_SECURITY_MUTUAL_SSL_MANDATORY, API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY }\n    from '../Configuration/components/APISecurity/components/apiSecurityConstants';\n\nconst styles = (theme) => ({\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    stateButton: {\n        marginRight: theme.spacing(),\n    },\n    paperCenter: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        alignItems: 'left',\n        justifyContent: 'left',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n});\n\n/**\n *\n *\n * @class LifeCycleUpdate\n * @extends {Component}\n */\nclass LifeCycleUpdate extends Component {\n    /**\n     * @param {*} props @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.updateLifeCycleState = this.updateLifeCycleState.bind(this);\n        this.api = new API();\n        this.WORKFLOW_STATUS = {\n            CREATED: 'CREATED',\n            APPROVED: 'APPROVED',\n        };\n        this.state = {\n            newState: null,\n            isUpdating: null,\n            pageError: null,\n        };\n    }\n\n    /**\n     * @param {*} apiUUID api UUID\n     * @param {*} action life cycle action\n     * @memberof LifeCycleUpdate\n     */\n    updateLCStateOfAPI(apiUUID, action) {\n        this.setState({ isUpdating: action });\n        let promisedUpdate;\n        const lifecycleChecklist = this.props.checkList.map((item) => item.value + ':' + item.checked);\n        if (lifecycleChecklist.length > 0) {\n            promisedUpdate = this.api.updateLcState(apiUUID, action, lifecycleChecklist);\n        } else {\n            promisedUpdate = this.api.updateLcState(apiUUID, action);\n        }\n        promisedUpdate\n            .then((response) => {\n                /* TODO: Handle IO erros ~tmkb */\n                this.props.handleUpdate(true);\n                const newState = response.body.lifecycleState.state;\n                const { workflowStatus } = response.body;\n                this.context.updateAPI();\n                this.setState({ newState });\n                const { intl } = this.props;\n\n                if (workflowStatus === this.WORKFLOW_STATUS.CREATED) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.LifeCycle.LifeCycleUpdate.success.createStatus',\n                        defaultMessage: 'Lifecycle state change request has been sent',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.LifeCycle.LifeCycleUpdate.success.otherStatus',\n                        defaultMessage: 'Lifecycle state updated successfully',\n                    }));\n                }\n                /* TODO: add i18n ~tmkb */\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    this.setState({ pageError: error.response.body });\n                } else {\n                    // TODO add i18n ~tmkb\n                    const message = 'Something went wrong while updating the lifecycle';\n                    Alert.error(message);\n                    this.setState({ pageError: error.response.body });\n                }\n                console.error(error);\n            })\n            .finally(() => {\n                this.setState({ isUpdating: null });\n            });\n    }\n\n    /**\n     *\n     *\n     * @param {*} event event\n     * @memberof LifeCycleUpdate\n     */\n    updateLifeCycleState(event) {\n        event.preventDefault();\n        const action = event.currentTarget.getAttribute('data-value');\n        const {\n            api: { id: apiUUID },\n        } = this.props;\n        this.updateLCStateOfAPI(apiUUID, action);\n    }\n\n    /**\n     * @inheritdoc\n     * @memberof LifeCycleUpdate\n     */\n    render() {\n        const {\n            api, lcState, classes, theme, handleChangeCheckList, checkList, certList,\n        } = this.props;\n        const lifecycleStates = [...lcState.availableTransitions];\n        const { newState, pageError } = this.state;\n        const isWorkflowPending = api.workflowStatus && api.workflowStatus === this.WORKFLOW_STATUS.CREATED;\n        const lcMap = new Map();\n        lcMap.set('Published', 'Publish');\n        lcMap.set('Prototyped', 'Deploy as a prototype');\n        lcMap.set('Deprecated', 'Deprecate');\n        lcMap.set('Blocked', 'Block');\n        lcMap.set('Created', 'Create');\n        lcMap.set('Retired', 'Retire');\n        const isPrototype = api.endpointConfig && api.endpointConfig.implementation_status === 'prototyped';\n        const isMutualSSLEnabled = api.securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY);\n        const isAppLayerSecurityMandatory = api.securityScheme.includes(\n            API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n        );\n        const isCertAvailable = certList.length !== 0;\n        const isBusinessPlanAvailable = api.policies.length !== 0;\n        const lifecycleButtons = lifecycleStates.map((item) => {\n            const state = { ...item, displayName: item.event };\n            if (state.event === 'Deploy as a Prototype') {\n                let { displayName } = state;\n                if (lcState.state === 'Prototyped') {\n                    displayName = 'Redeploy';\n                }\n                return {\n                    ...state,\n                    displayName,\n                    disabled: !isPrototype || api.endpointConfig == null,\n                };\n            }\n            if (state.event === 'Publish') {\n                let { displayName } = state;\n                if (lcState.state === 'Published') {\n                    displayName = 'Redeploy';\n                }\n                return {\n                    ...state,\n                    displayName,\n                    disabled:\n                        api.endpointConfig === null\n                        || (isMutualSSLEnabled && !isCertAvailable)\n                        || (isAppLayerSecurityMandatory && !isBusinessPlanAvailable)\n                        || api.endpointConfig.implementation_status === 'prototyped',\n                };\n            }\n            return {\n                ...state,\n                disabled: false,\n            };\n        });\n        return (\n            <Grid container>\n                {isWorkflowPending ? (\n                    <Grid item xs={12}>\n                        <LifecyclePending currentState={lcState.state} />\n                    </Grid>\n                ) : (\n                    <Grid item xs={12}>\n                        {theme.custom.lifeCycleImage ? (\n                            <img src={theme.custom.lifeCycleImage} alt='life cycles' />\n                        ) : (\n                            <Grid container spacing={3}>\n                                <Grid item xs={8}>\n                                    <LifeCycleImage lifeCycleStatus={newState || api.lifeCycleStatus} />\n                                </Grid>\n                                {(api.lifeCycleStatus === 'CREATED'\n                                    || api.lifeCycleStatus === 'PROTOTYPED') && (\n                                    <Grid item xs={3}>\n                                        <CheckboxLabels\n                                            api={api}\n                                            isMutualSSLEnabled={isMutualSSLEnabled}\n                                            isAppLayerSecurityMandatory={isAppLayerSecurityMandatory}\n                                            isCertAvailable={isCertAvailable}\n                                            isBusinessPlanAvailable={isBusinessPlanAvailable}\n                                        />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        )}\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    {!isWorkflowPending && (\n                        <FormGroup row>\n                            {checkList.map((checkItem, index) => (\n                                <FormControlLabel\n                                    key={checkList[index].value}\n                                    control={(\n                                        <Checkbox\n                                            checked={checkList[index].checked}\n                                            onChange={handleChangeCheckList(index)}\n                                            value={checkList[index].value}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label={checkList[index].label}\n                                />\n                            ))}\n                        </FormGroup>\n                    )}\n                    <ScopeValidation resourcePath={resourcePath.API_CHANGE_LC} resourceMethod={resourceMethod.POST}>\n                        <div className={classes.buttonsWrapper}>\n                            {!isWorkflowPending\n                                && lifecycleButtons.map((transitionState) => {\n                                    /* Skip when transitions available for current state ,\n                            this occurs in states where have allowed re-publishing in prototype and published sates */\n                                    return (\n                                        <Button\n                                            disabled={transitionState.disabled || this.state.isUpdating}\n                                            variant='contained'\n                                            color='primary'\n                                            className={classes.stateButton}\n                                            key={transitionState.event}\n                                            data-value={transitionState.event}\n                                            onClick={this.updateLifeCycleState}\n                                        >\n                                            {transitionState.displayName}\n                                            {this.state.isUpdating === transitionState.event && (\n                                                <CircularProgress size={18} />\n                                            )}\n                                        </Button>\n                                    );\n                                })}\n                        </div>\n                    </ScopeValidation>\n                </Grid>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => this.setState({ pageError: null })}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n            </Grid>\n        );\n    }\n}\n\nLifeCycleUpdate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    checkList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    lcState: PropTypes.shape({}).isRequired,\n    handleChangeCheckList: PropTypes.func.isRequired,\n    handleUpdate: PropTypes.func.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nLifeCycleUpdate.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(injectIntl(LifeCycleUpdate));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Person from '@material-ui/icons/Person';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = (theme) => ({\n    firstCol: {\n        width: 100,\n    },\n    personIcon: {\n        fontSize: theme.typography.fontSize,\n    },\n    avatar: {\n        width: 25,\n        height: 25,\n    },\n});\nconst LifeCycleHistory = (props) => {\n    const { classes } = props;\n    return (\n        <Paper>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell className={classes.firstCol}>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleHistory.user' defaultMessage='User' />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.LifeCycleHistory.action'\n                                defaultMessage='Action'\n                            />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleHistory.time' defaultMessage='Time' />\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.lcHistory.reverse().map((entry) => entry.previousState && (\n                        <TableRow key={entry.postState}>\n                            <TableCell component='th' scope='row'>\n                                <Avatar className={classes.avatar}>\n                                    <Person className={classes.personIcon} />\n                                </Avatar>\n                                <div>{entry.user}</div>\n                            </TableCell>\n                            <TableCell>\n                                <FormattedMessage\n                                    id='Apis.Details.LifeCycle.LifeCycleHistory.lifecycle.state.history'\n                                    defaultMessage='LC has changed from {previous} to {post}'\n                                    values={{ previous: entry.previousState, post: entry.postState }}\n                                />\n                            </TableCell>\n                            <TableCell>{moment(entry.updatedTime).fromNow()}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\nLifeCycleHistory.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    lcHistory: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\nexport default withStyles(styles)(LifeCycleHistory);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nimport LifeCycleUpdate from './LifeCycleUpdate';\nimport LifeCycleHistory from './LifeCycleHistory';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    historyHead: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n});\n/**\n *\n *\n * @class LifeCycle\n * @extends {Component}\n */\nclass LifeCycle extends Component {\n    /**\n     * Creates an instance of LifeCycle.\n     * @param {Object} props\n     * @memberof LifeCycle\n     */\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.state = {\n            lcHistory: null,\n            checkList: [],\n            certList: [],\n        };\n        this.updateData = this.updateData.bind(this);\n        this.handleChangeCheckList = this.handleChangeCheckList.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof LifeCycle\n     */\n    componentDidMount() {\n        this.updateData();\n    }\n\n    handleChangeCheckList = (index) => (event, checked) => {\n        const { checkList } = this.state;\n        checkList[index].checked = checked;\n        this.setState({ checkList });\n    };\n\n    /**\n     *\n     *\n     * @memberof LifeCycle\n     */\n    updateData() {\n        const { api: { id } } = this.props;\n        const promisedAPI = Api.get(id);\n        const promisedLcState = this.api.getLcState(id);\n        const privateJetModeEnabled = false;\n        const promisedLcHistory = this.api.getLcHistory(id);\n        const promisedClientCerts = Api.getAllClientCertificates(id);\n        Promise.all([promisedAPI, promisedLcState, promisedLcHistory, promisedClientCerts])\n            .then((response) => {\n                const api = response[0];\n                const lcState = response[1].body;\n                const lcHistory = response[2].body.list;\n                const clientCerts = response[3].body;\n\n                if (privateJetModeEnabled) {\n                    if (!api.hasOwnGateway) {\n                        const transitions = lcState.availableTransitionBeanList;\n                        const PUBLISHED = 'Published';\n\n                        for (const transition of transitions) {\n                            if (transition.targetState === PUBLISHED && lcState.state !== PUBLISHED) {\n                                const publishInPrivateJetMode = {\n                                    event: 'Publish In Private Jet Mode',\n                                    targetState: 'Published In Private Jet Mode',\n                                };\n                                lcState.availableTransitionBeanList.push(publishInPrivateJetMode);\n                            }\n                        }\n                    }\n                }\n                // Creating checklist\n                const checkList = [];\n                let index = 0;\n                for (const item of lcState.checkItems) {\n                    checkList.push({\n                        index,\n                        label: item.name,\n                        value: item.name,\n                        checked: false,\n                    });\n                    index++;\n                }\n                this.setState({\n                    api,\n                    lcState,\n                    lcHistory,\n                    privateJetModeEnabled,\n                    checkList,\n                    certList: [...clientCerts.certificates],\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof LifeCycle\n     */\n    render() {\n        const { classes } = this.props;\n        const {\n            api, lcState, privateJetModeEnabled, checkList, lcHistory, certList,\n        } = this.state;\n        const apiFromContext = this.context.api;\n        if (apiFromContext && isRestricted(['apim:api_publish'], apiFromContext)) {\n            return (\n                <Grid container direction='row' alignItems='center' spacing={4} style={{ marginTop: 20 }}>\n                    <Grid item>\n                        <Typography variant='body2' color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.LifeCycle.change.not.allowed'\n                                defaultMessage={\n                                    '* You are not authorized to change the life cycle state of the API'\n                                    + ' due to insufficient permissions'\n                                }\n                            />\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n        if (!lcState) {\n            return <Progress />;\n        }\n        return (\n            <>\n                <Typography variant='h4' gutterBottom>\n                    <FormattedMessage id='Apis.Details.LifeCycle.LifeCycle.lifecycle' defaultMessage='Lifecycle' />\n                </Typography>\n                <div className={classes.contentWrapper}>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <LifeCycleUpdate\n                                handleUpdate={this.updateData}\n                                lcState={lcState}\n                                checkList={checkList}\n                                handleChangeCheckList={this.handleChangeCheckList}\n                                api={api}\n                                privateJetModeEnabled={privateJetModeEnabled}\n                                certList={certList}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            {lcHistory.length > 1 && (\n                                <div>\n                                    <Typography variant='h6' gutterBottom className={classes.historyHead}>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.LifeCycle.history'\n                                            defaultMessage='History'\n                                        />\n                                    </Typography>\n                                    <LifeCycleHistory lcHistory={lcHistory} />\n                                </div>\n                            )}\n                        </Grid>\n                    </Grid>\n                </div>\n            </>\n        );\n    }\n}\n\nLifeCycle.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nLifeCycle.contextType = ApiContext;\n\nexport default withStyles(styles)(LifeCycle);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Icon from '@material-ui/core/Icon';\nimport TextField from '@material-ui/core/TextField';\nimport Dropzone from 'react-dropzone';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport APIValidation from 'AppData/APIValidation';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = theme => ({\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    group: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    formControlFirst: {\n        display: 'block',\n    },\n    formControl: {\n        display: 'block',\n        marginTop: 20,\n    },\n    formControlLabel: {\n        background: '#efefef',\n        borderRadius: 5,\n        paddingRight: 10,\n        marginLeft: 0,\n        marginTop: 10,\n    },\n    typeTextWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    acceptDrop: {\n        backgroundColor: green[50],\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 75,\n        padding: `${theme.spacing(2)}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n});\n\nclass CreateEditForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: 'HOWTO',\n            sourceType: 'INLINE',\n            name: '',\n            summary: '',\n            sourceUrl: '',\n            file: null,\n            disableName: false,\n            otherTypeName: null,\n            nameNotDuplicate: true,\n            invalidUrl: true,\n            nameEmpty: false,\n            summeryEmpty: false,\n            urlEmpty: false,\n        };\n    }\n\n    changeType = (e) => {\n        const { value } = e.target;\n        if (value === 'PUBLIC_FORUM' || value === 'SUPPORT_FORUM') {\n            this.setState({ type: 'URL' });\n        }\n        this.setState({ type: value });\n    };\n    changeSource = (e) => {\n        const { value } = e.target;\n        this.validate();\n        this.setState({ sourceType: value });\n    };\n    setDisable = (item) => {\n        const { type } = this.state;\n        if (item === 'INLINE' || item === 'MARKDOWN' || item === 'FILE') {\n            if (type === 'PUBLIC_FORUM' || type === 'SUPPORT_FORUM') {\n                return true;\n            }\n        }\n    };\n    handleChange = name => (e) => {\n        const { value } = e.target;\n        if (name === 'name') {\n            this.setState({ name: value });\n        } else if (name === 'summary') {\n            this.setState({ summary: value });\n        } else if (name === 'sourceUrl') {\n            this.setState({ sourceUrl: value });\n        } else if (name === 'otherTypeName') {\n            this.setState({ otherTypeName: value });\n        }\n    };\n\n    onDrop = (acceptedFile) => {\n        this.setState({ file: acceptedFile });\n    };\n\n    addDocument = (apiId) => {\n        const { apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        const {\n            name, type, summary, sourceType, sourceUrl, file, otherTypeName,\n        } = this.state;\n        const docPromise = restAPI.addDocument(apiId, {\n            name,\n            type,\n            summary,\n            sourceType,\n            visibility: 'API_LEVEL',\n            sourceUrl,\n            otherTypeName,\n            inlineContent: '',\n        });\n        return { docPromise, file };\n    };\n    updateDocument = (apiId) => {\n        const { apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        const {\n            name, type, summary, sourceType, sourceUrl, file, otherTypeName,\n        } = this.state;\n        const { docId } = this.props;\n        const docPromise = restAPI.updateDocument(apiId, docId, {\n            name,\n            type,\n            summary,\n            sourceType,\n            visibility: 'API_LEVEL',\n            sourceUrl,\n            otherTypeName,\n            inlineContent: '',\n        });\n        return { docPromise, file };\n    };\n    getDocument() {\n        const { apiId, docId, apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        if (docId && apiId) {\n            const docPromise = restAPI.getDocument(apiId, docId);\n            docPromise\n                .then((doc) => {\n                    const {\n                        name, type, summary, sourceType, sourceUrl, otherTypeName,\n                    } = doc.body;\n                    this.setState({\n                        name,\n                        type,\n                        summary,\n                        sourceType,\n                        sourceUrl,\n                        otherTypeName,\n                    });\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        this.setState({ apiNotFound: true });\n                    }\n                });\n        }\n    }\n    validate(field=null, value=null) {\n        let invalidUrl = false;\n        if (field === 'url') {\n            invalidUrl = value ? APIValidation.url.validate(value).error : false;\n            this.setState({ invalidUrl });\n            if (value === '') {\n                this.setState({ urlEmpty: true });\n            } else {\n                this.setState({ urlEmpty: false });\n            }\n        } else if (field === 'name') {\n            if (value) {\n                const promise = APIValidation.apiDocument.validate({ id: this.props.apiId, name: value });\n                promise\n                    .then((isDocumentPresent) => {\n                        this.setState({ nameNotDuplicate: !isDocumentPresent });\n                    })\n                    .catch((error) => {\n                        if (error.status === 404) {\n                            this.setState({ nameNotDuplicate: true });\n                        } else {\n                            Alert.error('Error when validating document name');\n                        }\n                    });\n            } else {\n                this.setState({ nameNotDuplicate: true });\n            }\n\n            if (value === '') {\n                this.setState({ nameEmpty: true });\n            } else {\n                this.setState({ nameEmpty: false });\n            }\n        } else if (field === 'summary') {\n            if (value === '') {\n                this.setState({ summeryEmpty: true });\n            } else {\n                this.setState({ summeryEmpty: false });\n            }\n        }\n    }\n    componentDidMount() {\n        this.getDocument();\n        const { apiId, docId } = this.props;\n        if (apiId && docId) {\n            this.setState({ disableName: true });\n        }\n    }\n    showNameHelper() {\n        const { nameEmpty, nameNotDuplicate } = this.state;\n        if (nameNotDuplicate && !nameEmpty) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.document.name.helper.text'\n                    defaultMessage='Provide the name for the document'\n                />\n            );\n        } else if (nameEmpty) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.empty.document.name.helper.text'\n                    defaultMessage='Document name cannot be empty'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.duplicate.document.name.helper.text'\n                    defaultMessage='Duplicate document name'\n                />\n            );\n        }\n    }\n    getUrlHelperText() {\n        const { invalidUrl, urlEmpty} = this.state;\n\n        if (invalidUrl) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text.error.invalid'\n                    defaultMessage='Enter a valid URL to the source'\n                />\n            );\n        } else if (urlEmpty) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text.error.empty'\n                    defaultMessage='URL Field cannot be empty'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text'\n                    defaultMessage='Provide the URL to the source'\n                />\n            );\n        }\n    }\n    render() {\n        const {\n            name,\n            type,\n            summary,\n            sourceType,\n            sourceUrl,\n            file,\n            disableName,\n            otherTypeName,\n            invalidUrl,\n            nameNotDuplicate,\n            nameEmpty,\n            summeryEmpty,\n            urlEmpty,\n        } = this.state;\n        const { classes, setSaveDisabled } = this.props;\n        if (\n            name !== '' &&\n            summary !== '' &&\n            nameNotDuplicate &&\n            ((!invalidUrl && sourceUrl !== '') || sourceType !== 'URL')\n        ) {\n            setSaveDisabled(false);\n        } else {\n            setSaveDisabled(true);\n        }\n        return (\n            <div className={classes.addNewOther}>\n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                    <TextField\n                        fullWidth\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                this.validate('name', value);\n                            },\n                        }}\n                        label={\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.name'\n                                defaultMessage='Name *'\n                            />\n                        }\n                        helperText={this.showNameHelper()}\n                        type='text'\n                        variant='outlined'\n                        name='name'\n                        margin='normal'\n                        value={name}\n                        onChange={this.handleChange('name')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        autoFocus\n                        disabled={disableName}\n                        error={!nameNotDuplicate || nameEmpty}\n                    />\n                </FormControl>\n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                    <TextField\n                        fullWidth\n                        multiline\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                this.validate('summary', value);\n                            },\n                            onKeyUp: ({ target: { value } }) => {\n                                this.validate('summary', value);\n                            },\n                        }}\n                        margin='normal'\n                        variant='outlined'\n                        label={\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary'\n                                defaultMessage='Summary *'\n                            />\n                        }\n                        helperText={\n                            summeryEmpty ? (\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.summary.error.empty'\n                                    defaultMessage='Document summary can not be empty'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.summary.helper.text'\n                                    defaultMessage='Provide a brief description for the document'\n                                />\n                            )\n                        }\n                        type='text'\n                        name='summary'\n                        margin='normal'\n                        value={summary}\n                        onChange={this.handleChange('summary')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        error={summeryEmpty}\n                    />\n                </FormControl>\n                <FormControl component='fieldset' className={classes.formControlFirst}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.create.type'\n                            defaultMessage='Type'\n                        />\n                    </FormLabel>\n                    <RadioGroup\n                        aria-label='Type'\n                        name='type'\n                        className={classes.group}\n                        value={type}\n                        onChange={this.changeType}\n                    >\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='HOWTO'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>help_outline</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.how.to'\n                                            defaultMessage='How To'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='SAMPLES'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>code</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.sample'\n                                            defaultMessage='Sample &amp; SDK'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='PUBLIC_FORUM'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>forum</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.public.forum'\n                                            defaultMessage='Public Forum'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='SUPPORT_FORUM'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>forum</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.Documents.CreateEditForm.document.create.type.support.' +\n                                                'forum'\n                                            }\n                                            defaultMessage='Support Forum'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='OTHER'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>video_label</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.other'\n                                            defaultMessage='Other'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                    </RadioGroup>\n                </FormControl>\n                {type === 'OTHER' && (\n                    <FormControl margin='normal' className={classes.FormControlOdd}>\n                        <TextField\n                            fullWidth\n                            label={\n                                <FormattedMessage\n                                    id={\n                                        'Apis.Details.Documents.CreateEditForm.document.create.type.other.document.' +\n                                        'category'\n                                    }\n                                    defaultMessage='Other Document Type *'\n                                />\n                            }\n                            helperText={\n                                <FormattedMessage\n                                    id={\n                                        'Apis.Details.Documents.CreateEditForm.document.create.type.other.document.' +\n                                        'category.helper.text'\n                                    }\n                                    defaultMessage='Provide the document type'\n                                />\n                            }\n                            type='text'\n                            name='otherTypeName'\n                            margin='normal'\n                            value={otherTypeName}\n                            variant='outlined'\n                            onChange={this.handleChange('otherTypeName')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </FormControl>\n                )}\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage id='Apis.Details.Documents.CreateEditForm.source' defaultMessage='Source' />\n                    </FormLabel>\n                    <RadioGroup\n                        aria-label='Source'\n                        name='sourceType'\n                        className={classes.group}\n                        value={sourceType}\n                        onChange={this.changeSource}\n                    >\n                        <FormControlLabel\n                            disabled={this.setDisable('INLINE')}\n                            value='INLINE'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.inline'\n                                    defaultMessage='Inline'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('MARKDOWN')}\n                            value='MARKDOWN'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.markdown'\n                                    defaultMessage='Markdown'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('URL')}\n                            value='URL'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url'\n                                    defaultMessage='URL'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('FILE')}\n                            value='FILE'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.file'\n                                    defaultMessage='File'\n                                />\n                            }\n                        />\n                    </RadioGroup>\n                </FormControl>\n                {sourceType === 'URL' && (\n                    <FormControl margin='normal' className={classes.FormControlOdd}>\n                        <TextField\n                            fullWidth\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    this.validate('url', value);\n                                },\n                                onKeyUp: ({ target: { value } }) => {\n                                    this.validate('url', value);\n                                },\n                            }}\n                            margin='normal'\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url.url'\n                                    defaultMessage='URL'\n                                />\n                            }\n                            helperText={this.getUrlHelperText()}\n                            type='text'\n                            name='sourceUrl'\n                            margin='normal'\n                            value={sourceUrl}\n                            onChange={this.handleChange('sourceUrl')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            error={invalidUrl || urlEmpty}\n                            variant='outlined'\n                        />\n                    </FormControl>\n                )}\n                {sourceType === 'FILE' && (\n                    <Dropzone\n                        multiple={false}\n                        accept='application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, text/plain'\n                        className={classes.dropzone}\n                        activeClassName={classes.acceptDrop}\n                        rejectClassName={classes.rejectDrop}\n                        onDrop={(dropFile) => {\n                            this.onDrop(dropFile);\n                        }}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div {...getRootProps()}>\n                                <input {...getInputProps()} />\n                                <div className={classes.dropZoneWrapper}>\n                                    <Icon className={classes.dropIcon} style={{ fontSize: 56 }}>\n                                        cloud_upload\n                                    </Icon>\n                                    {file && file.length > 0 && (\n                                        <div className={classes.uploadedFile}>\n                                            <Icon>file</Icon> {file[0].name}\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                    </Dropzone>\n                )}\n                {(sourceType === 'INLINE' || sourceType === 'MARKDOWN') && (\n                    <InlineMessage type='info' height={60}>\n                        <div className={classes.contentWrapper}>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.content.info'\n                                    defaultMessage={\n                                        'Please save the document. The content can be edited in the next ' + 'step.'\n                                    }\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                )}\n            </div>\n        );\n    }\n}\nCreateEditForm.defaultProps = {\n    apiId: null,\n    docId: null,\n};\nCreateEditForm.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}),\n    apiId: PropTypes.shape({}),\n    saveDisabled: PropTypes.bool.isRequired,\n    setSaveDisabled: PropTypes.func.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(CreateEditForm));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormattedMessage } from 'react-intl';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nfunction GoToEdit(props) {\n    const { doc } = props;\n    const [open, setOpen] = React.useState(true);\n    const { api, isAPIProduct } = useContext(APIContext);\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    let docContentEditPath = null;\n    if (doc && doc.body && doc.body.documentId) {\n        docContentEditPath = `/${urlPrefix}/${api.id}/documents/${doc.body.documentId}/edit-content`;\n    }\n\n    let displayAddContent;\n    if (doc.body.sourceType === 'INLINE'  || doc.body.sourceType === 'MARKDOWN') {\n        displayAddContent = true;\n    } else {\n        displayAddContent= false;\n    }\n\n    console.info('printing doc', doc);\n    function handleClose() {\n        setOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                {' '}\n                <FormattedMessage\n                    id='Apis.Details.Documents.GoToEdit.title'\n                    defaultMessage='Document Created Successfully'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {displayAddContent ? (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.GoToEdit.description.content'\n                        defaultMessage= 'You can add content to the document or go back to the document listing page.'\n                    />\n                    ) : (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.GoToEdit.description.file'\n                        defaultMessage= {'You can go back to the document listing page and upload' + \n                        ' the file by editing the document.'}\n                    />\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                {displayAddContent && (<Link\n                    to={{\n                        pathname: docContentEditPath,\n                        state: { doc: doc.body },\n                    }}\n                >\n                    <Button color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.GoToEdit.add.content'\n                            defaultMessage='Add Content'\n                        />\n                    </Button>\n                </Link>)}\n                <Link to={listingPath}>\n                    <Button color='primary' autoFocus>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.GoToEdit.back.to.listing'\n                            defaultMessage='Back to Listing'\n                        />\n                    </Button>\n                </Link>\n            </DialogActions>\n        </Dialog>\n    );\n}\nGoToEdit.propTypes = {\n    doc: PropTypes.shape({}).isRequired,\n};\nexport default GoToEdit;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef, useContext, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport CreateEditForm from './CreateEditForm';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport GoToEdit from './GoToEdit';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(3),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n});\n\nfunction Create(props) {\n    const { api, isAPIProduct } = useContext(APIContext);\n    const [newDoc, setNewDoc] = useState(null);\n    const [saveDisabled, setSaveDisabled] = useState(true);\n    const { classes, intl, history } = props;\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    const restAPI = api.apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n    let createEditForm = useRef(null);\n\n    const addDocument = (apiId) => {\n        const promiseWrapper = createEditForm.addDocument(apiId);\n        promiseWrapper.docPromise\n            .then((doc) => {\n                const { documentId, name } = doc.body;\n                if (promiseWrapper.file && documentId) {\n                    const filePromise = restAPI.addFileToDocument(apiId, documentId, promiseWrapper.file[0]);\n                    filePromise\n                        .then((doc) => {\n                            Alert.info(`${name} ${intl.formatMessage({\n                                id: 'Apis.Details.Documents.Create.successful.file.upload.message',\n                                defaultMessage: 'File uploaded successfully.',\n                            })}`);\n                            history.push(listingPath);\n                            props.getDocumentsList();\n                        })\n                        .catch((error) => {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.log(error);\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Details.Documents.Create.markdown.editor.upload.error',\n                                    defaultMessage: 'Error uploading the file',\n                                }));\n                            }\n                        });\n                } else {\n                    Alert.info(`${doc.body.name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Create.markdown.editor.success',\n                        defaultMessage: ' added successfully.',\n                    })}`);\n                    setNewDoc(doc);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.Create.markdown.editor.add.error',\n                        defaultMessage: 'Error adding the document',\n                    }));\n                }\n            });\n    };\n    return (\n        <React.Fragment>\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={listingPath} className={classes.titleLink}>\n                                    <Typography variant='h5' align='left' className={classes.mainTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.heading'\n                                            defaultMessage='Documents'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h5'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Create.title'\n                                        defaultMessage='Add New Document'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0}>\n                                <CreateEditForm\n                                    innerRef={(node) => {\n                                        createEditForm = node;\n                                    }}\n                                    apiType={api.apiType}\n                                    apiId={api.id}\n                                    saveDisabled={saveDisabled}\n                                    setSaveDisabled={setSaveDisabled}\n                                />\n                                <Divider />\n\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={() => addDocument(api.id)}\n                                        disabled={saveDisabled}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.markdown.editor.add.document.button'\n                                            defaultMessage='Add Document'\n                                        />\n                                    </Button>\n                                    <Button className={classes.button} onClick={() => history.push(listingPath)}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.markdown.editor.add.document.cancel.button'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {newDoc && <GoToEdit doc={newDoc} />}\n        </React.Fragment>\n    );\n}\n\nCreate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.func.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(Create)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useContext, Suspense, lazy } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"MDMonacoEditor\" */));\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"MDReactMarkdown\" */));\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    markdownViewWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nfunction MarkdownEditor(props) {\n    const { intl, showAtOnce, history } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n\n    const [open, setOpen] = useState(showAtOnce);\n    const [code, setCode] = useState(\n        intl.formatMessage({\n            id: 'documents.markdown.editor.default',\n            defaultMessage: '#Enter your markdown content',\n        }),\n    );\n    const toggleOpen = () => {\n        if (!open) updateDoc();\n        if (open && showAtOnce) {\n            const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n            const listingPath = `/${urlPrefix}/${api.id}/documents`;\n            history.push(listingPath);\n        }\n        setOpen(!open);\n    };\n    const updateCode = newCode => {\n        setCode(newCode);\n    };\n    const editorDidMount = (editor, monaco) => {\n        editor.focus();\n    };\n    const addContentToDoc = () => {\n        const restAPI = new Api();\n        const docPromise = restAPI.addInlineContentToDocument(api.id, props.docId, 'MARKDOWN', code);\n        docPromise\n            .then(doc => {\n                Alert.info(\n                    `${doc.name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.MarkdownEditor.update.success.message',\n                        defaultMessage: 'updated successfully.',\n                    })}`,\n                );\n                toggleOpen();\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n    const updateDoc = () => {\n        const restAPI = new Api();\n\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, props.docId);\n        docPromise\n            .then(doc => {\n                setCode(doc.text);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const { classes } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen}>\n                <Icon>code</Icon>\n                <FormattedMessage\n                    id=\"Apis.Details.Documents.MarkdownEditor.edit.content\"\n                    defaultMessage=\"Edit Content\"\n                />\n            </Button>\n            <Dialog fullScreen open={open} onClose={toggleOpen} TransitionComponent={Transition}>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color=\"inherit\" onClick={toggleOpen} aria-label=\"Close\">\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant=\"h4\" className={classes.docName}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.edit.content.of\"\n                            defaultMessage=\"Edit Content of\"\n                        />{' '}\n                        \"{props.docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant=\"contained\" color=\"primary\" onClick={addContentToDoc}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.update.content.button\"\n                            defaultMessage=\"Update Content\"\n                        />\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.cancel.button\"\n                            defaultMessage=\"Cancel\"\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <Grid container spacing={7}>\n                        <Grid item xs={6}>\n                            <Suspense fallback={<CircularProgress />}>\n                                <MonacoEditor\n                                    width=\"100%\"\n                                    height=\"100vh\"\n                                    language=\"markdown\"\n                                    theme=\"vs-dark\"\n                                    value={code}\n                                    options={{ selectOnLineNumbers: true }}\n                                    onChange={updateCode}\n                                    editorDidMount={editorDidMount}\n                                />\n                            </Suspense>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className={classes.markdownViewWrapper}>\n                                <Suspense fallback={<CircularProgress />}>\n                                    <ReactMarkdown source={code} />\n                                </Suspense>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nMarkdownEditor.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(MarkdownEditor)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {useState, useRef, useContext} from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CreateEditForm from './CreateEditForm';\nimport Api from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\nfunction Edit(props) {\n    const restAPI = new Api();\n\n    const { intl, apiType } = props;\n    const [open, setOpen] = useState(false);\n    const [saveDisabled, setSaveDisabled] = useState(false);\n    let createEditForm = useRef(null);\n    const { api } = useContext(APIContext);\n\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n\n    const updateDoc = () => {\n        const { apiId } = props;\n        const promiseWrapper = createEditForm.updateDocument(apiId);\n        promiseWrapper.docPromise\n            .then((doc) => {\n                const { documentId, name } = doc.body;\n                if (promiseWrapper.file && documentId) {\n                    const filePromise = restAPI.addFileToDocument(apiId, documentId, promiseWrapper.file[0]);\n                    filePromise\n                        .then((doc) => {\n                            Alert.info(`${name} ${intl.formatMessage({\n                                id: 'Apis.Details.Documents.Edit.markdown.editor.upload.success.message',\n                                defaultMessage: 'File uploaded successfully.',\n                            })}`);\n                            props.getDocumentsList();\n                            toggleOpen();\n                        })\n                        .catch((error) => {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.log(error);\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Details.Documents.Edit.markdown.editor.upload.error.message',\n                                    defaultMessage: 'Error uploading the file.',\n                                }));\n                            }\n                        });\n                } else {\n                    Alert.info(`${name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Edit.markdown.editor.update.success.message',\n                        defaultMessage: 'Updated successfully.',\n                    })}`);\n                    props.getDocumentsList();\n                    toggleOpen();\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.Edit.markdown.editor.update.error.message',\n                        defaultMessage: 'Error adding the document',\n                    }));\n                }\n            });\n    };\n\n    const { classes, docId, apiId } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen} disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}>\n                <Icon>edit</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Edit.documents.text.editor.edit'\n                    defaultMessage='Edit Meta Data'\n                />\n            </Button>\n            <Dialog open={open} onClose={toggleOpen} TransitionComponent={Transition} fullScreen>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color='inherit' onClick={toggleOpen} aria-label='Close'>\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant='h4' className={classes.docName}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.edit.content'\n                            defaultMessage='Edit '\n                        />\n                        \"{props.docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant='contained' color='primary' onClick={updateDoc} disabled={saveDisabled}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.update.content'\n                            defaultMessage='Save'\n                        />\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <CreateEditForm\n                        innerRef={(node) => {\n                            createEditForm = node;\n                        }}\n                        docId={docId}\n                        apiId={apiId}\n                        apiType={apiType}\n                        saveDisabled={saveDisabled}\n                        setSaveDisabled={setSaveDisabled}\n                    />\n                </div>\n            </Dialog>\n        </div>\n    );\n}\nEdit.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    getDocumentsList: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Edit));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nfunction Delete(props) {\n    const { intl } = props;\n    const [open, setOpen] = useState(false);\n    const { api } = useContext(APIContext);\n\n    const runAction = (action) => {\n        if (action === 'yes') {\n            deleteDoc();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteDoc = () => {\n        const {\n            apiId, docId, getDocumentsList, apiType,\n        } = props;\n        const restApi = apiType === API.CONSTS.APIProduct ? new APIProduct() : new API();\n        const docPromise = restApi.deleteDocument(apiId, docId);\n        docPromise\n            .then(() => {\n                Alert.info(`${intl.formatMessage({\n                    id: 'Apis.Details.Documents.Delete.document.delete.successfully',\n                    defaultMessage: 'deleted successfully.',\n                })}`);\n                setOpen(!open);\n                getDocumentsList();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const { apiName } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen} disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}>\n                <Icon>delete_forever</Icon>\n                <FormattedMessage id='Apis.Details.Documents.Delete.document.delete' defaultMessage='Delete' />\n            </Button>\n            <Dialog\n                open={open}\n                onClose={toggleOpen}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogTitle id='alert-dialog-title'>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm.title'\n                        defaultMessage='Delete Document'\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='alert-dialog-description'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.confirm.body'\n                            defaultMessage={\n                                'Selected document will be deleted from the API.' +\n                                'You will not be able to undo this action.'\n                            }\n                        />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => runAction('no')} color='default'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button onClick={() => runAction('yes')} color='primary' autoFocus>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.yes'\n                            defaultMessage='Yes. Delete'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\nDelete.propTypes = {\n    apiId: PropTypes.shape({}).isRequired,\n    apiType: PropTypes.string.isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    getDocumentsList: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(Delete);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\n\nfunction DeleteMultiple(props) {\n    const {\n        intl, docsToDelete, docs, getDocumentsList,\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n    const restApi = isAPIProduct ? new APIProduct() : new API();\n\n    const [open, setOpen] = useState(true);\n\n    const runAction = (action) => {\n        if (action === 'yes') {\n            deleteDocs();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteDocs = () => {\n        const docPromises = [];\n\n        docsToDelete.data.map((docIndexObj) => {\n            const doc = docs[docIndexObj.index];\n            docPromises.push(restApi.deleteDocument(api.id, doc.documentId));\n        });\n        Promise.all(docPromises)\n            .then((values) => {\n                console.log(values);\n                Alert.info(`${intl.formatMessage({\n                    id: 'Apis.Details.Documents.Delete.document.delete.successfully',\n                    defaultMessage: 'deleted successfully.',\n                })}`);\n                setOpen(!open);\n                getDocumentsList();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(`${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Delete.document.delete.error',\n                        defaultMessage: 'Error while deleting documents!',\n                    })}`);\n                }\n            });\n    };\n    useEffect(() => {\n        setOpen(true);\n    }, [docsToDelete]);\n\n    return (\n        <Dialog\n            open={open}\n            onClose={toggleOpen}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.listing.delete.confirm.title'\n                    defaultMessage='Delete Selected Documents'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    <strong>{api.name}</strong>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm.body'\n                        defaultMessage={\n                            'Selected documents will be deleted from the API.' +\n                            'You will not be able to undo this action.'\n                        }\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => runAction('no')} color='default'>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button onClick={() => runAction('yes')} color='primary' autoFocus>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.yes'\n                        defaultMessage='Delete'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nDeleteMultiple.propTypes = {\n    docs: PropTypes.instanceOf(Array).isRequired,\n    getDocumentsList: PropTypes.func.isRequired,\n    docsToDelete: PropTypes.instanceOf(Array).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(DeleteMultiple);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport Utils from 'AppData/Utils';\n\nfunction Download(props) {\n    const { intl } = props;\n\n    const { docId, apiId } = props;\n    const [isFileAvailable, setIsFileAvailable] = useState(false);\n    const [isSuccessful, setIsSuccessful] = useState(false);\n\n    useEffect(() => {\n        const api = new Api();\n        const promised_get_content = api.getFileForDocument(apiId, docId);\n        promised_get_content\n            .then((done) => {\n                setIsSuccessful(true);\n                setIsFileAvailable(true);\n            })\n            .catch((error) => {\n                setIsSuccessful(true);\n                setIsFileAvailable(false);\n            });\n    }, []);\n    const handleDownload = () => {\n        const api = new Api();\n        const promised_get_content = api.getFileForDocument(apiId, docId);\n        promised_get_content\n            .then((response) => {\n                Utils.forceDownload(response);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id:'Apis.Details.Documents.Download.documents.markdown.editor.download.error',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n\n    return (\n        isSuccessful &&\n        <Button onClick={handleDownload} disabled={!isFileAvailable}>\n            <Icon>arrow_downward</Icon>\n            <FormattedMessage\n                id='Apis.Details.Documents.Download.documents.listing.download'\n                defaultMessage='Download'\n            />\n        </Button>\n    );\n}\nDownload.propTypes = {\n    apiId: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(Download);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport Create from './Create';\nimport MarkdownEditor from './MarkdownEditor';\nimport Edit from './Edit';\nimport Delete from './Delete';\nimport DeleteMultiple from './DeleteMultiple';\nimport Download from './Download';\n\nconst TextEditor = lazy(() => import('./TextEditor' /* webpackChunkName: \"ListingTextEditor\" */));\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    mainTitle: {\n        paddingRight: 10,\n    },\n    actionTable: {\n        '& td': {\n            width: 50,\n        },\n        '& td:first-child': {\n            width: 130,\n        },\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n});\nfunction LinkGenerator(props) {\n    return props.apiType === 'APIProduct' ? (\n        <Link to={'/api-products/' + props.apiId + '/documents/' + props.docId + '/details'}>{props.docName}</Link>\n    ) : (\n        <Link to={'/apis/' + props.apiId + '/documents/' + props.docId + '/details'}>{props.docName}</Link>\n    );\n}\nclass Listing extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            docs: null,\n            showAddDocs: false,\n            docsToDelete: null,\n        };\n        this.apiId = props.api.id;\n        this.toggleAddDocs = this.toggleAddDocs.bind(this);\n        this.getDocumentsList = this.getDocumentsList.bind(this);\n    }\n    /**\n     * @inheritDoc\n     * @memberof Listing\n     */\n    componentDidMount() {\n        this.getDocumentsList();\n    }\n\n    /*\n     Get the document list attached to current API and set it to the state\n     */\n    getDocumentsList() {\n        const { api, intl } = this.props;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            const apiProduct = new APIProduct();\n            const docs = apiProduct.getDocuments(api.id);\n            docs.then((response) => {\n                this.setState({ docs: response.obj.list });\n            }).catch((errorResponse) => {\n                const errorData = JSON.parse(errorResponse.message);\n                const messageTxt =\n                    'Error[' + errorData.code + ']: ' + errorData.description + ' | ' + errorData.message + '.';\n                console.error(messageTxt);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Documents.Listing.documents.listing.fetching.error.message.api.product',\n                    defaultMessage: 'Error in fetching documents list of the API Product',\n                }));\n            });\n        } else {\n            const newApi = new API();\n            const docs = newApi.getDocuments(this.props.api.id);\n            docs.then((response) => {\n                this.setState({ docs: response.obj.list });\n            }).catch((errorResponse) => {\n                const errorData = JSON.parse(errorResponse.message);\n                const messageTxt =\n                    'Error[' + errorData.code + ']: ' + errorData.description + ' | ' + errorData.message + '.';\n                console.error(messageTxt);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Documents.Listing.documents.listing.fetching.error.message',\n                    defaultMessage: 'Error in fetching documents list of the API',\n                }));\n            });\n        }\n    }\n    toggleAddDocs() {\n        this.setState((oldState) => {\n            return { showAddDocs: !oldState.showAddDocs };\n        });\n    }\n    setFoo() {\n        this.setState({ foo: 'test' });\n    }\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const { docs, showAddDocs, docsToDelete } = this.state;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/documents/create`;\n        const showActionsColumn = isRestricted(['apim:api_publish', 'apim:api_create'], api) ? 'excluded' : true;\n        const options = {\n            title: false,\n            filter: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n            search: false,\n            onRowsDelete: (rowData, rowMeta, that = this) => {\n                that.setState({ docsToDelete: rowData });\n                return false;\n            },\n        };\n        const columns = [\n            {\n                name: 'documentId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const docName = tableMeta.rowData[1];\n                            const docId = tableMeta.rowData[0];\n                            return (\n                                <LinkGenerator\n                                    docName={docName}\n                                    docId={docId}\n                                    apiId={this.apiId}\n                                    apiType={api.apiType}\n                                />\n                            );\n                        }\n                        return null;\n                    },\n                    filter: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Listing.column.header.name'\n                            defaultMessage='name'\n                        />\n                    ),\n                },\n            },\n            {\n                name: 'sourceType',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Listing.column.header.source.type'\n                        defaultMessage='sourceType'\n                    />\n                ),\n            },\n            {\n                name: 'type',\n                label: (\n                    <FormattedMessage id='Apis.Details.Documents.Listing.column.header.type' defaultMessage='type' />\n                ),\n            },\n            {\n                name: 'sourceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'action',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Listing.column.header.action'\n                        defaultMessage='action'\n                    />\n                ),\n                options: {\n                    display: showActionsColumn,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const docName = tableMeta.rowData[1];\n                            const docId = tableMeta.rowData[0];\n                            const sourceType = tableMeta.rowData[2];\n                            const sourceUrl = tableMeta.rowData[4];\n                            if (sourceType === 'MARKDOWN') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <MarkdownEditor docName={docName} docId={docId} apiId={this.apiId} />\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'INLINE') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <Suspense\n                                                    fallback={\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Documents.Listing.loading'\n                                                            defaultMessage='Loading...'\n                                                        />\n                                                    }\n                                                >\n                                                    <TextEditor\n                                                        docName={docName}\n                                                        docId={docId}\n                                                        apiId={this.apiId}\n                                                        apiType={api.apiType}\n                                                    />\n                                                </Suspense>\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'URL') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <a href={sourceUrl}>\n                                                <Button>\n                                                    <Icon>open_in_new</Icon>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Documents.Listing.documents.open'\n                                                        defaultMessage='Open'\n                                                    />\n                                                </Button>\n                                               </a>  \n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'FILE') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <Download docId={docId} apiId={this.apiId} />\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else {\n                                return <span />;\n                            }\n                        }\n                        return null;\n                    },\n                    filter: false,\n                },\n            },\n        ];\n\n        return (\n            <React.Fragment>\n                {docsToDelete && (\n                    <DeleteMultiple getDocumentsList={this.getDocumentsList} docsToDelete={docsToDelete} docs={docs} />\n                )}\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Listing.documents.listing.title'\n                            defaultMessage='Documents'\n                        />\n                    </Typography>\n                    {docs && docs.length > 0 && (\n                        <ScopeValidation\n                            resourcePath={isAPIProduct ? resourcePath.API_PRODUCTS : resourcePath.API_CHANGE_LC}\n                            resourceMethod={resourceMethod.POST}\n                        >\n                            <Link to={!isRestricted(['apim:api_create', 'apim:api_publish'], api) && url}>\n                                <Button\n                                    size='small'\n                                    className={classes.button}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                >\n                                    <AddCircle className={classes.buttonIcon} />\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.add.new.document.button'\n                                        defaultMessage='Add New Document'\n                                    />\n                                </Button>\n                            </Link>\n                        </ScopeValidation>\n                    )}\n                </div>\n                <div>\n                    {showAddDocs && (\n                        <Create\n                            toggleAddDocs={this.toggleAddDocs}\n                            getDocumentsList={this.getDocumentsList}\n                            apiType={api.apiType}\n                        />\n                    )}\n\n                    {docs && docs.length > 0 ? (\n                        <MUIDataTable title='' data={docs} columns={columns} options={options} />\n                    ) : (\n                        <InlineMessage type='info' height={140}>\n                            <div className={classes.contentWrapper}>\n                                <Typography variant='h5' component='h3' className={classes.head}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.add.new.msg.title'\n                                        defaultMessage='Create Documents'\n                                    />\n                                </Typography>\n                                {api.apiType === API.CONSTS.APIProduct\n                                    ? \n                                <Typography component='p' className={classes.content}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.APIProduct.add.new.msg.content'\n                                        defaultMessage={\n                                            'You can add different types of documents to an API.' +\n                                            ' Proper documentation helps API publishers to market their ' +\n                                            ' APIs better and sustain competition. '\n                                        }\n                                    />\n                                </Typography>\n                                    : \n                                <Typography component='p' className={classes.content}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.add.new.msg.content'\n                                        defaultMessage={\n                                            'You can add different types of documents to an API.' +\n                                            ' Proper documentation helps API publishers to market their ' +\n                                            ' APIs better and sustain competition. '\n                                        }\n                                    />\n                                </Typography>\n                                }\n                                <div className={classes.actions}>\n                                    <Link to={!isRestricted(['apim:api_create', 'apim:api_publish'], api) && url}>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            className={classes.button}\n                                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.Documents.Listing.add.new.msg.button'\n                                                defaultMessage='Add New Document'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </div>\n                        </InlineMessage>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(withAPI(withStyles(styles)(Listing)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext, Suspense, lazy } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport ReactSafeHtml from 'react-safe-html';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TableRow from '@material-ui/core/TableRow';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Utils from 'AppData/Utils';\n\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"ViewReactMD\" */));\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n    },\n    docTitle: {\n        fontWeight: 100,\n        fontSize: 50,\n        color: theme.palette.grey[500],\n    },\n    docBadge: {\n        padding: theme.spacing(1),\n        background: theme.palette.primary.main,\n        position: 'absolute',\n        top: 0,\n        marginTop: -22,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    button: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    displayURL: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: theme.palette.getContrastText(theme.palette.grey[200]),\n        display: 'flex',\n    },\n    displayURLLink: {\n        paddingLeft: theme.spacing(2),\n    },\n    paper: {\n        marginTop: 20,\n        padding: theme.spacing(2),\n        height: '100%',\n    },\n    leftCell: {\n        width: 150,\n    },\n});\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction View(props) {\n    const {\n        classes,\n        fullScreen,\n        intl,\n        match: {\n            params: { documentId },\n        },\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n\n    const [code, setCode] = useState('');\n    const [doc, setDoc] = useState(null);\n    const restAPI = isAPIProduct ? new APIProduct() : new API();\n\n    useEffect(() => {\n        const docPromise = restAPI.getDocument(api.id, documentId);\n        docPromise\n            .then(doc => {\n                const { body } = doc;\n                setDoc(body);\n                if (body.sourceType === 'MARKDOWN' || body.sourceType === 'INLINE') loadContentForDoc();\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, [documentId]);\n\n    const loadContentForDoc = () => {\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, documentId);\n        docPromise\n            .then(doc => {\n                setCode(doc.text);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n\n    const handleDownload = () => {\n        const promised_get_content = restAPI.getFileForDocument(api.id, documentId);\n        promised_get_content\n            .then(response => {\n                Utils.forceDownload(response);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(\n                        intl.formatMessage({\n                            id: 'Apis.Details.Documents.View.error.downloading',\n                            defaultMessage: 'Error downloading the file',\n                        }),\n                    );\n                }\n            });\n    };\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    return (\n        doc && (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Link to={listingPath} className={classes.titleLink}>\n                            <Typography variant=\"h5\" align=\"left\" className={classes.mainTitle}>\n                                <FormattedMessage id=\"Apis.Details.Documents.View.heading\" defaultMessage=\"Documents\" />\n                            </Typography>\n                        </Link>\n                        <Icon>keyboard_arrow_right</Icon>\n                        <Typography variant=\"h5\">{doc.name}</Typography>\n                    </div>\n                    <Paper className={classes.paper}>\n                        <Table className={classes.table}>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell className={classes.leftCell}>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.name\"\n                                                defaultMessage=\"Name\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">{doc.name}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.summary\"\n                                                defaultMessage=\"Summary\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">{doc.summary}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.catogery\"\n                                                defaultMessage=\"Categorized as\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            {doc.type === 'OTHER' ? doc.otherTypeName : doc.type}\n                                        </Typography>{' '}\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.source\"\n                                                defaultMessage=\"Source Type\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">{doc.sourceType}</Typography>{' '}\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Paper>\n\n                    <Paper className={classes.paper}>\n                        {doc.sourceType === 'MARKDOWN' && (\n                            <Suspense fallback={<CircularProgress />}>\n                                <ReactMarkdown source={code} />\n                            </Suspense>\n                        )}\n                        {doc.sourceType === 'INLINE' && <ReactSafeHtml html={code} />}\n                        {doc.sourceType === 'URL' && (\n                            <a className={classes.displayURL} href={doc.sourceUrl} target=\"_blank\">\n                                {doc.sourceUrl}\n                                <Icon className={classes.displayURLLink}>open_in_new</Icon>\n                            </a>\n                        )}\n                        {doc.sourceType === 'FILE' && (\n                            <Button\n                                variant=\"contained\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={handleDownload}\n                            >\n                                <FormattedMessage\n                                    id=\"Apis.Details.Documents.View.btn.download\"\n                                    defaultMessage=\"Download\"\n                                />\n\n                                <Icon>arrow_downward</Icon>\n                            </Button>\n                        )}\n                    </Paper>\n                </div>\n            </React.Fragment>\n        )\n    );\n}\n\nView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    fullScreen: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(View));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState, Suspense, lazy } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport isEmpty from 'lodash.isempty';\nimport MarkdownEditor from './MarkdownEditor';\nimport { FormattedMessage } from 'react-intl';\n\nconst TextEditor = lazy(() => import('./TextEditor' /* webpackChunkName: \"EditContentTextEditor\" */));\n\nfunction EditContent(props) {\n    const [doc, setDoc] = useState(null);\n    const {\n        history: {\n            location: { state, pathname },\n            replace,\n        },\n    } = props;\n    useEffect(() => {\n        // Check if we want to show the add content screen in the case of coming from GoToEdit.jsx with history -> state props\n\n        if (!isEmpty(state)) {\n            const { doc } = state;\n            if (doc) {\n                setDoc(doc);\n            }\n        }\n    }, []);\n    return (\n        <React.Fragment>\n            {doc && doc.sourceType === 'MARKDOWN' && (\n                <MarkdownEditor docName={doc.name} docId={doc.documentId} showAtOnce />\n            )}\n            {doc && doc.sourceType === 'INLINE' && (\n                <Suspense\n                    fallback={\n                        <FormattedMessage id='Apis.Details.Documents.EditContent.loading' defaultMessage='Loading...' />\n                    }\n                >\n                    <TextEditor docName={doc.name} docId={doc.documentId} showAtOnce />\n                </Suspense>\n            )}\n        </React.Fragment>\n    );\n}\nexport default withRouter(EditContent);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Listing from './Listing';\nimport View from './View';\nimport Edit from './Edit';\nimport EditContent from './EditContent';\nimport DocCreate from './Create';\n\nconst Documents = (props) => {\n    const { isAPIProduct } = useContext(APIContext);\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    return (\n        <div>\n            <Switch>\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents'} component={Listing} />} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/details'} component={View} />} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/edit'} component={Edit} />} />\n                <Route\n                    exact\n                    path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/edit-content'}\n                    component={EditContent}\n                />\n                } />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/create'} component={DocCreate} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </div>\n    );\n};\n\nDocuments.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default Documents;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst RateLimitingLevels = {\n    API: 'api',\n    RESOURCE: 'resource',\n};\n\n/**\n *\n * Handles the resource level and API level throttling UI switch\n * @export\n * @param {*} props\n * @returns\n */\nfunction APIRateLimiting(props) {\n    const {\n        updateAPI, operationRateLimits, onChange, value: currentApiThrottlingPolicy, isAPIProduct,\n    } = props;\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(currentApiThrottlingPolicy);\n    const [isSaving, setIsSaving] = useState(false);\n\n    const isResourceLevel = apiThrottlingPolicy === null;\n    const rateLimitingLevel = isResourceLevel ? RateLimitingLevels.RESOURCE : RateLimitingLevels.API;\n    const [apiFromContext] = useAPI();\n\n    // Following effect is used to handle the controlled component case, If user provide onChange handler to\n    // control this component, Then we accept the props as the valid input and update the current state value from props\n    useEffect(() => {\n        if (onChange) {\n            if (currentApiThrottlingPolicy === '' && apiFromContext.apiThrottlingPolicy) {\n                setApiThrottlingPolicy(apiFromContext.apiThrottlingPolicy);\n            } else {\n                setApiThrottlingPolicy(currentApiThrottlingPolicy);\n            }\n        }\n    }, [onChange, currentApiThrottlingPolicy]); // Do not expect to change the onChange during the runtime\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function updateRateLimitingPolicy(event) {\n        // If the selected option is resource, we set the api level rate limiting to null\n        const userSelection = event.target.value === RateLimitingLevels.RESOURCE\n            ? null : '';\n        if (onChange) {\n            // Assumed controlled component\n            onChange(userSelection);\n        } else {\n            setApiThrottlingPolicy(userSelection);\n        }\n    }\n    /**\n     *\n     *\n     */\n    function saveChanges() {\n        setIsSaving(true);\n        updateAPI({ apiThrottlingPolicy }).finally(() => setIsSaving(false));\n    }\n\n    /**\n     *\n     *\n     */\n    function resetChanges() {\n        setApiThrottlingPolicy(currentApiThrottlingPolicy);\n    }\n\n    let operationRateLimitMessage = (\n        <Typography variant='body1' gutterBottom>\n            You may change the rate limiting policies per operation\n            <Typography variant='caption' display='block' gutterBottom>\n                Expand an operation below to select a rate limiting policy for an operation\n            </Typography>\n        </Typography>\n    );\n    if (isAPIProduct) {\n        operationRateLimitMessage = (\n            <Typography variant='body1' gutterBottom>\n                Rate limiting polices of the source operation will be applied\n                <Typography variant='caption' display='block' gutterBottom>\n                    Rate limiting policy of an individual operation will be govern by the policy specified in the source\n                    operation\n                </Typography>\n            </Typography>\n        );\n    }\n    return (\n        <Paper>\n            <Grid container direction='row' spacing={3} justify='flex-start' alignItems='flex-start'>\n                <Grid item md={12} xs={12}>\n                    <Box ml={1}>\n                        <Typography variant='subtitle1' gutterBottom>\n                            Operations Configuration\n                            <Tooltip\n                                fontSize='small'\n                                title='Configurations that affects on all the resources'\n                                aria-label='common configurations'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline />\n                            </Tooltip>\n                        </Typography>\n                    </Box>\n                    <Divider light variant='middle' />\n                </Grid>\n                <Grid item md={1} xs={1} />\n                <Grid item md={5} xs={11}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>Rate limiting level</FormLabel>\n                        <RadioGroup\n                            aria-label='Apply rate limiting in'\n                            value={rateLimitingLevel}\n                            onChange={updateRateLimitingPolicy}\n                            row\n                        >\n                            <FormControlLabel\n                                value={RateLimitingLevels.API}\n                                control={(\n                                    <Radio\n                                        color='primary'\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    />\n                                )}\n                                label='API Level'\n                                labelPlacement='end'\n                            />\n                            <FormControlLabel\n                                value={RateLimitingLevels.RESOURCE}\n                                control={(\n                                    <Radio\n                                        color='primary'\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    />\n                                )}\n                                label='Operation Level'\n                                labelPlacement='end'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Box minHeight={70} borderLeft={1} pl={10}>\n                        {isResourceLevel ? (\n                            operationRateLimitMessage\n                        ) : (\n                            <TextField\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                id='operation_throttling_policy'\n                                select\n                                label='Rate limiting policies'\n                                value={apiThrottlingPolicy}\n                                onChange={({ target: { value } }) => (\n                                    onChange ? onChange(value) : setApiThrottlingPolicy(value))}\n                                helperText='Selected rate limiting policy will be applied to whole API'\n                                margin='dense'\n                                variant='outlined'\n                            >\n                                {operationRateLimits.map((rateLimit) => (\n                                    <MenuItem key={rateLimit.name} value={rateLimit.name}>\n                                        {rateLimit.displayName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        )}\n                    </Box>\n                </Grid>\n                {/* If onChange handler is provided we assume that component is getting controlled by its parent\n                so that, hide the save cancel action */}\n                {!onChange && (\n                    <>\n                        <Grid item md={12}>\n                            <Divider />\n                        </Grid>\n                        <Grid item>\n                            <Box ml={1}>\n                                <Button\n                                    onClick={saveChanges}\n                                    disabled={false}\n                                    variant='outlined'\n                                    size='small'\n                                    color='primary'\n                                >\n                                    Save\n                                    {isSaving && <CircularProgress size={24} />}\n                                </Button>\n                                <Box display='inline' ml={1}>\n                                    <Button size='small' onClick={resetChanges}>\n                                        Reset\n                                    </Button>\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </Paper>\n    );\n}\nAPIRateLimiting.defaultProps = {\n    onChange: null,\n    isAPIProduct: false,\n};\nAPIRateLimiting.propTypes = {\n    updateAPI: PropTypes.func.isRequired,\n    onChange: PropTypes.oneOf([null, PropTypes.func]),\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    disabledAction: PropTypes.shape({}).isRequired,\n    value: PropTypes.string.isRequired,\n    isAPIProduct: PropTypes.bool,\n};\n\nexport default React.memo(APIRateLimiting);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { injectIntl } from 'react-intl';\nimport { Typography } from '@material-ui/core';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(),\n        marginRight: theme.spacing(),\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 20,\n    },\n    scopes: {\n        width: 400,\n    },\n    dropDown: {\n        width: theme.spacing(11.25),\n    },\n    divider: {\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    chip: {\n        margin: theme.spacing(),\n        color: theme.palette.text.secondary,\n        minWidth: 100,\n    },\n    chipActive: {\n        margin: theme.spacing(),\n        color: theme.palette.text.secondary,\n        background: theme.palette.background.active,\n        minWidth: 100,\n        borderRadius: theme.shape.borderRadius,\n    },\n    paper: {\n        padding: 20,\n    },\n    link: {\n        cursor: 'pointer',\n    },\n    listItem: {\n        paddingLeft: 0,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    formControl: {\n        paddingRight: 0,\n        marginRight: 0,\n    },\n    resourceRoot: {\n        background: theme.palette.grey['100'],\n        paddingLeft: theme.spacing(),\n        paddingRight: theme.spacing(),\n        borderRadius: theme.shape.borderRadius,\n        marginBottom: theme.spacing(),\n    },\n    deleteButton: {\n        marginLeft: 'auto',\n    },\n    pathDisplay: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n    },\n    descriptionWrapper: {\n        paddingTop: theme.spacing(),\n        paddingBottom: theme.spacing(),\n    },\n    scopeSelect: {\n        width: '100%',\n    },\n    descriptionWrapperUp: {\n        paddingBottom: '0 !important',\n    },\n    addParamRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    propsForm: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    deleteLink: {\n        cursor: 'pointer',\n    },\n    row: {\n        '& td': {\n            borderBottom: 'none',\n            verticalAlign: 'bottom',\n            width: '33%',\n            paddingLeft: 0,\n        },\n    },\n});\n\n/**\n *\n */\nclass Operation extends React.Component {\n    /**\n     *\n     * @param {any} props @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSecurity: false,\n        };\n        this.handleScopeChange = this.handleScopeChange.bind(this);\n        this.handlePolicyChange = this.handlePolicyChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /**\n     *\n     * @param {*} e event triggered for handle  Scope Change\n     */\n    handleScopeChange(e) {\n        const { operation } = this.props;\n        const newoperation = {\n            ...operation,\n            scopes: [...operation.scopes],\n        };\n        const scope = (e.target.value === 'none' ? '' : e.target.value);\n        newoperation.scopes = [scope];\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     *\n     * @param {*} e event triggered for handle  policy Change\n     */\n    handlePolicyChange(e) {\n        const { operation } = this.props;\n        const newoperation = { ...operation };\n        newoperation.throttlingPolicy = e.target.value;\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     * @param {*} event event triggered for handle  policy Change\n     */\n    handleChange(event) {\n        const { operation } = this.props;\n        const newoperation = { ...operation };\n        const { checked } = event.target;\n        if (checked) {\n            newoperation.authType = 'Any';\n        } else {\n            newoperation.authType = 'None';\n        }\n        this.setState({\n            isSecurity: checked,\n        });\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            operation, theme, classes, apiPolicies, scopes, isOperationRateLimiting,\n        } = this.props;\n        const noneScope = { name: 'none', description: '', bindings: null };\n        const dropdownScopes = [...scopes, noneScope];\n        const { isSecurity } = this.state;\n        let chipColor = theme.custom.operationChipColor\n            ? theme.custom.operationChipColor[operation.verb.toLowerCase()]\n            : null;\n        let chipTextColor = '#000000';\n        if (!chipColor) {\n            console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n            chipColor = '#cccccc';\n        } else {\n            chipTextColor = theme.palette.getContrastText(\n                theme.custom.operationChipColor[operation.verb.toLowerCase()],\n            );\n        }\n        return (\n            <TableRow style={{ borderStyle: 'hidden' }}>\n                <TableCell>\n                    <Typography variant='body1'>\n                        {operation.target}\n                    </Typography>\n                </TableCell>\n                <TableCell>\n                    <Chip\n                        label={operation.verb}\n                        style={{\n                            backgroundColor: chipColor, color: chipTextColor, height: 20, width: 40, fontSize: 9,\n                        }}\n                        className={classes.chipActive}\n                    />\n                </TableCell>\n                <TableCell>\n                    <Select\n                        className={classes.dropDown}\n                        value={isOperationRateLimiting ? operation.throttlingPolicy : ''}\n                        disabled={!isOperationRateLimiting}\n                        onChange={this.handlePolicyChange}\n                        fieldName='Throttling Policy'\n                    >\n                        {apiPolicies.map((policy) => (\n                            <MenuItem\n                                key={policy.name}\n                                value={policy.name}\n                            >\n                                {policy.displayName}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </TableCell>\n                <TableCell>\n                    <Select\n                        className={classes.dropDown}\n                        value={operation.scopes.length === 0 ? ['none'] : operation.scopes}\n                        onChange={this.handleScopeChange}\n                        inputProps={{\n                            name: 'scopes',\n                            id: 'age-simple',\n                        }}\n                    >\n                        {dropdownScopes.map((tempScope) => (\n                            <MenuItem\n                                key={tempScope.name}\n                                value={tempScope.name}\n                            >\n                                {tempScope.name}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </TableCell>\n                <TableCell>\n                    <Switch\n                        checked={(() => {\n                            if (operation.authType === 'None') {\n                                return false;\n                            }\n                            return true;\n                        })()}\n                        onChange={this.handleChange}\n                        value={isSecurity}\n                        color='primary'\n                    />\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nOperation.propTypes = {\n    classes: PropTypes.shape({\n    }).isRequired,\n    operation: PropTypes.shape({\n        target: PropTypes.string,\n        verb: PropTypes.string,\n        throttlingPolicy: PropTypes.string,\n        auth: PropTypes.string,\n    }).isRequired,\n    apiPolicies: PropTypes.shape({\n    }).isRequired,\n    isOperationRateLimiting: PropTypes.shape({\n    }).isRequired,\n    scopes: PropTypes.shape({\n    }).isRequired,\n    handleUpdateList: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Operation));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport APIRateLimiting from '../Resources/components/APIRateLimiting';\nimport Operation from './Operation';\n\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    scopes: {\n        width: 400,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonMain: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        marginRight: theme.spacing(1),\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    addResource: {\n        width: 600,\n        marginTop: 0,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n});\n\n/**\n * This class defined for operation List\n */\nclass Operations extends React.Component {\n    /**\n     *\n     * @param {*} props the props parameters\n     */\n    constructor(props) {\n        super(props);\n        const { api } = props;\n        this.state = {\n            notFound: false,\n            apiPolicies: [],\n            operations: api.operations,\n            apiThrottlingPolicy: api.apiThrottlingPolicy,\n            filterKeyWord: '',\n            isSaving: false,\n        };\n\n        this.newApi = new Api();\n        this.handleUpdateList = this.handleUpdateList.bind(this);\n        this.handleApiThrottlePolicy = this.handleApiThrottlePolicy.bind(this);\n        this.updateOperations = this.updateOperations.bind(this);\n    }\n\n    /**\n     *\n     */\n    componentDidMount() {\n        const promisedResPolicies = Api.policies('api');\n        promisedResPolicies\n            .then((policies) => {\n                this.setState({ apiPolicies: policies.obj.list });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n    /**\n     *\n     * @param {*} event\n     */\n    setFilterByKeyWord(event) {\n        this.setState({ filterKeyWord: event.target.value.toLowerCase() });\n    }\n\n    /**\n     *\n     *\n     * @param {*} throttlePolicy\n     * @memberof Operations\n     */\n    handleApiThrottlePolicy(apiThrottlingPolicy) {\n        this.setState({ apiThrottlingPolicy });\n    }\n\n    /**\n     *\n     * @param {*} newOperation\n     */\n    handleUpdateList(newOperation) {\n        const { operations } = this.state;\n        const updatedList = operations.map(\n            (operation) => ((operation.target === newOperation.target && operation.verb === newOperation.verb)\n                ? newOperation : operation),\n        );\n        this.setState({ operations: updatedList });\n    }\n\n    /**\n     *\n     */\n    updateOperations() {\n        const { operations, apiThrottlingPolicy } = this.state;\n        const { updateAPI } = this.props;\n        this.setState({ isSaving: true });\n        updateAPI({ operations, apiThrottlingPolicy }).finally(() => this.setState({ isSaving: false }));\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { api, resourceNotFoundMessage } = this.props;\n        const {\n            operations, apiPolicies, apiThrottlingPolicy, isSaving, filterKeyWord, notFound,\n        } = this.state;\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFoundMessage} />;\n        }\n        if (!operations && apiPolicies.length === 0) {\n            return <Progress />;\n        }\n        const { classes } = this.props;\n        return (\n            <>\n                <Box pb={3}>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Operations.Operations.title'\n                            defaultMessage='Operations'\n                        />\n                    </Typography>\n                </Box>\n\n                <Grid container spacing={2}>\n                    <Grid item md={12}>\n                        <APIRateLimiting\n                            operationRateLimits={apiPolicies}\n                            api={api}\n                            value={apiThrottlingPolicy}\n                            onChange={this.handleApiThrottlePolicy}\n                        />\n                    </Grid>\n                    <Grid item md={2}>\n                        <Box mt={4} pb={2}>\n                            <div className={classes.searchWrapper}>\n                                <TextField\n                                    id='outlined-full-width'\n                                    label='Operation'\n                                    placeholder='Filter Operations'\n                                    onChange={(e) => this.setFilterByKeyWord(e, api.operations)}\n                                    fullWidth\n                                    variant='outlined'\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </div>\n                        </Box>\n                    </Grid>\n                    <Grid item md={12}>\n                        <Table>\n                            <TableRow>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.operation.operationName'\n                                            defaultMessage='Operation'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.OperationType'\n                                            defaultMessage='Operation Type'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.throttling.policy'\n                                            defaultMessage='Rate Limiting'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.scopes'\n                                            defaultMessage='Scope'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.authType'\n                                            defaultMessage='Security Enabled'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                            {operations.filter(\n                                (operation) => operation.target.toLowerCase().includes(filterKeyWord),\n                            ).map((item) => {\n                                return (\n                                    <Operation\n                                        operation={item}\n                                        handleUpdateList={this.handleUpdateList}\n                                        scopes={api.scopes}\n                                        isOperationRateLimiting={!apiThrottlingPolicy}\n                                        apiPolicies={apiPolicies}\n                                    />\n                                );\n                            })}\n                        </Table>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            disabled={isSaving}\n                            className={classes.buttonMain}\n                            onClick={this.updateOperations}\n                        >\n                            {isSaving && <CircularProgress size={20} />}\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.save'\n                                defaultMessage='Save'\n                            />\n                        </Button>\n                        <Link to={'/apis/' + api.id + '/overview'}>\n                            <Button>\n                                <FormattedMessage\n                                    id='Apis.Details.Operations.Operation.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Button>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nOperations.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        operations: PropTypes.array,\n        scopes: PropTypes.array,\n        updateOperations: PropTypes.func,\n        policies: PropTypes.func,\n        id: PropTypes.string,\n    }).isRequired,\n    resourceNotFoundMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Operations));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n/**\n *\n * Renders the operation summary and description sections\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DescriptionAndSummary(props) {\n    const {\n        operation, operationsDispatcher, disableUpdate, target, verb,\n    } = props;\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Summary\n                    {' '}\n                    {'&'}\n                    {' '}\nDescription\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={5}>\n                <TextField\n                    margin='dense'\n                    fullWidth\n                    label='Description'\n                    multiline\n                    disabled={disableUpdate}\n                    rows='4'\n                    value={operation.description}\n                    variant='outlined'\n                    onChange={\n                        ({ target: { value } }) => operationsDispatcher(\n                            { action: 'description', data: { target, verb, value } },\n                        )\n                    }\n                />\n            </Grid>\n            <Grid item md={5}>\n                <TextField\n                    id='operation_summary'\n                    label='Summary'\n                    margin='dense'\n                    variant='outlined'\n                    fullWidth\n                    disabled={disableUpdate}\n                    multiline\n                    rows='4'\n                    value={operation.summary}\n                    onChange={({ target: { value } }) => operationsDispatcher(\n                        { action: 'summary', data: { target, verb, value } },\n                    )}\n                />\n            </Grid>\n            <Grid item md={1} />\n        </>\n    );\n}\n\nDescriptionAndSummary.propTypes = {\n    disableUpdate: PropTypes.bool,\n    operation: PropTypes.shape({\n        target: PropTypes.string.isRequired,\n        verb: PropTypes.string.isRequired,\n        spec: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n};\n\nDescriptionAndSummary.defaultProps = {\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst VERSIONS = {\n    V3: ['3.0.0', '3.0.1', '3.0.2'],\n    V2: ['2.0'],\n};\n/**\n *\n *\n * @param {*} apiProduct\n */\nfunction getAPIProductTaggedOperations(apiProduct, openAPI) {\n    const taggedOperations = { Default: [] };\n    apiProduct.apis.map((apiOperations) => {\n        return apiOperations.operations.map((operation) => {\n            const { target, verb } = operation;\n            // TODO: WARN! `toLowerCase` could cause a case sensitive issues\n            // in `verb` if definition has mixed case verbs\n            const openAPIOperation = openAPI.paths[target] && openAPI.paths[target][verb.toLowerCase()];\n            if (!openAPIOperation) {\n                console.warn(`Could not find target = ${target} `\n                        + `verb (lower cased) = ${verb.toLowerCase()} operation in OpenAPI definition`);\n                // Skipping not found operations\n                return null;\n            }\n            const operationInfo = { spec: openAPIOperation, ...operation };\n\n            if (!taggedOperations[apiOperations.name]) {\n                taggedOperations[apiOperations.name] = [];\n            }\n            taggedOperations[apiOperations.name].push(operationInfo);\n            return operationInfo;\n        });\n    });\n    return taggedOperations;\n}\n\n/**\n *\n *\n */\nfunction getTaggedOperations(api, openAPI) {\n    const taggedOperations = { Default: [] };\n    if (api.isAPIProduct()) {\n        return getAPIProductTaggedOperations(api, openAPI);\n    } else {\n        api.operations.map((apiOperation) => {\n            const { target, verb } = apiOperation;\n            // TODO: WARN! `toLowerCase` could cause a case sensitive\n            // issues in `verb` if definition has mixed case verbs\n            const openAPIOperation = openAPI.paths[target] && openAPI.paths[target][verb.toLowerCase()];\n            if (!openAPIOperation) {\n                console.warn(`Could not find target = ${target} `\n                        + `verb (lower cased) = ${verb.toLowerCase()} operation in OpenAPI definition`);\n                // Skipping not found operations\n                return null;\n            }\n            const operationInfo = { spec: openAPIOperation, ...apiOperation };\n            if (openAPIOperation.tags) {\n                openAPIOperation.tags.map((tag) => {\n                    if (!taggedOperations[tag]) {\n                        taggedOperations[tag] = [];\n                    }\n                    taggedOperations[tag].push(operationInfo);\n                    return operationInfo; // Just to satisfy an es-lint rule or could use `for ... of ...`\n                });\n            } else {\n                taggedOperations.Default.push(operationInfo);\n            }\n            return operationInfo; // Just to satisfy an es-lint rule or could use `for ... of ...`\n        });\n        return taggedOperations;\n    }\n}\n\n/**\n * Return the definition version given the parsed spec object\n *\n * @param {SwaggerObject} spec\n * @returns {String} version\n */\nfunction getVersion(spec) {\n    return spec.openapi || spec.swagger;\n}\n/**\n *Extract the path parameters from URI template. User has to give the Open API spec version as well\n * https://github.com/OAI/OpenAPI-Specification/tree/master/versions\n * @param {String} target URI template\n * @param {String} openAPIVersion Should be a valid Open API specification version (i:e \"2.0\", \"3.0.0\")\n * @returns {Array} List of parameter objects according to the given spec version\n */\nfunction extractPathParameters(target, spec) {\n    const regEx = /[^{}]+(?=})/g;\n    const params = target.match(regEx) || [];\n    let parameters = [];\n    const openAPIVersion = getVersion(spec);\n    if (VERSIONS.V3.includes(openAPIVersion)) {\n        parameters = params.map((para) => {\n            const paraObj = {};\n            paraObj.name = para;\n            paraObj.in = 'path';\n            paraObj.required = true;\n            paraObj.schema = {\n                type: 'string',\n                format: 'string',\n            };\n            return paraObj;\n        });\n    } else if (VERSIONS.V2.includes(openAPIVersion)) {\n        parameters = params.map((para) => {\n            const paraObj = {};\n            paraObj.name = para;\n            paraObj.in = 'path';\n            paraObj.required = true;\n            paraObj.type = 'string';\n            paraObj.format = 'string';\n            return paraObj;\n        });\n    }\n\n    return parameters;\n}\n\n/**\n *\n * Return the WSO2 specific scopes array (currently only use the first element of the array)\n * @param {*} operation\n * @param {*} openAPIVersion\n * @returns {Array} Scopes of the `default` security scheme\n */\nfunction getOperationScopes(operation, spec) {\n    const openAPIVersion = getVersion(spec);\n    let scopes = [];\n    if (VERSIONS.V3.includes(openAPIVersion)) {\n        if (Array.isArray(operation.security) && operation.security.find((item) => item.default)) {\n            scopes = operation.security.find((item) => item.default).default;\n        }\n    } else if (VERSIONS.V2.includes(openAPIVersion)) {\n        if (Array.isArray(operation.security) && operation.security.find((item) => item.default)) {\n            scopes = operation.security.find((item) => item.default).default;\n        }\n    }\n    return scopes;\n}\n\n/**\n * Map the api.operations array to swagger paths like object\n * @param {Array} operations Operations in API DTO\n * @returns {Object} Mapped operations object\n */\nfunction mapAPIOperations(operations) {\n    const temp = {};\n    for (const operation of operations) {\n        const { target, verb, ...rest } = operation;\n        if (!temp[target]) {\n            temp[target] = {\n                [verb]: rest,\n            };\n        } else {\n            temp[target][verb] = rest;\n        }\n    }\n    return temp;\n}\n\n/**\n *\n *\n * @param {*} selectedOperations\n * @param {*} operations\n * @returns\n */\nfunction isSelectAll(selectedOperations, operations) {\n    for (const path in operations) {\n        if (Object.prototype.hasOwnProperty.call(operations, path)) {\n            const verbs = operations[path];\n            if (\n                !selectedOperations[path]\n                || Object.keys(selectedOperations[path]).length !== Object.keys(verbs).length\n            ) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n/**\n * Check whether the provided object is a Ref object.\n *\n * @param {object} content : The object that needs to be checked.\n * @return {boolean} true if Ref, false otherwise.\n * */\nfunction isRef(content) {\n    let isReference = false;\n    if (typeof content === 'object') {\n        Object.keys(content).map((name) => {\n            isReference = name === '$ref';\n            return name;\n        });\n    }\n    return isReference;\n}\n\nexport {\n    mapAPIOperations,\n    getTaggedOperations,\n    getAPIProductTaggedOperations,\n    extractPathParameters,\n    getOperationScopes,\n    isSelectAll,\n    getVersion,\n    VERSIONS,\n    isRef,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Link } from 'react-router-dom';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { getOperationScopes } from '../../operationUtils';\n\n/**\n *\n * Renders the security , throttling policies and scopes selection section in the operation collapsed page\n * @export\n * @param {*} props\n * @returns\n */\nexport default function OperationGovernance(props) {\n    const {\n        operation, operationsDispatcher, operationRateLimits, api, disableUpdate, spec, target, verb,\n    } = props;\n    const isOperationRateLimiting = api.apiThrottlingPolicy === null;\n    const intl = useIntl();\n\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography gutterBottom variant='subtitle1'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.OperationGovernance.title'\n                        defaultMessage='Operation Governance'\n                    />\n                    <Typography style={{ marginLeft: '10px' }} gutterBottom variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.OperationGovernance.subTitle'\n                            defaultMessage='(Security, Rate Limiting & Scopes)'\n                        />\n                    </Typography>\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={1} />\n            <Grid item xs={11}>\n                <FormControl disabled={disableUpdate} component='fieldset'>\n                    <FormControlLabel\n                        control={(\n                            <Switch\n                                checked={operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none'}\n                                onChange={({ target: { checked } }) => operationsDispatcher({\n                                    action: 'authType',\n                                    data: { target, verb, value: checked },\n                                })}\n                                size='small'\n                                color='primary'\n                            />\n                        )}\n                        label='Security'\n                        labelPlacement='start'\n                    />\n                </FormControl>\n                <sup style={{ marginLeft: '10px' }}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.OperationGovernance.Security'\n                                + '.tooltip'}\n                                defaultMessage='This will enable/disable Application Level securities defined in the\n                                Runtime Configurations page.'\n                            />\n                        )}\n                        fontSize='small'\n                        aria-label='Operation security'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </sup>\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={5}>\n                <TextField\n                    id='operation_rate_limiting_policy'\n                    select\n                    fullWidth={!isOperationRateLimiting}\n                    SelectProps={{\n                        autoWidth: true,\n                        IconComponent: isOperationRateLimiting ? ArrowDropDownIcon : 'span',\n                    }}\n                    disabled={disableUpdate || !isOperationRateLimiting}\n                    label={\n                        isOperationRateLimiting\n                            ? intl.formatMessage({\n                                id: 'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.rate.limiting.policy',\n                                defaultMessage: 'Rate limiting policy',\n                            })\n                            : (\n                                <div>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.governed.by'}\n                                        defaultMessage='Rate limiting is governed by '\n                                    />\n                                    <Box fontWeight='fontWeightBold' display='inline' color='primary.main'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.API.level'}\n                                            defaultMessage='API Level'\n                                        />\n                                    </Box>\n                                </div>\n                            )\n                    }\n                    value={\n                        isOperationRateLimiting && operation['x-throttling-tier'] ? operation['x-throttling-tier'] : ''\n                    }\n                    onChange={({ target: { value } }) => operationsDispatcher({\n                        action: 'throttlingPolicy',\n                        data: { target, verb, value },\n                    })}\n                    helperText={\n                        isOperationRateLimiting\n                            ? intl.formatMessage({\n                                id: 'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.rate.limiting.policy.select',\n                                defaultMessage: 'Select a rate limit policy for this operation',\n                            })\n                            : (\n                                <span>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section1'}\n                                        defaultMessage='Use '\n                                    />\n                                    <Box fontWeight='fontWeightBold' display='inline' color='primary.main'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section2'}\n                                            defaultMessage='Operation Level'\n                                        />\n                                    </Box>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section3'}\n                                        defaultMessage=' rate limiting to '\n                                    />\n                                    <b>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section4'}\n                                            defaultMessage='enable'\n                                        />\n                                    </b>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section5'}\n                                        defaultMessage=' rate limiting per operation'\n                                    />\n                                </span>\n                            )\n                    }\n                    margin='dense'\n                    variant='outlined'\n                >\n                    {operationRateLimits.map((rateLimit) => (\n                        <MenuItem key={rateLimit.name} value={rateLimit.name}>\n                            {rateLimit.displayName}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid item md={6} />\n            <Grid item md={1} />\n            <Grid item md={5}>\n                { operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none' ? (\n                    <TextField\n                        id='operation_scope'\n                        select\n                        disabled={disableUpdate}\n                        fullWidth\n                        label={api.scopes.length !== 0 ? intl.formatMessage({\n                            id: 'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.operation.scope.label.default',\n                            defaultMessage: 'Operation scope',\n                        }) : intl.formatMessage({\n                            id: 'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.operation.scope.label.notAvailable',\n                            defaultMessage: 'No scope available',\n                        })}\n                        value={getOperationScopes(operation, spec)[0]}\n                        onChange={({ target: { value } }) => operationsDispatcher({\n                            action: 'scopes',\n                            data: { target, verb, value: value ? [value] : [] },\n                        })}\n                        helperText={(\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.helperText'}\n                                defaultMessage='Select a scope to control permissions to this operation'\n                            />\n                        )}\n                        margin='dense'\n                        variant='outlined'\n                    >\n                        <MenuItem\n                            value=''\n                            dense\n                        >\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.select.none'}\n                                defaultMessage='None'\n                            />\n                        </MenuItem>\n                        {api.scopes.length !== 0\n                            ? api.scopes.map((scope) => (\n                                <MenuItem\n                                    key={scope.name}\n                                    value={scope.name}\n                                    dense\n                                >\n                                    {scope.name}\n                                </MenuItem>\n                            )) : (\n                                <Link to={`/apis/${api.id}/scopes/create`} target='_blank'>\n                                    <MenuItem\n                                        key='Create New Scope'\n                                        value='Create New Scope'\n                                        dense\n                                    >\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.create.new.scope'}\n                                            defaultMessage='Create New Scope'\n                                        />\n                                    </MenuItem>\n                                </Link>\n                            )}\n                    </TextField>\n                ) : null }\n            </Grid>\n            <Grid item md={5} style={{ marginTop: '14px' }}>\n                { operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none' ? !disableUpdate && (\n                    <Link to={`/apis/${api.id}/scopes/create`} target='_blank'>\n                        <Typography style={{ marginLeft: '10px' }} color='primary' display='inline' variant='caption'>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.create.new.scope'}\n                                defaultMessage='Create New Scope'\n                            />\n                            <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                        </Typography>\n                    </Link>\n                ) : null}\n            </Grid>\n            <Grid item md={1} />\n        </>\n    );\n}\n\nOperationGovernance.propTypes = {\n    disableUpdate: PropTypes.bool,\n    operation: PropTypes.shape({\n        target: PropTypes.string.isRequired,\n        verb: PropTypes.string.isRequired,\n    }).isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})),\n    api: PropTypes.shape({ scopes: PropTypes.arrayOf(PropTypes.shape({})) }),\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n};\n\nOperationGovernance.defaultProps = {\n    operationRateLimits: [],\n    api: { scopes: [] },\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * The renderInput function.\n * @param {any} inputProps The props that are being passed to the function.\n * @returns {any} HTML view of the inputs.\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    // eslint-disable-next-line react/forbid-prop-types\n    classes: PropTypes.object.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types, react/require-default-props\n    InputProps: PropTypes.object,\n};\n\n/**\n * The renderSuggestion function.\n * @param {any} suggestionProps The props that are being passed to the function.\n * @returns {any} HTML view of the suggestions.\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, selectedItem,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion}\n            selected={isHighlighted}\n            component='div'\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    itemProps: PropTypes.object.isRequired,\n    selectedItem: PropTypes.string.isRequired,\n    suggestion: PropTypes.shape('').isRequired,\n};\n\n/**\n * The getSuggestions function.\n * @param {any} value The value that are being passed to the function.\n * @param {any} arns The arns that are being passed to the function.\n * @returns {any} suggestion values.\n */\nfunction getSuggestions(value, { showEmpty = false } = {}, arns) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n    return inputLength === 0 && !showEmpty\n        ? []\n        : arns.filter((suggestion) => {\n            const keep = count < 5 && suggestion.slice(0, inputLength).toLowerCase() === inputValue;\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1000,\n        marginTop: theme.spacing(-2),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n}));\n\n\n/**\n * The autocomplete component. This component lists the ARNs of a specific user role.\n * @returns {any} HTML view of the autocomplete component.\n * @param {any} props The input parameters.\n */\nexport default function IntegrationDownshift(props) {\n    const classes = useStyles();\n    const {\n        operation,\n        operationsDispatcher,\n        target,\n        verb,\n        arns,\n    } = props;\n    const [timeout, setTimeout] = useState(50000);\n    useEffect(() => {\n        if (operation['x-amzn-resource-timeout']) {\n            setTimeout(operation['x-amzn-resource-timeout']);\n        }\n    }, []);\n    const handleTimeoutMin = (event) => {\n        if (event.target.value !== '') {\n            const minutes = parseInt(event.target.value, 10);\n            const seconds = (timeout / 1000) % 60;\n            const milliSeconds = (minutes * 60 + seconds) * 1000;\n            let newTimeout = 0;\n            if (milliSeconds > 900000) {\n                newTimeout = 900000;\n            } else if (milliSeconds < 1000) {\n                newTimeout = 1000;\n            } else {\n                newTimeout = milliSeconds;\n            }\n            setTimeout(newTimeout);\n            operationsDispatcher({\n                action: 'amznResourceTimeout',\n                data: { target, verb, value: newTimeout },\n            });\n        }\n    };\n    const handleTimeoutSec = (event) => {\n        if (event.target.value !== '') {\n            const minutes = Math.floor((timeout / 1000) / 60);\n            const seconds = parseInt(event.target.value, 10);\n            const milliSeconds = (minutes * 60 + seconds) * 1000;\n            let newTimeout = 0;\n            if (milliSeconds > 900000) {\n                newTimeout = 900000;\n            } else if (milliSeconds < 1000) {\n                newTimeout = 1000;\n            } else {\n                newTimeout = milliSeconds;\n            }\n            setTimeout(newTimeout);\n            operationsDispatcher({\n                action: 'amznResourceTimeout',\n                data: { target, verb, value: newTimeout },\n            });\n        }\n    };\n    return (\n        <>\n            <Grid item md={12} xs={12}>\n                <Typography variant='subtitle1'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.AWSLambdaSettings.Title'\n                        defaultMessage='AWS Lambda Settings'\n                    />\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item md={1} xs={1} />\n            <Grid item md={7} xs={7}>\n                <Downshift\n                    id='downshift-options'\n                    onSelect={(changes) => {\n                        if (changes !== null) {\n                            operationsDispatcher({\n                                action: 'amznResourceName',\n                                data: { target, verb, value: changes },\n                            });\n                        }\n                    }}\n                >\n                    {({\n                        clearSelection,\n                        getInputProps,\n                        getItemProps,\n                        getLabelProps,\n                        getMenuProps,\n                        highlightedIndex,\n                        inputValue,\n                        isOpen,\n                        openMenu,\n                        selectedItem,\n                    }) => {\n                        const {\n                            onBlur, onChange, onFocus, ...inputProps\n                        } = getInputProps({\n                            onChange: (event) => {\n                                operationsDispatcher({\n                                    action: 'amznResourceName',\n                                    data: { target, verb, value: event.target.value },\n                                });\n                                if (event.target.value === '') {\n                                    clearSelection();\n                                }\n                            },\n                            onBlur: () => {\n                                clearSelection();\n                            },\n                            value: operation['x-amzn-resource-name'],\n                            onFocus: openMenu,\n                            placeholder: 'Select or type an ARN',\n                        });\n                        return (\n                            <div className={classes.container}>\n                                {renderInput({\n                                    variant: 'outlined',\n                                    required: true,\n                                    fullWidth: true,\n                                    classes,\n                                    InputLabelProps: getLabelProps({ shrink: true }),\n                                    label: 'Amazon Resource Name (ARN)',\n                                    helperText: 'Select or type an ARN',\n                                    InputProps: {\n                                        onBlur,\n                                        onChange,\n                                        onFocus,\n                                        endAdornment: (\n                                            <InputAdornment position='end'>\n                                                <Icon className={classes.helpIcon}>keyboard_arrow_down</Icon>\n                                            </InputAdornment>\n                                        ),\n                                    },\n                                    inputProps,\n                                })}\n\n                                <div {...getMenuProps()}>\n                                    {isOpen ? (\n                                        <Paper className={classes.paper} square>\n                                            {getSuggestions(inputValue, { showEmpty: true }, arns)\n                                                .map((suggestion, index) => renderSuggestion({\n                                                    suggestion,\n                                                    index,\n                                                    itemProps: getItemProps({ item: suggestion }),\n                                                    highlightedIndex,\n                                                    selectedItem,\n                                                }))}\n                                        </Paper>\n                                    ) : null}\n                                </div>\n                            </div>\n                        );\n                    }}\n                </Downshift>\n            </Grid>\n            <Grid item md={1} xs={1} />\n            <Grid item md={1} xs={1}>\n                <TextField\n                    id='timeout-min'\n                    label='min'\n                    variant='outlined'\n                    helperText='Set Timeout'\n                    type='number'\n                    inputProps={{\n                        min: 0,\n                        max: 15,\n                        step: 1,\n                    }}\n                    value={Math.floor((timeout / 1000) / 60)}\n                    onChange={(event) => {\n                        handleTimeoutMin(event);\n                    }}\n                />\n            </Grid>\n            <Grid item md={1} xs={1}>\n                <TextField\n                    id='timeout-sec'\n                    label='sec'\n                    variant='outlined'\n                    type='number'\n                    inputProps={{\n                        min: 0,\n                        max: 59,\n                        step: 1,\n                    }}\n                    value={(timeout / 1000) % 60}\n                    onChange={(event) => {\n                        handleTimeoutSec(event);\n                    }}\n                />\n            </Grid>\n            <Grid item md={1} xs={1} />\n        </>\n    );\n}\n\nIntegrationDownshift.propTypes = {\n    operation: PropTypes.isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    arns: PropTypes.shape([]).isRequired,\n};\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n/**\n * Defining the supported data types by the OAS spec versions.\n *\n * 2.0 : https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\n * 3.x :https://swagger.io/docs/specification/data-models/data-types/\n * */\nconst supportedDataTypes = {\n    '2.0': {\n        body: ['integer', 'number', 'string', 'boolean', 'object'],\n        formData: ['integer', 'number', 'string', 'boolean', 'file'],\n        query: ['integer', 'number', 'string', 'boolean'],\n        path: ['integer', 'number', 'string', 'boolean'],\n        header: ['integer', 'number', 'string', 'boolean'],\n    },\n    '3.x': {\n        body: ['integer', 'number', 'string', 'boolean', 'object'],\n        query: ['integer', 'number', 'string', 'boolean'],\n        path: ['integer', 'number', 'string', 'boolean'],\n        header: ['integer', 'number', 'string', 'boolean'],\n        cookie: ['integer', 'number', 'string', 'boolean'],\n    },\n};\n\n/**\n * Util method for checking conditions.\n *\n * @param {boolean} condition : The condition to be checked\n * @param {any} matched : The value to be returned if the condition is true\n * @param {any} otherwise : The value to be returned if the condition is false.\n * @return {object} If true -> matched, false -> otherwise\n * */\nexport function iff(condition, matched, otherwise) {\n    return condition ? matched : otherwise;\n}\n\n/**\n * Method to get the supported data types for the given parameter type.\n *\n * @param {string} specVersion : The OAS version\n * @param {string} paramType : The parameter type.\n * @return {array} The list of supported parameters.\n * */\nexport function getSupportedDataTypes(specVersion, paramType) {\n    return paramType ? supportedDataTypes[specVersion === '2.0' ? '2.0' : '3.x'][paramType] : [];\n}\n\n/**\n * Get the supported data formats by each data type.\n *\n * @param {string} dataType: THe data type.\n * @return {array} The list of supported data formats.\n * */\nexport function getDataFormats(dataType) {\n    switch (dataType) {\n        case 'integer':\n            return ['int64', 'int32'];\n        case 'number':\n            return ['float', 'double'];\n        case 'string':\n            return ['date', 'date-time', 'byte', 'binary', 'password'];\n        default:\n            return [];\n    }\n}\n\n/**\n * Method to get the parameter schema based on the spec version.\n * For more info about Data Models (Schemas) refer https://swagger.io/docs/specification/data-models/\n * @param {string} specVersion : The OAS version\n * @return {object} The default schema\n * */\nexport function getParameter(specVersion) {\n    return specVersion === '2.0'\n        ? {\n            in: '', name: '', type: '', required: '',\n        }\n        : {\n            in: '', name: '', schema: { type: '' }, required: '',\n        };\n}\n\n/**\n * Get parameter types supported by spec version.\n *\n * @param {string} specVersion : The OAS version\n * @return {array} The list of supported parameter types.\n * */\nexport function getParameterTypes(specVersion) {\n    return specVersion === '2.0' ? ['query', 'header', 'body', 'formData'] : ['query', 'header', 'cookie', 'body'];\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {\n    iff,\n    getParameter,\n    getParameterTypes,\n    getSupportedDataTypes,\n} from 'AppComponents/Apis/Details/Resources/components/operationComponents/parameterUtils';\n\nconst useStyles = makeStyles(() => ({\n    formControl: {\n        minWidth: 120,\n    },\n    parameterContainer: {\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    checkBox: {\n        color: '#7c7c7c',\n    },\n}));\n\n/**\n *\n * Add resource parameter according to swagger spec\n * A unique parameter is defined by a combination of a name and param type and schema or content is required\n * OpenAPI 3.0 spec: https://swagger.io/specification/#parameterObject\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction AddParameter(props) {\n    const {\n        operation, operationsDispatcher, target, verb, specVersion, intl,\n    } = props;\n    const inputLabel = useRef(null);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const initParameter = getParameter(specVersion);\n\n    /**\n     *\n     *\n     * @param {*} state\n     * @param {*} action\n     * @returns\n     */\n    function newParameterReducer(state, action) {\n        const { type, value } = action;\n        switch (type) {\n            case 'in':\n            case 'name':\n            case 'required':\n                return { ...state, [type]: value };\n            case 'type': {\n                if (specVersion === '2.0') {\n                    return { ...state, [type]: value };\n                } else {\n                    return { ...state, schema: { [type]: value } };\n                }\n            }\n            case 'clear':\n                return initParameter;\n            default:\n                return state;\n        }\n    }\n    const [newParameter, newParameterDispatcher] = useReducer(newParameterReducer, initParameter);\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    let isParameterExist = false;\n    const isParameterExistValue = operation.parameters && operation.parameters.map(\n        (operations) => (operations.in === newParameter.in && operations.name === newParameter.name),\n    );\n\n    if (isParameterExistValue && isParameterExistValue.includes(true)) {\n        isParameterExist = true;\n    } else {\n        isParameterExist = false;\n    }\n\n    const classes = useStyles();\n\n    /**\n     *\n     *\n     */\n    function clearInputs() {\n        newParameterDispatcher({ type: 'clear' });\n    }\n    /**\n     *\n     *\n     */\n    function addNewParameter() {\n        if (newParameter.in === 'body') {\n            operationsDispatcher(specVersion === '2.0'\n                ? {\n                    action: 'parameter',\n                    data: {\n                        target,\n                        verb,\n                        value: {\n                            name: newParameter.name,\n                            description: '',\n                            required: newParameter.required,\n                            in: newParameter.in,\n                            schema: {\n                                type: newParameter.type,\n                            },\n                        },\n                    },\n                }\n                : {\n                    action: 'requestBody',\n                    data: {\n                        target,\n                        verb,\n                        value: {\n                            description: '',\n                            required: newParameter.required,\n                            content: { [newParameter.name]: { schema: { type: 'object' } } },\n                        },\n                    },\n                });\n        } else {\n            operationsDispatcher({ action: 'parameter', data: { target, verb, value: newParameter } });\n        }\n        clearInputs();\n    }\n\n    function isDisabled() {\n        if (specVersion === '2.0') {\n            return (!newParameter.name || !newParameter.type || !newParameter.in || isParameterExist);\n        }\n        return (!newParameter.name || !newParameter.schema.type || !newParameter.in || isParameterExist);\n    }\n\n    function getParameterNameHelperText(paramIn) {\n        if (isParameterExist) {\n            return intl.formatMessage({\n                id: 'Apis.Details.Resources.components.operationComponents.AddParameter.parameter.name.already.exists',\n                defaultMessage: 'Parameter name already exists',\n            });\n        }\n        if (paramIn === 'body') {\n            if (specVersion !== '2.0') {\n                return intl.formatMessage({\n                    id: 'Apis.Details.Resources.components.operationComponents.AddParameter.enter.content.type',\n                    defaultMessage: 'Enter Content Type',\n                });\n            }\n        }\n        return intl.formatMessage({\n            id: 'Apis.Details.Resources.components.operationComponents.AddParameter.enter.parameter.name',\n            defaultMessage: 'Enter Parameter Name',\n        });\n    }\n\n    return (\n        <Grid container direction='row' spacing={1} className={classes.parameterContainer}>\n            <Grid item xs={2} md={2}>\n                <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                    <InputLabel ref={inputLabel} htmlFor='param-in' error={isParameterExist}>\n                        Parameter Type\n                    </InputLabel>\n\n                    <Select\n                        value={newParameter.in}\n                        onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                            name: 'in',\n                            id: 'param-in',\n                        }}\n                        MenuProps={{\n                            getContentAnchorEl: null,\n                            anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            },\n                        }}\n                        error={isParameterExist}\n                    >\n                        {getParameterTypes(specVersion).map((paramType) => {\n                            if ((paramType === 'body' || paramType === 'formData')\n                                && !['post', 'put', 'patch'].includes(verb)) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem value={paramType} dense>\n                                    {capitalizeFirstLetter(paramType)}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                    {isParameterExist\n                        ? (\n                            <FormHelperText id='my-helper-text' error>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.parameter.name.exists'\n                                    defaultMessage='Parameter type already exists'\n                                />\n                            </FormHelperText>\n                        )\n                        : (\n                            <FormHelperText id='my-helper-text'>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.select.parameter.type'\n                                    defaultMessage='Select the parameter type'\n                                />\n                            </FormHelperText>\n                        )}\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <TextField\n                    id='parameter-name'\n                    label={newParameter.in === 'body'\n                        ? iff(specVersion === '2.0',\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.parameter.name'\n                                defaultMessage='Parameter Name'\n                            />,\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.content.type'\n                                defaultMessage='Content Type'\n                            />)\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.parameter.name'\n                                defaultMessage='Parameter Name'\n                            />\n                        )}\n                    name='name'\n                    value={newParameter.name}\n                    onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                    helperText={getParameterNameHelperText(newParameter.in)}\n                    margin='dense'\n                    variant='outlined'\n                    onKeyPress={(event) => {\n                        if (event.key === 'Enter') {\n                            // key code 13 is for `Enter` key\n                            event.preventDefault(); // To prevent form submissions\n                            addNewParameter();\n                        }\n                    }}\n                    error={isParameterExist}\n                />\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                    <InputLabel ref={inputLabel} htmlFor='data-type' error={isParameterExist}>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.data.type'\n                            defaultMessage='Data Type'\n                        />\n                    </InputLabel>\n\n                    <Select\n                        value={newParameter.schema !== undefined ? newParameter.schema.type : newParameter.type}\n                        onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                            name: 'type',\n                            id: 'data-type',\n                        }}\n                        MenuProps={{\n                            getContentAnchorEl: null,\n                            anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            },\n                        }}\n                        error={isParameterExist}\n                    >\n                        {getSupportedDataTypes(specVersion, newParameter.in).map((paramType) => {\n                            return (\n                                <MenuItem value={paramType} dense>\n                                    {capitalizeFirstLetter(paramType)}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                    <FormHelperText id='my-helper-text'>Select the data type</FormHelperText>\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormControlLabel\n                        className={classes.checkBox}\n                        control={(\n                            <Checkbox\n                                checked={newParameter.required}\n                                onChange={\n                                    ({\n                                        target: { name, value },\n                                    }) => newParameterDispatcher({ type: name, value: !value })\n                                }\n                                value={newParameter.required}\n                                inputProps={{\n                                    name: 'required',\n                                }}\n                            />\n                        )}\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.required'\n                                defaultMessage='Required'\n                            />\n                        )}\n                    />\n                    <FormHelperText>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.required.helper.text'\n                            defaultMessage='Check whether the parameter is required.'\n                        />\n                    </FormHelperText>\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.AddParameter.add.tooltip'\n                            defaultMessage='Add new parameter'\n                        />\n                    )}\n                    aria-label='AddParameter'\n                    placement='bottom'\n                    interactive\n                >\n                    <span>\n                        <Button\n                            style={{ marginLeft: '20px', marginBottom: '15px', marginRight: '20px' }}\n                            disabled={isDisabled()}\n                            size='small'\n                            variant='outlined'\n                            aria-label='add'\n                            color='primary'\n                            onClick={addNewParameter}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.AddParameter.add'\n                                defaultMessage='Add'\n                            />\n                        </Button>\n                    </span>\n                </Tooltip>\n                <sup>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddParameter.clear.inputs.tooltip'\n                                defaultMessage='Clear inputs'\n                            />\n                        )}\n                        aria-label='clear-inputs'\n                        placement='bottom'\n                        interactive\n                    >\n                        <span>\n                            <IconButton onClick={clearInputs} size='small'>\n                                <ClearIcon />\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                </sup>\n            </Grid>\n        </Grid>\n    );\n}\n\nAddParameter.propTypes = {\n    operation: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    specVersion: PropTypes.string.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default React.memo(injectIntl(AddParameter));\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport TableCell from '@material-ui/core/TableCell';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TableRow from '@material-ui/core/TableRow';\n\n/**\n * Component to render the Request b\n *\n * */\nfunction RequestBody(props) {\n    const {\n        contentType, content, operation, disableUpdate, hideParameterEdit, operationsDispatcher, target, verb,\n    } = props;\n    return (\n        <TableRow key={contentType}>\n            <TableCell align='left'>\n                <FormattedMessage\n                    id='Apis.Details.Resources.components.operationComponents.ListParameter.body'\n                    defaultMessage='Body'\n                />\n            </TableCell>\n            <TableCell>{contentType}</TableCell>\n            <TableCell align='left'>{content.schema.type}</TableCell>\n            <TableCell align='left'>\n                {operation.requestBody.required\n                    ? (\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.yes'}\n                            defaultMessage='Yes'\n                        />\n                    )\n                    : (\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.no'}\n                            defaultMessage='No'\n                        />\n                    )}\n            </TableCell>\n            {!disableUpdate && (\n                <TableCell align='left'>\n                    {hideParameterEdit && (\n                        <Tooltip title='Edit'>\n                            <IconButton onClick={() => {}} fontSize='small'>\n                                <EditIcon fontSize='small' />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                    <Tooltip title={(\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.delete'}\n                            defaultMessage='Delete'\n                        />\n                    )}\n                    >\n                        <IconButton\n                            disabled={disableUpdate}\n                            onClick={() => {\n                                operationsDispatcher({\n                                    action: 'requestBody',\n                                    data: {\n                                        target,\n                                        verb,\n                                        value: {\n                                            description: '',\n                                            required: false,\n                                            content: {},\n                                        },\n                                    },\n                                });\n                            }}\n                            fontSize='small'\n                        >\n                            <DeleteIcon fontSize='small' />\n                        </IconButton>\n                    </Tooltip>\n                </TableCell>\n            )}\n        </TableRow>\n    );\n}\n\nRequestBody.propTypes = {\n    contentType: PropTypes.string.isRequired,\n    content: PropTypes.shape({}).isRequired,\n    operation: PropTypes.shape({}).isRequired,\n    disableUpdate: PropTypes.bool.isRequired,\n    hideParameterEdit: PropTypes.bool.isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n};\n\nexport default RequestBody;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport {\n    getSupportedDataTypes,\n    getDataFormats,\n    iff,\n} from 'AppComponents/Apis/Details/Resources/components/operationComponents/parameterUtils';\nimport { FormattedMessage } from 'react-intl';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function EditParameter(props) {\n    const {\n        operationsDispatcher, target, verb, editingParameter, setEditingParameter, version,\n    } = props;\n    /**\n     *\n     *\n     * @param {*} currentParameter\n     * @param {*} paramAction\n     */\n    function parameterActionReducer(currentParameter, paramAction) {\n        const { action, value } = paramAction;\n        const nextParameter = currentParameter.schema\n            ? { ...currentParameter, schema: { ...currentParameter.schema } } : { ...currentParameter };\n        switch (action) {\n            case 'description':\n            case 'required':\n                nextParameter[action] = value;\n                break;\n            case 'type':\n            case 'format':\n                if (nextParameter.schema) {\n                    nextParameter.schema[action] = value;\n                } else {\n                    nextParameter[action] = value;\n                }\n                break;\n            default:\n                break;\n        }\n        return nextParameter;\n    }\n    const [parameter, parameterActionDispatcher] = useReducer(parameterActionReducer, editingParameter);\n    const classes = useStyles();\n\n    const handleClose = () => {\n        setEditingParameter(null);\n    };\n\n    /**\n     *\n     *\n     */\n    function handelDone() {\n        operationsDispatcher({ action: 'parameter', data: { target, verb, value: parameter } });\n    }\n    const isEditing = parameter !== null;\n    if (!isEditing) {\n        return null;\n    }\n    return (\n        <Dialog fullWidth maxWidth='md' open={isEditing} onClose={handleClose} aria-labelledby='edit-parameter'>\n            <DialogTitle disableTypography id='edit-parameter'>\n                <Typography variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.title'\n                        defaultMessage='Edit'\n                    />\n                    {' '}\n                    <Typography display='inline' variant='subtitle1'>\n                        {capitalizeFirstLetter(parameter.in)}\n                        {' '}\n                        :\n                        {parameter.name}\n                    </Typography>\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Grid container direction='row' spacing={2} justify='flex-start' alignItems='center'>\n                    <Grid item md={6}>\n                        <TextField\n                            value={capitalizeFirstLetter(parameter.in)}\n                            disabled\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.type'\n                                    defaultMessage='Parameter Type'\n                                />\n                            )}\n                            margin='dense'\n                            variant='outlined'\n                        />\n                    </Grid>\n                    <Grid item md={6}>\n                        <TextField\n                            value={parameter.name}\n                            disabled\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.name'\n                                    defaultMessage='Name'\n                                />\n                            )}\n                            margin='dense'\n                            variant='outlined'\n                        />\n                    </Grid>\n                    <Grid item md={12}>\n                        <TextField\n                            value={parameter.description}\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.description'\n                                    defaultMessage='Description'\n                                />\n                            )}\n                            multiline\n                            rows='4'\n                            name='description'\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { name, value } }) => {\n                                parameterActionDispatcher({ action: name, value });\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={6}>\n                        <FormControl\n                            required\n                            fullWidth\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.formControl}\n                        >\n                            <InputLabel required id='edit-parameter-type'>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.data.type'\n                                    defaultMessage='Data Type'\n                                />\n                            </InputLabel>\n\n                            <Select\n                                value={parameter.schema ? parameter.schema.type : parameter.type}\n                                onChange={\n                                    ({ target: { name, value } }) => parameterActionDispatcher({ action: name, value })\n                                }\n                                inputProps={{\n                                    name: 'type',\n                                    id: 'edit-parameter-type',\n                                }}\n                                MenuProps={{\n                                    getContentAnchorEl: null,\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    },\n                                }}\n                            >\n                                {getSupportedDataTypes(version, parameter.in).map((dataType) => (\n                                    <MenuItem value={dataType} dense>\n                                        {capitalizeFirstLetter(dataType)}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'select.schema.data.type'}\n                                    defaultMessage='Select the Schema Type'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid>\n                    <Grid item md={6}>\n                        <FormControl\n                            fullWidth\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.formControl}\n                            disabled={parameter.schema\n                                ? iff(\n                                    parameter.schema.type === 'boolean' || parameter.schema.type === 'object',\n                                    true,\n                                    false,\n                                )\n                                : iff(\n                                    parameter.type === 'boolean' || parameter.type === 'object',\n                                    true,\n                                    false,\n                                )}\n                        >\n                            <InputLabel id='edit-parameter-format'>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'data.format'}\n                                    defaultMessage='Data Format'\n                                />\n                            </InputLabel>\n                            <Select\n                                value={parameter.schema ? parameter.schema.format : parameter.format}\n                                onChange={\n                                    ({ target: { name, value } }) => parameterActionDispatcher({ action: name, value })\n                                }\n                                inputProps={{\n                                    name: 'format',\n                                    id: 'edit-parameter-format',\n                                }}\n                                MenuProps={{\n                                    getContentAnchorEl: null,\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    },\n                                }}\n                            >\n                                {getDataFormats(\n                                    parameter.schema ? parameter.schema.type : parameter.type,\n                                ).map((dataType) => (\n                                    <MenuItem value={dataType} dense>\n                                        {capitalizeFirstLetter(dataType)}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'select.format.of.data.type'}\n                                    defaultMessage='Select the Format of Data Type'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <FormControl component='fieldset'>\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        checked={parameter.required}\n                                        onChange={(\n                                            { target: { name, value } },\n                                        ) => parameterActionDispatcher({ action: name, value: !value })}\n                                        value={parameter.required}\n                                        inputProps={{\n                                            name: 'required',\n                                        }}\n                                    />\n                                )}\n                                label={(\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                        + 'required'}\n                                        defaultMessage='Required'\n                                    />\n                                )}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid container direction='row' justify='flex-end' alignItems='center'>\n                        <DialogContentText>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                + 'use.done.button.to.persist.changes'}\n                                defaultMessage='Use DONE button in the page to persist changes'\n                            />\n                        </DialogContentText>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button size='small' onClick={handleClose} color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.close'\n                        defaultMessage='Close'\n                    />\n                </Button>\n                <Button size='small' onClick={handelDone} variant='contained' color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.done'\n                        defaultMessage='Done'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nEditParameter.propTypes = {\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    editingParameter: PropTypes.shape({}).isRequired,\n    setEditingParameter: PropTypes.func.isRequired,\n    version: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport { FormattedMessage } from 'react-intl';\nimport { isRef } from 'AppComponents/Apis/Details/Resources/operationUtils';\nimport RequestBody from 'AppComponents/Apis/Details/Resources/components/operationComponents/RequestBody';\nimport EditParameter from './EditParameter';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n});\n\n/**\n *\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ListParameters(props) {\n    const {\n        operation, operationsDispatcher, target, verb, disableUpdate, hideParameterEdit, specVersion, resolvedSpec,\n    } = props;\n    const classes = useStyles();\n    const [editingParameter, setEditingParameter] = useState(null);\n\n    return (\n        <>\n            {editingParameter !== null && (\n                <EditParameter\n                    operationsDispatcher={operationsDispatcher}\n                    target={target}\n                    verb={verb}\n                    editingParameter={editingParameter}\n                    setEditingParameter={setEditingParameter}\n                    version={specVersion}\n                />\n            )}\n            <Table className={classes.table} aria-label='parameters list'>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.type'\n                                defaultMessage='Parameter Type'\n                            />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.name'\n                                defaultMessage='Name'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.data.type'\n                                defaultMessage='Data Type'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.required'\n                                defaultMessage='Required'\n                            />\n                        </TableCell>\n                        {!disableUpdate && (\n                            <TableCell align='left'>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.ListParameter.actions'\n                                    defaultMessage='Actions'\n                                />\n                            </TableCell>\n                        )}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {operation.parameters\n                        && operation.parameters.map((parameter, index) => {\n                            const isRefParam = isRef(parameter);\n                            const paramCopy = isRefParam\n                                ? resolvedSpec.paths[target][verb].parameters[index] : parameter;\n                            return (\n                                <TableRow key={paramCopy.name}>\n                                    <TableCell align='left'>{capitalizeFirstLetter(paramCopy.in)}</TableCell>\n                                    <TableCell align='left'>{paramCopy.name}</TableCell>\n                                    <TableCell align='left'>\n                                        {capitalizeFirstLetter(paramCopy.schema\n                                            ? paramCopy.schema.type : paramCopy.type)}\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        {paramCopy.required\n                                            ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                + '.ListParameter.yes'}\n                                                    defaultMessage='Yes'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                + '.ListParameter.no'}\n                                                    defaultMessage='No'\n                                                />\n                                            )}\n                                    </TableCell>\n                                    {!disableUpdate && (\n                                        <TableCell align='left'>\n                                            {!isRefParam && (\n                                                <Tooltip title={(\n                                                    <FormattedMessage\n                                                        id={'Apis.Details.Resources.components.operationComponents.'\n                                                    + 'ListParameter.edit'}\n                                                        defaultMessage='Edit'\n                                                    />\n                                                )}\n                                                >\n                                                    <IconButton\n                                                        onClick={() => setEditingParameter(parameter)}\n                                                        fontSize='small'\n                                                    >\n                                                        <EditIcon fontSize='small' />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            )}\n                                            <Tooltip title={(\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                + '.ListParameter.delete'}\n                                                    defaultMessage='Delete'\n                                                />\n                                            )}\n                                            >\n                                                <IconButton\n                                                    disabled={disableUpdate}\n                                                    onClick={() => operationsDispatcher({\n                                                        action: 'deleteParameter',\n                                                        data: { target, verb, value: paramCopy },\n                                                    })}\n                                                    fontSize='small'\n                                                >\n                                                    <DeleteIcon fontSize='small' />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </TableCell>\n                                    )}\n                                </TableRow>\n                            );\n                        })}\n                    {operation.requestBody && (isRef(operation.requestBody)\n                        ? Object.entries(resolvedSpec.paths[target][verb].requestBody.content).map(\n                            ([contentType, content]) => {\n                                return (\n                                    <RequestBody\n                                        contentType={contentType}\n                                        content={content}\n                                        operation={operation}\n                                        disableUpdate={disableUpdate}\n                                        hideParameterEdit={hideParameterEdit}\n                                        operationsDispatcher={operationsDispatcher}\n                                        target={target}\n                                        verb={verb}\n                                    />\n                                );\n                            },\n                        ) : Object.entries(operation.requestBody.content).map(([contentType, content]) => {\n                            return (\n                                <RequestBody\n                                    contentType={contentType}\n                                    content={content}\n                                    operation={operation}\n                                    disableUpdate={disableUpdate}\n                                    hideParameterEdit={hideParameterEdit}\n                                    operationsDispatcher={operationsDispatcher}\n                                    target={target}\n                                    verb={verb}\n                                />\n                            );\n                        }))}\n                </TableBody>\n            </Table>\n        </>\n    );\n}\n\nListParameters.defaultProps = {\n    hideParameterEdit: false,\n    disableUpdate: false,\n};\nListParameters.propTypes = {\n    operation: PropTypes.shape({}).isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    hideParameterEdit: PropTypes.bool,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    disableUpdate: PropTypes.bool,\n    specVersion: PropTypes.string.isRequired,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { getVersion } from 'AppComponents/Apis/Details/Resources/operationUtils';\nimport AddParameter from './AddParameter';\nimport ListParameters from './ListParameters';\n\n/**\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Parameters(props) {\n    const {\n        operation, spec, target, verb, operationsDispatcher, disableUpdate, resolvedSpec,\n    } = props;\n    const specVersion = getVersion(spec);\n    const haveParameters = (operation.parameters && operation.parameters.length !== 0) || operation.requestBody;\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Parameters\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={1} />\n            <Grid item xs={11}>\n                {!disableUpdate && (\n                    <AddParameter\n                        target={target}\n                        verb={verb}\n                        operationsDispatcher={operationsDispatcher}\n                        operation={operation}\n                        specVersion={specVersion}\n                    />\n                )}\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={11}>\n                {haveParameters && (\n                    <ListParameters\n                        disableUpdate={disableUpdate}\n                        target={target}\n                        verb={verb}\n                        operationsDispatcher={operationsDispatcher}\n                        operation={operation}\n                        spec={spec}\n                        specVersion={specVersion}\n                        resolvedSpec={resolvedSpec}\n                    />\n                )}\n            </Grid>\n        </>\n    );\n}\n\nParameters.propTypes = {\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    operation: PropTypes.shape({}).isRequired,\n    disableUpdate: PropTypes.bool,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n};\n\nParameters.defaultProps = {\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function CloseConfirmation(props) {\n    const { open, onClose, closeEditor } = props;\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>Discard changes and Close</DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    All the unsaved changes will be lost\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color='primary'>\n                    Cancel\n                </Button>\n                <Button\n                    onClick={() => {\n                        onClose();\n                        closeEditor();\n                    }}\n                    color='primary'\n                    autoFocus\n                >\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nCloseConfirmation.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    closeEditor: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Suspense, lazy, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport Banner from 'AppComponents/Shared/Banner';\nimport CloseConfirmation from './CloseConfirmation';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"PolicyEditorMonaco\" */));\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        // position: 'relative',\n        top: 'auto',\n        bottom: 0,\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Fade in ref={ref} {...props} />;\n});\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function PolicyEditor(props) {\n    const classes = useStyles();\n    const [api] = useAPI();\n    const {\n        open,\n        onClose,\n        prefersDarkMode,\n        originalResourcePolicy,\n        selectedPolicy,\n        setPolicyContent,\n        resourcePoliciesDispatcher,\n        direction,\n    } = props;\n    const [pageError, setPageError] = useState(null);\n    const [openConfirmation, setOpenConfirmation] = useState(false);\n    const [saving, setSaving] = useState(false);\n\n    const editorOptions = {\n        selectOnLineNumbers: true,\n        readOnly: saving,\n        smoothScrolling: true,\n        wordWrap: 'on',\n    };\n    const editorProps = {\n        language: 'xml',\n        height: 'calc(100vh)',\n        theme: prefersDarkMode ? 'vs-dark' : 'vs',\n        value: selectedPolicy.content,\n        options: editorOptions,\n        onChange: setPolicyContent,\n    };\n\n    /**\n     *\n     *\n     */\n    function confirmAndClose() {\n        // No need to confirm if user have not done any changes\n        if (selectedPolicy.content !== originalResourcePolicy.content) {\n            setOpenConfirmation(true);\n        } else {\n            onClose();\n        }\n    }\n    /**\n     *\n     *\n     */\n    function save() {\n        setSaving(true);\n        api.updateResourcePolicy(selectedPolicy)\n            .then((response) => {\n                Alert.success('Resource policy updated successfully');\n                resourcePoliciesDispatcher({ action: 'update', data: { value: response.body, direction } });\n                onClose();\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                } else {\n                    // TODO add i18n ~tmkb\n                    const message = error.message || 'Something went wrong while updating resource policy!';\n                    Alert.error(message);\n                    setPageError(message);\n                }\n                console.error(error);\n            })\n            .finally(() => setSaving(false));\n    }\n\n    return (\n        <Dialog fullScreen open={open} onClose={onClose} TransitionComponent={Transition}>\n            <AppBar position='fixed' color='default' className={classes.appBar}>\n                <Toolbar variant='dense'>\n                    <Grid container direction='row' justify='flex-start' alignItems='flex-start'>\n                        <Grid item>\n                            <Button\n                                disabled={saving}\n                                variant='outlined'\n                                color='primary'\n                                className={classes.title}\n                                onClick={save}\n                            >\n                                save & close\n                                {saving && <CircularProgress size={18} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button color='inherit' className={classes.title} onClick={confirmAndClose}>\n                                close\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Grid container direction='row' justify='center' alignItems='center'>\n                {pageError && (\n                    <Grid item xs={12}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n            <Grid item xs={12}>\n                <Suspense fallback={<CircularProgress disableShrink />}>\n                    <MonacoEditor {...editorProps} />\n                </Suspense>\n            </Grid>\n            <CloseConfirmation\n                open={openConfirmation}\n                onClose={() => {\n                    setPolicyContent(originalResourcePolicy.content);\n                    setOpenConfirmation(false);\n                }}\n                closeEditor={onClose}\n            />\n        </Dialog>\n    );\n}\nPolicyEditor.defaultProps = {\n    open: false,\n    onClose: () => {},\n    prefersDarkMode: false,\n\n};\nPolicyEditor.propTypes = {\n    open: PropTypes.bool,\n    onClose: PropTypes.func,\n    prefersDarkMode: PropTypes.bool,\n    originalResourcePolicy: PropTypes.shape({}).isRequired,\n    selectedPolicy: PropTypes.shape({}).isRequired,\n    setPolicyContent: PropTypes.func.isRequired,\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    direction: PropTypes.oneOf(['in', 'out']).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useState, Suspense, lazy, useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport PolicyEditor from './PolicyEditor';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"SOAPToRESTMonaco\" */));\n\n/**\n *\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SOAPToRESTListing(props) {\n    const { resourcePolicy, resourcePoliciesDispatcher } = props;\n    const [resourcePolicyIn, setResourcePolicyIn] = useState(resourcePolicy.in);\n    const [resourcePolicyOut, setResourcePolicyOut] = useState(resourcePolicy.out);\n    useEffect(() => {\n        setResourcePolicyIn(resourcePolicy.in);\n        setResourcePolicyOut(resourcePolicy.out);\n    }, [resourcePolicy]);\n    // Get use preference from OS https://material-ui.com/customization/palette/#user-preference\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [openEditor, setOpenEditor] = useState(false);\n    const [selectedTab, setTabIndex] = useState('in');\n    const editorOptions = {\n        selectOnLineNumbers: true,\n        readOnly: true,\n        smoothScrolling: true,\n        wordWrap: 'on',\n    };\n    const selectedPolicy = selectedTab === 'in' ? resourcePolicyIn : resourcePolicyOut;\n    const editorProps = {\n        language: 'xml',\n        height: 'calc(50vh)',\n        theme: prefersDarkMode ? 'vs-dark' : 'vs',\n        value: selectedPolicy.content,\n        options: editorOptions,\n    };\n\n    /**\n     *\n     *\n     * @param {*} content\n     */\n    function setPolicyContent(content) {\n        if (selectedTab === 'in') {\n            setResourcePolicyIn({ ...resourcePolicyIn, content });\n        } else {\n            setResourcePolicyOut({ ...resourcePolicyOut, content });\n        }\n    }\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Mediation\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Tabs\n                    value={selectedTab}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    onChange={(event, tab) => setTabIndex(tab)}\n                    aria-label='Resource mediation in/out tabs'\n                >\n                    <Tab value='in' label='In' />\n                    <Tab value='out' label='Out' />\n                </Tabs>\n                <Box p={1}>\n                    <Button onClick={() => setOpenEditor(true)} variant='outlined' size='small' color='primary'>\n                        Edit\n                        {' '}\n                        <EditIcon />\n                    </Button>\n                    {!openEditor && (\n                        <Paper elevation={4}>\n                            <Suspense fallback={<CircularProgress disableShrink />}>\n                                <MonacoEditor {...editorProps} />\n                            </Suspense>\n                        </Paper>\n                    )}\n                </Box>\n            </Grid>\n            <PolicyEditor\n                resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                setPolicyContent={setPolicyContent}\n                selectedPolicy={selectedPolicy}\n                originalResourcePolicy={resourcePolicy[selectedTab]}\n                direction={selectedTab}\n                prefersDarkMode={prefersDarkMode}\n                onClose={() => setOpenEditor(false)}\n                open={openEditor}\n            />\n        </>\n    );\n}\n\nSOAPToRESTListing.defaultProps = {\n    disableUpdate: false,\n};\nSOAPToRESTListing.propTypes = {\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    resourcePolicy: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    disableUpdate: PropTypes.bool,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Utils from 'AppData/Utils';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n// spliced operation components\n\nimport { FormattedMessage } from 'react-intl';\nimport DescriptionAndSummary from './operationComponents/DescriptionAndSummary';\nimport OperationGovernance from './operationComponents/OperationGovernance';\nimport AWSLambdaSettings from './operationComponents/AWSLambdaSettings';\nimport Parameters from './operationComponents/Parameters';\nimport SOAPToRESTListing from './operationComponents/SOAPToREST/SOAPToRESTListing';\nimport { getOperationScopes } from '../operationUtils';\n\n/**\n *\n * Handle the operation UI\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nfunction Operation(props) {\n    const {\n        operation,\n        operationsDispatcher,\n        highlight,\n        operationRateLimits,\n        api,\n        disableDelete,\n        disableUpdate,\n        onMarkAsDelete,\n        markAsDelete,\n        hideParameters,\n        spec,\n        resourcePolicy,\n        resourcePoliciesDispatcher,\n        target,\n        verb,\n        arns,\n        resolvedSpec,\n    } = props;\n    const [isExpanded, setIsExpanded] = useState(false);\n    const useStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb];\n        return {\n            customButton: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                width: theme.spacing(12),\n            },\n            paperStyles: {\n                border: `1px solid ${backgroundColor}`,\n                borderBottom: '',\n            },\n            customDivider: {\n                backgroundColor,\n            },\n            linearProgress: {\n                height: '2px',\n            },\n            highlightSelected: {\n                backgroundColor: Utils.hexToRGBA(backgroundColor, 0.1),\n            },\n            contentNoMargin: {\n                margin: theme.spacing(0),\n            },\n            overlayUnmarkDelete: {\n                position: 'absolute',\n                zIndex: theme.zIndex.operationDeleteUndo,\n                right: '10%',\n            },\n        };\n    });\n    const apiOperation = api.operations[target] && api.operations[target][verb.toUpperCase()];\n    const isUsedInAPIProduct = apiOperation && Array.isArray(\n        apiOperation.usedProductIds,\n    ) && apiOperation.usedProductIds.length;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function toggleDelete(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        setIsExpanded(false);\n        onMarkAsDelete({ verb, target }, !markAsDelete);\n    }\n\n    /**\n     *\n     *\n     * @param {*} event\n     * @param {*} expanded\n     */\n    function handleExpansion(event, expanded) {\n        setIsExpanded(expanded);\n    }\n    const classes = useStyles();\n    return (\n        <>\n            {markAsDelete && (\n                <Box className={classes.overlayUnmarkDelete}>\n                    <Tooltip title='Marked for delete' aria-label='Marked for delete'>\n                        <Button onClick={toggleDelete} variant='outlined' style={{ marginTop: '10px' }}>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.Operation.undo.delete'\n                                defaultMessage='Undo Delete'\n                            />\n                        </Button>\n                    </Tooltip>\n                </Box>\n            )}\n            <ExpansionPanel\n                expanded={isExpanded}\n                onChange={handleExpansion}\n                disabled={markAsDelete}\n                className={classes.paperStyles}\n            >\n                <ExpansionPanelSummary\n                    className={highlight ? classes.highlightSelected : ''}\n                    disableRipple\n                    disableTouchRipple\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel2a-content'\n                    id='panel2a-header'\n                    classes={{ content: classes.contentNoMargin }}\n                >\n                    <Grid container direction='row' justify='space-between' alignItems='center' spacing={0}>\n                        <Grid item md={6}>\n                            <Badge invisible={!operation['x-wso2-new']} color='error' variant='dot'>\n                                <Button\n                                    disableFocusRipple\n                                    variant='contained'\n                                    size='small'\n                                    className={classes.customButton}\n                                >\n                                    {verb}\n                                </Button>\n                            </Badge>\n                            <Typography display='inline' style={{ margin: '0px 30px' }} variant='h6' gutterBottom>\n                                {target}\n                                <Typography\n                                    display='inline'\n                                    style={{ margin: '0px 30px' }}\n                                    variant='caption'\n                                    gutterBottom\n                                >\n                                    {operation.summary}\n                                </Typography>\n                            </Typography>\n                        </Grid>\n                        {(isUsedInAPIProduct) ? (\n                            <Grid item md={3}>\n                                <Box display='flex' justifyContent='center'>\n                                    <ReportProblemOutlinedIcon fontSize='small' />\n                                    <Box display='flex' ml={1} mt={1 / 4} fontSize='caption.fontSize'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.Operation.this.operation.'\n                                            + 'used.in.products'}\n                                            defaultMessage={'This operation is used in {isUsedInAPIProduct} API '\n                                            + 'product(s)'}\n                                            values={{ isUsedInAPIProduct }}\n                                        />\n                                    </Box>\n                                </Box>\n                            </Grid>\n                        ) : (\n                            <Grid item md={3} />\n                        )}\n                        <Grid item md={2}>\n                            <Typography\n                                display='inline'\n                                style={{ margin: '0px 30px' }}\n                                variant='caption'\n                                gutterBottom\n                            >\n                                <b>{ getOperationScopes(operation, spec)[0] != null && 'Scope : ' }</b>\n                                { getOperationScopes(operation, spec)[0] != null\n                                    && getOperationScopes(operation, spec)[0] }\n                            </Typography>\n                        </Grid>\n                        {!(disableDelete || markAsDelete) && (\n                            <Grid item md={1} justify='flex-end' container>\n                                <Tooltip\n                                    title={\n                                        isUsedInAPIProduct\n                                            ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.Operation.cannot.delete'\n                                                    + '.when.used.in.api.products'}\n                                                    defaultMessage='Cannot delete operation when used in an API product'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Resources.components.Operation.Delete'\n                                                    defaultMessage='Delete'\n                                                />\n                                            )\n                                    }\n                                    aria-label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.Resources.components.Operation.delete.operation'\n                                            defaultMessage='Delete operation'\n                                        />\n                                    )}\n                                >\n                                    <div>\n                                        <IconButton\n                                            disabled={Boolean(isUsedInAPIProduct) || disableUpdate}\n                                            onClick={toggleDelete}\n                                            aria-label='delete'\n                                        >\n                                            <DeleteIcon fontSize='small' />\n                                        </IconButton>\n                                    </div>\n                                </Tooltip>\n                            </Grid>\n                        )}\n                    </Grid>\n                </ExpansionPanelSummary>\n                <Divider light className={classes.customDivider} />\n                <ExpansionPanelDetails>\n                    <Grid spacing={2} container direction='row' justify='flex-start' alignItems='flex-start'>\n                        <DescriptionAndSummary\n                            operation={operation}\n                            operationsDispatcher={operationsDispatcher}\n                            disableUpdate={disableUpdate}\n                            target={target}\n                            verb={verb}\n                        />\n                        <OperationGovernance\n                            operation={operation}\n                            operationsDispatcher={operationsDispatcher}\n                            operationRateLimits={operationRateLimits}\n                            api={api}\n                            disableUpdate={disableUpdate}\n                            spec={spec}\n                            target={target}\n                            verb={verb}\n                        />\n                        {!hideParameters && (\n                            <Parameters\n                                operation={operation}\n                                operationsDispatcher={operationsDispatcher}\n                                operationRateLimits={operationRateLimits}\n                                api={api}\n                                disableUpdate={disableUpdate}\n                                spec={spec}\n                                target={target}\n                                verb={verb}\n                                resolvedSpec={resolvedSpec}\n                            />\n                        )}\n                        {resourcePolicy && (\n                            <SOAPToRESTListing\n                                operation={operation}\n                                operationsDispatcher={operationsDispatcher}\n                                operationRateLimits={operationRateLimits}\n                                resourcePolicy={resourcePolicy}\n                                resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                                disableUpdate={disableUpdate}\n                                spec={spec}\n                                target={target}\n                                verb={verb}\n                            />\n                        )}\n                        {\n                            api.endpointConfig\n                            && api.endpointConfig.endpoint_type\n                            && api.endpointConfig.endpoint_type === 'awslambda'\n                            && (\n                                <AWSLambdaSettings\n                                    operation={operation}\n                                    operationsDispatcher={operationsDispatcher}\n                                    target={target}\n                                    verb={verb}\n                                    arns={arns}\n                                />\n                            )\n                        }\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\nOperation.defaultProps = {\n    highlight: false,\n    disableUpdate: false,\n    hideParameters: false,\n    disableDelete: false,\n    onMarkAsDelete: () => {},\n    markAsDelete: false,\n    operationRateLimits: [], // Response body.list from apis policies for `api` throttling policies type\n};\nOperation.propTypes = {\n    api: PropTypes.shape({ scopes: PropTypes.arrayOf(PropTypes.shape({})), resourcePolicies: PropTypes.shape({}) })\n        .isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    onMarkAsDelete: PropTypes.func,\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    markAsDelete: PropTypes.bool,\n    disableDelete: PropTypes.bool,\n    disableUpdate: PropTypes.bool,\n    hideParameters: PropTypes.bool,\n    resourcePolicy: PropTypes.shape({}).isRequired,\n    operation: PropTypes.shape({\n        'x-wso2-new': PropTypes.bool,\n        summary: PropTypes.string,\n    }).isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    highlight: PropTypes.bool,\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})),\n    arns: PropTypes.shape([]).isRequired,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n};\n\nexport default React.memo(Operation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport PropTypes from 'prop-types';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n/**\n *\n * Return a group container , User should provide the operations list as the child component\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function GroupOfOperations(props) {\n    const { openAPI, children, tag } = props;\n    const currentTagInfo = openAPI.tags && openAPI.tags.find((tagInfo) => tagInfo.name === tag);\n    return (\n        <ExpansionPanel defaultExpanded>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls='panel1a-content' id='panel1a-header'>\n                <Typography variant='h4'>\n                    {tag}\n                    {currentTagInfo && (\n                        <Typography style={{ margin: '0px 30px' }} variant='caption'>\n                            {currentTagInfo.description}\n                        </Typography>\n                    )}\n                </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>{children}</ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nGroupOfOperations.propTypes = {\n    children: PropTypes.element.isRequired,\n    openAPI: PropTypes.shape({ tags: PropTypes.arrayOf(PropTypes.string) }).isRequired,\n    tag: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PropTypes from 'prop-types';\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SpecErrors(props) {\n    const { specErrors } = props;\n    const [open, setOpen] = useState(false);\n    if (specErrors.length === 0) {\n        return null;\n    }\n    return (\n        <>\n            <sup>\n                <Tooltip title='Show errors'>\n                    <IconButton onClick={() => setOpen(true)} color='secondary' aria-label='Errors in spec'>\n                        <ErrorOutlineIcon color='error' />\n                    </IconButton>\n                </Tooltip>\n            </sup>\n            <Dialog maxWidth='md' aria-labelledby='confirmation-dialog-title' open={open}>\n                <DialogTitle id='confirmation-dialog-title'>\n                    <Typography display='inline' color='textPrimary' variant='h6'>\n                        Errors\n                        <Typography display='inline' variant='subtitle2'>\n                            {' '}\n                            in OpenAPI definition\n                        </Typography>\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        {specErrors.map((error, index) => (\n                            <>\n                                {index % 2 !== 0 && <Divider light variant='inset' />}\n                                <ListItem>\n                                    <ListItemText\n                                        primary={error.message}\n                                        primaryTypographyProps={{\n                                            color: 'error',\n                                        }}\n                                        inset\n                                    />\n                                </ListItem>\n                            </>\n                        ))}\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)} color='primary'>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nSpecErrors.propTypes = {\n    specErrors: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n    useState, useRef, useReducer,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Badge from '@material-ui/core/Badge';\nimport APIValidation from 'AppData/APIValidation';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        minWidth: 120,\n    },\n    paper: {\n        paddingLeft: theme.spacing(4),\n        paddingTop: theme.spacing(1.5),\n        paddingBottom: theme.spacing(0.5),\n        marginTop: '12px',\n    },\n}));\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction VerbElement(props) {\n    const {\n        verb, onClick, isButton, checked,\n    } = props;\n\n    const useMenuStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb.toLowerCase()];\n        return {\n            customMenu: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                color: theme.palette.getContrastText(backgroundColor),\n            },\n            customButton: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                width: theme.spacing(12),\n                marginLeft: theme.spacing(1),\n                color: theme.palette.getContrastText(backgroundColor),\n            },\n        };\n    });\n    const classes = useMenuStyles();\n    if (isButton) {\n        return (\n            <Button disableFocusRipple variant='contained' className={classes.customButton} size='small'>\n                {verb}\n            </Button>\n        );\n    } else {\n        return (\n            <MenuItem dense className={classes.customMenu} onClick={onClick}>\n                <Checkbox checked={checked} />\n                {verb}\n            </MenuItem>\n        );\n    }\n}\n\nconst SUPPORTED_VERBS = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS'];\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction AddOperation(props) {\n    const { operationsDispatcher } = props;\n    const inputLabel = useRef(null);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const intl = useIntl();\n\n    /**\n     *\n     *\n     * @param {*} state\n     * @param {*} action\n     * @returns\n     */\n    function newOperationsReducer(state, action) {\n        const { type, value } = action;\n        switch (type) {\n            case 'target':\n            case 'verbs':\n                return { ...state, [type]: value };\n            case 'clear':\n                return { verbs: [], target: '' };\n            case 'error':\n                return { ...state, error: value };\n            default:\n                return state;\n        }\n    }\n    const [newOperations, newOperationsDispatcher] = useReducer(newOperationsReducer, { verbs: [] });\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n    const classes = useStyles();\n\n    /**\n     *\n     *\n     */\n    function clearInputs() {\n        newOperationsDispatcher({ type: 'clear' });\n    }\n    /**\n     *\n     *\n     */\n    function addOperation() {\n        if (\n            APIValidation.operationTarget.validate(newOperations.target).error !== null\n            || APIValidation.operationVerbs.validate(newOperations.verbs).error !== null\n        ) {\n            Alert.warning(intl.formatMessage({\n                id: 'Apis.Details.Resources.components.AddOperation.operation.target.or.verb.cannot.be.empty.warning',\n                defaultMessage: \"Operation target or operation verb(s) can't be empty\",\n            }));\n            return;\n        }\n        operationsDispatcher({ action: 'add', data: newOperations });\n        clearInputs();\n    }\n    return (\n        <Paper className={classes.paper}>\n            <Grid container direction='row' spacing={0} justify='center' alignItems='center'>\n                <Grid item md={5} xs={12}>\n                    <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                        <InputLabel ref={inputLabel} htmlFor='outlined-age-simple'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddOperation.http.verb'\n                                defaultMessage='HTTP Verb'\n                            />\n                        </InputLabel>\n\n                        <Select\n                            multiple\n                            renderValue={(verbs) => {\n                                const remaining = [];\n                                const verbElements = verbs.map((verb, index) => {\n                                    if (index < 2) {\n                                        return <VerbElement isButton verb={verb} />;\n                                    }\n                                    remaining.push(verb.toUpperCase());\n                                    return null;\n                                });\n                                const allSelected = verbs.length === SUPPORTED_VERBS.length;\n                                return (\n                                    <>\n                                        {verbElements}\n                                        {remaining.length > 0 && (\n                                            <Tooltip title={remaining.join(', ')} placement='top'>\n                                                <Box display='inline' color='text.hint' m={1} fontSize='subtitle1'>\n                                                    {allSelected ? 'All selected' : `${verbs.length - 2} more`}\n                                                </Box>\n                                            </Tooltip>\n                                        )}\n                                    </>\n                                );\n                            }}\n                            value={newOperations.verbs}\n                            onChange={({ target: { name, value } }) => newOperationsDispatcher({ type: name, value })}\n                            labelWidth={labelWidth}\n                            inputProps={{\n                                name: 'verbs',\n                                id: 'operation-verb',\n                            }}\n                            MenuProps={{\n                                getContentAnchorEl: null,\n                                anchorOrigin: {\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                },\n                            }}\n                        >\n                            {SUPPORTED_VERBS.map((verb) => (\n                                <VerbElement\n                                    checked={newOperations.verbs.includes(verb.toLowerCase())}\n                                    value={verb.toLowerCase()}\n                                    verb={verb}\n                                />\n                            ))}\n                        </Select>\n\n                        <FormHelperText id='my-helper-text'>\n                            {newOperations.verbs.includes('option') && (\n                                // TODO: Add i18n to tooltip text ~tmkb\n                                <Tooltip\n                                    title={\n                                        'Select the OPTION method to send OPTIONS calls to the backend.'\n                                        + ' If the OPTIONS method is not selected, OPTIONS calls will be returned '\n                                        + 'from the Gateway with allowed methods.'\n                                    }\n                                    placement='bottom'\n                                >\n                                    <Badge color='error' variant='dot'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Resources.components.AddOperation.option'\n                                            defaultMessage='OPTION'\n                                        />\n                                    </Badge>\n                                </Tooltip>\n                            )}\n                        </FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item md={5} xs={8}>\n                    <TextField\n                        id='operation-target'\n                        label='URI Pattern'\n                        error={Boolean(newOperations.error)}\n                        autoFocus\n                        name='target'\n                        value={newOperations.target}\n                        onChange={({ target: { name, value } }) => newOperationsDispatcher(\n                            { type: name, value: value.startsWith('/') ? value : `/${value}` },\n                        )}\n                        placeholder='Enter URI pattern'\n                        helperText={newOperations.error || 'Enter URI pattern'}\n                        fullWidth\n                        margin='dense'\n                        variant='outlined'\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onKeyPress={(event) => {\n                            if (event.key === 'Enter') {\n                                // key code 13 is for `Enter` key\n                                event.preventDefault(); // To prevent form submissions\n                                addOperation();\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid item md={2} xs={4}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddOperation.add.tooltip'\n                                defaultMessage='Add new operation'\n                            />\n                        )}\n                        aria-label='AddOperation'\n                        placement='bottom'\n                        interactive\n                    >\n                        <span>\n                            <Fab\n                                style={{ marginLeft: '20px', marginBottom: '15px', marginRight: '20px' }}\n                                size='small'\n                                color='primary'\n                                aria-label='add'\n                                onClick={addOperation}\n                            >\n                                <AddIcon />\n                            </Fab>\n                        </span>\n                    </Tooltip>\n                    <sup>\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.AddOperation.clear.inputs.tooltip'\n                                    defaultMessage='Clear inputs'\n                                />\n                            )}\n                            aria-label='clear-inputs'\n                            placement='bottom'\n                            interactive\n                        >\n                            <span>\n                                <IconButton onClick={clearInputs} size='small'>\n                                    <ClearIcon />\n                                </IconButton>\n                            </span>\n                        </Tooltip>\n                    </sup>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nAddOperation.propTypes = {\n    operationsDispatcher: PropTypes.func.isRequired,\n};\n\nexport default React.memo(AddOperation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\n\n/**\n *\n * Simply reders the edit api definition link in the bottom of the resources listing\n * @export\n * @param {*} props\n * @returns\n */\nexport default function GoToDefinitionLink(props) {\n    const { api, message } = props;\n    return (\n        <Box m={1}>\n            <Link to={`/apis/${api.id}/api definition`}>\n                <Typography style={{ marginLeft: '10px' }} color='primary' display='inline' variant='caption'>\n                    {message}\n                    <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                </Typography>\n            </Link>\n        </Box>\n    );\n}\nGoToDefinitionLink.defaultProps = {\n    message: 'Edit API Definition',\n};\nGoToDefinitionLink.propTypes = {\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n    message: PropTypes.string,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport isEmpty from 'lodash.isempty';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nexport default function OperationsSelector(props) {\n    const { selectedOperations, setSelectedOperation, operations } = props;\n    const [apiFromContext] = useAPI();\n\n    // TODO: Following logic introduce a limitation in showing `indeterminate` icon state if user\n    // select all -> unchecked one operation -> recheck same operation again ~tmkb\n    const isIndeterminate = !isEmpty(selectedOperations);\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleSelector() {\n        setSelectedOperation(isIndeterminate ? {} : operations);\n    }\n    return (\n        <Grid container direction='row' justify='space-between' alignItems='center'>\n            <Grid item />\n            <Grid item>\n                <Box mr={17.25}>\n                    <Tooltip title={isIndeterminate ? 'Clear selections' : 'Mark all for delete'}>\n                        <div>\n                            <IconButton\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                onClick={handleSelector}\n                                aria-label='delete all'\n                                size='large'\n                            >\n                                {isIndeterminate ? <ClearAllIcon /> : <DeleteSweepIcon />}\n                            </IconButton>\n                        </div>\n                    </Tooltip>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\nOperationsSelector.defaultProps = {};\n\nOperationsSelector.propTypes = {\n    selectedOperations: PropTypes.shape({}).isRequired,\n    setSelectedOperation: PropTypes.func.isRequired,\n    operations: PropTypes.shape({}).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { isRestricted } from 'AppData/AuthManager';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SaveOperations(props) {\n    const { updateOpenAPI, operationsDispatcher, api } = props;\n    const [isSaving, setIsSaving] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    /**\n     * Handle the Save button event,\n     *\n     */\n    function saveChanges() {\n        setIsSaving(true);\n        updateOpenAPI('save').finally(() => setIsSaving(false));\n    }\n    return (\n        <>\n            <Box>\n                <Button\n                    disabled={isSaving || isRestricted(['apim:api_create'], api)}\n                    onClick={saveChanges}\n                    variant='contained'\n                    color='primary'\n                >\n                    Save\n                    {isSaving && <CircularProgress size={24} />}\n                </Button>\n                <Box display='inline' ml={1}>\n                    <Button onClick={() => setIsOpen(true)}>Reset</Button>\n                </Box>\n            </Box>\n            <Dialog\n                open={isOpen}\n                aria-labelledby='bulk-delete-dialog-title'\n                aria-describedby='bulk-delete-dialog-description'\n                onBackdropClick={() => setIsOpen(false)}\n            >\n                <DialogTitle id='bulk-delete-dialog-title'>Discard changes</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='bulk-delete-dialog-description'>\n                        Please confirm the discard all changes action\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setIsOpen(false)}>CLOSE</Button>\n                    <Box ml={1}>\n                        <Button\n                            onClick={() => {\n                                operationsDispatcher({ action: 'init' });\n                                setIsOpen(false);\n                            }}\n                            color='error'\n                        >\n                        RESET\n                        </Button>\n                    </Box>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\nSaveOperations.propTypes = {\n    updateOpenAPI: PropTypes.func.isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useReducer, useEffect, useState, useCallback, useMemo,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEmpty from 'lodash/isEmpty';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Banner from 'AppComponents/Shared/Banner';\nimport API from 'AppData/api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport SwaggerParser from 'swagger-parser';\nimport { isRestricted } from 'AppData/AuthManager';\nimport CONSTS from 'AppData/Constants';\nimport Operation from './components/Operation';\nimport GroupOfOperations from './components/GroupOfOperations';\nimport SpecErrors from './components/SpecErrors';\nimport AddOperation from './components/AddOperation';\nimport GoToDefinitionLink from './components/GoToDefinitionLink';\nimport APIRateLimiting from './components/APIRateLimiting';\nimport { extractPathParameters, isSelectAll, mapAPIOperations } from './operationUtils';\nimport OperationsSelector from './components/OperationsSelector';\nimport SaveOperations from './components/SaveOperations';\n\n/**\n * This component handles the Resource page in API details though it's written in a sharable way\n * that anyone could use this to render resources in anywhere else if needed.\n *\n * @export\n * @returns {React.Component} @inheritdoc\n */\nexport default function Resources(props) {\n    const {\n        operationProps,\n        disableRateLimiting,\n        hideAPIDefinitionLink,\n        disableMultiSelect,\n        disableUpdate,\n        disableAddOperation,\n    } = props;\n\n    const [api, updateAPI] = useAPI();\n    const [pageError, setPageError] = useState(false);\n    const [operationRateLimits, setOperationRateLimits] = useState([]);\n    const [markedOperations, setSelectedOperation] = useState({});\n    const [openAPISpec, setOpenAPISpec] = useState({});\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(api.apiThrottlingPolicy);\n    const [arns, setArns] = useState([]);\n    const [resolvedSpec, setResolvedSpec] = useState({ spec: {}, errors: [] });\n\n    /**\n     *\n     *\n     * @param {*} currentPolicies\n     * @param {*} policyAction\n     * @returns\n     */\n    function resourcePoliciesReducer(currentPolicies, policyAction) {\n        const { action, data } = policyAction;\n        const { value } = data || {}; // target, verb,\n        let nextResourcePolicies = { ...currentPolicies };\n        switch (action) {\n            case 'init':\n                nextResourcePolicies = value;\n                break;\n            case 'update':\n                nextResourcePolicies[value.resourcePath][value.httpVerb][data.direction] = value;\n                break;\n            default:\n                break;\n        }\n        return nextResourcePolicies;\n    }\n    const [resourcePolicies, resourcePoliciesDispatcher] = useReducer(resourcePoliciesReducer, null);\n\n    /**\n     *\n     *\n     * @param {*} currenPaths\n     * @param {*} action\n     */\n    function operationsReducer(currentOperations, operationAction) {\n        const { action, data } = operationAction;\n        const { target, verb, value } = data || {};\n        let updatedOperation;\n        let addedOperations;\n        if (target && verb) {\n            updatedOperation = cloneDeep(currentOperations[target][verb]);\n        } else {\n            addedOperations = cloneDeep(currentOperations);\n        }\n\n        switch (action) {\n            case 'init':\n                setSelectedOperation({});\n                return data || openAPISpec.paths;\n            case 'description':\n            case 'summary':\n                updatedOperation[action] = value;\n                break;\n            case 'authType':\n                updatedOperation['x-auth-type'] = value ? 'Any' : 'None';\n                break;\n            case 'parameter':\n                if (updatedOperation.parameters) {\n                    // Get the index to check whether the same parameter exists.\n                    const index = updatedOperation.parameters.findIndex(\n                        (e) => e.in === value.in && e.name === value.name,\n                    );\n                    if (index === -1) { // Parameter with name and in does not exists.\n                        if (value.in === 'body') {\n                            // Get the index of existing body param.\n                            // This replaces if a new body parameter is added when another one exists.\n                            const bodyIndex = updatedOperation.parameters.findIndex((parameter) => {\n                                return parameter.in === 'body';\n                            });\n                            if (bodyIndex !== -1) {\n                                updatedOperation.parameters[bodyIndex] = value;\n                            } else {\n                                updatedOperation.parameters.push(value);\n                            }\n                        } else {\n                            updatedOperation.parameters.push(value);\n                        }\n                    } else {\n                        updatedOperation.parameters[index] = value;\n                    }\n                } else {\n                    updatedOperation.parameters = [value];\n                }\n                break;\n            case 'requestBody':\n                updatedOperation[action] = value;\n                break;\n            case 'deleteParameter':\n                updatedOperation.parameters = updatedOperation.parameters.filter((parameter) => {\n                    return !(parameter.in === value.in && parameter.name === value.name);\n                });\n                break;\n            case 'throttlingPolicy':\n                updatedOperation['x-throttling-tier'] = value;\n                break;\n            case 'amznResourceName':\n                updatedOperation['x-amzn-resource-name'] = value;\n                break;\n            case 'amznResourceTimeout':\n                updatedOperation['x-amzn-resource-timeout'] = value;\n                break;\n            case 'scopes':\n                if (!updatedOperation.security) {\n                    updatedOperation.security = [{ default: [] }];\n                } else if (!updatedOperation.security.find((item) => item.default)) {\n                    updatedOperation.security.push({ default: [] });\n                }\n                updatedOperation.security.find((item) => item.default).default = value;\n                break;\n            case 'add': {\n                const parameters = extractPathParameters(data.target, openAPISpec);\n                if (!addedOperations[data.target]) {\n                    // If target is not there add an empty object\n                    addedOperations[data.target] = {};\n                }\n                let alreadyExistCount = 0;\n                for (const currentVerb of data.verbs) {\n                    if (addedOperations[data.target][currentVerb]) {\n                        const message = `Operation already exist with ${data.target} and ${currentVerb}`;\n                        Alert.warning(message);\n                        console.warn(message);\n                        alreadyExistCount++;\n                    } else {\n                        // use else condition because continue is not allowed by es-lint rules\n                        addedOperations[data.target][currentVerb] = {\n                            'x-wso2-new': true, // This is to identify unsaved newly added operations, Remove when PUT\n                            'x-auth-type': 'Application & Application User', // By default security is enabled\n                            responses: { 200: { description: 'ok' } },\n                            parameters,\n                        };\n                    }\n                }\n                if (alreadyExistCount === data.verbs.length) {\n                    Alert.error('Operation(s) already exist!');\n                    return currentOperations;\n                }\n                return addedOperations;\n            }\n            default:\n                return currentOperations;\n        }\n        return { ...currentOperations, [target]: { ...currentOperations[target], [verb]: updatedOperation } };\n    }\n    const [operations, operationsDispatcher] = useReducer(operationsReducer, {});\n    /**\n     *\n     *\n     * @param {*} operation\n     * @param {*} checked\n     */\n    function onOperationSelectM(operation, checked) {\n        const { target, verb } = operation;\n        setSelectedOperation((currentSelections) => {\n            const nextSelectedOperations = cloneDeep(currentSelections);\n            if (!nextSelectedOperations[target]) {\n                nextSelectedOperations[target] = {};\n            }\n            if (checked) {\n                nextSelectedOperations[target][verb] = checked;\n            } else {\n                delete nextSelectedOperations[target][verb];\n            }\n            if (isEmpty(nextSelectedOperations[target])) {\n                delete nextSelectedOperations[target];\n            }\n            return nextSelectedOperations;\n        });\n    }\n    const onMarkAsDelete = useCallback(onOperationSelectM, [setSelectedOperation]);\n\n    // can't depends on API id because we need to consider the changes in operations in api object\n    // memoized (https://reactjs.org/docs/hooks-reference.html#usememo) to improve pref,\n    // localized to inject local apiThrottlingPolicy data\n    const localAPI = useMemo(\n        () => ({\n            id: api.id,\n            apiThrottlingPolicy,\n            scopes: api.scopes,\n            operations: api.isAPIProduct() ? {} : mapAPIOperations(api.operations),\n            endpointConfig: api.endpointConfig,\n        }),\n        [api, apiThrottlingPolicy],\n    );\n    /**\n     *\n     * @param {*} rawSpec The original swagger content.\n     * @returns {null}\n     */\n    function resolveAndUpdateSpec(rawSpec) {\n        /*\n         * Deep copying the spec.\n         * Otherwise it will resolved to the original parameter passed (rawSpec) to the validate method.\n         * We will not alter the provided spec.\n         */\n        const specCopy = cloneDeep(rawSpec);\n        /*\n        * Used SwaggerParser.validate() because we can get the errors as well.\n        */\n        SwaggerParser.validate(specCopy, (err, result) => {\n            setResolvedSpec(() => {\n                const errors = err ? [err] : [];\n                return {\n                    spec: result,\n                    errors,\n                };\n            });\n        });\n        operationsDispatcher({ action: 'init', data: rawSpec.paths });\n        setOpenAPISpec(rawSpec);\n    }\n\n    /**\n     *\n     * Update the swagger using /swagger PUT operation and then fetch the updated API Object doing a apis/{api-uuid} GET\n     * @param {JSON} spec Updated full OpenAPI spec ready to PUT\n     * @returns {Promise} Promise resolving to updated API object\n     */\n    function updateSwagger(spec) {\n        return api\n            .updateSwagger(spec)\n            .then((response) => resolveAndUpdateSpec(response.body))\n            .then(updateAPI)\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    setPageError(error.response.body);\n                } else {\n                    Alert.error('Error while updating the definition');\n                }\n            });\n    }\n\n    /**\n     *\n     * Save the OpenAPI changes using REST API, type parameter is required to\n     * identify the locally created data structured, i:e type `operation` will assume that `data` contains the\n     * object structure of locally created operation object which is a combination of REST API\n     * response `operations` field and OpenAPI spec operation information\n     * @param {String} type Type of data object\n     * @param {Object} data Data object\n     * @returns {Promise|null} A promise object which resolve to Swagger PUT response body.\n     */\n    function updateOpenAPI(type) {\n        const copyOfOperations = cloneDeep(operations);\n        switch (type) {\n            case 'save':\n                if (isSelectAll(markedOperations, copyOfOperations)) {\n                    const message = 'At least one operation is required for the API';\n                    Alert.warning(message);\n                    return Promise.reject(new Error(message));\n                }\n                for (const [target, verbs] of Object.entries(markedOperations)) {\n                    for (const verb of Object.keys(verbs)) {\n                        delete copyOfOperations[target][verb];\n                        if (isEmpty(copyOfOperations[target])) {\n                            delete copyOfOperations[target];\n                        }\n                    }\n                }\n                // TODO: use better alternative (optimize performance) to identify newly added operations ~tmkb\n                for (const [, verbs] of Object.entries(copyOfOperations)) {\n                    for (const [, verbInfo] of Object.entries(verbs)) {\n                        if (verbInfo['x-wso2-new']) {\n                            delete verbInfo['x-wso2-new'];\n                        }\n                    }\n                }\n                break;\n            default:\n                return Promise.reject(new Error('Unsupported resource operation!'));\n        }\n        if (apiThrottlingPolicy !== api.apiThrottlingPolicy) {\n            return updateAPI({ apiThrottlingPolicy })\n                .catch((error) => {\n                    console.error(error);\n                    Alert.error('Error while updating the API');\n                })\n                .then(() => updateSwagger({ ...openAPISpec, paths: copyOfOperations }));\n        } else {\n            return updateSwagger({ ...openAPISpec, paths: copyOfOperations });\n        }\n    }\n\n    useEffect(() => {\n        API.getAmznResourceNames(api.id)\n            .then((response) => {\n                if (response.body && response.body.list) {\n                    setArns(response.body.list);\n                }\n            });\n    }, []);\n\n    useEffect(() => {\n        // Update the Swagger spec object when API object gets changed\n        api.getSwagger()\n            .then((response) => {\n                resolveAndUpdateSpec(response.body);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                }\n                console.error(error);\n            });\n        if (api.isSOAPToREST()) {\n            const promisedInPolicies = api.getResourcePolicies('in');\n            const promisedOutPolicies = api.getResourcePolicies('out');\n            Promise.all([promisedInPolicies, promisedOutPolicies])\n                .then(([inPolicies, outPolicies]) => {\n                    const mappedPolicies = {};\n                    for (const policy of inPolicies.body.list) {\n                        const { resourcePath, httpVerb } = policy;\n                        if (!mappedPolicies[resourcePath]) {\n                            mappedPolicies[resourcePath] = {\n                                [httpVerb]: { in: policy },\n                            };\n                        } else {\n                            mappedPolicies[resourcePath][httpVerb] = { in: policy };\n                        }\n                    }\n                    for (const policy of outPolicies.body.list) {\n                        const { resourcePath, httpVerb } = policy;\n                        if (!mappedPolicies[resourcePath]) {\n                            mappedPolicies[resourcePath] = {\n                                [httpVerb]: { out: policy },\n                            };\n                        } else {\n                            mappedPolicies[resourcePath][httpVerb].out = policy;\n                        }\n                    }\n                    resourcePoliciesDispatcher({ action: 'init', data: { value: mappedPolicies } });\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    }\n                    setPageError(error.message);\n                    console.error(error);\n                });\n        }\n        // Fetch API level throttling policies only when the page get mounted for the first time `componentDidMount`\n        API.policies('api').then((response) => {\n            setOperationRateLimits(response.body.list);\n        });\n        // TODO: need to handle the error cases through catch ~tmkb\n    }, [api.id]);\n\n    // Note: Make sure not to use any hooks after/within this condition , because it returns conditionally\n    // If you do so, You will probably get `Rendered more hooks than during the previous render.` exception\n    if ((!pageError && isEmpty(openAPISpec)) || (resolvedSpec.errors.length === 0 && isEmpty(resolvedSpec.spec))) {\n        return (\n            <Grid container direction='row' justify='center' alignItems='center'>\n                <Grid item>\n                    <CircularProgress disableShrink />\n                </Grid>\n            </Grid>\n        );\n    }\n    return (\n        <Grid container direction='row' justify='flex-start' spacing={2} alignItems='stretch'>\n            {pageError && (\n                <Grid item md={12}>\n                    <Banner onClose={() => setPageError(null)} disableActions type='error' message={pageError} />\n                </Grid>\n            )}\n            {!disableRateLimiting && (\n                <Grid item md={12}>\n                    <APIRateLimiting\n                        operationRateLimits={operationRateLimits}\n                        value={apiThrottlingPolicy}\n                        onChange={setApiThrottlingPolicy}\n                        isAPIProduct={api.isAPIProduct()}\n                    />\n                </Grid>\n            )}\n            {!isRestricted(['apim:api_create'], api) && !disableAddOperation && (\n                <Grid item md={12} xs={12}>\n                    <AddOperation operationsDispatcher={operationsDispatcher} />\n                </Grid>\n            )}\n            {resolvedSpec.errors.length > 0 && <SpecErrors specErrors={resolvedSpec.errors} />}\n            <Grid item md={12}>\n                <Paper>\n                    {!disableMultiSelect && (\n                        <OperationsSelector\n                            operations={operations}\n                            selectedOperations={markedOperations}\n                            setSelectedOperation={setSelectedOperation}\n                        />\n                    )}\n                    {Object.entries(operations).map(([target, verbObject]) => (\n                        <Grid key={target} item md={12}>\n                            <GroupOfOperations openAPI={openAPISpec} tag={target}>\n                                <Grid\n                                    container\n                                    direction='column'\n                                    justify='flex-start'\n                                    spacing={1}\n                                    alignItems='stretch'\n                                >\n                                    {Object.entries(verbObject).map(([verb, operation]) => {\n                                        return CONSTS.HTTP_METHODS.includes(verb) ? (\n                                            <Grid key={`${target}/${verb}`} item>\n                                                <Operation\n                                                    target={target}\n                                                    verb={verb}\n                                                    highlight\n                                                    resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                                                    resourcePolicy={\n                                                        resourcePolicies\n                                                        && resourcePolicies[target.slice(1)]\n                                                        && resourcePolicies[target.slice(1)][verb]\n                                                    }\n                                                    operationsDispatcher={operationsDispatcher}\n                                                    spec={openAPISpec}\n                                                    operation={operation}\n                                                    operationRateLimits={operationRateLimits}\n                                                    api={localAPI}\n                                                    markAsDelete={Boolean(markedOperations[target]\n                                                        && markedOperations[target][verb])}\n                                                    onMarkAsDelete={onMarkAsDelete}\n                                                    disableUpdate={\n                                                        disableUpdate || isRestricted(['apim:api_create'], api)\n                                                    }\n                                                    disableMultiSelect={disableMultiSelect}\n                                                    arns={arns}\n                                                    {...operationProps}\n                                                    resolvedSpec={resolvedSpec.spec}\n                                                />\n                                            </Grid>\n                                        ) : null;\n                                    })}\n                                </Grid>\n                            </GroupOfOperations>\n                        </Grid>\n                    ))}\n                </Paper>\n                <Grid\n                    style={{ marginTop: '25px' }}\n                    container\n                    direction='row'\n                    justify='space-between'\n                    alignItems='center'\n                >\n                    {!disableUpdate && (\n                        <SaveOperations\n                            operationsDispatcher={operationsDispatcher}\n                            updateOpenAPI={updateOpenAPI}\n                            api={api}\n                        />\n                    )}\n                    {!hideAPIDefinitionLink && <GoToDefinitionLink api={api} />}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nResources.defaultProps = {\n    operationProps: { disableDelete: false },\n    disableUpdate: false,\n    disableRateLimiting: false,\n    disableMultiSelect: false,\n    hideAPIDefinitionLink: false,\n    disableAddOperation: false,\n};\n\nResources.propTypes = {\n    disableRateLimiting: PropTypes.bool,\n    hideAPIDefinitionLink: PropTypes.bool,\n    disableMultiSelect: PropTypes.bool,\n    disableAddOperation: PropTypes.bool,\n    disableUpdate: PropTypes.bool,\n    operationProps: PropTypes.shape({\n        disableDelete: PropTypes.bool,\n    }),\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage } from 'react-intl';\n\nimport Resources from './Resources';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APIOperations() {\n    return (\n        <>\n            <Box mb={4}>\n                <Typography variant='h4' gutterBottom>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.APIOperations.title'\n                        defaultMessage='Resources'\n                    />\n                </Typography>\n            </Box>\n            <Resources />\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { FormattedMessage } from 'react-intl';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Box from '@material-ui/core/Box';\nimport API from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nimport Resources from 'AppComponents/Apis/Details/Resources/Resources';\nimport APIRateLimiting from '../Resources/components/APIRateLimiting';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APIProductOperations() {\n    const [api, updateAPI] = useAPI();\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(api.apiThrottlingPolicy);\n    const [operationRateLimits, setOperationRateLimits] = useState([]);\n    const [isSaving, setIsSaving] = useState(false);\n    useEffect(() => {\n        // Fetch API level throttling policies only when the page get mounted for the first time `componentDidMount`\n        API.policies('api').then((response) => {\n            setOperationRateLimits(response.body.list);\n        });\n        // TODO: need to handle the error cases through catch ~tmkb\n    }, []);\n\n    /**\n     *\n     *\n     */\n    function saveChanges() {\n        setIsSaving(true);\n        updateAPI({ apiThrottlingPolicy }).finally(() => setIsSaving(false));\n    }\n    return (\n        <Grid container spacing={3}>\n            <Grid item md={12}>\n                <Typography variant='h4' gutterBottom>\n                    Product Resources\n                    <Box component='div' display='inline'>\n                        <Link to={'/api-products/' + api.id + '/resources/edit'}>\n                            <Button size='small'>\n                                <EditIcon />\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.Resources.edit.resources.button'\n                                    defaultMessage='Edit Resources'\n                                />\n                            </Button>\n                        </Link>\n                    </Box>\n                </Typography>\n            </Grid>\n            <Grid item md={12}>\n                <APIRateLimiting\n                    operationRateLimits={operationRateLimits}\n                    api={api}\n                    isAPIProduct\n                    value={apiThrottlingPolicy}\n                    onChange={setApiThrottlingPolicy}\n                />\n            </Grid>\n            {!isRestricted(['apim:api_create'], api) && (\n                <Grid item md={12}>\n                    <Box ml={1}>\n                        <Button onClick={saveChanges} disabled={false} variant='contained' size='small' color='primary'>\n                            Save\n                            {isSaving && <CircularProgress size={24} />}\n                        </Button>\n                        <Box display='inline' ml={1}>\n                            <Button\n                                size='small'\n                                variant='outlined'\n                                onClick={() => setApiThrottlingPolicy(api.apiThrottlingPolicy)}\n                            >\n                                Reset\n                            </Button>\n                        </Box>\n                    </Box>\n                </Grid>\n            )}\n\n            <Grid item md={12}>\n                <Resources\n                    hideAPIDefinitionLink\n                    disableUpdate\n                    disableRateLimiting\n                    operationProps={{ disableDelete: true }}\n                    disableMultiSelect\n                    disableAddOperation\n                />\n            </Grid>\n        </Grid>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable array-callback-return */\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"operationObj\"] }] */\n\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport cloneDeep from 'lodash.clonedeep';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport ProductResourcesEditWorkspace from './ProductResourcesEditWorkspace';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\n\n/**\n *\n *\n * @returns\n */\nfunction ProductResourcesEdit() {\n    const classes = useStyles();\n\n    // Get the current api product object from the context\n    const { api, updateAPI } = useContext(APIContext);\n    const apiCopy = cloneDeep(api);\n    const { apis } = apiCopy;\n\n    // Define states\n    const [apiResources, setApiResources] = useState(apis);\n    const [updating, setUpdating] = useState(false);\n    // Initialize the rest api libraries\n\n    const save = () => {\n        setUpdating(true);\n\n        const updatePromise = updateAPI({ apis: apiResources }, true);\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.titleWrapper}>\n                <Typography variant='h4' align='left' className={classes.mainTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.ProductResources.ProductResourcesEdit.title'\n                        defaultMessage='Manage Resources'\n                    />\n                </Typography>\n            </div>\n            <div className={classes.contentWrapper}>\n                <ProductResourcesEditWorkspace\n                    apiResources={apiResources}\n                    setApiResources={setApiResources}\n                    api={api}\n                />\n                <div className={classes.buttonWrapper}>\n                    <Grid container direction='row' alignItems='flex-start' spacing={4}>\n                        <Grid item>\n                            <div>\n                                <Button variant='contained' color='primary' onClick={save} disabled={updating}>\n                                    {updating && (\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.updating'\n                                            defaultMessage='Updating ...'\n                                        />\n                                    )}\n                                    {!updating && (\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.save'\n                                            defaultMessage='Save'\n                                        />\n                                    )}\n                                </Button>\n                            </div>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.ProductResources.ProductResourcesEdit.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductResourcesEdit;\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, { useState } from 'react';\nimport {\n    Typography,\n    Grid,\n    withStyles,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    FormControl,\n    Divider,\n    Button,\n    Card,\n    CardContent,\n    CardActions,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst styles = (theme) => ({\n    inlineMessageContainer: {\n        marginBottom: theme.spacing(1),\n    },\n    endpointTypeCard: {\n        margin: theme.spacing(1),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n        height: theme.spacing(40),\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardContent: {\n        height: theme.spacing(40),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n    },\n    cardActions: {\n        justifyContent: 'flex-end',\n        borderTop: 'solid #e0e0e0 thin',\n    },\n});\n\n/**\n * Component to create new endpoint.\n * This component will render if the api object does not have an endpoint configuration, letting users to create a\n * new endpoint configuration based on their requirement.\n * Following endpoint types are supported.\n * 1. HTTP/ SOAP endpoints\n * 2. Prototyped/ Mock endpoints\n * 3. AWS Lambda endpoints\n * 4. Dynamic Endpoints\n *\n * @param {any} props The input props.\n * @return {any} The HTML representation of the component.\n * */\nfunction NewEndpointCreate(props) {\n    const {\n        classes,\n        intl,\n        generateEndpointConfig,\n        apiType,\n    } = props;\n    const [endpointImplType, setImplType] = useState('mock');\n    const endpointTypes = [\n        {\n            type: 'http',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.http.endpoint',\n                defaultMessage: 'HTTP/ REST Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.http.endpoint.description',\n                defaultMessage: 'A REST API endpoint based on a URI template.',\n            }),\n            options: null,\n            disabled: ['SOAPTOREST'],\n        },\n        {\n            type: 'address',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.soap.endpoint',\n                defaultMessage: 'HTTP/ SOAP Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.soap.endpoint.description',\n                defaultMessage: 'The direct URI of the web service.',\n            }),\n            options: null,\n            disabled: ['GRAPHQL'],\n        },\n        {\n            type: 'prototyped',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.prototype.endpoint',\n                defaultMessage: 'Prototype Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.prototype.endpoint.description',\n                defaultMessage: 'Use the inbuilt JavaScript engine to prototype the API or provide an endpoint'\n                    + ' to a prototype API. The inbuilt JavaScript engine does support prototype SOAP APIs',\n            }),\n            options: [\n                {\n                    type: 'mock',\n                    name: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.NewEndpointCreate.prototype.implementation',\n                        defaultMessage: 'Prototype Implementation',\n                    }),\n                    disabled: ['SOAP', 'SOAPTOREST'],\n                },\n                {\n                    type: 'prototyped',\n                    name: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.NewEndpointCreate.default.prototype.endpoints',\n                        defaultMessage: 'Prototype Endpoint',\n                    }),\n                    disabled: [],\n                },\n            ],\n            disabled: ['GRAPHQL'],\n        },\n        {\n            type: 'dynamic',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.dynamic.endpoint',\n                defaultMessage: 'Dynamic Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.dynamic.endpoint.description',\n                defaultMessage: 'If you need to send the request to the URI specified in the TO header.',\n            }),\n            options: null,\n            disabled: [],\n        },\n        {\n            type: 'awslambda',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.awslambda.endpoint',\n                defaultMessage: 'AWS Lambda Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.awslambda.endpoint.description',\n                defaultMessage: 'If you need to invoke AWS Lambda functions through API gateway.',\n            }),\n            options: null,\n            disabled: ['SOAPTOREST', 'GRAPHQL'],\n        },\n    ];\n\n    return (\n        <>\n            <Typography variant='h4' align='left' className={classes.titleWrapper}>\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.NewEndpointCreate.add.endpoints.header'\n                    defaultMessage='Select an Endpoint Type to Add'\n                />\n            </Typography>\n            <Grid container justify='flex-start' spacing={2}>\n                {endpointTypes.filter((type) => !type.disabled.includes(apiType)).map(((type) => {\n                    return (\n                        <Grid item className={classes.inlineMessageContainer}>\n                            <Card className={classes.endpointTypeCard}>\n                                <CardContent className={classes.cardContent}>\n                                    <Typography variant='h5' component='h3' className={classes.head}>\n                                        {type.name}\n                                    </Typography>\n                                    <Divider />\n                                    <Typography component='p' className={classes.content}>\n                                        {type.description}\n                                    </Typography>\n                                    {type.options\n                                        ? (\n                                            <div>\n                                                <FormControl component='fieldset' className={classes.formControl}>\n                                                    <RadioGroup\n                                                        aria-label='EndpointType'\n                                                        name='endpointType'\n                                                        className={classes.radioGroup}\n                                                        value={endpointImplType}\n                                                        onChange={(event) => { setImplType(event.target.value); }}\n                                                    >\n                                                        {type.options.filter((types) => !types.disabled\n                                                            .includes(apiType)).map(((option) => {\n                                                            return (\n                                                                <FormControlLabel\n                                                                    value={option.type}\n                                                                    control={<Radio color='primary' />}\n                                                                    label={option.name}\n                                                                />\n                                                            );\n                                                        }))}\n                                                    </RadioGroup>\n                                                </FormControl>\n                                            </div>\n                                        )\n                                        : <div /> }\n                                </CardContent>\n                                <CardActions className={classes.cardActions}>\n                                    <Button\n                                        color='primary'\n                                        className={classes.button}\n                                        onClick={() => generateEndpointConfig(type.type, endpointImplType)}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.NewEndpointCreate.create.button'\n                                            defaultMessage='Add'\n                                        />\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    );\n                }))}\n            </Grid>\n        </>\n    );\n}\n\nNewEndpointCreate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    generateEndpointConfig: PropTypes.func.isRequired,\n    apiType: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(injectIntl(NewEndpointCreate));\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, {\n    useContext,\n    lazy,\n    Suspense,\n    useState,\n} from 'react';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport {\n    Chip,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Utils from 'AppData/Utils';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"GenResourceMonaco\" */));\n\n/**\n * The generic resource component.\n *\n * @param {any} props The input props\n * @return {any} The HTML representation of the component.\n * */\nfunction GenericResource(props) {\n    const {\n        resourcePath, resourceMethod, scriptContent, onChange, originalScript,\n    } = props;\n    const { api } = useContext(APIContext);\n    const [showReset, setShowReset] = useState(false);\n\n    const useStyles = makeStyles((theme) => {\n        let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[resourceMethod] : null;\n        let chipTextColor = '#000000';\n        if (!chipColor) {\n            console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n            chipColor = '#cccccc';\n        } else {\n            chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[resourceMethod]);\n        }\n\n        return {\n            editor: {\n                width: '100%',\n                height: '500px',\n            },\n            chipActive: {\n                borderRadius: '5px',\n                width: '80%',\n                backgroundColor: chipColor,\n                color: chipTextColor,\n                ...theme.typography.button,\n            },\n            resourcePathContainer: {\n                paddingTop: theme.spacing(1),\n            },\n            prototypeResourceHeader: {\n                borderBottom: `${chipColor} 1px solid`,\n            },\n            chipExpansionPanel: {\n                backgroundColor: Utils.hexToRGBA(chipColor, 0.1),\n                border: `${chipColor} 1px solid`,\n            },\n            scriptResetButton: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: '10px',\n            },\n\n        };\n    });\n\n    const classes = useStyles();\n\n    return (\n        <Grid item>\n            <ExpansionPanel className={classes.chipExpansionPanel}>\n                <ExpansionPanelSummary className={classes.prototypeResourceHeader} expandIcon={<ExpandMoreIcon />}>\n                    <Grid container spacing={12}>\n                        <Grid xs={1}>\n                            <Chip label={resourceMethod} className={classes.chipActive} />\n                        </Grid>\n                        <Grid xs className={classes.resourcePathContainer}>\n                            <Typography>{resourcePath}</Typography>\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.genericResourceContent}>\n                    <Grid container direction='column'>\n                        <Grid item className={classes.scriptResetButton}>\n                            <Typography variant='subtitle2'>\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.Prototype.InlineEndpoints.script'\n                                    defaultMessage='Script'\n                                />\n                            </Typography>\n                            {showReset\n                            && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => {\n                                        onChange(originalScript, resourcePath, resourceMethod);\n                                    }}\n                                >\n                                    Reset\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            <Suspense fallback={<CircularProgress />}>\n                                <MonacoEditor\n                                    height='50vh'\n                                    width='100%'\n                                    theme='vs-dark'\n                                    value={scriptContent}\n                                    options={{\n                                        selectOnLineNumbers: true,\n                                        readOnly: `${isRestricted(['apim:api_create'], api)}`,\n                                    }}\n                                    language='javascript'\n                                    onChange={(content) => {\n                                        setShowReset(true);\n                                        onChange(content, resourcePath, resourceMethod);\n                                    }}\n                                />\n                            </Suspense>\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Grid>\n    );\n}\n\nGenericResource.propTypes = {\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n    scriptContent: PropTypes.string.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default GenericResource;\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport GenericResource from 'AppComponents/Apis/Details/Endpoints/Prototype/GenericResource';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst xMediationScriptProperty = 'x-mediation-script';\n\nconst defaultScript = '/* mc.setProperty(\\'CONTENT_TYPE\\', \\'application/json\\');\\n\\t'\n    + 'mc.setPayloadJSON(\\'{ \"data\" : \"sample JSON\"}\\');*/\\n'\n    + '/*Uncomment the above comment block to send a sample response.*/';\n\n/**\n * The inline endpoints component.\n * This component lists the api resources to add custom mediation scripts.\n *\n * @param {any} props The input props.\n * @return {any} The HTML representation of the component.\n * */\nfunction InlineEndpoints(props) {\n    const { api } = useContext(APIContext);\n    const { paths, updatePaths } = props;\n\n    /**\n     * Handles the onChange event of the script editor.\n     *\n     * @param {string} value The editor content\n     * @param {string} path The path value of the resource.\n     * @param {string} method The resource method.\n     * */\n    const onScriptChange = (value, path, method) => {\n        const tmpPaths = JSON.parse(JSON.stringify(paths));\n        tmpPaths[path][method][xMediationScriptProperty] = value.trim();\n        updatePaths(tmpPaths);\n    };\n\n    const [mockScripts, setMockScripts] = useState([]);\n\n    useEffect(() => {\n        const promisedResponse = api.getGeneratedMockScriptsOfAPI(api.id);\n        promisedResponse.then((response) => {\n            setMockScripts(response.obj.list);\n        });\n    }, []);\n\n    function getGeneratedMockScriptOfAPI(resourcePath, resourceMethod) {\n        for (let i = 0; i < mockScripts.length; i++) {\n            if (mockScripts[i].verb.toLowerCase() === resourceMethod.toLowerCase()\n                && mockScripts[i].path === resourcePath) {\n                return mockScripts[i].content;\n            }\n        }\n        return null;\n    }\n\n    return (\n        <>\n            <Grid container spacing={1} direction='column'>\n                {Object.keys(paths).map((path) => {\n                    return (\n                        Object.keys(paths[path]).map((method) => {\n                            const mediationScript = paths[path][method][xMediationScriptProperty];\n                            const script = mediationScript === undefined ? defaultScript : mediationScript;\n                            const originalScript = getGeneratedMockScriptOfAPI(path, method);\n                            return (\n                                <GenericResource\n                                    resourcePath={path}\n                                    resourceMethod={method}\n                                    onChange={onScriptChange}\n                                    scriptContent={script}\n                                    originalScript={originalScript}\n                                />\n                            );\n                        })\n                    );\n                })}\n            </Grid>\n        </>\n    );\n}\n\nInlineEndpoints.propTypes = {\n    paths: PropTypes.shape({}).isRequired,\n    updatePaths: PropTypes.func.isRequired,\n};\n\nexport default InlineEndpoints;\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport cloneDeep from 'lodash.clonedeep';\n\n/**\n * Utility method to get the endpoint property name based on the given endpoint type and category.\n *\n * @param {string} type The type of the endpoint (load_balance/ failover)\n * @param {string} category The endpoint category (production/ sandbox)\n * @return {string} The property name of the endpoints.\n */\nfunction getEndpointTypeProperty(type, category) {\n    if (type !== 'failover') {\n        return category;\n    } else {\n        return category === 'sandbox_endpoints' ? 'sandbox_failovers' : 'production_failovers';\n    }\n}\n\n/**\n * Merge the loadbalance/ failover endpoints to single object.\n *\n * @param {object} endpointConfig The endpoint config object\n * @return {object} {production: [], sandbox: []}\n * */\nfunction mergeEndpoints(endpointConfig) {\n    const type = endpointConfig.endpoint_type;\n    if (type === 'load_balance') {\n        return { production: endpointConfig.production_endpoints, sandbox: endpointConfig.sandbox_endpoints };\n    } else if (type === 'failover') {\n        const prodEps = [endpointConfig.production_endpoints].concat(endpointConfig.production_failovers);\n        const sandboxEps = [endpointConfig.sandbox_endpoints].concat(endpointConfig.sandbox_failovers);\n        return { production: prodEps, sandbox: sandboxEps };\n    }\n    return { production: [endpointConfig.production_endpoints], sandbox: [endpointConfig.sandbox_endpoints] };\n}\n\n/**\n * Method to get the endpoints templates based on the selected endpoint type (loadbalance/ failover) and whether is\n * http or address endpoint.\n *\n * @param {string} endpointType The endpoint type\n * @param {bool} isAddressEndpoint Whether the endpoint is soap or not.\n * @param {object} currentEndpointConfig The existing endpoint information.\n * @return {object} A endpoint template object.\n * */\nfunction getEndpointTemplateByType(endpointType, isAddressEndpoint, currentEndpointConfig) {\n    const tmpEndpointConfig = {};\n    if (endpointType === 'failover') {\n        tmpEndpointConfig.endpoint_type = endpointType;\n        tmpEndpointConfig.production_failovers = currentEndpointConfig.production_failovers\n            ? currentEndpointConfig.production_failovers : [];\n        tmpEndpointConfig.sandbox_failovers = currentEndpointConfig.sandbox_failovers\n            ? currentEndpointConfig.sandbox_failovers : [];\n        tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n            ? currentEndpointConfig.production_endpoints[0] : currentEndpointConfig.production_endpoints;\n        tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n            ? currentEndpointConfig.sandbox_endpoints[0] : currentEndpointConfig.sandbox_endpoints;\n        tmpEndpointConfig.failOver = 'True';\n    } else if (endpointType === 'load_balance') {\n        tmpEndpointConfig.endpoint_type = endpointType;\n        tmpEndpointConfig.algoClassName = 'org.apache.synapse.endpoints.algorithms.RoundRobin';\n        tmpEndpointConfig.algoCombo = 'org.apache.synapse.endpoints.algorithms.RoundRobin';\n        tmpEndpointConfig.sessionManagement = '';\n        tmpEndpointConfig.sessionTimeOut = '';\n        if (currentEndpointConfig.production_endpoints) {\n            tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n                ? currentEndpointConfig.production_endpoints : [currentEndpointConfig.production_endpoints];\n        }\n        if (currentEndpointConfig.sandbox_endpoints) {\n            tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n                ? currentEndpointConfig.sandbox_endpoints : [currentEndpointConfig.sandbox_endpoints];\n        }\n        tmpEndpointConfig.failOver = 'False';\n    } else {\n        tmpEndpointConfig.endpoint_type = isAddressEndpoint === true ? 'address' : 'http';\n        tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n            ? currentEndpointConfig.production_endpoints[0] : currentEndpointConfig.production_endpoints;\n        tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n            ? currentEndpointConfig.sandbox_endpoints[0] : currentEndpointConfig.sandbox_endpoints;\n        tmpEndpointConfig.failOver = 'False';\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Returns all the endpoints as a list.\n *\n * @param {object} endpointConfig The endpoint config object from the api.\n * @return {array} The list of endpoints.\n * */\nfunction endpointsToList(endpointConfig) {\n    const config = cloneDeep(endpointConfig);\n    const endpoints = [];\n    if (Array.isArray(config.production_endpoints)) {\n        endpoints.push(...config.production_endpoints);\n    } else {\n        endpoints.push(config.production_endpoints);\n    }\n\n    if (Array.isArray(config.sandbox_endpoints)) {\n        endpoints.push(...config.sandbox_endpoints);\n    } else {\n        endpoints.push(config.sandbox_endpoints);\n    }\n\n    if (config.endpoint_type === 'failover') {\n        if (config.sandbox_failovers) {\n            endpoints.push(...config.sandbox_failovers);\n        }\n        if (config.production_failovers) {\n            endpoints.push(...config.production_failovers);\n        }\n    }\n    return endpoints;\n}\n\n/**\n * Returns an endpoint config object template based on the implementation method.\n * Eg: Managed, Prototyped.\n *\n * @param {string} implementationType The endpoint implementation type.\n * @return {object} The endpoint template.\n * */\nfunction getEndpointConfigByImpl(implementationType) {\n    const tmpEndpointConfig = {};\n    if (implementationType === 'PROTOTYPED') {\n        tmpEndpointConfig.endpoint_type = 'http';\n        tmpEndpointConfig.implementation_status = 'prototyped';\n        tmpEndpointConfig.production_endpoints = { config: null, url: 'http://localhost' };\n        tmpEndpointConfig.sandbox_endpoints = { config: null, url: 'http://localhost' };\n    } else {\n        tmpEndpointConfig.endpoint_type = 'http';\n        tmpEndpointConfig.production_endpoints = { url: '' };\n        tmpEndpointConfig.sandbox_endpoints = { url: '' };\n        tmpEndpointConfig.failOver = 'False';\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Get the endpoint config based on the selected endpoint type.\n * Supported endpoint types:\n * 1. http\n * 2. address\n * 3. prototyped\n * 4. awslambda\n * 5. default (Dynamic)\n *\n * @param {string} endpointType The selected endpoint type.\n * @return {endpointConfig} Endpoint config object.\n * */\nfunction createEndpointConfig(endpointType) {\n    const tmpEndpointConfig = {};\n    switch (endpointType) {\n        case 'http':\n            tmpEndpointConfig.endpoint_type = 'http';\n            tmpEndpointConfig.failOver = 'False';\n            break;\n        case 'address':\n            tmpEndpointConfig.endpoint_type = 'address';\n            tmpEndpointConfig.failOver = 'False';\n            break;\n        case 'prototyped':\n            tmpEndpointConfig.implementation_status = 'prototyped';\n            tmpEndpointConfig.endpoint_type = 'http';\n            tmpEndpointConfig.production_endpoints = { config: null, url: 'http://localhost' };\n            tmpEndpointConfig.sandbox_endpoints = { config: null, url: 'http://localhost' };\n            break;\n        case 'awslambda':\n            tmpEndpointConfig.endpoint_type = 'awslambda';\n            tmpEndpointConfig.access_method = 'role-supplied';\n            tmpEndpointConfig.amznAccessKey = '';\n            tmpEndpointConfig.amznSecretKey = '';\n            tmpEndpointConfig.amznRegion = '';\n            break;\n        default:\n            tmpEndpointConfig.endpoint_type = 'default';\n            tmpEndpointConfig.production_endpoints = { url: 'default' };\n            tmpEndpointConfig.sandbox_endpoints = { url: 'default' };\n            tmpEndpointConfig.failOver = 'False';\n            break;\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Get the endpoint template based on endpoint type.\n *\n * @param {string} type: Endpoint type (HTTP/ Address)\n * @return {object} Endpoint Template\n * */\nfunction getEndpointTemplate(type) {\n    if (type === 'address') {\n        return { url: '', endpoint_type: 'address', template_not_supported: false };\n    }\n    return { url: '', template_not_supported: false };\n}\n\nexport {\n    getEndpointTypeProperty,\n    mergeEndpoints,\n    getEndpointTemplateByType,\n    endpointsToList,\n    getEndpointConfigByImpl,\n    createEndpointConfig,\n    getEndpointTemplate,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, TextField, MenuItem } from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n * The base component for advanced endpoint configurations.\n * @param {any} props The props that are being passed\n * @returns {any} The html representation of the component.\n */\nfunction EndpointSecurity(props) {\n    const { api } = useContext(APIContext);\n    const { intl, securityInfo, onChangeEndpointAuth } = props;\n    const [endpointSecurityInfo, setEndpointSecurityInfo] = useState({\n        type: 'BASIC',\n        username: '',\n        password: '',\n    });\n    const [securityValidity, setSecurityValidity] = useState();\n\n    const authTypes = [\n        {\n            key: 'BASIC',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.basic',\n                defaultMessage: 'Basic Auth',\n            }),\n        },\n        {\n            key: 'DIGEST',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.digest.auth',\n                defaultMessage: 'Digest Auth',\n            }),\n        },\n    ];\n    useEffect(() => {\n        const tmpSecurity = {};\n        if (securityInfo !== null) {\n            const { type, username, password } = securityInfo;\n            tmpSecurity.type = type;\n            tmpSecurity.username = username;\n            tmpSecurity.password = password === '' ? '**********' : password;\n        }\n        setEndpointSecurityInfo(tmpSecurity);\n    }, [props]);\n\n    const validateAndUpdateSecurityInfo = (field) => {\n        if (!endpointSecurityInfo[field]) {\n            setSecurityValidity({ ...securityValidity, [field]: false });\n        } else {\n            setSecurityValidity({ ...securityValidity, [field]: true });\n        }\n        onChangeEndpointAuth(endpointSecurityInfo[field], field);\n    };\n    return (\n        <Grid container direction='row' spacing={2}>\n            <Grid item xs={6}>\n                <TextField\n                    disabled={isRestricted(['apim:api_create'], api)}\n                    fullWidth\n                    select\n                    value={endpointSecurityInfo.type}\n                    variant='outlined'\n                    onChange={(event) => {\n                        onChangeEndpointAuth(event.target.value, 'type');\n                    }}\n                    inputProps={{\n                        name: 'key',\n                        id: 'auth-type-select',\n                    }}\n                >\n                    {authTypes.map((type) => (\n                        <MenuItem value={type.key}>{type.value}</MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid item xs={6} />\n\n            <Grid item xs={6}>\n                <TextField\n                    disabled={isRestricted(['apim:api_create'], api)}\n                    required\n                    fullWidth\n                    error={securityValidity && securityValidity.username === false}\n                    helperText={\n                        securityValidity && securityValidity.username === false ? (\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.no.username.error'\n                                defaultMessage='Username should not be empty'\n                            />\n                        ) : (\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.username.message'\n                                defaultMessage='Enter Username'\n                            />\n                        )\n                    }\n                    variant='outlined'\n                    id='auth-userName'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.user.name.input'\n                            defaultMessage='Username'\n                        />\n                    )}\n                    onChange={(event) => setEndpointSecurityInfo(\n                        { ...endpointSecurityInfo, username: event.target.value },\n                    )}\n                    value={endpointSecurityInfo.username}\n                    onBlur={() => validateAndUpdateSecurityInfo('username')}\n                />\n            </Grid>\n\n            <Grid item xs={6}>\n                <TextField\n                    disabled={isRestricted(['apim:api_create'], api)}\n                    required\n                    fullWidth\n                    error={securityValidity && securityValidity.password === false}\n                    helperText={\n                        securityValidity && securityValidity.password === false ? (\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.no.password.error'\n                                defaultMessage='Password should not be empty'\n                            />\n                        ) : (\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.password.message'\n                                defaultMessage='Enter Password'\n                            />\n                        )\n                    }\n                    variant='outlined'\n                    type='password'\n                    id='auth-password'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.password.input'\n                            defaultMessage='Password'\n                        />\n                    )}\n                    value={endpointSecurityInfo.password}\n                    onChange={(event) => setEndpointSecurityInfo(\n                        { ...endpointSecurityInfo, password: event.target.value },\n                    )}\n                    onBlur={() => validateAndUpdateSecurityInfo('password')}\n                />\n            </Grid>\n        </Grid>\n    );\n}\n\nEndpointSecurity.propTypes = {\n    intl: PropTypes.func.isRequired,\n    securityInfo: PropTypes.shape({}).isRequired,\n    onChangeEndpointAuth: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(EndpointSecurity);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n    Collapse,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    FormControlLabel,\n    Grid,\n    Switch,\n    Typography,\n    withStyles,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport EndpointSecurity from './GeneralConfiguration/EndpointSecurity';\nimport Certificates from './GeneralConfiguration/Certificates';\nimport API from '../../../../data/api'; // TODO: Use webpack aliases instead of relative paths ~tmkb\nimport Alert from '../../../Shared/Alert';\nimport { endpointsToList } from './endpointUtils';\n\nconst styles = (theme) => ({\n    endpointTypeSelect: {\n        width: '50%',\n    },\n    configHeaderContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    generalConfigContent: {\n        boxShadow: 'inset -1px 2px 3px 0px #c3c3c3',\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        display: 'flex',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        fontWeight: '900',\n    },\n    endpointConfigSection: {\n        padding: '10px',\n    },\n    generalConfigPanel: {\n        width: '100%',\n    },\n    securityHeading: {\n        fontWeight: 600,\n    },\n});\n\n/**\n * The component which holds the general configurations of the endpoints.\n *\n * @param {any} props The input properties to the component\n * @returns {any} The HTML representation of the component.\n * */\nfunction GeneralConfiguration(props) {\n    const {\n        intl,\n        epConfig,\n        endpointSecurityInfo,\n        handleToggleEndpointSecurity,\n        handleEndpointSecurityChange,\n        endpointType,\n        classes,\n    } = props;\n    const [isConfigExpanded, setConfigExpand] = useState(false);\n    const [endpointCertificates, setEndpointCertificates] = useState([]);\n    const { api } = useContext(APIContext);\n    const [aliasList, setAliasList] = useState([]);\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     * */\n    const saveCertificate = (certificate, endpoint, alias) => {\n        return API.addCertificate(certificate, endpoint, alias)\n            .then((resp) => {\n                if (resp.status === 201) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.add.success',\n                        defaultMessage: 'Certificate added successfully',\n                    }));\n                    const tmpCertificates = [...endpointCertificates];\n                    tmpCertificates.push({\n                        alias: resp.obj.alias,\n                        endpoint: resp.obj.endpoint,\n                    });\n                    setEndpointCertificates(tmpCertificates);\n                }\n            })\n            .catch((err) => {\n                console.error(err.message);\n                if (err.message === 'Conflict') {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.alias.exist',\n                        defaultMessage: 'Adding Certificate Failed. Certificate Alias Exists.',\n                    }));\n                } else if (err.response) {\n                    Alert.error(err.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.error',\n                        defaultMessage: 'Something went wrong while adding the certificate.',\n                    }));\n                }\n            });\n    };\n    /**\n     * Method to delete the selected certificate.\n     *\n     * @param {string} alias The alias of the certificate to be deleted.\n     * */\n    const deleteCertificate = (alias) => {\n        return API.deleteEndpointCertificate(alias)\n            .then((resp) => {\n                setEndpointCertificates(() => {\n                    if (resp.status === 200) {\n                        return endpointCertificates.filter((cert) => {\n                            return cert.alias !== alias;\n                        });\n                    } else {\n                        return -1;\n                    }\n                });\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.delete.success',\n                    defaultMessage: 'Certificate Deleted Successfully',\n                }));\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.delete.error',\n                    defaultMessage: 'Error Deleting Certificate',\n                }));\n            });\n    };\n\n    // Get the certificates from backend.\n    useEffect(() => {\n        API.getEndpointCertificates()\n            .then((resp) => {\n                const { certificates } = resp.obj;\n                const endpoints = endpointsToList(epConfig);\n                const aliases = [];\n                const filteredCertificates = certificates.filter((cert) => {\n                    aliases.push(cert.alias);\n                    for (const endpoint of endpoints) {\n                        if (endpoint && endpoint.url.indexOf(cert.endpoint) !== -1) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n                setEndpointCertificates(filteredCertificates);\n                setAliasList(aliases);\n            })\n            .catch((err) => {\n                console.error(err);\n                setEndpointCertificates([]);\n            });\n    }, []);\n\n    return (\n        <>\n            <ExpansionPanel\n                expanded={isConfigExpanded}\n                onChange={() => setConfigExpand(!isConfigExpanded)}\n                className={classes.generalConfigPanel}\n            >\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                    className={classes.configHeaderContainer}\n                >\n                    {endpointType.key === 'awslambda'\n                        ? (<div />)\n                        : (\n                            <Typography\n                                className={classes.secondaryHeading}\n                                hidden={\n                                    endpointType.key === 'default'\n                                    || endpointType.key === 'awslambda'\n                                }\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.GeneralConfiguration.endpoint.security.sub.heading'\n                                    defaultMessage='Endpoint Security'\n                                />\n                                {' '}\n:\n                                {endpointSecurityInfo !== null ? endpointSecurityInfo.type : 'NONE'}\n                            </Typography>\n                        )}\n                    {endpointType.key === 'default' || endpointType.key === 'awslambda' ? (\n                        <div />\n                    ) : (\n                        <Typography\n                            className={classes.secondaryHeading}\n                            hidden={endpointType.key === 'default' || endpointType.key === 'awslambda'}\n                        >\n                             |\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.certificates.sub.heading'\n                                defaultMessage='Certificates'\n                            />\n                            :\n                            {' '}\n                            {endpointCertificates.length}\n                        </Typography>\n                    )}\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.generalConfigContent}>\n                    <Grid container direction='row' xs={12}>\n                        {endpointType.key === 'awslambda' ? (\n                            <div />\n                        ) : (\n                            <Grid container item xs={6}>\n                                {endpointType.key === 'awslambda' ? (\n                                    <div />\n                                ) : (\n                                    <Grid\n                                        item\n                                        xs\n                                        className={classes.endpointConfigSection}\n                                        hidden={endpointType.key === 'awslambda'}\n                                    >\n                                        <FormControlLabel\n                                            value='start'\n                                            checked={endpointSecurityInfo !== null}\n                                            control={(\n                                                <Switch\n                                                    color='primary'\n                                                    disabled={isRestricted(['apim:api_create'], api)}\n                                                />\n                                            )}\n                                            label={(\n                                                <Typography className={classes.securityHeading}>\n                                                    <FormattedMessage\n                                                        id={\n                                                            'Apis.Details.Endpoints.EndpointOverview.'\n                                                            + 'endpoint.security.enable.switch'\n                                                        }\n                                                        defaultMessage='Endpoint Security'\n                                                    />\n                                                </Typography>\n                                            )}\n                                            labelPlacement='start'\n                                            onChange={handleToggleEndpointSecurity}\n                                        />\n                                        <Collapse in={endpointSecurityInfo !== null}>\n                                            <EndpointSecurity\n                                                securityInfo={endpointSecurityInfo}\n                                                onChangeEndpointAuth={handleEndpointSecurityChange}\n                                            />\n                                        </Collapse>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        )}\n                        <Grid\n                            item\n                            xs={6}\n                            className={classes.endpointConfigSection}\n                            hidden={endpointType.key === 'default' || endpointType.key === 'awslambda'}\n                        >\n                            <Certificates\n                                endpoints={endpointsToList(epConfig)}\n                                certificates={endpointCertificates}\n                                uploadCertificate={saveCertificate}\n                                deleteCertificate={deleteCertificate}\n                                aliasList={aliasList}\n                            />\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nGeneralConfiguration.propTypes = {\n    epConfig: PropTypes.shape({}).isRequired,\n    endpointSecurityInfo: PropTypes.shape({}).isRequired,\n    handleToggleEndpointSecurity: PropTypes.func.isRequired,\n    handleEndpointSecurityChange: PropTypes.func.isRequired,\n    endpointType: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(GeneralConfiguration));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport {\n    Divider,\n    Icon,\n    IconButton,\n    InputAdornment,\n    TextField,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport green from '@material-ui/core/colors/green';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n    iconButtonValid: {\n        padding: theme.spacing(1),\n        color: green[500],\n    },\n    divider: {\n        width: 1,\n        height: 28,\n        margin: 4,\n    },\n    endpointValidChip: {\n        color: 'green',\n        border: '1px solid green',\n    },\n    endpointInvalidChip: {\n        color: '#ffd53a',\n        border: '1px solid #ffd53a',\n    },\n    endpointErrorChip: {\n        color: 'red',\n        border: '1px solid red',\n    },\n});\n/**\n * This component represents a single endpoint view of the endpoints listing. This component holds the actions that\n * affect the endpont. Eg: Delete, advance configuration.\n *\n * @param {any} props The input props\n * @returns {any} The HTML representation of the component.\n * */\nfunction GenericEndpoint(props) {\n    const {\n        category,\n        endpointURL,\n        editEndpoint,\n        classes,\n        type,\n        setAdvancedConfigOpen,\n        deleteEndpoint,\n        index,\n        readOnly,\n        autoFocus,\n        name,\n        apiId,\n    } = props;\n    const [serviceUrl, setServiceUrl] = useState(endpointURL);\n    const { api } = useContext(APIContext);\n    const [isEndpointValid, setIsEndpointValid] = useState();\n    const [statusCode, setStatusCode] = useState('');\n    const [isUpdating, setUpdating] = useState(false);\n    const [isErrorCode, setIsErrorCode] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    useEffect(() => {\n        setServiceUrl(endpointURL);\n    }, [endpointURL]);\n\n    function testEndpoint(endpoint, apiID) {\n        setUpdating(true);\n        const restApi = new API();\n        restApi.testEndpoint(endpoint, apiID)\n            .then((result) => {\n                if (result.body.error !== null) {\n                    setStatusCode(result.body.error);\n                    setIsErrorCode(true);\n                } else {\n                    setStatusCode(result.body.statusCode + ' ' + result.body.statusMessage);\n                    setIsErrorCode(false);\n                }\n                if (result.body.statusCode >= 200 && result.body.statusCode < 300) {\n                    setIsEndpointValid(true);\n                    setIsErrorCode(false);\n                } else {\n                    setIsEndpointValid(false);\n                }\n            }).finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    return (\n        <div className={classes.endpointInputWrapper}>\n            <TextField\n                disabled={isRestricted(['apim:api_create'], api)}\n                label={name}\n                className={classes.textField}\n                value={serviceUrl}\n                placeholder={!serviceUrl ? 'http://appserver/resource' : ''}\n                onChange={(event) => setServiceUrl(event.target.value)}\n                onBlur={() => editEndpoint(index, category, serviceUrl)}\n                error={!serviceUrl}\n                helperText={!serviceUrl\n                    ? (\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GenericEndpoint.no.ep.error'\n                            defaultMessage='Endpoint URL should not be empty'\n                        />\n                    ) : ''}\n                variant='outlined'\n                margin='normal'\n                required\n                InputProps={{\n                    readOnly,\n                    autoFocus,\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            {statusCode && (\n                                <Chip\n                                    label={statusCode}\n                                    className={isEndpointValid ? classes.endpointValidChip : iff(\n                                        isErrorCode,\n                                        classes.endpointErrorChip, classes.endpointInvalidChip,\n                                    )}\n                                    variant='outlined'\n                                />\n                            )}\n                            {!api.isWebSocket() && (\n                                <IconButton\n                                    className={isEndpointValid ? classes.iconButtonValid : classes.iconButton}\n                                    aria-label='TestEndpoint'\n                                    onClick={() => testEndpoint(serviceUrl, apiId)}\n                                    disabled={(isRestricted(['apim:api_create'], api)) || isUpdating}\n                                >\n                                    {isUpdating\n                                        ? <CircularProgress size={20} />\n                                        : (\n                                            <Icon>\n                                        check_circle\n                                            </Icon>\n                                        )}\n                                </IconButton>\n                            )}\n                            {type === 'prototyped'\n                                ? <div />\n                                : (\n                                    <IconButton\n                                        className={classes.iconButton}\n                                        aria-label='Settings'\n                                        onClick={() => setAdvancedConfigOpen(index, type, category)}\n                                        disabled={(isRestricted(['apim:api_create'], api))}\n                                    >\n                                        <Icon>\n                                        settings\n                                        </Icon>\n                                    </IconButton>\n                                )}\n                            {(index > 0) ? <Divider className={classes.divider} /> : <div />}\n                            {(type === 'load_balance' || type === 'failover') ? (\n                                <IconButton\n                                    className={classes.iconButton}\n                                    aria-label='Delete'\n                                    color='secondary'\n                                    onClick={() => deleteEndpoint(index, type, category)}\n                                    disabled={(isRestricted(['apim:api_create'], api))}\n                                >\n                                    <Icon>\n                                        delete\n                                    </Icon>\n                                </IconButton>\n                            ) : (<div />)}\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </div>\n    );\n}\n\nGenericEndpoint.defaultProps = {\n    readOnly: false,\n    autoFocus: false,\n    name: 'Service URL',\n};\n\nGenericEndpoint.propTypes = {\n    endpointURL: PropTypes.string.isRequired,\n    deleteEndpoint: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n    setAdvancedConfigOpen: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n    editEndpoint: PropTypes.func.isRequired,\n    category: PropTypes.string.isRequired,\n    readOnly: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n    name: PropTypes.string,\n    apiId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(GenericEndpoint);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useContext } from 'react';\n\nimport {\n    Icon,\n    IconButton,\n    InputAdornment,\n    TextField,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n});\n\n/**\n * This component represents the view and functions of endpoint add.\n *\n * @param {any} props The input props.\n * @returns {any} HTML representation of the component.\n * */\nfunction GenericEndpointAdd(props) {\n    const {\n        classes,\n        addEndpoint,\n    } = props;\n    const [serviceUrl, setServiceUrl] = useState('');\n    const { api } = useContext(APIContext);\n\n    /**\n     * The method to handle endpoint add button click action.\n     * */\n    const onAddEndpoint = () => {\n        setServiceUrl('');\n        addEndpoint(serviceUrl);\n    };\n\n    return (\n        <div className={classes.endpointInputWrapper}>\n            <TextField\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GenericEndpoint.service.url.input'\n                        defaultMessage='Service URL'\n                    />\n                )}\n                disabled={isRestricted(['apim:api_create'], api)}\n                className={classes.textField}\n                value={serviceUrl}\n                fullWidth\n                onChange={(event) => setServiceUrl(event.target.value)}\n                variant='outlined'\n                margin='normal'\n                placeholder='Enter the Endpoint URL and press + button'\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            <IconButton\n                                onClick={onAddEndpoint}\n                                color='green'\n                                className={classes.iconButton}\n                                aria-label='Search'\n                                disabled={serviceUrl === ''}\n                            >\n                                <Icon>\n                                    add\n                                </Icon>\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </div>\n    );\n}\n\nGenericEndpointAdd.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    addEndpoint: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(GenericEndpointAdd);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Grid, withStyles } from '@material-ui/core';\nimport { injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport GenericEndpoint from './GenericEndpoint';\nimport GenericEndpointAdd from './GenericEndpointAdd';\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        display: 'flex',\n    },\n    epInput: {\n        width: '100%',\n    },\n    epTypeWrapper: {\n        display: 'flex',\n        padding: '5px',\n    },\n    epTypeName: {\n        paddingTop: '10px',\n        fontWeight: 600,\n    },\n    epConfig: {\n        justifyContent: 'flex-end',\n    },\n    leftArrow: {\n        paddingTop: '6px',\n    },\n    leftArrowLight: {\n        color: '#c5c5c5',\n        paddingTop: '6px',\n    },\n    dialogHeader: {\n        fontWeight: 600,\n    },\n    listItemOdd: {\n        background: '#ececec',\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.grey[400],\n        },\n    },\n    listItem: {\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.grey[400],\n        },\n    },\n});\n\n/**\n * The Component for endpoint listing.\n * @param {*} props The props that are being passed to the component.\n * @returns {any} The HTML view of the ep listing component.\n */\nfunction EndpointListing(props) {\n    const {\n        classes,\n        category,\n        apiEndpoints,\n        epType,\n        failOvers,\n        editEndpoint,\n        addNewEndpoint,\n        removeEndpoint,\n        setAdvancedConfigOpen,\n        apiId,\n    } = props;\n    const [endpointType, setEndpointType] = useState(epType);\n    const [endpoints, setEndpoints] = useState([{ url: 'http://myservice/endpoint' }]);\n    const selectedRef = useRef(null);\n\n    /**\n     * Method to add a new endpoint.\n     *\n     * @param {string} url The url of the endpoint that needs to be added.\n     * */\n    const addEndpoint = (url) => {\n        addNewEndpoint(category, epType, url);\n    };\n\n    useEffect(() => {\n        setEndpointType(epType);\n        setEndpoints(() => {\n            if (apiEndpoints !== null && epType === 'failover') {\n                return ([apiEndpoints].concat(failOvers));\n            } else {\n                if (apiEndpoints !== undefined) {\n                    return Array.isArray(apiEndpoints) ? apiEndpoints : [apiEndpoints];\n                }\n                return [{ url: 'http://myservice/' }];\n            }\n        });\n    }, [props]);\n\n    return (\n        <div className={classes.listingWrapper} ref={selectedRef}>\n            <Grid container xs={12}>\n                <Grid xs={12}>\n                    {(endpointType === 'failover' || endpointType === 'load_balance')\n                        ? <GenericEndpointAdd addEndpoint={addEndpoint} /> : <div />}\n                </Grid>\n                <Grid xs={12}>\n                    {\n                        (endpoints.map((ep, index) => {\n                            if (index > 0) {\n                                return (\n                                    <GenericEndpoint\n                                        readOnly\n                                        endpointURL={endpoints[index] ? endpoints[index].url : ''}\n                                        type={endpointType}\n                                        index={index}\n                                        category={category}\n                                        editEndpoint={editEndpoint}\n                                        deleteEndpoint={removeEndpoint}\n                                        setAdvancedConfigOpen={setAdvancedConfigOpen}\n                                        apiId={apiId}\n                                    />\n                                );\n                            }\n                            return (<div />);\n                        }))\n                    }\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nEndpointListing.propTypes = {\n    classes: PropTypes.shape({\n        epTypeWrapper: PropTypes.shape({}),\n        epTypeName: PropTypes.shape({}),\n        listingWrapper: PropTypes.shape({}),\n        epConfig: PropTypes.shape({}),\n    }).isRequired,\n    epType: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    apiEndpoints: PropTypes.shape({}).isRequired,\n    failOvers: PropTypes.shape({}).isRequired,\n    addNewEndpoint: PropTypes.func.isRequired,\n    removeEndpoint: PropTypes.func.isRequired,\n    editEndpoint: PropTypes.func.isRequired,\n    setAdvancedConfigOpen: PropTypes.func.isRequired,\n    apiId: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EndpointListing));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport {\n    TextField, MenuItem, Grid, Button, withStyles,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst algorithms = [\n    {\n        key: 'org.apache.synapse.endpoints.algorithms.RoundRobin',\n        value: 'Round-Robin',\n    },\n    { key: 'other', value: 'Other' },\n];\nconst sessionManagementOps = [\n    { key: 'http', value: 'Transport' },\n    { key: 'soap', value: 'SOAP' },\n    { key: 'simpleClientSession', value: 'Client Id' },\n    { key: 'none', value: 'None' },\n];\n\nconst defaultTemplateObj = {\n    algoClassName: algorithms[0].key,\n    algoCombo: algorithms[0].key,\n    sessionManagement: sessionManagementOps[0].key,\n    sessionTimeOut: 300,\n};\n\nconst styles = (theme) => ({\n    configButtonContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingTop: theme.spacing(1),\n    },\n});\n\n/**\n * The component for loadbalance endpoint configuration.\n * @param {any} props The props that are being passed.\n * @returns {any} The HTML contents of the Configuration component.\n */\nfunction LoadBalanceConfig(props) {\n    const {\n        algoClassName,\n        algoCombo,\n        sessionManagement,\n        sessionTimeOut,\n        handleLBConfigChange,\n        closeLBConfigDialog,\n        classes,\n    } = props;\n    const [lbConfig, setLbConfigObject] = useState(defaultTemplateObj);\n    const [algoClassNameError, setAlgoClassNameError] = useState(false);\n    const { api } = useContext(APIContext);\n\n    useEffect(() => {\n        setLbConfigObject(() => {\n            const tmpLBConfig = { ...defaultTemplateObj };\n            if (algoCombo) {\n                tmpLBConfig.algoCombo = algoCombo;\n            }\n            if (sessionManagement) {\n                tmpLBConfig.sessionManagement = sessionManagement;\n            }\n            if (algoClassName) {\n                tmpLBConfig.algoClassName = algoClassName;\n            }\n            if (sessionTimeOut) {\n                tmpLBConfig.sessionTimeOut = sessionTimeOut;\n            }\n            return tmpLBConfig;\n        });\n    }, [props]);\n\n    /**\n     * Method to capture the alogrithm select changes.\n     *\n     * @param {any} event The event triggered by the element.\n     * */\n    const handleAlgorithmChange = (event) => {\n        const { value } = event.target;\n        setLbConfigObject({\n            ...lbConfig,\n            algoCombo: value,\n            algoClassName: value === 'other' ? '' : defaultTemplateObj.algoClassName,\n        });\n    };\n\n    /**\n     * Method to capture the onChange event of the elements.\n     *\n     * @param {any} event The event triggered by the element.\n     * @param {string} field The respective field which is being changed.\n     * */\n    const handleFieldChange = (event, field) => {\n        setLbConfigObject({ ...lbConfig, [field]: event.target.value });\n    };\n\n    /**\n     * Method to set the configuration changes to the original endpoints config object.\n     * */\n    const submitConfiguration = () => {\n        handleLBConfigChange(lbConfig);\n    };\n\n    return (\n        <>\n            <Grid container direction='column'>\n                <TextField\n                    id='algorithmSelect'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.algorithm'\n                            defaultMessage='Algorithm'\n                        />\n                    )}\n                    value={lbConfig.algoCombo}\n                    onChange={handleAlgorithmChange}\n                    helperText='Please select the Loadbalance Algorithm.'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                >\n                    {algorithms.map((algo) => (\n                        <MenuItem key={algo.key} value={algo.key} selected={lbConfig.algoCombo}>\n                            {algo.value}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                {(lbConfig.algoCombo === 'other')\n                    ? (\n                        <TextField\n                            id='customAlgoInput'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.LoadBalanceConfig.class.name.for.algorithm'\n                                    defaultMessage='Class Name for Algorithm'\n                                />\n                            )}\n                            required\n                            error={algoClassNameError}\n                            value={lbConfig.algoClassName}\n                            onChange={(event) => handleFieldChange(event, 'algoClassName')}\n                            onBlur={() => setAlgoClassNameError(lbConfig.algoClassName === '')}\n                            helperText='Enter the class name of the loadbalance algorithm'\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            margin='normal'\n                        />\n                    ) : <div /> }\n                <TextField\n                    id='sessionMgtSelect'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.session.management'\n                            defaultMessage='Session Management'\n                        />\n                    )}\n                    value={lbConfig.sessionManagement}\n                    onChange={(event) => handleFieldChange(event, 'sessionManagement')}\n                    helperText='Please select the Session Management mechanism.'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                >\n                    {sessionManagementOps.map((option) => (\n                        <MenuItem key={option.key} value={option.key}>\n                            {option.value}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id='sessionTimeout'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.session.timeout'\n                            defaultMessage='Session Timeout (Millis)'\n                        />\n                    )}\n                    value={lbConfig.sessionTimeOut}\n                    onChange={(event) => handleFieldChange(event, 'sessionTimeOut')}\n                    type='number'\n                    placeholder='300'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                />\n            </Grid>\n            <Grid className={classes.configButtonContainer}>\n                <Button\n                    color='primary'\n                    variant='contained'\n                    autoFocus\n                    onClick={submitConfiguration}\n                    disabled={lbConfig.algoClassName === '' || isRestricted(['apim:api_create'], api)}\n                    style={{ marginRight: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.EndpointOverview.loadbalance.config.save.button'\n                        defaultMessage='Save'\n                    />\n                </Button>\n                <Button\n                    onClick={closeLBConfigDialog}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.EndpointOverview.loadbalance.config.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </>\n    );\n}\n\nLoadBalanceConfig.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    algoClassName: PropTypes.string.isRequired,\n    algoCombo: PropTypes.string.isRequired,\n    sessionManagement: PropTypes.string.isRequired,\n    sessionTimeOut: PropTypes.string.isRequired,\n    handleLBConfigChange: PropTypes.func.isRequired,\n    closeLBConfigDialog: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(LoadBalanceConfig));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Icon,\n    IconButton,\n    MenuItem,\n    TextField,\n    Typography,\n    withStyles,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport EndpointListing from 'AppComponents/Apis/Details/Endpoints/EndpointListing';\nimport LoadBalanceConfig from 'AppComponents/Apis/Details/Endpoints/LoadBalanceConfig';\nimport Collapse from '@material-ui/core/Collapse';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { getEndpointTypeProperty } from './endpointUtils';\n\nconst styles = (theme) => ({\n    endpointTypeSelect: {\n        width: '50%',\n        marginTop: theme.spacing(1),\n    },\n    configHeaderContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    generalConfigContent: {\n        boxShadow: 'inset -1px 2px 3px 0px #c3c3c3',\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        display: 'flex',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        fontWeight: '900',\n    },\n    endpointConfigSection: {\n        padding: '10px',\n    },\n    generalConfigPanel: {\n        width: '100%',\n    },\n    endpointsTypeSelectWrapper: {\n        display: 'flex',\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    lbConfigBtn: {\n        position: 'relative',\n        top: '10px',\n    },\n    endpointName: {\n        fontWeight: 600,\n    },\n    wrapper: {\n        width: '100%',\n    },\n});\n\nconst endpointTypes = [\n    { key: 'none', value: 'None' },\n    { key: 'failover', value: 'Failover' },\n    { key: 'load_balance', value: 'Load Balanced' },\n];\n\n/**\n * The component which holds the load balance and failover configuration.\n *\n * @param {any} props The input properties to the component\n * @returns {any} The HTML representation of the component.\n * */\nfunction LoadbalanceFailoverConfig(props) {\n    const {\n        epConfig,\n        classes,\n        endpointsDispatcher,\n        toggleAdvanceConfig,\n        globalEpType,\n        handleEndpointCategorySelect,\n    } = props;\n    const { api } = useContext(APIContext);\n    const [isConfigExpanded, setConfigExpand] = useState(false);\n    const [endpointType, setEndpointType] = useState(props);\n    const [isLBConfigOpen, setLBConfigOpen] = useState(false);\n\n    useEffect(() => {\n        const epType = epConfig.endpoint_type;\n        if (epType === 'http' || epType === 'address') {\n            setEndpointType('none');\n        } else {\n            setEndpointType(epType);\n        }\n    }, [props]);\n\n    /**\n     * Method to add new loadbalance/ failover endpoint to the existing endpoints.\n     *\n     * @param {string} category The endpoint category (production/ sandbox)\n     * @param {string} type The endpoint type. (load_balance/ failover)\n     * @param {string} newURL The url of the new endpoint.\n     * */\n    const addEndpoint = (category, type, newURL) => {\n        const endpointConfigCopy = cloneDeep(epConfig);\n        const endpointTemplate = {\n            endpoint_type: globalEpType.key,\n            template_not_supported: false,\n            url: newURL,\n        };\n        const epConfigProperty = getEndpointTypeProperty(type, category);\n        let endpointList = endpointConfigCopy[epConfigProperty];\n        /**\n         * Check whether we have existing endpoints added.\n         * */\n        if (endpointList) {\n            if (!Array.isArray(endpointList)) {\n                endpointList = [endpointList].concat(endpointTemplate);\n            } else {\n                endpointList = endpointList.concat(endpointTemplate);\n            }\n        } else {\n            endpointList = [endpointTemplate];\n        }\n        endpointConfigCopy[epConfigProperty] = endpointList;\n        endpointsDispatcher({ action: 'add_endpoint', value: endpointConfigCopy });\n    };\n\n    /**\n     * Method to handle the loadbalance configuration changes.\n     *\n     * @param {object} lbConfig The modified loadbalance configuration.\n     * */\n    const handleLBConfigChange = (lbConfig) => {\n        endpointsDispatcher({ action: 'set_lb_config', value: { ...epConfig, ...lbConfig } });\n        setLBConfigOpen(false);\n    };\n\n    const getEndpointTypeHeading = () => {\n        switch (endpointType) {\n            case 'none':\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.none.heading'\n                        defaultMessage='Not Configured'\n                    />\n                );\n            case 'failover':\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.failover.heading'\n                        defaultMessage='Failover Endpoints'\n                    />\n                );\n            default:\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.loadbalance.heading'\n                        defaultMessage='Load Balanced Endpoints'\n                    />\n                );\n        }\n    };\n\n    /**\n     * Method to remove the selected endpoint from the endpoints list.\n     *\n     * @param {number} index The selected endpoint index\n     * @param {string} epType The type of the endpoint. (loadbalance/ failover)\n     * @param {string} category The endpoint category (production/ sandbox)\n     * */\n    const removeEndpoint = (index, epType, category) => {\n        const tmpEndpointConfig = cloneDeep(epConfig);\n        const endpointConfigProperty = getEndpointTypeProperty(epType, category);\n        const indexToRemove = epType === 'failover' ? index - 1 : index;\n        const tmpEndpoints = tmpEndpointConfig[endpointConfigProperty];\n        tmpEndpoints.splice(indexToRemove, 1);\n        endpointsDispatcher({\n            action: 'remove_endpoint',\n            value: { ...epConfig, [endpointConfigProperty]: tmpEndpoints },\n        });\n    };\n\n    const editEndpoint = () => {};\n    const handleEndpointTypeSelect = (event) => {\n        setEndpointType(event.target.value);\n        handleEndpointCategorySelect(event);\n    };\n\n    return (\n        <>\n            <ExpansionPanel\n                expanded={isConfigExpanded || endpointType === 'load_balance' || endpointType === 'failover'}\n                onChange={() => setConfigExpand(!isConfigExpanded)}\n                className={classes.generalConfigPanel}\n            >\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                    className={classes.configHeaderContainer}\n                >\n                    <Typography className={classes.secondaryHeading}>\n                        {getEndpointTypeHeading()}\n                    </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.generalConfigContent}>\n                    {(!epConfig.production_endpoints && !epConfig.sandbox_endpoints)\n                        ? (\n                            <InlineMessage>\n                                <div className={classes.contentWrapper}>\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.no.endpoints.message'\n                                            defaultMessage='Add Production/ Sandbox endpoints to configure.'\n                                        />\n                                    </Typography>\n                                </div>\n                            </InlineMessage>\n                        )\n                        : (\n                            <Grid container item xs={12}>\n                                <Grid xs={12} className={classes.endpointsTypeSelectWrapper}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        id='certificateEndpoint'\n                                        label={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.endpoint.type'\n                                                defaultMessage='Endpoint Type'\n                                            />\n                                        )}\n                                        value={endpointType}\n                                        placeholder='Endpoint'\n                                        onChange={handleEndpointTypeSelect}\n                                        margin='normal'\n                                        variant='outlined'\n                                        select\n                                        className={classes.endpointTypeSelect}\n                                    >\n                                        {endpointTypes.map((type) => {\n                                            return <MenuItem value={type.key}>{type.value}</MenuItem>;\n                                        })}\n                                    </TextField>\n                                    <div className={classes.lpConfigWrapper}>\n                                        <IconButton\n                                            className={classes.lbConfigBtn}\n                                            disabled={epConfig.endpoint_type !== 'load_balance'}\n                                            aria-label='Delete'\n                                            onClick={() => setLBConfigOpen(true)}\n                                        >\n                                            <Icon>\n                                            settings\n                                            </Icon>\n                                        </IconButton>\n                                    </div>\n                                </Grid>\n                                <Grid xs={12} container spacing={2}>\n                                    <Collapse className={classes.wrapper} in={endpointType !== 'none'}>\n                                        {epConfig.production_endpoints\n                                    && (\n                                        <Grid xs={12} className={classes.endpointsWrapperLeft}>\n                                            <Typography className={classes.endpointName}>\n                                                {epConfig.endpoint_type === 'failover'\n                                                    ? (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.'\n                                                            + 'LoadbalanceFailoverConfig.production.'\n                                                            + 'failover.endpoint'}\n                                                            defaultMessage='Production Failover Endpoints'\n                                                        />\n                                                    )\n                                                    : (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.LoadbalanceFailoverConfig.'\n                                                    + 'production.loadbalance.endpoint'}\n                                                            defaultMessage='Production Loadbalanced Endpoints'\n                                                        />\n                                                    )}\n                                            </Typography>\n                                            <EndpointListing\n                                                apiEndpoints={epConfig.production_endpoints}\n                                                failOvers={epConfig.production_failovers}\n                                                epType={epConfig.endpoint_type}\n                                                addNewEndpoint={addEndpoint}\n                                                removeEndpoint={removeEndpoint}\n                                                editEndpoint={editEndpoint}\n                                                setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                category='production_endpoints'\n                                                apiId={api.id}\n                                            />\n                                        </Grid>\n                                    )}\n                                        {epConfig.sandbox_endpoints\n                                    && (\n                                        <Grid xs={12} className={classes.endpointsWrapperRight}>\n                                            <Typography className={classes.endpointName}>\n                                                {epConfig.endpoint_type === 'failover'\n                                                    ? (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.'\n                                                            + 'LoadbalanceFailoverConfig.sandbox.'\n                                                            + 'failover.endpoint'}\n                                                            defaultMessage='Sandbox Failover Endpoints'\n                                                        />\n                                                    )\n                                                    : (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.LoadbalanceFailoverConfig.'\n                                                    + 'sandbox.loadbalance.endpoint'}\n                                                            defaultMessage='Sandbox Loadbalanced Endpoints'\n                                                        />\n                                                    )}\n                                            </Typography>\n                                            <EndpointListing\n                                                apiEndpoints={epConfig.sandbox_endpoints}\n                                                failOvers={epConfig.sandbox_failovers}\n                                                epType={epConfig.endpoint_type}\n                                                addNewEndpoint={addEndpoint}\n                                                removeEndpoint={removeEndpoint}\n                                                editEndpoint={editEndpoint}\n                                                setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                category='sandbox_endpoints'\n                                                apiId={api.id}\n                                            />\n                                        </Grid>\n                                    )}\n                                    </Collapse>\n                                </Grid>\n                            </Grid>\n                        )}\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <Dialog open={isLBConfigOpen}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.load.balance.configuration.title'\n                            defaultMessage='Load Balance Configurations'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <LoadBalanceConfig\n                        handleLBConfigChange={handleLBConfigChange}\n                        closeLBConfigDialog={() => setLBConfigOpen(false)}\n                        algoCombo={epConfig.algoCombo}\n                        algoClassName={epConfig.algoClassName}\n                        sessionTimeOut={epConfig.sessionTimeOut}\n                        sessionManagement={epConfig.sessionManagement}\n                    />\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n\nLoadbalanceFailoverConfig.propTypes = {\n    epConfig: PropTypes.shape({}).isRequired,\n    endpointSecurityInfo: PropTypes.shape({}).isRequired,\n    endpointType: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n    toggleAdvanceConfig: PropTypes.func.isRequired,\n    handleEndpointCategorySelect: PropTypes.func.isRequired,\n    globalEpType: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(LoadbalanceFailoverConfig));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n    Divider,\n    FormControl,\n    Grid,\n    Input,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n    Button,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst itemHeight = 48;\nconst itemPaddingTop = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: (itemHeight * 4.5) + itemPaddingTop, width: 250,\n        },\n    },\n};\nconst styles = (theme) => ({\n    formControl: {\n        width: '500px',\n    },\n    subTitle: {\n        fontSize: '1rem',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    configContainer: {\n        paddingTop: '10px',\n    },\n    configSubContainer: {\n        paddingBottom: '10px',\n        marginTop: '5px',\n        padding: '5px',\n    },\n    textField: {\n        marginRight: theme.spacing(1),\n        width: '45%',\n    },\n    advanceDialogActions: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\n/**\n * The component for advanced endpoint configurations.\n * @param {any} props The input props\n * @returns {any} The HTML representation of the compoenent.\n */\nfunction AdvanceEndpointConfig(props) {\n    const { api } = useContext(APIContext);\n    const {\n        classes,\n        intl,\n        advanceConfig,\n        isSOAPEndpoint,\n        onSaveAdvanceConfig,\n        onCancel,\n    } = props;\n    const [advanceConfigObj, setAdvanceConfig] = useState(() => {\n        const config = {};\n        if (isSOAPEndpoint) {\n            config.format = 'soap11';\n            config.optimize = 'SWA';\n        }\n        config.actionDuration = '300';\n        config.actionSelect = 'fault';\n        config.factor = '';\n        config.retryDelay = '';\n        config.retryErroCode = [];\n        config.retryTimeOut = '';\n        config.suspendDuration = '';\n        config.suspendErrorCode = [];\n        config.suspendMaxDuration = '';\n        return config;\n    });\n\n    /**\n     * The error codes definition.\n     * */\n    const errorCodes = [\n        {\n            key: '101001',\n            value: '101001 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.receiver.io.error.receiving',\n                defaultMessage: 'Receiver IO error Receiving',\n            }),\n        },\n        {\n            key: '101500',\n            value: '101500 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.sender.io.error.sending',\n                defaultMessage: 'Sender IO Error Sending',\n            }),\n        },\n        {\n            key: '101000',\n            value: '101000 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.receiver.io.error.sending',\n                defaultMessage: 'Retriever IO Error Sending',\n            }),\n        },\n        {\n            key: '101501',\n            value: '101501 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.sender.io.error.receiving',\n                defaultMessage: 'Sender IO Error Receiving',\n            }),\n        },\n        {\n            key: '101503',\n            value: '101503 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.failed',\n                defaultMessage: 'Connection Failed',\n            }),\n        },\n        {\n            key: '101504',\n            value: '101504 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.timed.out',\n                defaultMessage: 'Connection Timed Out',\n            }),\n        },\n        {\n            key: '101505',\n            value: '101505 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.closed',\n                defaultMessage: 'Connection Closed',\n            }),\n        },\n        {\n            key: '101506',\n            value: '101506 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.tpp.protocol.violation',\n                defaultMessage: 'TTP Protocol Violation',\n            }),\n        },\n        {\n            key: '101507',\n            value: '101507 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connect.cancel',\n                defaultMessage: 'Connect Cancel',\n            }),\n        },\n        {\n            key: '101508',\n            value: '101508 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connect.timeout',\n                defaultMessage: 'Connect Timeout',\n            }),\n        },\n        {\n            key: '101509',\n            value: '101509 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.send.abort',\n                defaultMessage: 'Send Abort',\n            }),\n        },\n        {\n            key: '101510',\n            value: '101510 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.response.processing.failure',\n                defaultMessage: 'Response Processing Failure',\n            }),\n        }];\n\n    /**\n     * Supported action items.\n     * */\n    const actionItems = [\n        {\n            key: 'fault',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.execute.fault.sequence',\n                defaultMessage: 'Execute Fault Sequence',\n            }),\n        },\n        {\n            key: 'discard',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.discard.message',\n                defaultMessage: 'Discard Message',\n            }),\n        },\n    ];\n\n    /**\n     * Message types for the address endpoint type.\n     * */\n    const messageTypes = [\n        { key: 'soap11', value: 'SOAP 1.1' },\n        { key: 'soap12', value: 'SOAP 1.2' },\n        {\n            key: 'POX',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.plain.old.xml',\n                defaultMessage: 'Plain Old XML (POX)',\n            }),\n        },\n        {\n            key: 'REST',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.representational.state.transfer',\n                defaultMessage: 'Representational State Transfer (REST)',\n            }),\n        },\n        {\n            key: 'GET',\n            value: 'GET',\n        },\n        {\n            key: 'leave-as-is',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.leave.as.is',\n                defaultMessage: 'Leave As-Is',\n            }),\n        },\n    ];\n\n    /**\n     * Address endpoint message optimizations.\n     * */\n    const optimizeOptions = [\n        { key: 'SWA', value: 'SWA' },\n        { key: 'MTOM', value: 'MTOM' },\n        {\n            key: 'leave-as-is',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.leave.as.is',\n                defaultMessage: 'Leave As-Is',\n            }),\n        },\n    ];\n\n    useEffect(() => {\n        setAdvanceConfig(() => {\n            if (advanceConfig === {}) {\n                return { ...advanceConfigObj };\n            }\n            return { ...advanceConfigObj, ...advanceConfig };\n        });\n    }, [props]);\n\n    /**\n     * Method to handle the advance endpoint field change. In each change, the advance config object is getting updated.\n     *\n     * @param {any} event The HTML event triggered by the element.\n     * @param {string} field The HTML element that is being changed.\n     * */\n    const handleConfigFieldChange = (event, field) => {\n        const di = { ...advanceConfigObj, [field]: event.target.value };\n        setAdvanceConfig(di);\n    };\n\n    return (\n        <Grid container direction='column' className={classes.configContainer}>\n            {(isSOAPEndpoint) ? (\n                <Grid item container className={classes.configSubContainer}>\n                    <Typography className={classes.subTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.message.content'\n                            defaultMessage='Message Content'\n                        />\n                    </Typography>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor='err-code-select'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.format.select'\n                                defaultMessage='Format'\n                            />\n                        </InputLabel>\n                        <Select\n                            autoWidth={false}\n                            value={advanceConfigObj.format}\n                            onChange={(event) => handleConfigFieldChange(event, 'format')}\n                            input={<Input id='err-code-select' />}\n                            MenuProps={MenuProps}\n                        >\n                            {messageTypes.map((messageType) => (\n                                <MenuItem key={messageType.key} value={messageType.key}>\n                                    {messageType.value}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor='err-code-select'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.optimize.select'\n                                defaultMessage='Optimize'\n                            />\n                        </InputLabel>\n                        <Select\n                            autoWidth={false}\n                            value={advanceConfigObj.optimize}\n                            onChange={(event) => handleConfigFieldChange(event, 'optimize')}\n                            input={<Input id='err-code-select' />}\n                            MenuProps={MenuProps}\n                        >\n                            {optimizeOptions.map((option) => (\n                                <MenuItem key={option.key} value={option.key}>\n                                    {option.value}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <Divider />\n                </Grid>\n            ) : (<div />)}\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage id='Endpoint.Suspension.State' defaultMessage='Endpoint Suspension State' />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.error.code'\n                            defaultMessage='Error Code'\n                        />\n                    </InputLabel>\n                    <Select\n                        multiple\n                        autoWidth={false}\n                        value={advanceConfigObj.suspendErrorCode}\n                        onChange={(event) => handleConfigFieldChange(event, 'suspendErrorCode')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                        variant='outlined'\n                    >\n                        {errorCodes.map((code) => (\n                            <MenuItem key={code.key} value={code.key}>\n                                {code.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='initial-duration-input'\n                    value={advanceConfigObj.suspendDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'suspendDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.initial.duration.ms'\n                            defaultMessage='Initial Duration (ms)'\n                        />\n                    )}\n                    margin='normal'\n                    type='number'\n                />\n                <TextField\n                    className={classes.textField}\n                    id='max-duration-input'\n                    value={advanceConfigObj.suspendMaxDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'suspendMaxDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.max.duration.ms'\n                            defaultMessage='Max Duration (ms)'\n                        />\n                    )}\n                    margin='normal'\n                    type='number'\n                />\n                <TextField\n                    className={classes.textField}\n                    value={advanceConfigObj.factor}\n                    onChange={(event) => handleConfigFieldChange(event, 'factor')}\n                    id='factor-input'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.factor'\n                            defaultMessage='Factor'\n                        />\n                    )}\n                    margin='normal'\n                />\n            </Grid>\n            <Divider />\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.endpoint.timeout.state'\n                        defaultMessage='Endpoint Timeout State'\n                    />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.error.code'\n                            defaultMessage='Error Code'\n                        />\n                    </InputLabel>\n                    <Select\n                        multiple\n                        autoWidth={false}\n                        value={advanceConfigObj.retryErroCode}\n                        onChange={(event) => handleConfigFieldChange(event, 'retryErroCode')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                    >\n                        {errorCodes.map((code) => (\n                            <MenuItem key={code.key} value={code.key}>\n                                {code.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='retries-input'\n                    value={advanceConfigObj.retryTimeOut}\n                    onChange={(event) => handleConfigFieldChange(event, 'retryTimeOut')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.retries.before.suspension'\n                            defaultMessage='Retries Before Suspension'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n                <TextField\n                    className={classes.textField}\n                    id='retry-delay-input'\n                    value={advanceConfigObj.retryDelay}\n                    onChange={(event) => handleConfigFieldChange(event, 'retryDelay')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.retry.delay.ms'\n                            defaultMessage='Retry Delay (ms)'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n            </Grid>\n            <Divider />\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage id='Connection.Timeout' defaultMessage='Connection Timeout' />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.action'\n                            defaultMessage='Action'\n                        />\n                    </InputLabel>\n                    <Select\n                        autoWidth={false}\n                        value={advanceConfigObj.actionSelect}\n                        onChange={(event) => handleConfigFieldChange(event, 'actionSelect')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                    >\n                        {actionItems.map((item) => (\n                            <MenuItem key={item.key} value={item.key}>\n                                {item.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='duration-input'\n                    value={advanceConfigObj.actionDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'actionDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.duration.ms'\n                            defaultMessage='Duration (ms)'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n            </Grid>\n            <Grid className={classes.advanceDialogActions}>\n                <Button\n                    onClick={() => onSaveAdvanceConfig(advanceConfigObj)}\n                    color='primary'\n                    autoFocus\n                    disabled={isRestricted(['apim:api_create'], api)}\n                    variant='contained'\n                    style={{ marginRight: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.config.save.button'\n                        defaultMessage='Save'\n                    />\n                </Button>\n                <Button onClick={onCancel}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nAdvanceEndpointConfig.propTypes = {\n    classes: PropTypes.shape({\n        configContainer: PropTypes.shape({}),\n        configSubContainer: PropTypes.shape({}),\n        subTitle: PropTypes.shape({}),\n        formControl: PropTypes.shape({}),\n\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    advanceConfig: PropTypes.shape({}).isRequired,\n    isSOAPEndpoint: PropTypes.bool.isRequired,\n    onSaveAdvanceConfig: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(AdvanceEndpointConfig));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Grid,\n    TextField,\n    makeStyles,\n    Typography,\n    Tooltip,\n    RadioGroup,\n    FormControl,\n    FormControlLabel,\n    MenuItem,\n    InputLabel,\n    Select,\n    Radio,\n} from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Banner from 'AppComponents/Shared/Banner';\n\nconst useStyles = makeStyles((theme) => ({\n    typography: {\n        display: 'inline-block',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 300,\n    },\n    selectField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 300,\n    },\n    helpIcon: {\n        fontSize: 20,\n    },\n    banner: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\n/**\n * The credentials component. This component holds the access and secret key pair.\n * @param {any} props The parameters to credentials component.\n * @returns {any} HTML view of the credentials component.\n */\nexport default function Credentials(props) {\n    const {\n        apiId,\n        endpointConfig,\n        endpointsDispatcher,\n    } = props;\n    const classes = useStyles();\n    const [pageError, setPageError] = useState(null);\n    const inputLabel = useRef(null);\n    const handleChange = (event) => {\n        const newEndpointConfig = { ...endpointConfig };\n        newEndpointConfig.access_method = event.target.value;\n        newEndpointConfig.amznAccessKey = '';\n        newEndpointConfig.amznSecretKey = '';\n        newEndpointConfig.amznRegion = '';\n        endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n        setPageError(null);\n    };\n    const regionsList = [\n        {\n            key: 'us-east-1',\n            value: 'us-east-1: US East (N. Virginia)',\n        },\n        {\n            key: 'us-east-2',\n            value: 'us-east-2: US East (Ohio)',\n        },\n        {\n            key: 'us-west-1',\n            value: 'us-west-1: US West (N. California)',\n        },\n        {\n            key: 'us-west-2',\n            value: 'us-west-2: US West (Oregon)',\n        },\n        {\n            key: 'ap-east-1',\n            value: 'ap-east-1: Asia Pacific (Hong Kong)',\n        },\n        {\n            key: 'ap-south-1',\n            value: 'ap-south-1: Asia Pacific (Mumbai)',\n        },\n        {\n            key: 'ap-northeast-1',\n            value: 'ap-northeast-1: Asia Pacific (Tokyo)',\n        },\n        {\n            key: 'ap-northeast-2',\n            value: 'ap-northeast-2: Asia Pacific (Seoul)',\n        },\n        {\n            key: 'ap-northeast-3',\n            value: 'ap-northeast-3: Asia Pacific (Osaka-Local)',\n        },\n        {\n            key: 'ap-southeast-1',\n            value: 'ap-southeast-1: Asia Pacific (Singapore)',\n        },\n        {\n            key: 'ap-southeast-2',\n            value: 'ap-southeast-2: Asia Pacific (Sydney)',\n        },\n        {\n            key: 'ca-central-1',\n            value: 'ca-central-1: Canada (Central)',\n        },\n        {\n            key: 'eu-central-1',\n            value: 'eu-central-1: Europe (Frankfurt)',\n        },\n        {\n            key: 'eu-west-1',\n            value: 'eu-west-1: Europe (Ireland)',\n        },\n        {\n            key: 'eu-west-2',\n            value: 'eu-west-2: Europe (London)',\n        },\n        {\n            key: 'eu-west-3',\n            value: 'eu-west-3: Europe (Paris)',\n        },\n        {\n            key: 'eu-north-1',\n            value: 'eu-north-1: Europe (Stockholm)',\n        },\n        {\n            key: 'me-south-1',\n            value: 'me-south-1: Middle East (Bahrain)',\n        },\n        {\n            key: 'sa-east-1',\n            value: 'sa-east-1: South America (São Paulo)',\n        },\n    ];\n    useEffect(() => {\n        API.getAmznResourceNames(apiId)\n            .catch((error) => {\n                setPageError(error.response.body.error);\n            });\n    }, []);\n    return (\n        <>\n            <Typography className={classes.typography}>\n                <FormattedMessage\n                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                    + '.endpoint.accessMethod'}\n                    defaultMessage='Access Method'\n                />\n            </Typography>\n            <RadioGroup\n                aria-label='accessMethod'\n                name='accessMethod'\n                value={endpointConfig.access_method}\n                onChange={handleChange}\n            >\n                <div>\n                    <FormControlLabel\n                        value='role-supplied'\n                        control={<Radio color='primary' />}\n                        label={\n                            (\n                                <FormattedMessage\n                                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                    + '.endpoint.accessMethod.roleSupplied'}\n                                    defaultMessage='Using IAM role-supplied temporary AWS credentials'\n                                />\n                            )\n                        }\n                    />\n                    <Tooltip\n                        title={\n                            (\n                                <FormattedMessage\n                                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                    + '.endpoint.tooltip'}\n                                    defaultMessage={'You can and should use an IAM role to manage temporary '\n                                    + 'credentials for applications that run on an EC2 instance'}\n                                />\n                            )\n                        }\n                    >\n                        <Icon className={classes.helpIcon}>help_outline</Icon>\n                    </Tooltip>\n                </div>\n                <div>\n                    <FormControlLabel\n                        value='stored'\n                        control={<Radio color='primary' />}\n                        label={\n                            (\n                                <FormattedMessage\n                                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                    + '.endpoint.accessMethod.stored'}\n                                    defaultMessage='Using stored AWS credentials'\n                                />\n                            )\n                        }\n                    />\n                </div>\n            </RadioGroup>\n            <Grid item>\n                <TextField\n                    required\n                    disabled={endpointConfig.access_method === 'role-supplied'}\n                    id='outlined-required'\n                    label={\n                        (\n                            <FormattedMessage\n                                id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                + '.endpoint.accessKey'}\n                                defaultMessage='Access Key'\n                            />\n                        )\n                    }\n                    margin='normal'\n                    variant='outlined'\n                    className={classes.textField}\n                    value={endpointConfig.amznAccessKey}\n                    onChange={(event) => {\n                        const newEndpointConfig = { ...endpointConfig };\n                        newEndpointConfig.amznAccessKey = event.target.value;\n                        endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                    }}\n                />\n                <TextField\n                    required\n                    disabled={endpointConfig.access_method === 'role-supplied'}\n                    id='outlined-password-input-required'\n                    label={\n                        (\n                            <FormattedMessage\n                                id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                + '.endpoint.secretKey'}\n                                defaultMessage='Secret Key'\n                            />\n                        )\n                    }\n                    type='password'\n                    margin='normal'\n                    variant='outlined'\n                    className={classes.textField}\n                    value={endpointConfig.amznSecretKey}\n                    onChange={(event) => {\n                        const newEndpointConfig = { ...endpointConfig };\n                        newEndpointConfig.amznSecretKey = event.target.value;\n                        endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                    }}\n                />\n                <FormControl\n                    required\n                    margin='normal'\n                    variant='outlined'\n                    disabled={endpointConfig.access_method === 'role-supplied'}\n                >\n                    <InputLabel ref={inputLabel} id='region-label'>\n                        <FormattedMessage\n                            id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                            + '.endpoint.region'}\n                            defaultMessage='Region'\n                        />\n                    </InputLabel>\n                    <Select\n                        labelId='region-label'\n                        autoWidth={false}\n                        className={classes.selectField}\n                        onChange={(event) => {\n                            const newEndpointConfig = { ...endpointConfig };\n                            newEndpointConfig.amznRegion = event.target.value;\n                            endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                        }}\n                        value={endpointConfig.amznRegion}\n                    >\n                        {regionsList.map((region) => ((\n                            <MenuItem key={region.key} value={region.key}>\n                                {region.value}\n                            </MenuItem>\n                        )))}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item>\n                <Link to={`/apis/${apiId}/resources`}>\n                    <Typography style={{ marginLeft: '10px' }} color='primary' display='inline' variant='caption'>\n                        <FormattedMessage\n                            id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                            + '.endpoint.linkToResources'}\n                            defaultMessage='Goto Resources to map ARNs'\n                        />\n                        <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                    </Typography>\n                </Link>\n            </Grid>\n            {pageError\n                && (\n                    <Grid item className={classes.banner}>\n                        <Banner\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='warning'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n        </>\n    );\n}\n\nCredentials.propTypes = {\n    apiId: PropTypes.shape('').isRequired,\n    endpointConfig: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport {\n    FormControl,\n    Grid,\n    Paper,\n    Typography,\n    withStyles,\n    Radio,\n    FormControlLabel,\n    Collapse,\n    RadioGroup, Checkbox, Dialog, DialogTitle, DialogContent, IconButton, Button, DialogActions, Icon,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport cloneDeep from 'lodash.clonedeep';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport InlineEndpoints from 'AppComponents/Apis/Details/Endpoints/Prototype/InlineEndpoints';\nimport {\n    getEndpointTypeProperty,\n    createEndpointConfig,\n    getEndpointTemplate,\n} from './endpointUtils';\nimport GeneralConfiguration from './GeneralConfiguration';\nimport LoadbalanceFailoverConfig from './LoadbalanceFailoverConfig';\nimport GenericEndpoint from './GenericEndpoint';\nimport AdvanceEndpointConfig from './AdvancedConfig/AdvanceEndpointConfig';\nimport Credentials from './AWSLambda/Credentials.jsx';\n\nconst styles = (theme) => ({\n    listing: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n    },\n    endpointContainer: {\n        paddingLeft: theme.spacing(2),\n        padding: theme.spacing(1),\n    },\n    endpointName: {\n        paddingLeft: theme.spacing(1),\n        fontSize: '1rem',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    endpointTypesWrapper: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n    sandboxHeading: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    endpointsWrapperLeft: {\n        padding: theme.spacing(1),\n        borderRight: '#c4c4c4',\n        borderRightStyle: 'solid',\n        borderRightWidth: 'thin',\n    },\n    endpointsWrapperRight: {\n        padding: theme.spacing(1),\n    },\n    endpointsTypeSelectWrapper: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        padding: theme.spacing(1),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    endpointTypesSelectWrapper: {\n        display: 'flex',\n    },\n    defaultEndpointWrapper: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    configDialogHeader: {\n        fontWeight: '600',\n    },\n    addLabel: {\n        padding: theme.spacing(2),\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    button: {\n        textTransform: 'none',\n    },\n});\n\nconst endpointTypes = [\n    { key: 'http', value: 'HTTP/REST Endpoint' },\n    { key: 'default', value: 'Dynamic Endpoints' },\n    { key: 'address', value: 'HTTP/SOAP Endpoint' },\n    { key: 'prototyped', value: 'Prototype Endpoint' },\n    { key: 'INLINE', value: 'Prototype Implementation' },\n    { key: 'awslambda', value: 'AWS Lambda' },\n];\n\n/**\n * The endpoint overview component. This component holds the views of endpoint creation and configuration.\n * @param {any} props The props that are being passed to the component.\n * @returns {any} HTML view of the endpoints overview.\n */\nfunction EndpointOverview(props) {\n    const {\n        classes,\n        api,\n        endpointsDispatcher,\n        swaggerDef,\n        updateSwagger,\n        saveAndRedirect,\n    } = props;\n    const { endpointConfig, endpointSecurity } = api;\n    const [endpointType, setEndpointType] = useState(endpointTypes[0]);\n    const [supportedEnpointTypes, setSupportedEndpointType] = useState([]);\n\n    const [epConfig, setEpConfig] = useState(endpointConfig);\n    const [endpointSecurityInfo, setEndpointSecurityInfo] = useState(null);\n    const [advanceConfigOptions, setAdvancedConfigOptions] = useState({\n        open: false,\n        index: 0,\n        type: '',\n        category: '',\n        config: undefined,\n    });\n    const [endpointCategory, setEndpointCategory] = useState({ sandbox: false, prod: false });\n    const [typeChangeConfirmation, setTypeChangeConfirmation] = useState({ openDialog: false });\n\n    /**\n     * Method to get the type of the endpoint. (HTTP/REST or HTTP/SOAP)\n     * In failover/ loadbalance cases, the endpoint type is presented in the endpoints list. Therefore that property\n     * needs to be extracted separately.\n     *\n     * @param {Object} apiObject  The representative type of the endpoint.\n     * @return {string} The type of the endpoint.\n     * */\n    const getEndpointType = (apiObject) => {\n        const type = apiObject.endpointConfig && apiObject.endpointConfig.endpoint_type;\n        if (apiObject.endpointImplementationType === 'INLINE') {\n            return endpointTypes[4];\n        } else if (apiObject.endpointImplementationType === 'ENDPOINT'\n            && apiObject.endpointConfig.implementation_status === 'prototyped') {\n            return endpointTypes[3];\n        } else if (type === 'http') {\n            return endpointTypes[0];\n        } else if (type === 'default') {\n            return endpointTypes[1];\n        } else if (type === 'address') {\n            return endpointTypes[2];\n        } else if (type === 'awslambda') {\n            return endpointTypes[5];\n        } else {\n            const availableEndpoints = (endpointConfig.production_endpoints && endpointConfig.production_endpoints)\n                || (endpointConfig.sandbox_endpoints && endpointConfig.sandbox_endpoints);\n            // Handle the all endpoints de-select condition... Rollback to http.\n            if (!availableEndpoints) {\n                return endpointTypes[0];\n            }\n            if (Array.isArray(availableEndpoints)) {\n                return availableEndpoints[0].endpoint_type !== undefined\n                    ? endpointTypes[2] : endpointTypes[0];\n            }\n            return availableEndpoints.endpoint_type !== undefined\n                ? endpointTypes[2] : endpointTypes[0];\n        }\n    };\n\n    /**\n     * Method to get the supported endpoint types by api type.\n     *\n     * @param {Object} apiObject  The representative type of the endpoint.\n     * @return {string} The supported endpoint types.\n     * */\n    const getSupportedType = (apiObject) => {\n        const { type } = apiObject;\n        let supportedEndpointTypes = [];\n        if (type === 'GRAPHQL') {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n            ];\n        } else if (type === 'SOAP' || type === 'SOAPTOREST') {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'address', value: 'HTTP/SOAP Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n                { key: 'prototyped', value: 'Prototype Endpoint' },\n            ];\n        } else {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'address', value: 'HTTP/SOAP Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n                { key: 'prototyped', value: 'Prototype Endpoint' },\n                { key: 'INLINE', value: 'Prototype Implementation' },\n                { key: 'awslambda', value: 'AWS Lambda' },\n            ];\n        }\n        return supportedEndpointTypes;\n    };\n\n    useEffect(() => {\n        const supportedTypeLists = getSupportedType(api);\n        const epType = getEndpointType(api);\n        if (epType.key !== 'INLINE') {\n            setEndpointCategory({\n                prod: !!endpointConfig.production_endpoints,\n                sandbox: !!endpointConfig.sandbox_endpoints,\n            });\n        }\n        setSupportedEndpointType(supportedTypeLists);\n        setEpConfig(endpointConfig);\n        setEndpointType(epType);\n        setEndpointSecurityInfo(endpointSecurity);\n    }, [props]);\n\n    const getEndpoints = (type) => {\n        if (epConfig[type]) {\n            return epConfig[type].length > 0\n                ? epConfig[type][0].url : epConfig[type].url;\n        }\n        return '';\n    };\n\n    const handleOnChangeEndpointCategoryChange = (category) => {\n        let endpointConfigCopy = cloneDeep(endpointConfig);\n        if (category === 'prod') {\n            const endpointProp = 'production_endpoints';\n            if (endpointCategory[category]) {\n                delete endpointConfigCopy[endpointProp];\n                if (endpointConfigCopy.endpointType === 'failover') {\n                    delete endpointConfigCopy.production_failovers;\n                }\n            } else if (endpointConfigCopy.endpointType === 'load_balance') {\n                endpointConfigCopy[endpointProp] = [getEndpointTemplate(endpointType.key)];\n            } else if (endpointConfigCopy.endpointType === 'failover') {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n                endpointConfigCopy.production_failovers = [];\n            } else {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n            }\n        } else {\n            const endpointProp = 'sandbox_endpoints';\n            if (endpointCategory[category]) {\n                delete endpointConfigCopy[endpointProp];\n                if (endpointConfigCopy.endpointType === 'failover') {\n                    delete endpointConfigCopy.sandbox_failovers;\n                }\n            } else if (endpointConfigCopy.endpointType === 'load_balance') {\n                endpointConfigCopy[endpointProp] = [getEndpointTemplate(endpointType.key)];\n            } else if (endpointConfigCopy.endpointType === 'failover') {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n                endpointConfigCopy.sandbox_failovers = [];\n            } else {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n            }\n        }\n        // Check whether, config has either prod/ sandbox endpoints. If not, reSet the endpoint type to http\n        if (!endpointConfigCopy.production_endpoints && !endpointConfigCopy.sandbox_endpoints) {\n            endpointConfigCopy = createEndpointConfig('http');\n        }\n        endpointsDispatcher({ action: 'select_endpoint_category', value: endpointConfigCopy });\n    };\n\n    /**\n     * Method to modify the endpoint represented by the given parameters.\n     *\n     * If url is null, remove the endpoint from the endpoint config.\n     *\n     * @param {number} index The index of the endpoint in the listing.\n     * @param {string} category The endpoint category. (production/ sand box)\n     * @param {string} url The new endpoint url.\n     * */\n    const editEndpoint = (index, category, url) => {\n        let modifiedEndpoint = null;\n        // Make a copy of the endpoint config.\n        const endpointConfigCopy = cloneDeep(epConfig);\n        /*\n        * If the index > 0, it means that the endpoint is load balance or fail over.\n        * Otherwise it is the default endpoint. (index = 0)\n        * */\n        if (index > 0) {\n            const endpointTypeProperty = getEndpointTypeProperty(endpointConfigCopy.endpoint_type, category);\n            modifiedEndpoint = endpointConfigCopy[endpointTypeProperty];\n            /*\n            * In failover case, the failover endpoints are a separate object. But in endpoint listing, since we\n            *  consider all the endpoints as a single list, to get the real index of the failover endpoint we use\n            *  index - 1.\n            * */\n            if (endpointConfigCopy.endpoint_type === 'failover') {\n                modifiedEndpoint[index - 1].url = url.trim();\n            } else {\n                modifiedEndpoint[index].url = url.trim();\n            }\n            endpointConfigCopy[endpointTypeProperty] = modifiedEndpoint;\n        } else if (url !== '') {\n            modifiedEndpoint = endpointConfigCopy[category];\n\n            /*\n            * In this case, we are editing the default endpoint.\n            * If the endpoint type is load balance, the production_endpoints or the sandbox_endpoint object is an\n            *  array. Otherwise, in failover mode, the default endpoint is an object.\n            *\n            * So, we check whether the endpoints is an array or an object.\n            *\n            * If This is the first time a user creating an endpoint endpoint config object does not have\n            *  production_endpoints or sandbox_endpoints object.\n            * Therefore create new object and add to the endpoint config.\n            * */\n            if (!modifiedEndpoint) {\n                modifiedEndpoint = getEndpointTemplate(endpointConfigCopy.endpoint_type);\n                modifiedEndpoint.url = url.trim();\n            } else if (Array.isArray(modifiedEndpoint)) {\n                if (url === '') {\n                    modifiedEndpoint.splice(0, 1);\n                } else {\n                    modifiedEndpoint[0].url = url.trim();\n                }\n            } else {\n                modifiedEndpoint.url = url.trim();\n            }\n            endpointConfigCopy[category] = modifiedEndpoint;\n        } else {\n            /*\n            * If the url is empty, delete the respective endpoint object.\n            * */\n            delete endpointConfigCopy[category];\n        }\n        endpointsDispatcher({ action: category, value: modifiedEndpoint });\n    };\n\n    const handleEndpointCategorySelect = (event) => {\n        endpointsDispatcher({\n            action: 'endpoint_type',\n            value: { category: event.target.value, endpointType: endpointType.key },\n        });\n    };\n\n    /**\n     * Handles the endpoint type change functionality.\n     *\n     * @param {string} value The selected endpoint type.\n     * */\n    const changeEndpointType = (value) => {\n        setTypeChangeConfirmation({ openDialog: false });\n        const selectedKey = typeChangeConfirmation.type || value;\n        if (selectedKey === 'INLINE') {\n            const tmpConfig = createEndpointConfig('prototyped');\n            endpointsDispatcher({\n                action: 'set_inline',\n                value: {\n                    endpointConfig: tmpConfig,\n                    endpointImplementationType: 'INLINE',\n                },\n            });\n        } else if (selectedKey === 'prototyped') {\n            const tmpConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'set_prototyped',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: tmpConfig,\n                },\n            });\n        } else if (selectedKey === 'awslambda') {\n            const generatedEndpointConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'select_endpoint_type',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: { ...generatedEndpointConfig },\n                },\n            });\n        } else {\n            const generatedEndpointConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'select_endpoint_type',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: { ...generatedEndpointConfig },\n                },\n            });\n        }\n    };\n\n    /**\n     * Handles the endpoint type select event. If endpoint config has existing values, show confirmation dialog.\n     * @param {any} event The select event.\n     * */\n    const handleEndpointTypeSelect = (event) => {\n        // Check whether the endpoint Config has values.\n        if (epConfig.production_endpoints || epConfig.sandbox_endpoints) {\n            // Show confirmation dialog\n            setTypeChangeConfirmation({ type: event.target.value, openDialog: true });\n        } else {\n            changeEndpointType(event.target.value);\n        }\n    };\n\n    /**\n     * Handles the endpoint security toggle action.\n     * */\n    const handleToggleEndpointSecurity = () => {\n        const tmpSecurityInfo = endpointSecurityInfo === null\n            ? { type: 'BASIC', username: null, password: null } : null;\n        setEndpointSecurityInfo(tmpSecurityInfo);\n        endpointsDispatcher({ action: 'endpointSecurity', value: tmpSecurityInfo });\n    };\n\n    /**\n     * Method to get the advance configuration from the selected endpoint.\n     *\n     * @param {number} index The selected endpoint index\n     * @param {string} epType The type of the endpoint. (loadbalance/ failover)\n     * @param {string} category The endpoint category (Production/ sandbox)\n     * @return {object} The advance config object of the endpoint.\n     * */\n    const getAdvanceConfig = (index, epType, category) => {\n        const endpointTypeProperty = getEndpointTypeProperty(epType, category);\n        let advanceConfig = {};\n        if (index > 0) {\n            if (epConfig.endpoint_type === 'failover') {\n                advanceConfig = epConfig[endpointTypeProperty][index - 1].config;\n            } else {\n                advanceConfig = epConfig[endpointTypeProperty][index].config;\n            }\n        } else {\n            const endpointInfo = epConfig[endpointTypeProperty];\n            if (Array.isArray(endpointInfo)) {\n                advanceConfig = endpointInfo[0].config;\n            } else {\n                advanceConfig = endpointInfo.config;\n            }\n        }\n        return advanceConfig;\n    };\n\n    /**\n     * Method to open/ close the advance configuration dialog. This method also sets some information about the\n     * seleted endpoint type/ category and index.\n     *\n     * @param {number} index The index of the selected endpoint.\n     * @param {string} type The endpoint type\n     * @param {string} category The endpoint category.\n     * */\n    const toggleAdvanceConfig = (index, type, category) => {\n        const advanceEPConfig = getAdvanceConfig(index, type, category);\n        setAdvancedConfigOptions(() => {\n            return ({\n                open: !advanceConfigOptions.open,\n                index,\n                type,\n                category,\n                config: advanceEPConfig === undefined ? {} : advanceEPConfig,\n            });\n        });\n    };\n\n    /**\n     * Method to handle the endpoint security changes.\n     * @param {string} value The value\n     * @param {string} field The security propety that is being modified.\n     * */\n    const handleEndpointSecurityChange = (value, field) => {\n        endpointsDispatcher({\n            action: 'endpointSecurity',\n            value: { ...endpointSecurityInfo, [field]: value },\n        });\n    };\n\n    /**\n     * Method to save the advance configurations.\n     *\n     * @param {object} advanceConfig The advance configuration object.\n     * */\n    const saveAdvanceConfig = (advanceConfig) => {\n        const config = cloneDeep(epConfig);\n        const endpointConfigProperty = getEndpointTypeProperty(\n            advanceConfigOptions.type, advanceConfigOptions.category,\n        );\n        const selectedEndpoints = config[endpointConfigProperty];\n        if (Array.isArray(selectedEndpoints)) {\n            if (advanceConfigOptions.type === 'failover') {\n                selectedEndpoints[advanceConfigOptions.index - 1].config = advanceConfig;\n            } else {\n                selectedEndpoints[advanceConfigOptions.index].config = advanceConfig;\n            }\n        } else {\n            selectedEndpoints.config = advanceConfig;\n        }\n        setAdvancedConfigOptions({ open: false });\n        endpointsDispatcher({\n            action: 'set_advance_config',\n            value: { ...config, [endpointConfigProperty]: selectedEndpoints },\n        });\n    };\n\n    /**\n     * Method to close the advance configuration dialog box.\n     * */\n    const closeAdvanceConfig = () => {\n        setAdvancedConfigOptions({ open: false });\n    };\n\n    /**\n     * Method to update the resource paths object in the swagger.\n     * @param {any} paths The updated paths object.\n     * */\n    const updatePaths = (paths) => {\n        updateSwagger({ ...swaggerDef, paths });\n    };\n\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function epCategoryOnChangeHandler(event) {\n        handleOnChangeEndpointCategoryChange('prod', event);\n    }\n\n    return (\n        <div className={classes.overviewWrapper}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    {api.type === 'WS' ? <div /> : (\n                        <FormControl component='fieldset' className={classes.formControl}>\n                            <RadioGroup\n                                aria-label='EndpointType'\n                                name='endpointType'\n                                className={classes.radioGroup}\n                                value={endpointType.key}\n                                onChange={handleEndpointTypeSelect}\n                            >\n                                {supportedEnpointTypes.map((endpoint) => {\n                                    if (api.lifeCycleStatus === 'CREATED') {\n                                        return (\n                                            <FormControlLabel\n                                                value={endpoint.key}\n                                                control={(\n                                                    <Radio\n                                                        disabled={(isRestricted(['apim:api_create'], api))}\n                                                        color='primary'\n                                                    />\n                                                )}\n                                                label={endpoint.value}\n                                            />\n                                        );\n                                    } else if (api.lifeCycleStatus === 'PROTOTYPED') {\n                                        if (endpoint.key === 'prototyped' || endpoint.key === 'INLINE') {\n                                            return (\n                                                <FormControlLabel\n                                                    value={endpoint.key}\n                                                    control={(\n                                                        <Radio\n                                                            disabled={(isRestricted(['apim:api_create'], api))}\n                                                            color='primary'\n                                                        />\n                                                    )}\n                                                    label={endpoint.value}\n                                                />\n                                            );\n                                        }\n                                    } else if (endpoint.key !== 'prototyped' && endpoint.key !== 'INLINE') {\n                                        return (\n                                            <FormControlLabel\n                                                value={endpoint.key}\n                                                control={(\n                                                    <Radio\n                                                        disabled={(isRestricted(['apim:api_create'], api))}\n                                                        color='primary'\n                                                    />\n                                                )}\n                                                label={endpoint.value}\n                                            />\n                                        );\n                                    }\n                                    return <div />;\n                                })}\n                            </RadioGroup>\n                        </FormControl>\n                    )}\n                </Grid>\n                <Grid item xs={12}>\n                    {endpointType.key === 'INLINE'\n                        ? <InlineEndpoints paths={swaggerDef.paths} updatePaths={updatePaths} />\n                        : (\n                            <Paper className={classes.endpointContainer}>\n                                {endpointType.key === 'awslambda'\n                                    ? (\n                                        <Credentials\n                                            apiId={api.id}\n                                            endpointConfig={endpointConfig}\n                                            endpointsDispatcher={endpointsDispatcher}\n                                        />\n                                    )\n                                    : (\n                                        <>\n                                            {endpointType.key === 'prototyped'\n                                                ? (\n                                                    <Typography>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.'\n                                                                + 'EndpointOverview.prototype.endpoint'\n                                                                + '.prototype.label'}\n                                                            defaultMessage='Prototype Endpoint'\n                                                        />\n                                                    </Typography>\n                                                )\n                                                : (\n                                                    <FormControlLabel\n                                                        control={(\n                                                            <Checkbox\n                                                                checked={endpointCategory.prod}\n                                                                value='prod'\n                                                                color='primary'\n                                                                onChange={epCategoryOnChangeHandler}\n                                                            />\n                                                        )}\n                                                        label={(\n                                                            <Typography>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.'\n                                                                        + 'Endpoints.EndpointOverview'\n                                                                        + '.production.endpoint.production.label'}\n                                                                    defaultMessage='Production Endpoint'\n                                                                />\n                                                            </Typography>\n                                                        )}\n                                                    />\n                                                )}\n                                            <Collapse in={endpointCategory.prod}>\n                                                {endpointType.key === 'default'\n                                                    ? (\n\n                                                        <InlineMessage>\n                                                            <div className={classes.contentWrapper}>\n                                                                <Typography component='p' className={classes.content}>\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.EndpointOverview'\n                                                                            + '.upload.mediation.message'}\n                                                                        defaultMessage={\n                                                                            'Please upload a mediation'\n                                                                            + ' sequence file to'\n                                                                            + ' Message Mediation Policies,'\n                                                                            + ' which sets the endpoints.'\n                                                                        }\n                                                                    />\n                                                                    <IconButton\n                                                                        onClick={saveAndRedirect}\n                                                                    >\n                                                                        <LaunchIcon\n                                                                            style={{ marginLeft: '2px' }}\n                                                                            fontSize='small'\n                                                                            color='primary'\n                                                                        />\n                                                                    </IconButton>\n                                                                </Typography>\n                                                            </div>\n                                                            <Button\n                                                                className={classes.button}\n                                                                aria-label='Settings'\n                                                                onClick={() => toggleAdvanceConfig(\n                                                                    0, '', 'production_endpoints',\n                                                                )}\n                                                                disabled={\n                                                                    (isRestricted(\n                                                                        ['apim:api_create'], api,\n                                                                    )\n                                                                    )\n                                                                }\n                                                                variant='outlined'\n                                                            >\n                                                                <Icon\n                                                                    className={classes.buttonIcon}\n                                                                >\n                                                                    settings\n                                                                </Icon>\n                                                                <Typography>\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.EndpointOverview'\n                                                                            + '.advance.endpoint.configuration'}\n                                                                        defaultMessage='Advanced Configurations'\n                                                                    />\n                                                                </Typography>\n                                                            </Button>\n                                                        </InlineMessage>\n                                                    )\n                                                    : (\n                                                        <GenericEndpoint\n                                                            autoFocus\n                                                            name={endpointType.key === 'prototyped'\n                                                                ? (\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.'\n                                                                            + 'EndpointOverview.prototype'\n                                                                            + '.endpoint.prototype.header'}\n                                                                        defaultMessage='Prototype Endpoint'\n                                                                    />\n                                                                ) : (\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.'\n                                                                            + 'EndpointOverview.production'\n                                                                            + '.endpoint.production.header'}\n                                                                        defaultMessage='Production Endpoint'\n                                                                    />\n                                                                )}\n                                                            className={classes.defaultEndpointWrapper}\n                                                            endpointURL={getEndpoints('production_endpoints')}\n                                                            type=''\n                                                            index={0}\n                                                            category='production_endpoints'\n                                                            editEndpoint={editEndpoint}\n                                                            setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                            apiId={api.id}\n                                                        />\n                                                    )}\n                                            </Collapse>\n                                            {endpointType.key === 'prototyped' ? <div />\n                                                : (\n                                                    <div>\n                                                        <FormControlLabel\n                                                            control={(\n                                                                <Checkbox\n                                                                    checked={endpointCategory.sandbox}\n                                                                    value='sandbox'\n                                                                    color='primary'\n                                                                    onChange={(event) => (\n                                                                        handleOnChangeEndpointCategoryChange(\n                                                                            'sandbox', event,\n                                                                        ))}\n                                                                />\n                                                            )}\n                                                            label={(\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.Endpoints.'\n                                                                        + 'EndpointOverview.sandbox.endpoint'}\n                                                                    defaultMessage='Sandbox Endpoint'\n                                                                />\n                                                            )}\n                                                        />\n                                                        <Collapse in={endpointCategory.sandbox}>\n                                                            {endpointType.key === 'default'\n                                                                ? (\n                                                                    <InlineMessage>\n                                                                        <div className={classes.contentWrapper}>\n                                                                            <Typography\n                                                                                component='p'\n                                                                                className={classes.content}\n                                                                            >\n                                                                                <FormattedMessage\n                                                                                    id={'Apis.Details.Endpoints'\n                                                                                        + '.EndpointOverview.upload'\n                                                                                        + '.mediation.message'}\n                                                                                    defaultMessage={\n                                                                                        'Please upload a mediation'\n                                                                                        + ' sequence file to'\n                                                                                        + ' Message Mediation Policies,'\n                                                                                        + ' which sets the endpoints.'\n                                                                                    }\n                                                                                />\n                                                                                <IconButton\n                                                                                    onClick={saveAndRedirect}\n                                                                                >\n                                                                                    <LaunchIcon\n                                                                                        style={{ marginLeft: '2px' }}\n                                                                                        fontSize='small'\n                                                                                        color='primary'\n                                                                                    />\n                                                                                </IconButton>\n                                                                            </Typography>\n                                                                        </div>\n                                                                        <Button\n                                                                            className={classes.button}\n                                                                            aria-label='Settings'\n                                                                            onClick={() => toggleAdvanceConfig(\n                                                                                0, '', 'sandbox_endpoints',\n                                                                            )}\n                                                                            disabled={\n                                                                                (isRestricted(\n                                                                                    ['apim:api_create'], api,\n                                                                                )\n                                                                                )\n                                                                            }\n                                                                            variant='outlined'\n                                                                        >\n                                                                            <Icon\n                                                                                className={classes.buttonIcon}\n                                                                            >\n                                                                                settings\n                                                                            </Icon>\n                                                                            <Typography>\n                                                                                <FormattedMessage\n                                                                                    id={'Apis.Details.Endpoints'\n                                                                                        + '.EndpointOverview.advance'\n                                                                                        + '.endpoint.configuration'}\n                                                                                    defaultMessage={'Advanced '\n                                                                                        + 'Configurations'}\n                                                                                />\n                                                                            </Typography>\n                                                                        </Button>\n                                                                    </InlineMessage>\n                                                                )\n                                                                : (\n                                                                    <GenericEndpoint\n                                                                        autoFocus\n                                                                        name='Sandbox Endpoint'\n                                                                        className={classes.defaultEndpointWrapper}\n                                                                        endpointURL={getEndpoints('sandbox_endpoints')}\n                                                                        type=''\n                                                                        index={0}\n                                                                        category='sandbox_endpoints'\n                                                                        editEndpoint={editEndpoint}\n                                                                        setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                                        apiId={api.id}\n                                                                    />\n                                                                )}\n\n                                                        </Collapse>\n                                                    </div>\n                                                )}\n                                        </>\n                                    )}\n                            </Paper>\n                        )}\n                </Grid>\n                {endpointType.key === 'INLINE' || endpointType.key === 'prototyped' || endpointType.key === 'awslambda'\n                    || api.type === 'WS'\n                    ? <div />\n                    : (\n                        <Grid item xs={12}>\n                            <Typography variant='h4' align='left' className={classes.titleWrapper} gutterBottom>\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.EndpointOverview.general.config.header'\n                                    defaultMessage='General Endpoint Configurations'\n                                />\n                            </Typography>\n                            <GeneralConfiguration\n                                epConfig={(cloneDeep(epConfig))}\n                                endpointSecurityInfo={endpointSecurityInfo}\n                                handleToggleEndpointSecurity={handleToggleEndpointSecurity}\n                                handleEndpointSecurityChange={handleEndpointSecurityChange}\n                                endpointType={endpointType}\n                            />\n                        </Grid>\n                    )}\n                {\n                    endpointType.key === 'INLINE'\n                        || endpointType.key === 'default'\n                        || endpointType.key === 'prototyped'\n                        || api.type === 'WS'\n                        || endpointType.key === 'awslambda'\n                        ? <div />\n                        : (\n                            <Grid item xs={12}>\n                                <Typography\n                                    variant='h4'\n                                    align='left'\n                                    className={classes.titleWrapper}\n                                    gutterBottom\n                                >\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.'\n                                            + 'EndpointOverview.lb.failover.endpoints.header'}\n                                        defaultMessage='Load balance and Failover Configurations'\n                                    />\n                                </Typography>\n                                <LoadbalanceFailoverConfig\n                                    handleEndpointCategorySelect={handleEndpointCategorySelect}\n                                    toggleAdvanceConfig={toggleAdvanceConfig}\n                                    endpointsDispatcher={endpointsDispatcher}\n                                    epConfig={(cloneDeep(epConfig))}\n                                    endpointSecurityInfo={endpointSecurityInfo}\n                                    handleEndpointTypeSelect={handleEndpointTypeSelect}\n                                    globalEpType={endpointType}\n                                    apiType={api.type}\n                                />\n                            </Grid>\n                        )\n                }\n            </Grid>\n            <Dialog open={advanceConfigOptions.open}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.advance.endpoint.configuration'\n                            defaultMessage='Advanced Configurations'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <AdvanceEndpointConfig\n                        isSOAPEndpoint={endpointType.key === 'address'}\n                        advanceConfig={advanceConfigOptions.config}\n                        onSaveAdvanceConfig={saveAdvanceConfig}\n                        onCancel={closeAdvanceConfig}\n                    />\n                </DialogContent>\n            </Dialog>\n            <Dialog open={typeChangeConfirmation.openDialog}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.endpoint.type.change.confirmation'\n                            defaultMessage='Change Endpoint Type'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.endpoint.type.change.confirmation.message'\n                            defaultMessage='Your current endpoint configuration will be lost.'\n                        />\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => { setTypeChangeConfirmation({ openDialog: false }); }}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.change.type.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        onClick={() => { changeEndpointType(typeChangeConfirmation.type); }}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints..EndpointOverview.change.type.proceed'\n                            defaultMessage='Proceed'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nEndpointOverview.propTypes = {\n    classes: PropTypes.shape({\n        overviewWrapper: PropTypes.shape({}),\n        endpointTypesWrapper: PropTypes.shape({}),\n        endpointName: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n    swaggerDef: PropTypes.shape({}).isRequired,\n    updateSwagger: PropTypes.func.isRequired,\n    saveAndRedirect: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EndpointOverview));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n    useContext, useEffect, useState, useReducer,\n} from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { Link, withRouter } from 'react-router-dom';\nimport NewEndpointCreate from 'AppComponents/Apis/Details/Endpoints/NewEndpointCreate';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isRestricted } from 'AppData/AuthManager';\nimport EndpointOverview from './EndpointOverview';\nimport { createEndpointConfig, getEndpointTemplateByType } from './endpointUtils';\n\nconst styles = (theme) => ({\n    endpointTypesWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'row',\n        margin: '2px',\n    },\n    root: {\n        flexGrow: 1,\n        paddingRight: '10px',\n    },\n    buttonSection: {\n        marginTop: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: theme.spacing(2),\n    },\n    endpointValidityMessage: {\n        color: theme.palette.error.main,\n    },\n    errorMessageContainer: {\n        marginTop: theme.spacing(1),\n    },\n    implSelectRadio: {\n        padding: theme.spacing(1) / 2,\n    },\n});\n\nconst defaultSwagger = { paths: {} };\n\n/**\n * The base component of the endpoints view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction Endpoints(props) {\n    const { classes, intl, history } = props;\n    const { api, updateAPI } = useContext(APIContext);\n    const [swagger, setSwagger] = useState(defaultSwagger);\n    const [endpointValidity, setAPIEndpointsValid] = useState({ isValid: true, message: '' });\n    const [isUpdating, setUpdating] = useState(false);\n\n    const apiReducer = (initState, configAction) => {\n        const tmpEndpointConfig = cloneDeep(initState.endpointConfig);\n        const { action, value } = configAction;\n        switch (action) {\n            case 'production_endpoints':\n            case 'sandbox_endpoints': {\n                if (value) {\n                    return { ...initState, endpointConfig: { ...tmpEndpointConfig, [action]: value } };\n                }\n                return { ...initState, endpointConfig: { ...tmpEndpointConfig } };\n            }\n            case 'select_endpoint_category': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'set_lb_config': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'add_endpoint': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'set_advance_config': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'remove_endpoint': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'endpointImplementationType': { // set implementation status\n                const { endpointType, implementationType } = value;\n                const config = createEndpointConfig(endpointType);\n                if (endpointType === 'prototyped') {\n                    if (implementationType === 'mock') {\n                        api.generateMockScripts(api.id).then((res) => { // generates mock/sample payloads\n                            setSwagger(res.obj);\n                        });\n                        return { ...initState, endpointConfig: config, endpointImplementationType: 'INLINE' };\n                    }\n                    return { ...initState, endpointConfig: config, endpointImplementationType: 'ENDPOINT' };\n                }\n                return { ...initState, endpointConfig: config };\n            }\n            case 'endpointSecurity': { // set endpoint security\n                const tmpSecurityInfo = cloneDeep(value);\n                if (value && tmpSecurityInfo.password === '**********') {\n                    tmpSecurityInfo.password = '';\n                }\n                return { ...initState, endpointSecurity: tmpSecurityInfo };\n            }\n            case 'endpoint_type': { // set endpoint type\n                const config = getEndpointTemplateByType(\n                    value.category,\n                    value.endpointType === 'address',\n                    tmpEndpointConfig,\n                );\n                return { ...initState, endpointConfig: { ...config } };\n            }\n            case 'set_inline': {\n                const { endpointImplementationType, endpointConfig } = value;\n                return { ...initState, endpointConfig, endpointImplementationType };\n            }\n            case 'set_prototyped': {\n                const { endpointImplementationType, endpointConfig } = value;\n                return {\n                    ...initState,\n                    endpointImplementationType,\n                    endpointConfig,\n                };\n            }\n            case 'set_awsCredentials': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'select_endpoint_type': {\n                const { endpointImplementationType, endpointConfig } = value;\n                let { endpointSecurity } = initState;\n                if (endpointSecurity && (endpointSecurity.username === '')) {\n                    endpointSecurity = null;\n                }\n                return {\n                    ...initState,\n                    endpointConfig,\n                    endpointImplementationType,\n                    endpointSecurity: null,\n                };\n            }\n            default: {\n                return initState;\n            }\n        }\n    };\n    const [apiObject, apiDispatcher] = useReducer(apiReducer, api.toJSON());\n\n\n    /**\n     * Method to update the api.\n     *\n     * @param {boolean} isRedirect Used for dynamic endpoints to redirect to the runtime config page.\n     */\n    const saveAPI = (isRedirect) => {\n        const { endpointConfig, endpointImplementationType, endpointSecurity } = apiObject;\n        setUpdating(true);\n        if (endpointImplementationType === 'INLINE') {\n            api.updateSwagger(swagger).then((resp) => {\n                setSwagger(resp.obj);\n            }).then(() => {\n                updateAPI({ endpointConfig, endpointImplementationType, endpointSecurity });\n            }).finally(() => {\n                setUpdating(false);\n                if (isRedirect) {\n                    history.push('/apis/' + api.id + '/runtime-configuration');\n                }\n            });\n        } else {\n            updateAPI(apiObject).finally(() => {\n                setUpdating(false);\n                if (isRedirect) {\n                    history.push('/apis/' + api.id + '/runtime-configuration');\n                }\n            });\n        }\n    };\n\n    /**\n     * Validate the provided endpoint config object.\n     *\n     * @param {any} endpointConfig The provided endpoint config for validation.\n     * @param {string} implementationType The api implementation type (INLINE/ ENDPOINT)\n     * @return {{isValid: boolean, message: string}} The endpoint validity information.\n     * */\n    const validate = (implementationType) => {\n        const { endpointConfig, endpointSecurity } = apiObject;\n        if (endpointSecurity) {\n            if (endpointSecurity.username === '' || endpointSecurity.password === null) {\n                return {\n                    isValid: false,\n                    message: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.Endpoints.missing.security.username.error',\n                        defaultMessage: 'Endpoint Security User Name/ Password should not be empty',\n                    }),\n                };\n            }\n        }\n        if (endpointConfig === null) {\n            return { isValid: true, message: '' };\n        }\n        const endpointType = endpointConfig.endpoint_type;\n        if (endpointType === 'awslambda') {\n            if (endpointConfig.access_method === 'stored') {\n                if (endpointConfig.amznAccessKey === '' || endpointConfig.amznSecretKey === ''\n                || endpointConfig.amznRegion === '') {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.accessKey.secretKey.error',\n                            defaultMessage: 'Access Key, Secret Key and Region should not be empty',\n                        }),\n                    };\n                }\n            }\n            if (endpointConfig.amznAccessKey !== '' && endpointConfig.amznSecretKey === 'AWS_SECRET_KEY') {\n                return {\n                    isValid: false,\n                    message: '',\n                };\n            }\n        } else if (endpointType === 'load_balance') {\n            /**\n             * Checklist:\n             *  production/ sandbox endpoints should be an array.\n             *  production/ sandbox endpoint [0] must be present.\n             * */\n            if (endpointConfig.production_endpoints && endpointConfig.production_endpoints.length > 0) {\n                if (!endpointConfig.production_endpoints[0].url\n                    || (endpointConfig.production_endpoints[0].url\n                        && endpointConfig.production_endpoints[0].url === '')) {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.prod.endpoint.loadbalance',\n                            defaultMessage: 'Default Production Endpoint should not be empty',\n                        }),\n                    };\n                }\n            }\n            if (endpointConfig.sandbox_endpoints && endpointConfig.sandbox_endpoints.length > 0) {\n                if (!endpointConfig.sandbox_endpoints[0].url\n                    || (endpointConfig.sandbox_endpoints[0].url && endpointConfig.sandbox_endpoints[0].url === '')) {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.sandbox.endpoint.loadbalance',\n                            defaultMessage: 'Default Sandbox Endpoint should not be empty',\n                        }),\n                    };\n                }\n            }\n        } else {\n            let isValidEndpoint = false;\n            if (endpointConfig.implementation_status === 'prototyped') {\n                if (implementationType === 'ENDPOINT') {\n                    if (endpointConfig.production_endpoints && endpointConfig.production_endpoints.url === '') {\n                        return {\n                            isValid: false,\n                            message: intl.formatMessage({\n                                id: 'Apis.Details.Endpoints.Endpoints.missing.prototype.url',\n                                defaultMessage: 'Prototype Endpoint URL should not be empty',\n                            }),\n                        };\n                    }\n                }\n                isValidEndpoint = true;\n            } else if (endpointConfig.production_endpoints && !endpointConfig.sandbox_endpoints) {\n                isValidEndpoint = endpointConfig.production_endpoints.url !== '';\n            } else if (endpointConfig.sandbox_endpoints && !endpointConfig.production_endpoints) {\n                isValidEndpoint = endpointConfig.sandbox_endpoints.url !== '';\n            } else if (!endpointConfig.sandbox_endpoints && !endpointConfig.production_endpoints) {\n                isValidEndpoint = false;\n            } else {\n                isValidEndpoint = endpointConfig.sandbox_endpoints.url !== ''\n                        || endpointConfig.production_endpoints.url !== '';\n            }\n            return !isValidEndpoint ? {\n                isValid: false,\n                message: intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.Endpoints.missing.endpoint.error',\n                    defaultMessage: 'Either one of Production or Sandbox Endpoints should be added.',\n                }),\n            } : { isValid: true, message: '' };\n        }\n        return {\n            isValid: true,\n            message: '',\n        };\n    };\n\n    useEffect(() => {\n        if (api.type !== 'WS') {\n            api.getSwagger(apiObject.id).then((resp) => {\n                setSwagger(resp.obj);\n            }).catch((err) => {\n                console.err(err);\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        setAPIEndpointsValid(validate(apiObject.endpointImplementationType));\n    }, [apiObject]);\n\n    const saveAndRedirect = () => {\n        saveAPI(true);\n    };\n    /**\n     * Method to update the swagger object.\n     *\n     * @param {any} swaggerObj The updated swagger object.\n     * */\n    const changeSwagger = (swaggerObj) => {\n        setSwagger(swaggerObj);\n    };\n\n    /**\n     * Generate endpoint configuration based on the selected endpoint type and set to the api object.\n     *\n     * @param {string} endpointType The endpoint type.\n     * @param {string} implementationType The endpoint implementationType. (Required only for prototype endpoints)\n     * */\n    const generateEndpointConfig = (endpointType, implementationType) => {\n        apiDispatcher({ action: 'endpointImplementationType', value: { endpointType, implementationType } });\n    };\n\n    return (\n        <>\n            {/* Since the api is set to the state in component did mount, check both the api and the apiObject. */}\n            {(api.endpointConfig === null && apiObject.endpointConfig === null)\n                ? <NewEndpointCreate generateEndpointConfig={generateEndpointConfig} apiType={apiObject.type} />\n                : (\n                    <div className={classes.root}>\n                        <Typography variant='h4' align='left' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.Endpoints.endpoints.header'\n                                defaultMessage='Endpoints'\n                            />\n                        </Typography>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={12} className={classes.endpointsContainer}>\n                                    <EndpointOverview\n                                        swaggerDef={swagger}\n                                        updateSwagger={changeSwagger}\n                                        api={apiObject}\n                                        onChangeAPI={apiDispatcher}\n                                        endpointsDispatcher={apiDispatcher}\n                                        saveAndRedirect={saveAndRedirect}\n                                    />\n                                </Grid>\n                            </Grid>\n                            {\n                                endpointValidity.isValid\n                                    ? <div />\n                                    : (\n                                        <Grid item className={classes.errorMessageContainer}>\n                                            <Typography className={classes.endpointValidityMessage}>\n                                                {endpointValidity.message}\n                                            </Typography>\n                                        </Grid>\n                                    )\n                            }\n                            <Grid\n                                container\n                                direction='row'\n                                alignItems='flex-start'\n                                spacing={1}\n                                className={classes.buttonSection}\n                            >\n                                <Grid item>\n                                    <Button\n                                        disabled={isUpdating || !endpointValidity.isValid\n                                    || isRestricted(['apim:api_create'], api)}\n                                        type='submit'\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={() => saveAPI()}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.Endpoints.save'\n                                            defaultMessage='Save'\n                                        />\n                                        {isUpdating && <CircularProgress size={24} />}\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Link to={'/apis/' + api.id + '/overview'}>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Details.Endpoints.Endpoints.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                                {isRestricted(['apim:api_create'], api)\n                                && (\n                                    <Grid item>\n                                        <Typography variant='body2' color='primary'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Endpoints.Endpoints.update.not.allowed'\n                                                defaultMessage={'*You are not authorized to update endpoints of'\n                                                + ' the API due to insufficient permissions'}\n                                            />\n                                        </Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </div>\n                    </div>\n                )}\n        </>\n\n    );\n}\n\nEndpoints.propTypes = {\n    classes: PropTypes.shape({\n        root: PropTypes.shape({}),\n        buttonSection: PropTypes.shape({}),\n        endpointTypesWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(injectIntl(withStyles(styles)(Endpoints)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport API from 'AppData/api';\nimport PropTypes from 'prop-types';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    mainTitle: {\n        paddingTop: theme.spacing(3),\n    },\n    gatewayPaper: {\n        marginTop: theme.spacing(2),\n    },\n    content: {\n        marginTop: theme.spacing(2),\n        margin: `${theme.spacing(2)}px 0 ${theme.spacing(2)}px 0`,\n    },\n    emptyBox: {\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(3),\n    },\n}));\n\n/**\n * Renders Microgateway labels\n * @class MicroGateway\n * @param {*} props\n * @extends {React.Component}\n */\nexport default function MicroGateway(props) {\n    const classes = useStyles();\n    const { selectedMgLabel, setSelectedMgLabel, api } = props;\n    const restApi = new API();\n    const [mgLabels, setMgLabels] = useState([]);\n    useEffect(() => {\n        restApi.microgatewayLabelsGet()\n            .then((result) => {\n                setMgLabels(result.body.list);\n            });\n    }, []);\n\n    return (\n        <>\n            <Typography variant='h4' align='left' className={classes.mainTitle}>\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.Microgateways'\n                    defaultMessage='Microgateways'\n                />\n            </Typography>\n            {mgLabels.length > 0 ? (\n                <Paper className={classes.gatewayPaper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell />\n                                <TableCell align='left'>Label</TableCell>\n                                <TableCell align='left'>Description</TableCell>\n                                <TableCell align='left'>Access URL</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {mgLabels.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell padding='checkbox'>\n                                        <Checkbox\n                                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                            checked={selectedMgLabel.includes(row.name)}\n                                            onChange={\n                                                (event) => {\n                                                    const { checked, name } = event.target;\n                                                    if (checked) {\n                                                        setSelectedMgLabel([...selectedMgLabel, name]);\n                                                    } else {\n                                                        setSelectedMgLabel(\n                                                            selectedMgLabel.filter((env) => env !== name),\n                                                        );\n                                                    }\n                                                }\n                                            }\n                                            name={row.name}\n                                            color='primary'\n                                        />\n                                    </TableCell>\n                                    <TableCell component='th' scope='row' align='left'>\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell align='left'>{row.description}</TableCell>\n                                    <TableCell align='left'>{row.access_urls.join(', ')}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            )\n                : (\n                    <InlineMessage type='info' height={100} className={classes.emptyBox}>\n                        <div className={classes.contentWrapper}>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.microgateway.labels.emptym1'\n                                    defaultMessage='Microgateway labels are not available.'\n                                />\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.microgateway.labels.emptym2'\n                                    defaultMessage=' You can request the administrator to add labels.'\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                )}\n        </>\n    );\n}\nMicroGateway.defaultProps = {\n    api: {},\n};\nMicroGateway.propTypes = {\n    selectedMgLabel: PropTypes.arrayOf(PropTypes.string).isRequired,\n    setSelectedMgLabel: PropTypes.func.isRequired,\n    api: PropTypes.shape({}),\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState } from 'react';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MicroGateway from 'AppComponents/Apis/Details/Environments/MicroGateway';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    saveButton: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\n/**\n * Renders an Environments list\n * @class Environments\n * @extends {React.Component}\n */\nexport default function Environments() {\n    const classes = useStyles();\n    const { api, updateAPI } = useContext(APIContext);\n    const { settings } = useAppContext();\n    const [gatewayEnvironments, setGatewayEnvironments] = useState([...api.gatewayEnvironments]);\n    const [selectedMgLabel, setSelectedMgLabel] = useState([...api.labels]);\n\n    const [isUpdating, setUpdating] = useState(false);\n\n    /**\n     *\n     * Handle the Environments save button action\n     */\n    function addEnvironments() {\n        setUpdating(true);\n        updateAPI({\n            gatewayEnvironments,\n            labels: selectedMgLabel,\n        })\n            .then(() => Alert.info('API Update Successfully'))\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while updating the environments');\n                }\n                console.error(error);\n            })\n            .finally(() => setUpdating(false));\n    }\n\n    return (\n        <>\n            <Typography variant='h4' gutterBottom>\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.APIGateways'\n                    defaultMessage='API Gateways'\n                />\n            </Typography>\n            <Paper className={classes.saveButton}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell />\n                            <TableCell align='left'>Name</TableCell>\n                            <TableCell align='left'>Type</TableCell>\n                            <TableCell align='left'>Server URL</TableCell>\n                            {api.isWebSocket() ? (\n                                <>\n                                    <TableCell align='left'>WS Endpoint</TableCell>\n                                    <TableCell align='left'>WSS Endpoint</TableCell>\n                                </>\n                            ) : (\n                                <>\n                                    <TableCell align='left'>HTTP Endpoint</TableCell>\n                                    <TableCell align='left'>HTTPS Endpoint</TableCell>\n                                </>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {settings.environment.map((row) => (\n                            <TableRow key={row.name}>\n                                <TableCell padding='checkbox'>\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                        checked={gatewayEnvironments.includes(row.name)}\n                                        onChange={\n                                            (event) => {\n                                                const { checked, name } = event.target;\n                                                if (checked) {\n                                                    setGatewayEnvironments([...gatewayEnvironments, name]);\n                                                } else {\n                                                    setGatewayEnvironments(\n                                                        gatewayEnvironments.filter((env) => env !== name),\n                                                    );\n                                                }\n                                            }\n                                        }\n                                        name={row.name}\n                                        color='primary'\n                                    />\n                                </TableCell>\n                                <TableCell component='th' scope='row'>\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align='left'>{row.type}</TableCell>\n                                <TableCell align='left'>{row.serverUrl}</TableCell>\n\n                                {api.isWebSocket() ? (\n                                    <>\n                                        <TableCell align='left'>{row.endpoints.ws}</TableCell>\n                                        <TableCell align='left'>{row.endpoints.wss}</TableCell>\n                                    </>\n                                ) : (\n                                    <>\n                                        <TableCell align='left'>{row.endpoints.http}</TableCell>\n                                        <TableCell align='left'>{row.endpoints.https}</TableCell>\n                                    </>\n                                )}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n\n            {!api.isWebSocket()\n                && (\n                    <MicroGateway\n                        selectedMgLabel={selectedMgLabel}\n                        setSelectedMgLabel={setSelectedMgLabel}\n                        api={api}\n                    />\n                )}\n\n            <Grid\n                container\n                direction='row'\n                alignItems='flex-start'\n                spacing={1}\n            >\n                <Grid item>\n                    <Button\n                        className={classes.saveButton}\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api) || isUpdating}\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        onClick={addEnvironments}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.save'\n                            defaultMessage='Save'\n                        />\n                        {isUpdating && <CircularProgress size={20} />}\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Link to={'/apis/' + api.id + '/overview'}>\n                        <Button className={classes.saveButton}>\n                            <FormattedMessage\n                                id='Apis.Details.Environments.Environments.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Link>\n                </Grid>\n            </Grid>\n            {isRestricted(['apim:api_create'], api) && (\n                <Grid item>\n                    <Typography variant='body2' color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.update.not.allowed'\n                            defaultMessage={\n                                '* You are not authorized to update particular fields of'\n                                + ' the API due to insufficient permissions'\n                            }\n                        />\n                    </Typography>\n                </Grid>\n            )}\n        </>\n    );\n}\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport MUIDataTable from 'mui-datatables';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { FormattedMessage } from 'react-intl';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst columns = ['Name', 'Value'];\n\nconst options = {\n    filterType: 'checkbox',\n    sort: false,\n    search: false,\n    viewColumns: false,\n    filter: false,\n    selectableRowsHeader: false,\n    selectableRows: 'none',\n    pagination: false,\n    download: false,\n};\n\n// eslint-disable-next-line require-jsdoc\nfunction Invoice(props) {\n    const {\n        subscriptionId,\n        isMonetizedUsagePolicy,\n        isNotAuthorized,\n        api,\n    } = props;\n    const [showPopup, setShowPopup] = useState(false);\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    const [invoice, setInvoice] = useState(null);\n\n    /**\n   * Handle the popup for invoice\n   */\n    const handlePopup = () => {\n        setShowPopup(true);\n        setInvoice(null);\n        if (api.apiType === 'APIProduct') {\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            const promiseInvoice = apiProduct.getMonetizationInvoice(subscriptionId);\n            promiseInvoice.then((response) => {\n                const invoiceData = [];\n                Object.keys(response.properties).map((invoiceItem) => {\n                    const insideArray = [];\n                    insideArray.push(invoiceItem);\n                    insideArray.push(response.properties[invoiceItem]);\n                    invoiceData.push(insideArray);\n                    return true;\n                });\n                setInvoice(invoiceData);\n            }).catch((error) => {\n                console.error(error);\n                setShowErrorPopup(true);\n            });\n        } else {\n            const promiseInvoice = api.getMonetizationInvoice(subscriptionId);\n            promiseInvoice.then((response) => {\n                const invoiceData = [];\n                Object.keys(response.properties).map((invoiceItem) => {\n                    const insideArray = [];\n                    insideArray.push(invoiceItem);\n                    insideArray.push(response.properties[invoiceItem]);\n                    invoiceData.push(insideArray);\n                    return true;\n                });\n                setInvoice(invoiceData);\n            }).catch((error) => {\n                console.error(error);\n                setShowErrorPopup(true);\n            });\n        }\n    };\n\n    /**\n   * Handle closing the popup for invoice\n   */\n    const handleClose = () => {\n        setShowPopup(false);\n    };\n\n    const handleAlertClose = () => {\n        setShowErrorPopup(false);\n    };\n\n    return (\n        <>\n            <Button\n                variant='outlined'\n                size='small'\n                color='primary'\n                disabled={!isMonetizedUsagePolicy || isNotAuthorized}\n                onClick={handlePopup}\n            >\n                <FormattedMessage\n                    id='Applications.Details.Invoice.view.btn'\n                    defaultMessage='View Invoice'\n                />\n            </Button>\n            <Dialog open={showPopup} onClose={handleClose} fullWidth='true'>\n                {invoice && (\n                    <MUIDataTable\n                        title='Upcoming Invoice'\n                        data={invoice}\n                        columns={columns}\n                        options={options}\n                    />\n                )}\n            </Dialog>\n            <Dialog open={showErrorPopup} onClose={handleAlertClose} fullWidth='true'>\n                <DialogTitle>No Data Available</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='invoice-dialog-description'>\n                        Pending invoice data not found for this subscription.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAlertClose} color='primary'>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nInvoice.propTypes = {\n    subscriptionId: PropTypes.string.isRequired,\n    isMonetizedUsagePolicy: PropTypes.string.isRequired,\n    isNotAuthorized: PropTypes.string.isRequired,\n    api: PropTypes.instanceOf(API).isRequired,\n};\n\nexport default Invoice;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport MUIDataTable from 'mui-datatables';\nimport InfoIcon from '@material-ui/icons/Info';\nimport UserIcon from '@material-ui/icons/Person';\n\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport AuthManager from 'AppData/AuthManager';\nimport Invoice from './Invoice';\n\nconst styles = (theme) => ({\n    heading: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    headline: { paddingTop: theme.spacing(1.25), paddingLeft: theme.spacing(2.5) },\n    popupHeadline: {\n        alignItems: 'center',\n        borderBottom: '2px solid #40E0D0',\n        textAlign: 'center',\n    },\n    table: {\n        '& td': {\n            fontSize: theme.typography.fontSize,\n        },\n        '& th': {\n            fontSize: theme.typography.fontSize * 1.2,\n        },\n    },\n    searchDiv: {\n        float: 'right',\n        paddingTop: theme.spacing(1.25),\n        paddingRight: theme.spacing(1.25),\n    },\n    searchRoot: {\n        paddingTop: theme.spacing(0.25),\n        paddingBottom: theme.spacing(0.25),\n        paddingRight: theme.spacing(0.5),\n        paddingLeft: theme.spacing(0.5),\n        display: 'flex',\n        alignItems: 'right',\n        width: theme.spacing(50),\n        borderBottom: '1px solid #E8E8E8',\n    },\n    searchInput: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    searchIconButton: {\n        padding: theme.spacing(1.25),\n    },\n    noDataMessage: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#888888',\n        width: '100%',\n    },\n    tableColumnSize: {\n        width: '14%',\n    },\n    tableColumnSize2: {\n        width: '30%',\n    },\n    dialogColumnSize: {\n        width: '50%',\n    },\n    dialog: {\n        float: 'center',\n        alignItems: 'center',\n    },\n    invoiceTable: {\n        '& td': {\n            fontSize: theme.typography.fontSize * 1.5,\n        },\n    },\n    uniqueCell: {\n        borderTop: '1px solid #000000',\n        fontWeight: 'bold',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n        marginTop: theme.spacing(3),\n    },\n    titleWrapper: {\n        marginBottom: theme.spacing(3),\n    },\n    typography: {\n        padding: theme.spacing(2),\n    },\n    root: {\n        flexGrow: 1,\n    },\n    InfoToolTip: {\n        backgroundColor: theme.custom.disableColor,\n        color: theme.palette.getContrastText(theme.custom.disableColor),\n        fontSize: theme.typography.fontSize,\n        fontWeight: theme.typography.h6.fontWeight,\n        border: 'solid 1px ' + theme.palette.grey,\n        borderRadius: theme.shape.borderRadius,\n        padding: theme.spacing(2),\n    },\n    subscriberHeader: {\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n});\n\nconst subscriptionStatus = {\n    BLOCKED: 'BLOCKED',\n    PROD_BLOCKED: 'PROD_ONLY_BLOCKED',\n};\n\n/**\n * Table pagination for subscriptions table\n *\n * @param props props used for SubscriptionTablePagination\n * @returns {*}\n */\nfunction SubscriptionTablePagination(props) {\n    const {\n        count, page, rowsPerPage, onChangePage,\n    } = props;\n\n    /**\n     * handleFirstPageButtonClick loads data of the first page\n     * */\n    function handleFirstPageButtonClick() {\n        if (onChangePage) {\n            onChangePage(0);\n        }\n    }\n\n    /**\n     * handleBackButtonClick load data of the prev page\n     * */\n    function handleBackButtonClick() {\n        if (onChangePage) {\n            onChangePage(page - 1);\n        }\n    }\n\n    /**\n     * handleNextButtonClick load data of the next page\n     * */\n    function handleNextButtonClick() {\n        if (onChangePage) {\n            onChangePage(page + 1);\n        }\n    }\n\n    /**\n     * handleLastPageButtonClick load data of the last page\n     * */\n    function handleLastPageButtonClick() {\n        if (onChangePage) {\n            onChangePage(Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n        }\n    }\n\n    return (\n        <div\n            style={{ display: 'flex' }}\n        >\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n            >\n                <FirstPageIcon />\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n            >\n                <KeyboardArrowLeft />\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            >\n                <KeyboardArrowRight />\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            >\n                <LastPageIcon />\n            </IconButton>\n        </div>\n    );\n}\n\nSubscriptionTablePagination.propTypes = {\n    count: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n};\n\n/**\n * Lists all subscriptions.\n *\n * @class SubscriptionsTable\n * @extends {React.Component}\n */\nclass SubscriptionsTable extends Component {\n    constructor(props) {\n        super(props);\n        this.api = props.api;\n        this.state = {\n            subscriptions: null,\n            totalSubscription: 0,\n            page: 0,\n            rowsPerPage: 5,\n            searchQuery: null,\n            rowsPerPageOptions: [5, 10, 25, 50, 100],\n            emptyColumnHeight: 60,\n            policies: [],\n            subscriberClaims: null,\n        };\n        this.formatSubscriptionStateString = this.formatSubscriptionStateString.bind(this);\n        this.blockSubscription = this.blockSubscription.bind(this);\n        this.blockProductionOnly = this.blockProductionOnly.bind(this);\n        this.unblockSubscription = this.unblockSubscription.bind(this);\n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n        this.filterSubscriptions = this.filterSubscriptions.bind(this);\n        this.isMonetizedPolicy = this.isMonetizedPolicy.bind(this);\n        this.renderClaims = this.renderClaims.bind(this);\n        this.isNotCreator = AuthManager.isNotCreator();\n        this.isNotPublisher = AuthManager.isNotPublisher();\n    }\n\n    componentDidMount() {\n        this.fetchSubscriptionData();\n    }\n\n    /**\n     * Returns the set of action buttons based on the current subscription state\n     *\n     * @param {*} state State of the subscription (PROD_ONLY_BLOCKED/BLOCKED/ACTIVE)\n     * @param {*} subscriptionId Subscription ID\n     * @returns {JSX} Action buttons in JSX\n     * @memberof SubscriptionsTable\n     */\n    getSubscriptionBlockingButtons(state, subscriptionId) {\n        const { classes } = this.props;\n        if (state === subscriptionStatus.PROD_BLOCKED) {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        } else if (state === subscriptionStatus.BLOCKED) {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        } else {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        }\n    }\n\n    /**\n     * Returns subscription state string based on te current subscription state\n     *\n     * @param {*} state The current state of subscription\n     * @returns {JSX} Subscription state string\n     * @memberof SubscriptionsTable\n     */\n    formatSubscriptionStateString(state) {\n        if (state === subscriptionStatus.PROD_BLOCKED) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.blocked.production.only.subs.state'\n                    defaultMessage='Blocked Production Only'\n                />\n            );\n        } else if (state === subscriptionStatus.BLOCKED) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.blocked.subs.state'\n                    defaultMessage='Blocked'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.active.subs.state'\n                    defaultMessage='Active'\n                />\n            );\n        }\n    }\n\n    /**\n     * Blocks the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    blockSubscription(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.blockSubscriptions(subscriptionId, subscriptionStatus.BLOCKED);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.blocked',\n                    defaultMessage: 'Subscription was blocked.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.block',\n                        defaultMessage: 'Error: Unable to block subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Blocks production only for the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    blockProductionOnly(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.blockSubscriptions(subscriptionId, subscriptionStatus.PROD_BLOCKED);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.blocked.prod.only',\n                    defaultMessage: 'Subscription was blocked for production only.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.block.prod.only',\n                        defaultMessage: 'Error: Unable to block subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Unblocks the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    unblockSubscription(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.unblockSubscriptions(subscriptionId);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.unblocked',\n                    defaultMessage: 'Subscription was unblocked.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.unblock',\n                        defaultMessage: 'Error: Unable to unblock subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Fetches subscription data\n     *\n     * @memberof SubscriptionsTable\n     */\n    fetchSubscriptionData() {\n        const api = new API();\n        const { page, rowsPerPage, searchQuery } = this.state;\n        const promisedSubscriptions = api.subscriptions(this.api.id, page * rowsPerPage, rowsPerPage, searchQuery);\n        promisedSubscriptions\n            .then((response) => {\n                this.setState({\n                    subscriptions: response.body.list,\n                    totalSubscription: response.body.pagination.total,\n                });\n                for (let i = 0; i < response.body.list.length; i++) {\n                    const { subscriptionId } = response.body.list[i];\n                    const promisedInfo = api.getSubscriberInfo(subscriptionId);\n                    promisedInfo\n                        .then((resp) => {\n                            this.setState((prevState) => ({\n                                subscriberClaims: {\n                                    ...prevState.subscriberClaims,\n                                    [subscriptionId]: resp.body,\n                                },\n                            }));\n                        })\n                        .catch((errorMessage) => {\n                            console.error(errorMessage);\n                            Alert.error(JSON.stringify(errorMessage));\n                        });\n                }\n            })\n            .catch((errorMessage) => {\n                console.error(errorMessage);\n                Alert.error(JSON.stringify(errorMessage));\n            });\n        api.getMonetization(this.props.api.id).then((status) => {\n            this.setState({ monetizationStatus: status.enabled });\n        });\n        api.getSubscriptionPolicies(this.api.id).then((policies) => {\n            const filteredPolicies = policies.filter((policy) => policy.tierPlan === 'COMMERCIAL');\n            this.setState({ policies: filteredPolicies });\n        });\n    }\n\n    /**\n     * handleChangePage handle change in selected page\n     *\n     * @param page selected page\n     * */\n    handleChangePage(page) {\n        this.setState({ page }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Checks whether the policy is a usage based monetization plan\n     *\n     * */\n    isMonetizedPolicy(policyName) {\n        const { policies, monetizationStatus } = this.state;\n        if (policies.length > 0) {\n            const filteredPolicies = policies.filter(\n                (policy) => policy.name === policyName && policy.monetizationAttributes.pricePerRequest != null,\n            );\n            return (filteredPolicies.length > 0 && monetizationStatus);\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * handleChangeRowsPerPage handle change in rows per page\n     *\n     * @param event rows per page change event\n     * */\n    handleChangeRowsPerPage(event) {\n        this.setState({ rowsPerPage: event.target.value, page: 0 }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Filter subscriptions based on user search value\n     *\n     * @param event onChange event of user search\n     */\n    filterSubscriptions(event) {\n        this.setState({ searchQuery: event.target.value }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Render claims based on the claim object\n     * TODO: tmkasun this is anti-pattern this should be a component ~tmkb\n     */\n    renderClaims(claimsObject) {\n        const { classes } = this.props;\n        if (claimsObject) {\n            return (\n                <div className={classes.root}>\n                    <Grid container spacing={1} className={classes.subscriberHeader}>\n                        <Grid item>\n                            <UserIcon color='primary' />\n                        </Grid>\n                        <Grid item>\n                            {claimsObject.name}\n                        </Grid>\n                    </Grid>\n                    {claimsObject.claims && (\n                        <div>\n                            <Table className={classes.table}>\n                                <TableBody>\n                                    {claimsObject.claims.map((claim) => (\n                                        <TableRow hover>\n                                            <TableCell>{claim.name}</TableCell>\n                                            {claim.value ? (\n                                                <TableCell>{claim.value}</TableCell>\n                                            ) : (\n                                                <TableCell>Not Available</TableCell>\n                                            )}\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n                </div>\n            );\n        }\n        return (\n            <div className={classes.noDataMessage}>\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.Subscriber.no.claims'\n                    defaultMessage='No subscriber claims data available'\n                />\n            </div>\n        );\n    }\n\n    /**\n     *\n     */\n    render() {\n        const {\n            subscriptions, page, rowsPerPage, totalSubscription, rowsPerPageOptions, emptyColumnHeight,\n            subscriberClaims,\n        } = this.state;\n        const { classes, api } = this.props;\n        if (!subscriptions) {\n            return (\n                <Grid container direction='row' justify='center' alignItems='center'>\n                    <Grid item>\n                        <CircularProgress />\n                    </Grid>\n                </Grid>\n            );\n        }\n        const columns = [\n            {\n                name: 'subscriptionId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.applicationId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.subscriber',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscriber'\n                        defaultMessage='Subscriber'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            return (\n                                <div>\n                                    <Tooltip\n                                        interactive\n                                        placement='top'\n                                        classes={{\n                                            tooltip: classes.InfoToolTip,\n                                        }}\n                                        title={(\n                                            <>\n                                                {subscriberClaims && (\n                                                    <div>\n                                                        {this.renderClaims(subscriberClaims[tableMeta.rowData[0]])}\n                                                    </div>\n                                                )}\n                                            </>\n                                        )}\n                                    >\n                                        <Grid container direction='row' alignItems='center' spacing={1}>\n                                            <Grid item>\n                                                <Typography>\n                                                    <InfoIcon color='action' />\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                {value}\n                                            </Grid>\n                                        </Grid>\n                                    </Tooltip>\n                                </div>\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n            {\n                name: 'applicationInfo.name',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.application'\n                        defaultMessage='Application'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'applicationInfo.description',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.subscriptionCount',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'throttlingPolicy',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.throttling.tier'\n                        defaultMessage='Tier'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'subscriptionStatus',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.status'\n                        defaultMessage='Status'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'actions',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.actions'\n                        defaultMessage='Actions'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const status = tableMeta.rowData[7];\n                            const subscriptionId = tableMeta.rowData[0];\n                            return (\n                                <ScopeValidation\n                                    resourceMethod={resourceMethod.POST}\n                                    resourcePath={resourcePath.BLOCK_SUBSCRIPTION}\n                                >\n                                    {\n                                        this.getSubscriptionBlockingButtons(\n                                            status,\n                                            subscriptionId,\n                                        )\n                                    }\n                                </ScopeValidation>\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n            {\n                name: 'invoice',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.invoice'\n                        defaultMessage='Invoice'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const throttlingPolicy = tableMeta.rowData[6];\n                            const subscriptionId = tableMeta.rowData[0];\n                            return (\n                                <Invoice\n                                    subscriptionId={subscriptionId}\n                                    isNotAuthorized={this.isNotCreator && this.isNotPublisher}\n                                    isMonetizedUsagePolicy={\n                                        this.isMonetizedPolicy(throttlingPolicy)\n                                    }\n                                    api={api}\n                                />\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n        ];\n\n        const options = {\n            title: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            elevation: 1,\n            customToolbar: false,\n            search: false,\n            selectableRows: 'none',\n            rowsPerPageOptions: [5, 10, 25, 50, 100],\n            customFooter: () => {\n                return (\n                    <TablePagination\n                        rowsPerPageOptions={rowsPerPageOptions}\n                        colSpan={6}\n                        count={totalSubscription}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                        ActionsComponent={SubscriptionTablePagination}\n                    />\n                );\n            },\n        };\n        const subMails = {};\n        const emails = subscriberClaims && Object.entries(subscriberClaims).map(([, v]) => {\n            let email = null;\n            if (!subMails[v.name]) {\n                email = v.claims.find((claim) => claim.URI === 'http://wso2.org/claims/emailaddress').value;\n                subMails[v.name] = email;\n            }\n            return email;\n        }).reduce((a, b) => {\n            return b !== null ? `${a || ''},${b}` : a;\n        });\n        let names = null;\n        if (subMails) {\n            Object.entries(subMails).map(([k, v]) => {\n                if (v) {\n                    if (names === null) {\n                        names = k;\n                    } else {\n                        names = `${names}, ${k}`;\n                    }\n                }\n                return null;\n            });\n        }\n        const Tip = names ? React.Fragment : Tooltip;\n        return (\n            <>\n                <div className={classes.heading}>\n                    <Typography variant='h4'>\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.SubscriptionsTable.manage.subscriptions'\n                            defaultMessage='Manage Subscriptions'\n                        />\n                        {'   '}\n                        {subscriptions.length && (\n                            <Tip title='No contact details' placement='top'>\n                                <span>\n                                    <Button\n                                        target='_blank'\n                                        rel='noopener'\n                                        href={`mailto:?subject=Message from the API Publisher&cc=${emails}`\n                                            + `&body=Hi ${names},`}\n                                        size='small'\n                                        disabled={!names}\n                                        variant='outlined'\n                                    >\n                                        Contact Subscribers\n                                    </Button>\n                                </span>\n                            </Tip>\n                        )}\n                    </Typography>\n                    <Typography variant='caption' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.SubscriptionsTable.sub.heading'\n                            defaultMessage='Manage subscriptions of the API'\n                        />\n                    </Typography>\n                </div>\n                <Paper elevation={0}>\n                    {subscriptions.length > 0 ? (\n                        <div>\n                            <MUIDataTable title='' data={subscriptions} columns={columns} options={options} />\n                        </div>\n                    )\n                        : (\n                            <div className={classes.noDataMessage} style={{ height: rowsPerPage * emptyColumnHeight }}>\n                                <FormattedMessage\n                                    id='Apis.Details.Subscriptions.SubscriptionsTable.no.subscriptions'\n                                    defaultMessage='No subscriptions data available'\n                                />\n                            </div>\n                        )}\n                </Paper>\n            </>\n        );\n    }\n}\n\nSubscriptionsTable.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SubscriptionsTable));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport API from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    subscriptionPoliciesPaper: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    grid: {\n        margin: theme.spacing(1.25),\n    },\n    gridLabel: {\n        marginTop: theme.spacing(1.5),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n});\n\n/**\n * Manage subscription policies of the API\n * */\nclass SubscriptionPoliciesManage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subscriptionPolicies: {},\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        API.policies('subscription')\n            .then((res) => {\n                this.setState({ subscriptionPolicies: res.body.list });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n            });\n    }\n\n    /**\n     * Handle onChange of selected subsription policies\n     *\n     * @param event onChange event\n     */\n    handleChange(event) {\n        const { name, checked } = event.target;\n        const { setPolices, policies } = this.props;\n        let newSelectedPolicies = [...policies];\n        if (checked) {\n            newSelectedPolicies.push(name);\n        } else {\n            newSelectedPolicies = policies.filter((policy) => policy !== name);\n        }\n        setPolices(newSelectedPolicies);\n    }\n\n    render() {\n        const { classes, api, policies } = this.props;\n        const { subscriptionPolicies } = this.state;\n\n        return (\n            <>\n                <Typography variant='h4'>\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.business.plans'\n                        defaultMessage='Business Plans'\n                    />\n                </Typography>\n                {api.apiType === API.CONSTS.APIProduct\n                    ? (\n                        <Typography variant='caption' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.APIProduct.sub.heading'\n                                defaultMessage='Attach business plans to API'\n                            />\n                        </Typography>\n                    )\n                    : (\n                        <Typography variant='caption' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.sub.heading'\n                                defaultMessage='Attach business plans to API'\n                            />\n                        </Typography>\n                    )}\n                <Paper className={classes.subscriptionPoliciesPaper}>\n                    <FormControl className={classes.formControl}>\n                        <FormGroup>\n                            { subscriptionPolicies && Object.entries(subscriptionPolicies).map((value) => (\n                                <FormControlLabel\n                                    key={value[1].name}\n                                    control={(\n                                        <Checkbox\n                                            disabled={isRestricted(['apim:api_publish', 'apim:api_create'], api)}\n                                            color='primary'\n                                            checked={policies.includes(value[1].name)}\n                                            onChange={(e) => this.handleChange(e)}\n                                            name={value[1].name}\n                                        />\n                                    )}\n                                    label={value[1].name + ' : ' + value[1].description}\n                                />\n                            ))}\n                        </FormGroup>\n                    </FormControl>\n                </Paper>\n            </>\n        );\n    }\n}\n\nSubscriptionPoliciesManage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    api: PropTypes.shape({ policies: PropTypes.array }).isRequired,\n    setPolices: PropTypes.func.isRequired,\n    policies: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SubscriptionPoliciesManage));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport API from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n}));\n\n/**\n * Renders the input component\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    classes: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    InputProps: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n};\n\n/**\n * Renders the suggestion component\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, tenantList,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (tenantList || '').indexOf(suggestion) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion}\n            selected={isHighlighted}\n            component='div'\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    itemProps: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n    suggestion: PropTypes.string.isRequired,\n};\n\n/**\n * Gets suggestion list\n */\nfunction getSuggestions(value, suggestions, { showEmpty = false } = {}) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0 && !showEmpty\n        ? []\n        : suggestions.filter((suggestion) => {\n            const keep = count < 15 && suggestion.slice(0, inputLength).toLowerCase() === inputValue;\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\n/**\n * Downshift selection component\n */\nfunction DownshiftMultiple(props) {\n    const { tenantList, setTenantList } = props;\n    const { classes, suggestions } = props;\n    const [inputValue, setInputValue] = React.useState('');\n\n    function handleKeyDown(event) {\n        if (tenantList.length && !inputValue.length && event.key === 'Backspace') {\n            setTenantList(tenantList.slice(0, tenantList.length - 1));\n        }\n    }\n\n    function handleInputChange(event) {\n        setInputValue(event.target.value);\n    }\n\n    function handleChange(item) {\n        let newSelectedItem = [...tenantList];\n        if (newSelectedItem.indexOf(item) === -1) {\n            newSelectedItem = [...newSelectedItem, item];\n        }\n        setInputValue('');\n        setTenantList(newSelectedItem);\n    }\n\n    const handleDelete = (item) => () => {\n        const newSelectedItem = [...tenantList];\n        newSelectedItem.splice(newSelectedItem.indexOf(item), 1);\n        setTenantList(newSelectedItem);\n    };\n\n\n    return (\n        <Downshift\n            id='downshift-multiple'\n            inputValue={inputValue}\n            onChange={handleChange}\n            tenantList={tenantList}\n        >\n            {({\n                getInputProps,\n                getItemProps,\n                getLabelProps,\n                isOpen,\n                inputValue: inputValue2,\n                tenantList: tenantList2,\n                highlightedIndex,\n            }) => {\n                const {\n                    onBlur, onChange, onFocus, ...inputProps\n                } = getInputProps({\n                    onKeyDown: handleKeyDown,\n                    placeholder: 'Type and select tenants from the suggested list',\n                });\n\n                return (\n                    <div className={classes.container}>\n                        {renderInput({\n                            fullWidth: true,\n                            classes,\n                            label: 'Tenants',\n                            InputLabelProps: getLabelProps(),\n                            InputProps: {\n                                startAdornment: tenantList.map((item) => (\n                                    <Chip\n                                        key={item}\n                                        tabIndex={-1}\n                                        label={item}\n                                        className={classes.chip}\n                                        onDelete={handleDelete(item)}\n                                    />\n                                )),\n                                onBlur,\n                                onChange: (event) => {\n                                    handleInputChange(event);\n                                    onChange(event);\n                                },\n                                onFocus,\n                            },\n                            inputProps,\n                        })}\n\n                        {isOpen ? (\n                            <Paper className={classes.paper} square>\n                                {getSuggestions(inputValue2, suggestions).map((suggestion, index) => renderSuggestion({\n                                    suggestion,\n                                    index,\n                                    itemProps: getItemProps({ item: suggestion }),\n                                    highlightedIndex,\n                                    tenantList: tenantList2,\n                                }))}\n                            </Paper>\n                        ) : null}\n                    </div>\n                );\n            }}\n        </Downshift>\n    );\n}\n\nDownshiftMultiple.propTypes = {\n    classes: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    setTenantList: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    suggestions: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    api: PropTypes.shape({\n        policies: PropTypes.array,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n\n/**\n * Gets tenant list in order to populate suggestions list\n */\nexport default function IntegrationDownshift(props) {\n    const classes = useStyles();\n    const [suggestions, setsuggestions] = useState({});\n    const { setTenantList, api, tenantList } = props;\n\n    const restApi = new API();\n\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                const tenants = result.body.list;\n                const newSuggestions = tenants.map((tenant) => { return tenant.domain; });\n                setsuggestions(newSuggestions);\n            });\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.divider} />\n            <DownshiftMultiple\n                classes={classes}\n                suggestions={suggestions}\n                tenantList={tenantList}\n                setTenantList={setTenantList}\n                api={api}\n            />\n            <div className={classes.divider} />\n        </div>\n    );\n}\n\nIntegrationDownshift.propTypes = {\n    setTenantList: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    api: PropTypes.shape({\n        policies: PropTypes.array,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport TenantAutocomplete from 'AppComponents/Apis/Details/Subscriptions/TenantAutocomplete';\nimport { isRestricted } from 'AppData/AuthManager';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 400,\n    },\n    textControl: {\n        margin: theme.spacing(1),\n        minWidth: 300,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    subscriptionAvailabilityPaper: {\n        marginTop: theme.spacing(2),\n        paddingLeft: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    grid: {\n        display: 'flex',\n        margin: theme.spacing(1.25),\n    },\n    gridLabel: {\n        marginTop: theme.spacing(3.5),\n    },\n    saveButton: {\n        marginTop: theme.spacing(2),\n    },\n    heading: {\n        marginTop: theme.spacing(3),\n    },\n    tenantsList: {\n        height: theme.spacing(12),\n    },\n}));\n\n/**\n * Allows user to select API availability for tenants\n * @export\n * @returns {React.Component} @inheritdoc\n */\nexport default function SimpleSelect(props) {\n    const classes = useStyles();\n    const {\n        api, setAvailability, tenantList, setTenantList,\n    } = props;\n    let currentAvailability;\n    if (api.subscriptionAvailability === null || api.subscriptionAvailability === 'CURRENT_TENANT') {\n        currentAvailability = 'currentTenant';\n    } else if (api.subscriptionAvailability === 'ALL_TENANTS') {\n        currentAvailability = 'allTenants';\n    } else if (api.subscriptionAvailability === 'SPECIFIC_TENANTS') {\n        currentAvailability = 'specificTenants';\n    }\n    const [values, setValues] = React.useState({\n        availability: currentAvailability,\n    });\n    const inputLabel = React.useRef(null);\n    const [labelWidth, setLabelWidth] = React.useState(0);\n    const isSpecificTenants = values.availability === 'specificTenants';\n    const isUIElementDisabled = isRestricted(['apim:api_publish', 'apim:api_create'], api);\n\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    /**\n     * Handle onchange for the subscription availability dropdown\n     * @param {string} value the new value selected for subscription availability\n     */\n    function subscriptionAvailableTenants(value) {\n        let availabilityValue;\n\n        setValues({\n            ...values,\n            availability: value,\n        });\n\n        if (value === 'currentTenant') {\n            availabilityValue = 'CURRENT_TENANT';\n            setTenantList([]);\n        } else if (value === 'allTenants') {\n            availabilityValue = 'ALL_TENANTS';\n            setTenantList([]);\n        } else if (value === 'specificTenants') {\n            availabilityValue = 'SPECIFIC_TENANTS';\n        }\n        setAvailability({\n            subscriptionAvailability: availabilityValue,\n        });\n    }\n\n    return (\n        <Grid item xs={12} md={12} lg={12}>\n            <Typography variant='h4' className={classes.heading}>\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionAvailability.subscription.availability'\n                    defaultMessage='Subscription Availability'\n                />\n            </Typography>\n            <Typography variant='caption' gutterBottom>\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionAvailability.sub.heading'\n                    defaultMessage='Make subscriptions available to tenants'\n                />\n            </Typography>\n            <Paper className={classes.subscriptionAvailabilityPaper}>\n                <form className={classes.root} autoComplete='off' onSubmit={(e) => { e.preventDefault(); }}>\n                    <Grid container xs={12} spacing={1} className={classes.grid}>\n                        <Grid item xs={10}>\n                            <FormControl\n                                variant='outlined'\n                                className={classes.formControl}\n                                disabled={isUIElementDisabled}\n                            >\n                                <InputLabel ref={inputLabel} htmlFor='outlined-age-simple' />\n                                <Select\n                                    value={values.availability}\n                                    onChange={({ target: { value } }) => {\n                                        subscriptionAvailableTenants(value);\n                                    }}\n                                    labelWidth={labelWidth}\n                                    displayEmpty\n                                    name='availability'\n                                    inputProps={{\n                                        name: 'availability',\n                                        id: 'outlined-availabi;ity-simple',\n                                    }}\n                                >\n                                    <MenuItem value='currentTenant'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.current.tenant.only'\n                                            defaultMessage='Available to current tenant only'\n                                        />\n                                    </MenuItem>\n                                    <MenuItem value='allTenants'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.all.tenants'\n                                            defaultMessage='Available to all the tenants'\n                                        />\n                                    </MenuItem>\n                                    <MenuItem value='specificTenants'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.specific.tenants'\n                                            defaultMessage='Available to specific tenants'\n                                        />\n                                    </MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        {isSpecificTenants ? (\n                            <Grid item xs={8} className={classes.tenantsList}>\n                                <TenantAutocomplete setTenantList={setTenantList} tenantList={tenantList} api={api} />\n                            </Grid>\n                        ) : <Grid item xs={8} />}\n                    </Grid>\n                </form>\n            </Paper>\n        </Grid>\n    );\n}\nSimpleSelect.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    api: PropTypes.shape({ policies: PropTypes.array }).isRequired,\n    setAvailability: PropTypes.func.isRequired,\n    setTenantList: PropTypes.func.isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\nimport Progress from 'AppComponents/Shared/Progress';\nimport { FormattedMessage } from 'react-intl';\nimport SubscriptionsTable from './SubscriptionsTable';\nimport SubscriptionPoliciesManage from './SubscriptionPoliciesManage';\nimport SubscriptionAvailability from './SubscriptionAvailability';\n\nconst useStyles = makeStyles((theme) => ({\n    buttonSection: {\n        marginTop: theme.spacing(2),\n    },\n    emptyBox: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n/**\n * Subscriptions component\n *\n * @class Subscriptions\n * @extends {Component}\n */\nfunction Subscriptions(props) {\n    const classes = useStyles();\n    const [api] = useAPI();\n    const { updateAPI } = props;\n    const restApi = new API();\n    const [tenants, setTenants] = useState(null);\n    const [policies, setPolices] = useState({});\n    const [availability, setAvailability] = useState({ subscriptionAvailability: api.subscriptionAvailability });\n    const [tenantList, setTenantList] = useState(api.subscriptionAvailableTenants);\n    const [subscriptions, setSubscriptions] = useState(null);\n    const [updateInProgress, setUpdateInProgress] = useState(false);\n\n    /**\n     * Save subscription information (policies, subscriptionAvailability, subscriptionAvailableTenants)\n     */\n    function saveAPI() {\n        setUpdateInProgress(true);\n        const { subscriptionAvailability } = availability;\n        const newApi = {\n            policies,\n            subscriptionAvailability,\n            subscriptionAvailableTenants: tenantList,\n        };\n        updateAPI(newApi)\n            .then(() => {\n                Alert.info('Subscription configurations updated successfully');\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error('Error occurred while updating subscription configurations');\n            }).finally(() => {\n                setUpdateInProgress(false);\n            });\n    }\n\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                setTenants(result.body.count);\n            });\n        restApi.subscriptions(api.id)\n            .then((result) => {\n                setSubscriptions(result.body.count);\n            });\n        setPolices([...api.policies]);\n    }, []);\n\n    if (typeof tenants !== 'number' || typeof subscriptions !== 'number') {\n        return (\n            <Grid container direction='row' justify='center' alignItems='center'>\n                <Grid item>\n                    <CircularProgress />\n                </Grid>\n            </Grid>\n        );\n    }\n    return (\n        <>\n            <SubscriptionPoliciesManage api={api} policies={policies} setPolices={setPolices} />\n            {tenants !== 0 && (\n                <SubscriptionAvailability\n                    api={api}\n                    availability={availability}\n                    setAvailability={setAvailability}\n                    tenantList={tenantList}\n                    setTenantList={setTenantList}\n                />\n            )}\n            { updateInProgress && <Progress /> }\n            <Grid\n                container\n                direction='row'\n                alignItems='flex-start'\n                spacing={1}\n                className={classes.buttonSection}\n            >\n                <Grid item>\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        onClick={() => saveAPI()}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.Subscriptions.save'\n                            defaultMessage='Save'\n                        />\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Link to={'/apis/' + api.id + '/overview'}>\n                        <Button>\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.Subscriptions.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Link>\n                </Grid>\n            </Grid>\n            <SubscriptionsTable api={api} />\n        </>\n    );\n}\n\nSubscriptions.propTypes = {\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default withStyles(makeStyles)(Subscriptions);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\n\nconst styles = (theme) => ({\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n        marginTop: theme.spacing(2),\n    },\n    textField: {\n        marginTop: 0,\n        width: '88%',\n    },\n    category: {\n        width: '12%',\n    },\n});\n\n/**\n   * Display a component to add a new comment\n   * @class CommmentAdd\n   * @extends {React.Component}\n   */\nclass CommentAdd extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentText: '',\n            category: 'General',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleClickAddComment = this.handleClickAddComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.filterCommentToAddReply = this.filterCommentToAddReply.bind(this);\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentAdd\n     */\n    inputChange({ target }) {\n        this.setState({ commentText: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to add a new comment when cancelled\n     * @memberof CommentAdd\n     */\n    handleClickCancel() {\n        const { toggleShowReply } = this.props;\n        toggleShowReply();\n    }\n\n    /**\n     * Handles category when the category is changed\n     * @param {any} event Drop down select event\n     * @memberof CommentAdd\n     */\n    handleCategoryChange(event) {\n        this.setState({ category: event.target.value });\n    }\n\n    /**\n     * Filters the comment to add the reply\n     * @memberof CommentAdd\n     */\n    filterCommentToAddReply(commentToFilter) {\n        const { parentCommentId } = this.props;\n        return commentToFilter.commentId === parentCommentId;\n    }\n\n    /**\n     * Handles adding a new comment\n     * @memberof CommentAdd\n     */\n    handleClickAddComment() {\n        const {\n            api, parentCommentId, allComments, toggleShowReply, commentsUpdate,\n        } = this.props;\n        const { category, commentText } = this.state;\n        const Api = new API();\n        const apiId = api.id;\n        const comment = {\n            apiId: api.id,\n            category,\n            commentText: commentText.trim(),\n            parentCommentId,\n        };\n\n        // to check whether a string does not contain only white spaces\n        if (comment.commentText.replace(/\\s/g, '').length) {\n            Api.addComment(apiId, comment)\n                .then((newComment) => {\n                    this.setState({ commentText: '', category: 'General' });\n                    const addedComment = newComment.body;\n                    if (parentCommentId === null) {\n                        allComments.push(addedComment);\n                    } else {\n                        const index = allComments.findIndex(this.filterCommentToAddReply);\n                        allComments[index].replies.push(addedComment);\n                        toggleShowReply();\n                    }\n                    commentsUpdate(allComments);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error('Something went wrong while adding the comment');\n                    }\n                });\n        } else {\n            Alert.error('You cannot enter a blank comment');\n        }\n        this.setState({ currentLength: 0 });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentAdd\n     */\n    render() {\n        const { classes, cancelButton, theme } = this.props;\n        const { category, commentText, currentLength } = this.state;\n        return (\n            <Grid container spacing={7} className={classes.contentWrapper}>\n\n                <Grid item xs zeroMinWidth>\n                    <FormControl className={classes.category}>\n                        <Select\n                            value={category}\n                            onChange={this.handleCategoryChange}\n                        >\n                            <MenuItem value='General'>General</MenuItem>\n                            <MenuItem value='Feature Request'>Feature Request</MenuItem>\n                            <MenuItem value='Bug Report'>Bug Report</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        id='standard-multiline-flexible'\n                        autoFocus\n                        multiline\n                        className={classes.textField}\n                        margin='normal'\n                        placeholder='Write a comment'\n                        inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                        value={commentText}\n                        onChange={this.inputChange}\n                    />\n                    <Typography className={classes.commentText} align='right'>\n                        {currentLength + '/' + theme.custom.maxCommentLength }\n                    </Typography>\n                    <Grid container spacing={2}>\n                        <Grid item>\n                            <Button variant='contained' color='primary' onClick={() => this.handleClickAddComment()}>\n                  Add Comment\n                            </Button>\n                        </Grid>\n                        {cancelButton\n                && (\n                    <Grid item>\n                        <Button onClick={() => this.handleClickCancel()} className={classes.button}>Cancel</Button>\n                    </Grid>\n                )}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCommentAdd.defaultProps = {\n    api: null,\n    parentCommentId: null,\n    toggleShowReply: null,\n    commentsUpdate: null,\n};\n\nCommentAdd.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    cancelButton: PropTypes.bool.isRequired,\n    api: PropTypes.instanceOf(Object),\n    parentCommentId: PropTypes.string,\n    toggleShowReply: PropTypes.func,\n    commentsUpdate: PropTypes.func,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentAdd);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\n\nconst styles = (theme) => ({\n    textField: {\n        marginTop: 0,\n        width: '87.5%',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n        marginTop: theme.spacing(2),\n    },\n    category: {\n        width: '12%',\n        marginRight: '0.5%',\n    },\n});\n\n/**\n * Display a component to edit a comment\n * @class CommmentEdit\n * @extends {React.Component}\n */\nclass CommentEdit extends React.Component {\n    /**\n     * Creates an instance of CommentEdit\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentEdit\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentText: '',\n            category: '',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.handleClickUpdateComment = this.handleClickUpdateComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.filterCommentToUpdate = this.filterCommentToUpdate.bind(this);\n        this.filterCommentToUpdateReply = this.filterCommentToUpdateReply.bind(this);\n    }\n\n    /**\n     * @memberof Comments\n     */\n    componentDidMount() {\n        const { comment } = this.props;\n        this.setState({\n            commentText: comment.commentText,\n            category: comment.category,\n            currentLength: comment.commentText.length,\n        });\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentEdit\n     */\n    inputChange({ target }) {\n        this.setState({ commentText: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to edit a comment when cancelled\n     * @memberof CommentEdit\n     */\n    handleClickCancel() {\n        const { toggleShowEdit, commentsUpdate, allComments } = this.props;\n        toggleShowEdit();\n        commentsUpdate(allComments);\n    }\n\n    /**\n     * Handles category when the category is changed\n     * @param {any} event Drop down select event\n     * @memberof CommentEdit\n     */\n    handleCategoryChange(event) {\n        this.setState({ category: event.target.value });\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdate(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.commentId;\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdateReply(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.parentCommentId;\n    }\n\n    /**\n     * Handles updating a comment\n     * @memberof CommentEdit\n     */\n    handleClickUpdateComment() {\n        const {\n            api, comment, allComments, toggleShowEdit, commentsUpdate,\n        } = this.props;\n        const { category, commentText } = this.state;\n        const Api = new API();\n        const apiId = api.id;\n        const commentToEdit = comment;\n        commentToEdit.commentText = commentText.trim();\n        commentToEdit.category = category;\n\n        // to check whether a string does not contain only whitehis spaces\n        if (comment.commentText.replace(/\\s/g, '').length) {\n            Api.updateComment(apiId, commentToEdit.commentId, commentToEdit)\n                .then((result) => {\n                    const updatedComment = result.body;\n                    if (commentToEdit.parentCommentId === undefined) {\n                        const index = allComments.findIndex(this.filterCommentToUpdate);\n                        allComments[index].category = updatedComment.category;\n                        allComments[index].commentText = updatedComment.commentText;\n                    } else {\n                        const index = allComments.findIndex(this.filterCommentToUpdateReply);\n                        const replyIndex = allComments[index].replies.findIndex(this.filterCommentToUpdate);\n                        allComments[index].replies[replyIndex] = updatedComment;\n                    }\n                    toggleShowEdit();\n                    commentsUpdate(allComments);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error('Something went wrong while adding the comment');\n                    }\n                });\n        } else {\n            Alert.error('You cannot enter a blank comment');\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentEdit\n     */\n    render() {\n        const { classes, theme } = this.props;\n        const { category, commentText, currentLength } = this.state;\n        return (\n            <div>\n                <FormControl className={classes.category}>\n                    <Select value={category} onChange={this.handleCategoryChange}>\n                        <MenuItem value='General'>General</MenuItem>\n                        <MenuItem value='Feature Request'>Feature Request</MenuItem>\n                        <MenuItem value='Bug Report'>Bug Report</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id='multiline-static'\n                    autoFocus\n                    multiline\n                    className={classes.textField}\n                    margin='normal'\n                    placeholder='Write a comment'\n                    inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                    value={commentText}\n                    onChange={this.inputChange}\n                />\n                <Typography className={classes.commentText} align='right'>\n                    {currentLength + '/' + theme.custom.maxCommentLength}\n                </Typography>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Button variant='contained' color='primary' onClick={() => this.handleClickUpdateComment()}>\n                            Save\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={() => this.handleClickCancel()} className={classes.button}>\n                            Cancel\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nCommentEdit.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object).isRequired,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    commentsUpdate: PropTypes.func.isRequired,\n    toggleShowEdit: PropTypes.func.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentEdit);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport AuthManager from 'AppData/AuthManager';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst styles = (theme) => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    time: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing(0.3),\n    },\n    verticalSpace: {\n        marginTop: theme.spacing(0.2),\n    },\n    disable: {\n        color: theme.custom.disableColor,\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unig,\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing(2.5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n    },\n});\n\n/**\n * Component to display options of the comment\n * @class CommentOptions\n * @extends {React.Component}\n */\nclass CommentOptions extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentOptions\n     */\n    showAddComment(index) {\n        const { editIndex, showAddComment } = this.props;\n        if (editIndex === -1) {\n            showAddComment(index);\n        }\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex, showEditComment } = this.props;\n        if (editIndex === -1) {\n            showEditComment(index);\n        }\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex, handleClickOpen } = this.props;\n        if (editIndex === -1) {\n            handleClickOpen(comment);\n        }\n    }\n\n    /**\n     * Returns the date and time in a particular format\n     * @param {any} timestamp Timestamp that has to be formatted\n     * @memberof CommentOptions\n     */\n    displayDate(timestamp) {\n        const localDate = new Date(timestamp);\n        const localDateString = localDate.toLocaleDateString(undefined, {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n        });\n        const localTimeString = localDate.toLocaleTimeString(undefined, {\n            hour: '2-digit',\n            minute: '2-digit',\n        });\n\n        return localDateString + ' ' + localTimeString;\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentOptions\n     */\n    render() {\n        const {\n            classes, comment, editIndex, index, theme,\n        } = this.props;\n        const canDelete = (comment.createdBy === AuthManager.getUser().name)\n            || (AuthManager.getUser().name === theme.custom.adminRole);\n        const canModify = comment.createdBy === AuthManager.getUser().name && comment.entryPoint === 'APIPublisher';\n        return (\n            <Grid container spacing={2} className={classes.verticalSpace} key={comment.commentId}>\n                {comment.parentCommentId == null && [\n                    <Grid item key='key-reply'>\n                        <Typography\n                            component='a'\n                            className={editIndex === -1 ? classes.link : classes.disable}\n                            onClick={() => this.showAddComment(index)}\n                        >\n                            Reply\n                        </Typography>\n                    </Grid>,\n                    <Grid item key='key-reply-vertical-divider'>\n                        <VerticalDivider height={15} />\n                    </Grid>,\n                ]}\n\n                {/* only the comment owner or admin can delete a comment */}\n                {canDelete && [\n                    <Grid item key='key-delete'>\n                        <Typography\n                            component='a'\n                            className={editIndex === -1 ? classes.link : classes.disable}\n                            onClick={() => this.handleClickOpen(comment)}\n                        >\n                            Delete\n                        </Typography>\n                    </Grid>,\n                    <Grid item key='key-delete-vertical-divider'>\n                        <VerticalDivider height={15} />\n                    </Grid>,\n                ]}\n\n                {/* only the comment owner can modify the comment from the exact entry point */}\n                {canModify && [\n                    <Grid item key='key-edit'>\n                        <Typography\n                            component='a'\n                            className={editIndex === -1 ? classes.link : classes.disable}\n                            onClick={() => this.showEditComment(index)}\n                        >\n                            Edit\n                        </Typography>\n                    </Grid>,\n                    <Grid item key='key-edit-verical-divider'>\n                        <VerticalDivider height={15} />\n                    </Grid>,\n                ]}\n                <Grid item className={classes.time}>\n                    <Typography component='a' variant='caption'>\n                        {this.displayDate(comment.createdTime)}\n                    </Typography>\n                </Grid>\n\n                {editIndex === index\n                    ? null\n                    : [\n                        <Grid item key='key-category-vertical-divider'>\n                            <VerticalDivider height={15} />\n                        </Grid>,\n                        <Grid item className={classes.time} key='key-category'>\n                            <Typography component='a' variant='caption'>\n                                {comment.category}\n                            </Typography>\n                        </Grid>,\n                    ]}\n            </Grid>\n        );\n    }\n}\n\nCommentOptions.defaultProps = {\n    showAddComment: null,\n};\n\nCommentOptions.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    editIndex: PropTypes.number.isRequired,\n    index: PropTypes.number.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    handleClickOpen: PropTypes.func.isRequired,\n    showEditComment: PropTypes.func.isRequired,\n    showAddComment: PropTypes.func,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentOptions);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport API from 'AppData/api';\nimport CommentEdit from './CommentEdit';\nimport CommentOptions from './CommentOptions';\n\nconst styles = (theme) => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing(1),\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing(2.5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n    },\n});\n\n/**\n * Display a particular comment and details\n * @class CommentReply\n * @extends {React.Component}\n */\nclass CommentReply extends React.Component {\n    /**\n     * Creates an instance of Comment\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentReply\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            editIndex: -1,\n            deleteComment: null,\n        };\n        this.keyCount = 0;\n        this.getKey = this.getKey.bind(this);\n        this.handleClickDeleteComment = this.handleClickDeleteComment.bind(this);\n        this.handleShowEdit = this.handleShowEdit.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleConfirmDialog = this.handleConfirmDialog.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.filterRemainingComments = this.filterRemainingComments.bind(this);\n        this.filterCommentToDelete = this.filterCommentToDelete.bind(this);\n    }\n\n    /**\n     * Genereates unique keys for comments\n     * @memberof Comment\n     */\n    getKey() {\n        return this.keyCount++;\n    }\n\n    /**\n     * Filters the comments to be remained\n     * @memberof CommentReply\n     */\n    filterRemainingComments(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId !== deleteComment.commentId;\n    }\n\n    /**\n     * Filters the comments to be deleted\n     * @memberof CommentReply\n     */\n    filterCommentToDelete(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId === deleteComment.parentCommentId;\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentReply\n     */\n    showEditComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ editIndex: index });\n        }\n    }\n\n    /**\n     * Hides the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentReply\n     */\n    handleShowEdit() {\n        this.setState({ editIndex: -1 });\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof CommentReply\n     */\n    handleClickOpen(comment) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ deleteComment: comment, openDialog: true });\n        }\n    }\n\n    /**\n     * Hides the confimation dialog to delete a comment\n     * @memberof CommentReply\n     */\n    handleClose() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Handles the Confirm Dialog\n     * @param {*} bool properies passed by the Confirm Dialog\n     * @memberof CommentReply\n     */\n    handleConfirmDialog(message) {\n        if (message) {\n            this.handleClickDeleteComment();\n        } else {\n            this.handleClose();\n        }\n    }\n\n    /**\n     * Handles deleting a comment\n     * @memberof CommentReply\n     */\n    handleClickDeleteComment() {\n        const Api = new API();\n        const { deleteComment } = this.state;\n        const { api, allComments, commentsUpdate } = this.props;\n        const commentIdOfCommentToDelete = deleteComment.commentId;\n        const parentCommentIdOfCommentToDelete = deleteComment.parentCommentId;\n        const apiId = api.id;\n        this.handleClose();\n\n        Api.deleteComment(apiId, commentIdOfCommentToDelete)\n            .then(() => {\n                if (parentCommentIdOfCommentToDelete === undefined) {\n                    const remainingComments = allComments.filter(this.filterRemainingComments);\n                    commentsUpdate(remainingComments);\n                } else {\n                    const index = allComments.findIndex(this.filterCommentToDelete);\n                    const remainingReplies = allComments[index].replies.filter(this.filterRemainingComments);\n                    allComments[index].replies = remainingReplies;\n                    commentsUpdate(allComments);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error(`Something went wrong while deleting comment - ${commentIdOfCommentToDelete}`);\n                }\n            });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentReply\n     */\n    render() {\n        const {\n            classes, comments, api, allComments, commentsUpdate,\n        } = this.props;\n        const { editIndex, openDialog } = this.state;\n        const props = { api, allComments, commentsUpdate };\n        return [\n            comments\n                && comments.map((comment, index) => (\n                    <div key={this.getKey()} className={classes.contentWrapper}>\n                        <Grid container spacing={2} className={classes.root}>\n                            <Grid item>\n                                <AccountBox className={classes.commentIcon} />\n                            </Grid>\n                            <Grid item xs zeroMinWidth>\n                                <Typography noWrap className={classes.commentText} variant='body1'>\n                                    {comment.createdBy}\n                                </Typography>\n\n                                {index !== editIndex && (\n                                    <Typography className={classes.commentText}>{comment.commentText}</Typography>\n                                )}\n\n                                {index === editIndex && (\n                                    <CommentEdit {...props} comment={comment} toggleShowEdit={this.handleShowEdit} />\n                                )}\n                                <CommentOptions\n                                    classes={classes}\n                                    comment={comment}\n                                    editIndex={editIndex}\n                                    index={index}\n                                    showAddComment={this.showAddComment}\n                                    handleClickOpen={this.handleClickOpen}\n                                    showEditComment={this.showEditComment}\n                                />\n                            </Grid>\n                        </Grid>\n                    </div>\n                )),\n            <ConfirmDialog\n                key='key-dialog'\n                labelCancel='Cancel'\n                title='Confirm Delete'\n                message='Are you sure you want to delete this comment?'\n                labelOk='Yes'\n                callback={this.handleConfirmDialog}\n                open={openDialog}\n            />,\n        ];\n    }\n}\n\nCommentReply.defaultProps = {\n    api: null,\n};\n\nCommentReply.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object),\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    commentsUpdate: PropTypes.func.isRequired,\n    comments: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default withStyles(styles)(CommentReply);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport API from 'AppData/api';\nimport CommentAdd from './CommentAdd';\nimport CommentEdit from './CommentEdit';\nimport CommentOptions from './CommentOptions';\nimport CommentReply from './CommentReply';\n\nconst styles = (theme) => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unig,\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing(2.5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n    },\n});\n\n/**\n * Display a particular comment and details\n * @class Comment\n * @extends {React.Component}\n */\nclass Comment extends React.Component {\n    /**\n     * Creates an instance of Comment\n     * @param {*} props properies passed by the parent element\n     * @memberof Comment\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            replyIndex: -1,\n            editIndex: -1,\n            deleteComment: null,\n        };\n        this.keyCount = 0;\n        this.getKey = this.getKey.bind(this);\n        this.handleClickDeleteComment = this.handleClickDeleteComment.bind(this);\n        this.handleShowEdit = this.handleShowEdit.bind(this);\n        this.handleShowReply = this.handleShowReply.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleConfirmDialog = this.handleConfirmDialog.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.filterRemainingComments = this.filterRemainingComments.bind(this);\n        this.filterCommentToDelete = this.filterCommentToDelete.bind(this);\n    }\n\n    /**\n     * Genereates unique keys for comments\n     * @memberof Comment\n     */\n    getKey() {\n        return this.keyCount++;\n    }\n\n    /**\n     * Filters the comments to be remained\n     * @memberof Comment\n     */\n    filterRemainingComments(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId !== deleteComment.commentId;\n    }\n\n    /**\n     * Filters the comments to be deleted\n     * @memberof Comment\n     */\n    filterCommentToDelete(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId === deleteComment.parentCommentId;\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showAddComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ replyIndex: index });\n        }\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ editIndex: index });\n        }\n    }\n\n    /**\n     * Hides the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowEdit() {\n        this.setState({ editIndex: -1 });\n    }\n\n    /**\n     * Hides the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowReply() {\n        this.setState({ replyIndex: -1 });\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ deleteComment: comment, openDialog: true });\n        }\n    }\n\n    /**\n     * Hides the confimation dialog to delete a comment\n     * @memberof Comment\n     */\n    handleClose() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Handles the Confirm Dialog\n     * @param {*} bool properies passed by the Confirm Dialog\n     * @memberof Comment\n     */\n    handleConfirmDialog(message) {\n        if (message) {\n            this.handleClickDeleteComment();\n        } else {\n            this.handleClose();\n        }\n    }\n\n    /**\n     * Handles deleting a comment\n     * @memberof Comment\n     */\n    handleClickDeleteComment() {\n        const Api = new API();\n        const { deleteComment } = this.state;\n        const { api, allComments, commentsUpdate } = this.props;\n        const commentIdOfCommentToDelete = deleteComment.commentId;\n        const parentCommentIdOfCommentToDelete = deleteComment.parentCommentId;\n        const apiId = api.id;\n        this.handleClose();\n\n        Api.deleteComment(apiId, commentIdOfCommentToDelete)\n            .then(() => {\n                if (parentCommentIdOfCommentToDelete === undefined) {\n                    const remainingComments = allComments.filter(this.filterRemainingComments);\n                    commentsUpdate(remainingComments);\n                } else {\n                    const index = allComments.findIndex(this.filterCommentToDelete);\n                    const remainingReplies = allComments[index].replies.filter(this.filterRemainingComments);\n                    allComments[index].replies = remainingReplies;\n                    commentsUpdate(allComments);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error(`Something went wrong while deleting comment - ${commentIdOfCommentToDelete}`);\n                }\n            });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comment\n     */\n    render() {\n        const {\n            classes, comments, api, allComments, commentsUpdate,\n        } = this.props;\n        const { editIndex, replyIndex, openDialog } = this.state;\n        const props = { api, allComments, commentsUpdate };\n        return [\n            comments\n                && comments\n                    .slice(0)\n                    .reverse()\n                    .map((comment, index) => (\n                        <div key={this.getKey()} className={classes.contentWrapper}>\n                            <Grid container spacing={2} className={classes.root}>\n                                <Grid item>\n                                    <AccountBox className={classes.commentIcon} />\n                                </Grid>\n                                <Grid item xs zeroMinWidth>\n                                    <Typography noWrap className={classes.commentText} variant='body1'>\n                                        {comment.createdBy}\n                                    </Typography>\n\n                                    {index !== editIndex && (\n                                        <Typography className={classes.commentText}>{comment.commentText}</Typography>\n                                    )}\n\n                                    {index === editIndex && (\n                                        <CommentEdit\n                                            {...props}\n                                            comment={comment}\n                                            toggleShowEdit={this.handleShowEdit}\n                                        />\n                                    )}\n\n                                    <CommentOptions\n                                        classes={classes}\n                                        comment={comment}\n                                        editIndex={editIndex}\n                                        index={index}\n                                        showAddComment={this.showAddComment}\n                                        handleClickOpen={this.handleClickOpen}\n                                        showEditComment={this.showEditComment}\n                                    />\n\n                                    {index === replyIndex && (\n                                        <CommentAdd\n                                            {...props}\n                                            parentCommentId={comment.commentId}\n                                            toggleShowReply={this.handleShowReply}\n                                            cancelButton\n                                        />\n                                    )}\n                                    {comment.replies.length !== 0 && (\n                                        <CommentReply {...props} classes={classes} comments={comment.replies} />\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    )),\n            <ConfirmDialog\n                key='key-dialog'\n                labelCancel='Cancel'\n                title='Confirm Delete'\n                message='Are you sure you want to delete this comment?'\n                labelOk='Yes'\n                callback={this.handleConfirmDialog}\n                open={openDialog}\n            />,\n        ];\n    }\n}\n\nComment.defaultProps = {\n    api: null,\n};\n\nComment.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object),\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    commentsUpdate: PropTypes.func.isRequired,\n    comments: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default withStyles(styles)(Comment);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport ArrowDropDownCircleOutlined from '@material-ui/icons/ArrowDropDownCircleOutlined';\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n    },\n    titleSub: {\n        cursor: 'pointer',\n    },\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    verticalSpace: {\n        marginTop: theme.spacing(0.2),\n    },\n    loadMoreLink: {\n        textDecoration: 'underline',\n    },\n});\n\n/**\n * Display a comment list\n * @class Comments\n * @extends {React.Component}\n */\nclass Comments extends Component {\n    /**\n     * Creates an instance of Comments\n     * @param {*} props properies passed by the parent element\n     * @memberof Comments\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true,\n            allComments: [],\n            comments: [],\n            totalComments: 0,\n            startCommentsToDisplay: 0,\n        };\n        this.updateCommentList = this.updateCommentList.bind(this);\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n        this.handleLoadMoreComments = this.handleLoadMoreComments.bind(this);\n    }\n\n    /**\n     * Gets all the comments for a particular API, when component mounts\n     * @memberof Comments\n     */\n    componentDidMount() {\n        const { api, theme } = this.props;\n        const Api = new API();\n        Api.getAllComments(api.id)\n            .then((result) => {\n                const commentList = result.body.list;\n                this.setState({ allComments: commentList, totalComments: commentList.length });\n                if (commentList.length < theme.custom.commentsLimit) {\n                    this.setState({ startCommentsToDisplay: 0, comments: commentList.slice(0, commentList.length) });\n                } else {\n                    this.setState({\n                        startCommentsToDisplay: commentList.length - theme.custom.commentsLimit,\n                        comments: commentList.slice(\n                            commentList.length - theme.custom.commentsLimit,\n                            commentList.length,\n                        ),\n                    });\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error('Something went wrong while retrieving comments');\n                }\n            });\n    }\n\n    /**\n     * Handles loading the previous comments\n     * @memberof Comments\n     */\n    handleLoadMoreComments() {\n        const { totalComments, startCommentsToDisplay, allComments } = this.state;\n        const { theme } = this.props;\n        if (startCommentsToDisplay - theme.custom.commentsLimit <= 0) {\n            this.setState({ startCommentsToDisplay: 0, comments: allComments.slice(0, totalComments) });\n        } else {\n            this.setState({\n                startCommentsToDisplay: startCommentsToDisplay - theme.custom.commentsLimit,\n                comments: allComments.slice(startCommentsToDisplay - theme.custom.commentsLimit, totalComments),\n            });\n        }\n    }\n\n    /**\n     * Handles expanding the comment section\n     * @memberof Comments\n     */\n    handleExpandClick() {\n        const { expanded } = this.state;\n        this.setState({ expanded: !expanded });\n    }\n\n    /**\n     * Updates the comment list, This is passed through props to child component\n     * @param {any} comments Updated comment list\n     * @memberof Comments\n     */\n    updateCommentList(comments) {\n        const { startCommentsToDisplay, totalComments } = this.state;\n        const { theme } = this.props;\n        let newStart;\n        let difference;\n        let newTotal;\n        this.setState({ allComments: comments });\n        if (totalComments < theme.custom.commentsLimit) {\n            newTotal = comments.length;\n            this.setState({ startCommentsToDisplay: 0, totalComments: newTotal, comments });\n        } else if (totalComments <= comments.length) {\n            difference = comments.length - totalComments;\n            newStart = startCommentsToDisplay + difference;\n            newTotal = comments.length;\n            this.setState({\n                startCommentsToDisplay: newStart,\n                totalComments: newTotal,\n                comments: comments.slice(newStart, newTotal),\n            });\n        } else {\n            difference = totalComments - comments.length;\n            if (startCommentsToDisplay === 0) {\n                newStart = startCommentsToDisplay;\n            } else {\n                newStart = startCommentsToDisplay - difference;\n            }\n            newTotal = comments.length;\n            this.setState({\n                startCommentsToDisplay: newStart,\n                totalComments: newTotal,\n                comments: comments.slice(newStart, newTotal),\n            });\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comments\n     */\n    render() {\n        const { classes, api } = this.props;\n        const {\n            comments, expanded, allComments, startCommentsToDisplay, totalComments,\n        } = this.state;\n        return (\n            <div className={classes.contentWrapper}>\n                <div className={classes.root}>\n                    <ArrowDropDownCircleOutlined onClick={this.handleExpandClick} aria-expanded={expanded} />\n                    <Typography onClick={this.handleExpandClick} variant='h4' className={classes.titleSub}>\n                        Comments\n                    </Typography>\n                </div>\n                <Collapse in={expanded} timeout='auto' unmountOnExit>\n                    <CommentAdd\n                        api={api}\n                        commentsUpdate={this.updateCommentList}\n                        allComments={allComments}\n                        parentCommentId={null}\n                        cancelButton={false}\n                    />\n                    <Comment\n                        comments={comments}\n                        api={api}\n                        commentsUpdate={this.updateCommentList}\n                        allComments={allComments}\n                    />\n                    {startCommentsToDisplay !== 0 && (\n                        <div className={classes.contentWrapper}>\n                            <Grid container spacing={8} className={classes.root}>\n                                <Grid item>\n                                    <Typography\n                                        className={classes.verticalSpace}\n                                        variant='body1'\n                                        onClick={this.handleLoadMoreComments}\n                                    >\n                                        <a className={classes.link + ' ' + classes.loadMoreLink}>\n                                            Load Previous Comments\n                                        </a>\n                                    </Typography>\n                                </Grid>\n                                <Grid>\n                                    <ArrowDropDown\n                                        onClick={this.handleLoadMoreComments}\n                                        className={classes.link + ' ' + classes.verticalSpace}\n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <Typography className={classes.verticalSpace} variant='body1'>\n                                        Showing comments\n                                        {totalComments + -startCommentsToDisplay + ' of ' + totalComments}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    )}\n                </Collapse>\n            </div>\n        );\n    }\n}\n\nComments.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Comments);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { red } from '@material-ui/core/colors/';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n        marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    FormControl: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlLabel: {\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n    },\n    buttonSection: {\n        paddingTop: theme.spacing(3),\n    },\n    saveButton: {\n        marginRight: theme.spacing(1),\n    },\n    helpText: {\n        color: theme.palette.text.hint,\n        marginTop: theme.spacing(1),\n    },\n    extraPadding: {\n        paddingLeft: theme.spacing(2),\n    },\n    addNewOther: {\n        paddingTop: 40,\n    },\n    titleGrid: {\n        ' & .MuiGrid-item': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n    descriptionForm: {\n        marginTop: theme.spacing(1),\n    },\n    progress: {\n        marginLeft: theme.spacing(1),\n    },\n});\n\n/**\n * Create new scopes for an API\n * @class CreateScope\n * @extends {Component}\n */\nclass CreateScope extends React.Component {\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        const valid = [];\n        valid.name = {\n            invalid: false,\n            error: '',\n        };\n        valid.description = {\n            invalid: false,\n            error: '',\n        };\n        this.state = {\n            apiScopes: null,\n            apiScope: {},\n            validRoles: [],\n            valid,\n            roleValidity: true,\n            invalidRoles: [],\n            scopeAddDisabled: false,\n        };\n        this.addScope = this.addScope.bind(this);\n        this.validateScopeName = this.validateScopeName.bind(this);\n        this.handleScopeNameInput = this.handleScopeNameInput.bind(this);\n        this.validateScopeDescription = this.validateScopeDescription.bind(this);\n        this.handleRoleAddition = this.handleRoleAddition.bind(this);\n        this.handleRoleDeletion = this.handleRoleDeletion.bind(this);\n    }\n\n\n    handleRoleDeletion = (role) => {\n        const { validRoles, invalidRoles } = this.state;\n        if (invalidRoles.includes(role)) {\n            const invalidRolesArray = invalidRoles.filter((existingRole) => existingRole !== role);\n            this.setState({ invalidRoles: invalidRolesArray });\n            if (invalidRolesArray.length === 0) {\n                this.setState({ roleValidity: true });\n            }\n        } else {\n            this.setState({ validRoles: validRoles.filter((existingRole) => existingRole !== role) });\n        }\n    };\n\n    handleRoleAddition(role) {\n        const { validRoles, invalidRoles } = this.state;\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise\n            .then(() => {\n                this.setState({\n                    roleValidity: true,\n                    validRoles: [...validRoles, role],\n                });\n            })\n            .catch((error) => {\n                if (error.status === 404) {\n                    this.setState({\n                        roleValidity: false,\n                        invalidRoles: [...invalidRoles, role],\n                    });\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating role ' + error);\n                }\n            });\n    }\n\n    validateScopeDescription({ target: { id, value } }) {\n        const { valid, apiScope } = this.state;\n        apiScope[id] = value;\n        valid[id].invalid = false;\n        valid[id].error = '';\n        this.setState({\n            valid,\n            apiScope,\n        });\n    }\n\n    validateScopeName(id, value) {\n        const { valid, apiScope } = this.state;\n        const {\n            api: { scopes },\n        } = this.props;\n\n        apiScope[id] = value;\n        valid[id].invalid = !(value && value.length > 0);\n        if (valid[id].invalid) {\n            valid[id].error = 'Scope name cannot be empty';\n        }\n\n        if (/\\s/.test(value)) {\n            valid[id].invalid = true;\n            valid[id].error = 'Scope name cannot have spaces';\n        }\n\n        const exist = scopes.find((scope) => {\n            return scope.name === value;\n        });\n        if (!valid[id].invalid && exist) {\n            valid[id].invalid = true;\n            valid[id].error = 'Scope name already exist';\n        }\n        if (!valid[id].invalid && /[!@#$%^&*(),?\"{}[\\]|<>\\t\\n]|(^apim:)/i.test(value)) {\n            valid[id].invalid = true;\n            valid[id].error = 'Field contains special characters';\n        }\n        if (!valid[id].invalid) {\n            const promise = APIValidation.scope.validate(base64url.encode(value));\n            promise\n                .then(() => {\n                    valid[id].invalid = true;\n                    valid[id].error = 'Scope name is already used by another API';\n                    this.setState({\n                        valid,\n                    });\n                })\n                .catch((error) => {\n                    if (error.status === 404) {\n                        valid[id].invalid = false;\n                        valid[id].error = '';\n                        this.setState({\n                            valid,\n                        });\n                    } else {\n                        Alert.error('Error when validating scope: ' + value);\n                        console.error('Error when validating scope ' + error);\n                    }\n                });\n        }\n        if (!valid[id].invalid) {\n            valid[id].error = '';\n        }\n        this.setState({\n            valid,\n            apiScope,\n        });\n        return valid[id].invalid;\n    }\n\n    /**\n     * Add new scope\n     * @memberof Scopes\n     */\n    addScope() {\n        const {\n            intl, api, history, updateAPI,\n        } = this.props;\n        const urlPrefix = api.apiType === 'APIProduct' ? 'api-products' : 'apis';\n        if (this.validateScopeName('name', this.state.apiScope.name)) {\n            // return status of the validation\n            return;\n        }\n        const scope = this.state.apiScope;\n        scope.bindings = {\n            type: 'role',\n            values: this.state.validRoles,\n        };\n        const scopes = api.scopes.map((aScope) => {\n            return aScope;\n        });\n        scopes.push(scope);\n        const updateProperties = { scopes };\n        const promisedApiUpdate = updateAPI(updateProperties);\n        this.setState({ scopeAddDisabled: true });\n        promisedApiUpdate\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Scopes.CreateScope.scope.added.successfully',\n                    defaultMessage: 'Scope added successfully',\n                }));\n                const { apiScopes } = this.state;\n                const redirectURL = '/' + urlPrefix + '/' + api.id + '/scopes/';\n                history.push(redirectURL);\n                this.setState({\n                    apiScopes,\n                    apiScope: {},\n                    validRoles: [],\n                });\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response.body) {\n                    const { description } = response.body;\n                    Alert.error(description);\n                }\n            })\n            .finally(() => {\n                this.setState({ scopeAddDisabled: false });\n            });\n    }\n\n    handleScopeNameInput({ target: { id, value } }) {\n        this.validateScopeName(id, value);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof CreateScope\n     */\n    render() {\n        const { classes, api } = this.props;\n        const urlPrefix = api.apiType === 'APIProduct' ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/scopes`;\n        const {\n            roleValidity, validRoles, invalidRoles, scopeAddDisabled,\n        } = this.state;\n\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5} className={classes.titleGrid}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={url} className={classes.titleLink}>\n                                    <Typography variant='h4'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                            defaultMessage='Scopes'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h4'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Scopes.CreateScope.create.new.scope'\n                                        defaultMessage='Create New Scope'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0} className={classes.root}>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='name'\n                                        label='Name'\n                                        placeholder='Scope Name'\n                                        error={this.state.valid.name.invalid}\n                                        helperText={\n                                            this.state.valid.name.invalid ? (\n                                                this.state.valid.name.error\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.short.description.name'\n                                                    defaultMessage='Enter Scope Name ( Ex: creator )'\n                                                />\n                                            )\n                                        }\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={this.state.apiScope.name || ''}\n                                        onChange={this.handleScopeNameInput}\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal' classes={{ root: classes.descriptionForm }}>\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        placeholder='Short description about the scope'\n                                        helperText={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.CreateScope.short.description.about.the.scope'\n                                                defaultMessage='Short description about the scope'\n                                            />\n                                        )}\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={this.validateScopeDescription}\n                                        value={this.state.apiScope.description || ''}\n                                        multiline\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <ChipInput\n                                        label='Roles'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant='outlined'\n                                        value={validRoles.concat(invalidRoles)}\n                                        alwaysShowPlaceholder={false}\n                                        placeholder='Enter roles and press Enter'\n                                        blurBehavior='clear'\n                                        InputProps={{\n                                            endAdornment: !roleValidity && (\n                                                <InputAdornment position='end'>\n                                                    <Error color='error' />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onAdd={this.handleRoleAddition}\n                                        error={!roleValidity}\n                                        helperText={\n                                            !roleValidity ? (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.Roles.Invalid'\n                                                    defaultMessage='Role is invalid'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                                                    defaultMessage='Enter a valid role and press `Enter`.'\n                                                />\n                                            )\n                                        }\n                                        chipRenderer={({ value }, key) => (\n                                            <Chip\n                                                key={key}\n                                                label={value}\n                                                onDelete={() => {\n                                                    this.handleRoleDeletion(value);\n                                                }}\n                                                style={{\n                                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                                    margin: '8px 8px 8px 0',\n                                                    float: 'left',\n                                                }}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={this.addScope}\n                                        disabled={\n                                            isRestricted(['apim:api_create'], api)\n                                            || this.state.valid.name.invalid\n                                            || invalidRoles.length !== 0\n                                            || scopeAddDisabled\n                                        }\n                                        className={classes.saveButton}\n                                    >\n                                        {scopeAddDisabled ? (\n                                            <>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.saving'\n                                                    defaultMessage='Saving'\n                                                />\n                                                <CircularProgress size={16} classes={{ root: classes.progress }} />\n                                            </>\n                                        ) : (\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.CreateScope.save'\n                                                defaultMessage='Save'\n                                            />\n                                        )}\n                                    </Button>\n                                    <Link to={url}>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.CreateScope.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCreateScope.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nCreateScope.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withStyles(styles)(CreateScope));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Icon from '@material-ui/core/Icon';\nimport base64url from 'base64url';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Error from '@material-ui/core/SvgIcon/SvgIcon';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n        marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    FormControl: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlLabel: {\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n    },\n    buttonSection: {\n        paddingTop: theme.spacing(3),\n    },\n    saveButton: {\n        marginRight: theme.spacing(2),\n    },\n    helpText: {\n        color: theme.palette.text.hint,\n        marginTop: theme.spacing(1),\n    },\n    extraPadding: {\n        paddingLeft: theme.spacing(2),\n    },\n    addNewOther: {\n        paddingTop: 40,\n    },\n    titleGrid: {\n        ' & .MuiGrid-item': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n});\n\n/**\n * Create new scopes for an API\n * @class CreateScope\n * @extends {Component}\n */\nclass EditScope extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        const { api, location } = this.props;\n        const thisScope = api.scopes.find((scope) => {\n            return scope.name === location.state.scopeName;\n        });\n        this.state = {\n            apiScope: { ...thisScope },\n            validRoles: thisScope.bindings.values,\n            invalidRoles: [],\n            roleValidity: true,\n        };\n        this.updateScope = this.updateScope.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        this.handleRoleDeletion = this.handleRoleDeletion.bind(this);\n        this.handleRoleAddition = this.handleRoleAddition.bind(this);\n        this.validateScopeDescription = this.validateScopeDescription.bind(this);\n    }\n\n\n    handleRoleDeletion = (role) => {\n        const { validRoles, invalidRoles } = this.state;\n        if (invalidRoles.includes(role)) {\n            const invalidRolesArray = invalidRoles.filter((existingRole) => existingRole !== role);\n            this.setState({ invalidRoles: invalidRolesArray });\n            if (invalidRolesArray.length === 0) {\n                this.setState({ roleValidity: true });\n            }\n        } else {\n            this.setState({ validRoles: validRoles.filter((existingRole) => existingRole !== role) });\n        }\n    };\n\n    /**\n     * Handle api scope addition event\n     * @param {any} event Button Click event\n     * @memberof Scopes\n     */\n    handleInputs(event) {\n        if (Array.isArray(event)) {\n            const { apiScope } = this.state;\n            apiScope.bindings.values = event;\n            this.setState({\n                apiScope,\n            });\n        } else {\n            const input = event.target;\n            const { apiScope } = this.state;\n            apiScope[input.id] = input.value;\n            this.setState({\n                apiScope,\n            });\n        }\n    }\n\n    /**\n     * Add new scope\n     * @memberof Scopes\n     */\n    updateScope() {\n        const { apiScope, validRoles } = this.state;\n        const {\n            intl, api, history, updateAPI,\n        } = this.props;\n        apiScope.bindings = {\n            type: 'role',\n            values: validRoles,\n        };\n        const urlPrefix = api.apiType === 'APIProduct' ? 'api-products' : 'apis';\n        const scopes = api.scopes.map((scope) => {\n            if (scope.name === apiScope.name) {\n                return apiScope;\n            } else {\n                return scope;\n            }\n        });\n        const updateProperties = { scopes };\n        const promisedApiUpdate = updateAPI(updateProperties);\n        promisedApiUpdate.then(() => {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Scopes.CreateScope.scope.updated.successfully',\n                defaultMessage: 'Scope updated successfully',\n            }));\n            const redirectURL = '/' + urlPrefix + '/' + api.id + '/scopes/';\n            history.push(redirectURL);\n        });\n        promisedApiUpdate.catch((error) => {\n            const { response } = error;\n            if (response.body) {\n                const { description } = response.body;\n                Alert.error(description);\n            }\n        });\n    }\n\n    handleRoleAddition(role) {\n        const { validRoles, invalidRoles } = this.state;\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise\n            .then(() => {\n                this.setState({\n                    roleValidity: true,\n                    validRoles: [...validRoles, role],\n                });\n            })\n            .catch((error) => {\n                if (error.status === 404) {\n                    this.setState({\n                        roleValidity: false,\n                        invalidRoles: [...invalidRoles, role],\n                    });\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating role ' + error);\n                }\n            });\n    }\n\n    validateScopeDescription({ target: { id, value } }) {\n        const { apiScope } = this.state;\n        apiScope[id] = value;\n        this.setState({\n            apiScope,\n        });\n    }\n\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const {\n            apiScope, roleValidity, validRoles, invalidRoles,\n        } = this.state;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/scopes`;\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5} className={classes.titleGrid}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={url} className={classes.titleLink}>\n                                    <Typography variant='h4'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                            defaultMessage='Scopes'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h4'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Scopes.EditScope.update.scope'\n                                        defaultMessage='Update Scope'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0} className={classes.root}>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='name'\n                                        label='Name'\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={apiScope.name}\n                                        onChange={this.handleScopeNameInput}\n                                        disabled\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        placeholder='Short description about the scope'\n                                        helperText={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.EditScope.short.description.about.the.scope'\n                                                defaultMessage='Short description about the scope'\n                                            />\n                                        )}\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={this.validateScopeDescription}\n                                        value={apiScope.description || ''}\n                                        multiline\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <ChipInput\n                                        label='Roles'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant='outlined'\n                                        value={validRoles.concat(invalidRoles)}\n                                        alwaysShowPlaceholder={false}\n                                        placeholder='Enter roles and press Enter'\n                                        blurBehavior='clear'\n                                        InputProps={{\n                                            endAdornment: !roleValidity && (\n                                                <InputAdornment position='end'>\n                                                    <Error color='error' />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onAdd={this.handleRoleAddition}\n                                        error={!roleValidity}\n                                        helperText={\n                                            !roleValidity ? (\n                                                <FormattedMessage\n                                                    id='Apis.Details.EditScopes.Roles.Invalid'\n                                                    defaultMessage='Role is invalid'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.EditScopes.roles.help'\n                                                    defaultMessage='Enter a valid role and press `Enter`.'\n                                                />\n                                            )\n                                        }\n                                        chipRenderer={({ value }, key) => (\n                                            <Chip\n                                                key={key}\n                                                label={value}\n                                                onDelete={() => {\n                                                    this.handleRoleDeletion(value);\n                                                }}\n                                                style={{\n                                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                                    margin: '8px 8px 8px 0',\n                                                    float: 'left',\n                                                }}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={this.updateScope}\n                                        disabled={invalidRoles.length !== 0}\n                                        className={classes.saveButton}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.EditScope.update'\n                                            defaultMessage='Update'\n                                        />\n                                    </Button>\n                                    <Link to={url}>\n                                        <Button variant='contained'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.EditScope.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nEditScope.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    location: PropTypes.shape({\n        state: PropTypes.shape({\n            scopeName: PropTypes.string,\n        }),\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nEditScope.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(EditScope)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Delete(props) {\n    const [api, updateAPI] = useAPI();\n    const { intl } = props;\n    const [open, setOpen] = useState(false);\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteScope = () => {\n        const { scopeName } = props;\n        const ops = api.operations && JSON.parse(JSON.stringify(api.operations));\n        const operations = ops && ops.map((op) => {\n            // eslint-disable-next-line no-param-reassign\n            op.scopes = op.scopes.filter((scope) => {\n                return scope !== scopeName;\n            });\n            return op;\n        });\n        const scopes = api.scopes.filter((scope) => {\n            return scope.name !== scopeName;\n        });\n        const updateProperties = { scopes, operations };\n        const setOpenLocal = setOpen; // Need to copy this to access inside the promise.then\n        const promisedUpdate = updateAPI(updateProperties);\n        promisedUpdate\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.api.scope.deleted.successfully',\n                    defaultMessage: 'API Scope deleted successfully!',\n                }));\n                setOpenLocal(!open);\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.something.went.wrong.while.updating.the.api',\n                    defaultMessage: 'Error occurred while updating API',\n                }));\n            });\n    };\n\n    const runAction = (confirm) => {\n        if (confirm) {\n            deleteScope();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const { scopeName } = props;\n\n    return (\n        <div>\n            <Button onClick={toggleOpen} disabled={isRestricted(['apim:api_create'], api)}>\n                <Icon>delete_forever</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.delete'\n                    defaultMessage='Delete'\n                />\n            </Button>\n            <ConfirmDialog\n                key='key-dialog'\n                labelCancel={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.cancel'\n                        defaultMessage='Cancel'\n                    />\n                )}\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm'\n                        defaultMessage='Confirm Delete'\n                    />\n                )}\n                message={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.ok.confirm'\n                        defaultMessage='Are you sure you want to delete scope {scope} ?'\n                        values={{ scope: scopeName }}\n                    />\n                )}\n                labelOk={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.ok.yes'\n                        defaultMessage='Yes'\n                    />\n                )}\n                callback={runAction}\n                open={open}\n            />\n        </div>\n    );\n}\nDelete.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    scopeName: PropTypes.string.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Delete));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport MUIDataTable from 'mui-datatables';\nimport Icon from '@material-ui/core/Icon';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Grid from '@material-ui/core/Grid';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Delete from './Delete';\n\nconst styles = (theme) => ({\n    root: {\n        paddingTop: 0,\n        paddingLeft: 0,\n    },\n    buttonProgress: {\n        position: 'relative',\n        margin: theme.spacing(1),\n    },\n    headline: { paddingTop: theme.spacing(1.25), paddingLeft: theme.spacing(2.5) },\n    heading: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    button: {\n        textDecoration: 'none',\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        marginLeft: theme.spacing(1),\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    content: {\n        margin: `${theme.spacing(2)}px 0 ${theme.spacing(2)}px 0`,\n    },\n    head: {\n        fontWeight: 200,\n    },\n});\n/**\n * Generate the scopes UI in API details page.\n * @class Scopes\n * @extends {React.Component}\n */\nclass Scopes extends React.Component {\n    /**\n     * Creates an instance of Scopes.\n     * @param {any} props Generic props\n     * @memberof Scopes\n     */\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        this.api_data = props.api;\n    }\n\n    /**\n     * Render Scopes section\n     * @returns {React.Component} React Component\n     * @memberof Scopes\n     */\n    render() {\n        const {\n            intl, classes, api,\n        } = this.props;\n        const urlPrefix = (api.apiType === 'APIProduct') ? 'api-products' : 'apis';\n        const { scopes } = api;\n        const url = `/${urlPrefix}/${api.id}/scopes/create`;\n        const editUrl = `/${urlPrefix}/${api.id}/scopes/edit`;\n        const columns = [\n            intl.formatMessage({\n                id: 'Apis.Details.Scopes.Scopes.table.header.name',\n                defaultMessage: 'Name',\n            }),\n            intl.formatMessage({\n                id: 'Apis.Details.Scopes.Scopes.table.header.description',\n                defaultMessage: 'Description',\n            }),\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const roles = value || [];\n                            return roles.join(',');\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.roles'\n                            defaultMessage='Roles'\n                        />\n                    ),\n                },\n            },\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (value && tableMeta.rowData) {\n                            return (\n                                <List component='nav' className={classes.root}>\n                                    {value.map((resource) => (\n                                        <ListItem button>\n                                            <ListItemText primary={resource} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            );\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.usages'\n                            defaultMessage='Used In'\n                        />\n                    ),\n                },\n            },\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const scopeName = tableMeta.rowData[0];\n                            return (\n                                <table className={classes.actionTable}>\n                                    <tr>\n                                        <td>\n                                            <Link\n                                                to={\n                                                    !isRestricted(['apim:api_create'], api) && {\n                                                        pathname: editUrl,\n                                                        state: {\n                                                            scopeName,\n                                                        },\n                                                    }\n                                                }\n                                            >\n                                                <Button\n                                                    disabled={isRestricted(\n                                                        ['apim:api_create'],\n                                                        api,\n                                                    )}\n                                                >\n                                                    <Icon>edit</Icon>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Documents.Edit.documents.text.editor.edit'\n                                                        defaultMessage='Edit'\n                                                    />\n                                                </Button>\n                                            </Link>\n                                        </td>\n                                        <td>\n                                            <Delete scopeName={scopeName} api={api} isAPIProduct />\n                                        </td>\n                                    </tr>\n                                </table>\n                            );\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.actions'\n                            defaultMessage='Actions'\n                        />\n                    ),\n                },\n            },\n        ];\n        const options = {\n            filterType: 'multiselect',\n            selectableRows: false,\n            title: false,\n            filter: false,\n            sort: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n        };\n        const scopesList = api.scopes.map((scope) => {\n            const aScope = [];\n            aScope.push(scope.name);\n            aScope.push(scope.description);\n            aScope.push(scope.bindings.values);\n            const resources = api.operations && api.operations\n                .filter((op) => {\n                    return op.scopes.includes(scope.name);\n                })\n                .map((op) => {\n                    return op.target + ' ' + op.verb;\n                });\n            aScope.push(resources);\n            return aScope;\n        });\n\n        if (!scopes) {\n            return <Progress />;\n        }\n\n        if (scopes.length === 0) {\n            return (\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                defaultMessage='Scopes'\n                            />\n                        </Typography>\n                    </div>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography variant='h5' component='h3' className={classes.head}>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.create.scopes.title'\n                                    defaultMessage='Create Scopes'\n                                />\n                            </Typography>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.scopes.enable.fine.gained.access.control'\n                                    defaultMessage={\n                                        'Scopes enable fine-grained access control to API resources'\n                                        + ' based on user roles.'\n                                    }\n                                />\n                            </Typography>\n                            <div className={classes.actions}>\n                                <Link to={!isRestricted(['apim:api_create'], api) && url}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        className={classes.button}\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.create.scopes.button'\n                                            defaultMessage='Create Scopes'\n                                        />\n                                    </Button>\n                                </Link>\n                            </div>\n                        </div>\n                    </InlineMessage>\n                </div>\n            );\n        }\n\n        return (\n            <div className={classes.heading}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' align='left' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                            defaultMessage='Scopes'\n                        />\n                    </Typography>\n                    <Link to={!isRestricted(['apim:api_create'], api) && url}>\n                        <Button\n                            size='small'\n                            className={classes.button}\n                            disabled={isRestricted(['apim:api_create'], api)}\n                        >\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Scopes.Scopes.heading.scope.add_new'\n                                defaultMessage='Add New Scope'\n                            />\n                        </Button>\n                    </Link>\n                    {isRestricted(['apim:api_create'], api) && (\n                        <Grid item>\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.update.not.allowed'\n                                    defaultMessage={\n                                        '*You are not authorized to update scopes of'\n                                        + ' the API due to insufficient permissions'\n                                    }\n                                />\n                            </Typography>\n                        </Grid>\n                    )}\n                </div>\n\n                <MUIDataTable title={false} data={scopesList} columns={columns} options={options} />\n            </div>\n        );\n    }\n}\n\nScopes.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.instanceOf(Object).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nScopes.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withAPI(withStyles(styles)(Scopes)));\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CreateScope from './CreateScope';\nimport EditScope from './EditScope';\nimport Scopes from './Scopes';\n\nconst Scope = () => {\n    const [api, updateAPI] = useAPI();\n    const urlPrefix = api.isAPIProduct() ? 'api-products' : 'apis';\n    return (\n        <Switch>\n            <Route exact path={'/' + urlPrefix + '/:api_uuid/scopes/'} component={Scopes} />\n            <Route\n                exact\n                path={'/' + urlPrefix + '/:api_uuid/scopes/create'}\n                component={(props) => <CreateScope api={api} {...props} updateAPI={updateAPI} />}\n            />\n            <Route\n                exact\n                path={'/' + urlPrefix + '/:api_uuid/scopes/edit'}\n                component={(props) => <EditScope api={api} {...props} updateAPI={updateAPI} />}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n};\n\nScope.propTypes = {\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        additionalProperties: PropTypes.shape({\n            key: PropTypes.string,\n            value: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n};\n\nexport default Scope;\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = theme => ({\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addJsonContent: {\n        whiteSpace: 'pre',\n    },\n});\n\nclass AddPolicy extends Component {\n    state = {\n        selectedPolicy: {\n            uuid: '',\n            name: 'Select',\n            policy: '',\n            type: '',\n        },\n        policies: [],\n    };\n\n    componentDidMount() {\n        const api = new API();\n        const promisedPolicies = api.getThreatProtectionPolicies();\n        promisedPolicies.then((response) => {\n            this.setState({ policies: response.obj.list });\n        });\n        const promisedApi = api.get(this.props.id);\n        promisedApi.then((response) => {\n            this.setState({ currentApi: response.obj });\n        });\n    }\n\n    handlePolicyAdd() {\n        const { intl } = this.props;\n        const policy = this.state.selectedPolicy;\n        if (policy.uuid === '' || policy.name === '') {\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Security.AddPolicy.select.policy',\n                defaultMessage: 'Please select a policy',\n            }));\n            return;\n        }\n\n        if (this.state.currentApi) {\n            const { currentApi } = this.state;\n            const api = new API();\n            const promisedPolicyAdd = api.addThreatProtectionPolicyToApi(currentApi.id, this.state.selectedPolicy.uuid);\n            promisedPolicyAdd.then((response) => {\n                if (response.status === 200) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Security.AddPolicy.threat.protection.policy.add.success',\n                        defaultMessage: 'Threat protection policy added successfully.',\n                    }));\n                    this.props.updateData();\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Security.AddPolicy.threat.protection.policy.add.failure',\n                        defaultMessage: 'Failed to add threat protection policy.',\n                    }));\n                }\n            });\n        }\n    }\n\n    handleChange = () => (event) => {\n        const policyId = event.target.value;\n        const api = new API();\n        const promisedPolicy = api.getThreatProtectionPolicy(policyId);\n        promisedPolicy.then((response) => {\n            this.setState({ selectedPolicy: response.obj });\n        });\n    }\n\n    formatPolicy = (policy) => {\n        let formattedPolicy = policy;\n        formattedPolicy = formattedPolicy.replace(':', ' : ');\n        formattedPolicy = formattedPolicy.split(',').join(',\\n');\n        return formattedPolicy;\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.contentWrapper}>\n                <div className={classes.addNewWrapper}>\n                    <Typography className={classes.addNewHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Security.AddPolicy.add.threat.protection.policy'\n                            defaultMessage='Add New Threat Protection Policy'\n                        />\n                    </Typography>\n                    <Divider className={classes.divider} />\n                    <div className={classes.addNewOther}>\n                        <InputLabel htmlFor='selectedPolicy'>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.policy'\n                                defaultMessage='Policy'\n                            />\n                        </InputLabel>\n                        &nbsp;&nbsp;\n                        <Select\n                            value={this.state.selectedPolicy.uuid}\n                            onChange={this.handleChange('selectedPolicy')}\n                            input={<Input name='selectedPolicy' id='selectedPolicy' />}\n                        >\n                            {this.state.policies.map((n) => {\n                                return (\n                                    <MenuItem key={n.uuid} value={n.uuid}>{n.name}</MenuItem>\n                                );\n                            })};\n                        </Select>\n                        <br />\n                        <br />\n                        <p>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.policy.type.label'\n                                defaultMessage='Policy Type: '\n                            />\n                            {this.state.selectedPolicy.type}\n                        </p>\n                        <div>\n                            <p>\n                                <FormattedMessage\n                                    id='Apis.Details.Security.AddPolicy.policy.label'\n                                    defaultMessage='Policy: '\n                                />\n                            </p>\n                            <div className={classes.addJsonContent}>\n                                {this.formatPolicy(this.state.selectedPolicy.policy)}\n                            </div>\n                        </div>\n                    </div>\n                    <Divider className={classes.divider} />\n                    <div className={classes.addNewOther}>\n                        <Button variant='contained' color='primary' onClick={() => this.handlePolicyAdd()}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.add.policy.to.api'\n                                defaultMessage='Add Policy to API'\n                            />\n                        </Button>\n                        <Button className={classes.button} onClick={this.props.toggleShowAddPolicy}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    toggleShowAddPolicy: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    updateData: PropTypes.func.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(AddPolicy));\n\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\n\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Divider from '@material-ui/core/Divider';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport AddPolicy from './AddPolicy';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    table: {\n        '& td': {\n            fontSize: theme.typography.fontSize,\n        },\n        '& th': {\n            fontSize: theme.typography.fontSize * 1.2,\n        },\n        tableLayout: 'fixed',\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addJsonContent: {\n        whiteSpace: 'pre',\n    },\n});\n\nclass SecurityOverview extends Component {\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.state = {\n            api: {\n                name: '',\n            },\n            policies: [],\n            showAddPolicy: false,\n        };\n        this.updateData = this.updateData.bind(this);\n        this.toggleShowAddPolicy = this.toggleShowAddPolicy.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateData();\n    }\n\n    updateData() {\n        const promisedApi = this.api.get(this.props.match.params.api_uuid);\n        promisedApi.then((response) => {\n            this.setState({ api: response.obj });\n            this.updatePolicyData();\n        });\n    }\n\n    updatePolicyData() {\n        this.setState({ policies: [] });\n        const policyIds = this.state.api.threatProtectionPolicies.list;\n        for (let i = 0; i < policyIds.length; i++) {\n            const id = policyIds[i].policyId;\n            const promisedPolicies = this.api.getThreatProtectionPolicy(id);\n            promisedPolicies.then((response) => {\n                const updatedPolicies = this.state.policies;\n                updatedPolicies.push(response.obj);\n                this.setState({ policies: updatedPolicies });\n            });\n        }\n    }\n\n    deletePolicy(id) {\n        const { intl } = this.props;\n        const associatedApi = this.state.api;\n        const promisedPolicyDelete = this.api.deleteThreatProtectionPolicyFromApi(associatedApi.id, id);\n        promisedPolicyDelete.then((response) => {\n            if (response.status === 200) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Security.SecurityOverview.policy.remove.success',\n                    defaultMessage: 'Policy removed successfully.',\n                }));\n\n                //   remove policy from local api\n                const index = associatedApi.threatProtectionPolicies.list.indexOf({ policyId: id });\n                associatedApi.threatProtectionPolicies.list.splice(index, 1);\n                this.setState({ api: associatedApi });\n                this.updatePolicyData();\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Security.SecurityOverview.policy.remove.failure',\n                    defaultMessage: 'Failed to remove policy.',\n                }));\n            }\n        });\n    }\n\n    toggleShowAddPolicy = () => {\n        this.setState({ showAddPolicy: !this.state.showAddPolicy });\n    }\n\n    formatPolicy = (policy) => {\n        let formattedPolicy = policy;\n        formattedPolicy = formattedPolicy.replace(':', ' : ');\n        formattedPolicy = formattedPolicy.split(',').join(',\\n');\n        return formattedPolicy;\n    }\n\n    render() {\n        let data = [];\n        if (this.state.policies) {\n            data = this.state.policies;\n        }\n        const { classes } = this.props;\n        const { showAddPolicy } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.contentWrapper}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.threat.protection.policies'\n                                defaultMessage='Threat Protection Policies'\n                            />\n                        </Typography>\n                        <Button size='small' className={classes.button} onClick={this.toggleShowAddPolicy}>\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.add.threat.protection.policy'\n                                defaultMessage='Add New Threat Protection Policy'\n                            />\n                        </Button>\n                    </div>\n                </div>\n                <div className={classes.contentWrapper}>\n                    {showAddPolicy &&\n                    <AddPolicy\n                        id={this.state.api.id}\n                        toggleShowAddPolicy={this.toggleShowAddPolicy}\n                        updateData={this.updateData}\n                    />\n                    }\n                </div>\n                <br />\n                <div className={classes.contentWrapper}>\n                    <div className={classes.addNewWrapper}>\n                        <Typography className={classes.addNewHeader}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.manage.threat.protection.policies'\n                                defaultMessage='Manage Threat Protection Policies'\n                            />\n                        </Typography>\n                        <Divider className={classes.divider} />\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy.name'\n                                            defaultMessage='Policy Name'\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy.type'\n                                            defaultMessage='Policy Type'\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy'\n                                            defaultMessage='Policy'\n                                        />\n                                    </TableCell>\n                                    <TableCell />\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.map((n) => {\n                                    return (\n                                        <TableRow key={n.uuid}>\n                                            <TableCell>{n.name + (n.uuid === 'GLOBAL-JSON' ? ' (GLOBAL)' : '')}</TableCell>\n                                            <TableCell>{n.type}</TableCell>\n                                            <TableCell>\n                                                <div className={classes.addJsonContent}>\n                                                    {this.formatPolicy(n.policy)}\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <span>\n                                                    <Button color='accent' onClick={() => this.deletePolicy(n.uuid)} >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Security.SecurityOverview.delete'\n                                                            defaultMessage='Delete'\n                                                        />\n                                                    </Button>\n                                                </span>\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSecurityOverview.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            api_uuid: PropTypes.string,\n        }),\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(SecurityOverview));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport SecurityOverview from './SecurityOverview';\n\nconst Security = () => {\n    return (\n        <Switch>\n            <Route path='/apis/:api_uuid/security' component={SecurityOverview} />\n        </Switch>\n    );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport API from 'AppData/api';\nimport PropTypes from 'prop-types';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { CircularProgressbarWithChildren } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport VisibilitySensor from 'react-visibility-sensor';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Line } from 'rc-progress';\nimport Progress from 'AppComponents/Shared/Progress';\nimport { withRouter } from 'react-router';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\n\nimport MUIDataTable from 'mui-datatables';\n\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport MonacoEditor from 'react-monaco-editor';\n\nconst styles = (theme) => ({\n    rootPaper: {\n        padding: theme.spacing(3),\n        margin: theme.spacing(2),\n    },\n    inlineDecoration: {\n        background: '#FF0000',\n    },\n    contentLine: {\n        background: '#add8e6',\n    },\n    htmlToolTip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n        'margin-left': 10,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    tableRow: {\n        'background-color': '#d3d3d3',\n    },\n    referenceErrorTypography: {\n        width: '70%',\n        marginTop: '15%',\n    },\n    referenceTypography: {\n        width: '70%',\n    },\n    subheadingTypography: {\n        paddingTop: 30,\n        paddingLeft: 20,\n    },\n    paperDiv: {\n        marginTop: 30,\n    },\n    sectionHeadingTypography: {\n        marginBottom: 18,\n    },\n    auditSummaryDiv: {\n        display: 'flex',\n        marginTop: 25,\n    },\n    auditSummarySubDiv: {\n        width: 250,\n        marginLeft: 40,\n        marginRight: 40,\n        display: 'table',\n    },\n    circularProgressBarScore: {\n        fontSize: 70,\n        color: '#3d98c7',\n        marginTop: 18,\n    },\n    circularProgressBarScoreFooter: {\n        fontSize: 18,\n        marginTop: 10,\n    },\n    auditSummaryDivRight: {\n        flexGrow: 1,\n        marginLeft: 200,\n        marginTop: 10,\n    },\n    columnOne: {\n        display: 'block',\n        width: '50%',\n        float: 'left',\n    },\n    columnTwo: {\n        width: '40%',\n        float: 'right',\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    linkText: {\n        float: 'right',\n    },\n});\n\n\n/**\n * This Component hosts the API Security Audit Component\n * More specifically, rendering of the Security Audit\n * Report.\n */\nclass APISecurityAudit extends Component {\n    /**\n     * @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            report: null,\n            overallScore: 0,\n            numErrors: 0,\n            externalApiId: null,\n            loading: false,\n            apiDefinition: null,\n        };\n        this.criticalityObject = {\n            1: 'INFO',\n            2: 'LOW',\n            3: 'MEDIUM',\n            4: 'HIGH',\n            5: 'CRITICAL',\n        };\n        this.searchTerm = null;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        this.setState({ loading: true });\n        const { apiId, history, intl } = this.props;\n        const currentApi = new API();\n        const promisedDefinition = currentApi.getSwagger(apiId);\n        promisedDefinition.then((response) => {\n            this.setState({\n                apiDefinition: JSON.stringify(response.obj, null, 1),\n            });\n        })\n            .catch((error) => {\n                console.log(error);\n            });\n\n        currentApi.getSecurityAuditReport(apiId)\n            .then((response) => {\n                this.setState({\n                    report: response.body.report,\n                    overallScore: response.body.grade,\n                    numErrors: response.body.numErrors,\n                    externalApiId: response.body.externalApiId,\n                    loading: false,\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                this.setState({ loading: false });\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.AuditApi.GetReportError',\n                    defaultMessage: 'Something went wrong while retrieving the API Security Report',\n                }));\n                const redirectUrl = '/apis/' + apiId + '/api definition';\n                history.push(redirectUrl);\n            });\n    }\n\n    getMuiTheme = () => createMuiTheme({\n        typography: {\n            useNextVariants: true,\n        },\n        overrides: {\n            MUIDataTableBodyCell: {\n                root: {\n                    width: '30%',\n                },\n            },\n            MUIDataTableSelectCell: {\n                root: {\n                    display: 'none',\n                },\n            },\n            MUIDataTableToolbarSelect: {\n                title: {\n                    display: 'none',\n                },\n            },\n        },\n    });\n\n    getErrorMuiTheme = () => createMuiTheme({\n        typography: {\n            useNextVariants: true,\n        },\n        overrides: {\n            MUIDataTableBodyCell: {\n                root: {\n                    width: '100%',\n                },\n            },\n            MUIDataTableSelectCell: {\n                root: {\n                    display: 'none',\n                },\n            },\n            MUIDataTableToolbarSelect: {\n                title: {\n                    display: 'none',\n                },\n            },\n        },\n    });\n\n    /**\n     * Get Row data for MUI Table\n     * @param {*} issues Issues array\n     * @param {String} category The category of the issue\n     * @param {*} rowType The type of row - normal or error\n     * @return {*} dataObject The dataObject array\n     */\n    getRowData(issues, category, rowType) {\n        const dataObject = [];\n        for (const item in issues) {\n            if ({}.hasOwnProperty.call(issues, item)) {\n                for (let i = 0; i < issues[item].issues.length; i++) {\n                    const rowObject = [];\n                    if (rowType === 'error') {\n                        if (issues[item].issues[i].specificDescription) {\n                            rowObject.push(\n                                issues[item].issues[i].specificDescription, issues[item].issues[i].pointer,\n                                category, rowType, item,\n                            );\n                        } else {\n                            rowObject.push(\n                                issues[item].description, issues[item].issues[i].pointer,\n                                category, rowType, item,\n                            );\n                        }\n                    } else if (rowType === 'normal') {\n                        if (issues[item].issues[i].specificDescription) {\n                            rowObject.push(\n                                this.criticalityObject[issues[item].criticality],\n                                issues[item].issues[i].specificDescription,\n                                this.roundScore(issues[item].issues[i].score), issues[item].issues[i].pointer,\n                                issues[item].issues[i].tooManyImpacted,\n                                issues[item].issues[i].pointersAffected, category, issues[item].tooManyError,\n                                rowType, item,\n                            );\n                        } else {\n                            rowObject.push(\n                                this.criticalityObject[issues[item].criticality],\n                                issues[item].description, this.roundScore(issues[item].issues[i].score),\n                                issues[item].issues[i].pointer, issues[item].issues[i].tooManyImpacted,\n                                issues[item].issues[i].pointersAffected, category, issues[item].tooManyError,\n                                rowType, item,\n                            );\n                        }\n                    }\n                    dataObject.push(rowObject);\n                }\n            }\n        }\n        return dataObject;\n    }\n\n    /**\n     * Method to get the URL to display for each issue\n     * @param {*} category Category of the issue\n     * @returns {*} String URL\n     */\n    getMoreDetailUrl(category) {\n        const baseUrl = 'https://apisecurity.io/ref/';\n        let url = '';\n\n        switch (category) {\n            case 'OpenAPI Format Requirements':\n                url = baseUrl + 'oasconformance/';\n                break;\n            case 'Security':\n                url = baseUrl + 'security/';\n                break;\n            case 'Data Validation':\n                url = baseUrl + 'datavalidation/datavalidation/';\n                break;\n            default:\n                url = baseUrl;\n        }\n        return url;\n    }\n\n    /**\n     * editorDidMount method for Monaco Editor\n     * @param {*} editor Monaco Editor editor\n     * @param {*} monaco Monaco Editor monaco\n     * @param {String} searchTerm SearchTerm for pointer\n     */\n    editorDidMount = (editor, monaco, searchTerm) => {\n        const { classes } = this.props;\n        if (searchTerm !== '') {\n            const lastTerms = [];\n            const termObject = searchTerm.split('/');\n            const regexPatterns = [];\n            for (let i = 0; i < termObject.length; i++) {\n                if (termObject[i] !== '' && termObject[i] !== '0') {\n                    let appendedString = '\"' + termObject[i] + '\":';\n                    if (appendedString.includes('~1')) {\n                        appendedString = appendedString.replace(/~1/i, '/');\n                    }\n                    regexPatterns.push(appendedString);\n                }\n            }\n\n            for (let j = 0; j < regexPatterns.length; j++) {\n                if (regexPatterns[j] !== '') {\n                    if (j !== 0 && lastTerms.length !== 0 && lastTerms[lastTerms.length - 1] !== null) {\n                        lastTerms.push(editor.getModel().findNextMatch(\n                            regexPatterns[j],\n                            { lineNumber: lastTerms[lastTerms.length - 1].range.endLineNumber, column: 1 },\n                            true, true, null, false,\n                        ));\n                    } else {\n                        lastTerms.push(editor.getModel().findNextMatch(regexPatterns[j], 1, true, true, null, true));\n                    }\n                }\n            }\n            const finalMatchIndex = lastTerms.length - 1;\n            if (lastTerms[finalMatchIndex] != null) {\n                editor.revealLineInCenter(lastTerms[finalMatchIndex].range.startLineNumber);\n                editor.deltaDecorations([], [\n                    {\n                        range: new monaco.Range(\n                            lastTerms[finalMatchIndex].range.startLineNumber,\n                            lastTerms[finalMatchIndex].range.startColumn,\n                            lastTerms[finalMatchIndex].range.endLineNumber,\n                            lastTerms[finalMatchIndex].range.endColumn,\n                        ),\n                        options: {\n                            isWholeLine: true,\n                            className: classes.inlineDecoration,\n                            glyphMarginClassName: classes.contentLine,\n                        },\n                    },\n                ]);\n            }\n        }\n    }\n\n    /**\n     * Method to round off the score of a section of the report\n     * @param {*} score Score of section\n     * @returns {*} roundScore Rounded off score\n     */\n    roundScore(score) {\n        if (score !== 0) {\n            return Math.round(score * 100) / 100;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const {\n            report, overallScore, numErrors, externalApiId, loading, apiDefinition,\n        } = this.state;\n\n        const reportObject = JSON.parse(report);\n        const linkToDetailedReport = 'https://platform.42crunch.com/apis/' + externalApiId + '/security-audit-report';\n        if (loading) {\n            return (\n                <div>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography\n                                variant='h5'\n                                component='h3'\n                                className={classes.head}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.AuditApi.WaitForReport'\n                                    defaultMessage='Please wait...'\n                                />\n                            </Typography>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.AuditApi.WaitForReport.Content'\n                                    defaultMessage='Auditing an API for the first time will take some time'\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                    <Progress />\n                </div>\n            );\n        }\n        const columns = [\n            {\n                name: 'Severity',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Description',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Score Impact',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Pointer',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Too Many Impacted',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Pointers Affected',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Issue Category',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Too Many Errors',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'isError',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'ReferenceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n        ];\n\n        const errorColumns = [\n            {\n                name: 'Description',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Pointer',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Issue Category',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'isError',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'ReferenceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n        ];\n\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n            glyphMargin: true,\n        };\n\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            print: false,\n            download: false,\n            selectableRows: false,\n            expandableRows: true,\n            expandableRowsOnClick: true,\n            renderExpandableRow: (rowData) => {\n                let searchTerm = null;\n                if (rowData[3] === 'error') {\n                    searchTerm = reportObject.index[rowData[1]];\n\n                    return (\n                        <TableRow className={classes.tableRow}>\n                            <TableCell className={classes.columnOne}>\n                                <MonacoEditor\n                                    height='250px'\n                                    theme='vs-dark'\n                                    value={apiDefinition}\n                                    options={editorOptions}\n                                    editorDidMount={(editor, monaco) => this.editorDidMount(editor, monaco, searchTerm)}\n                                />\n                            </TableCell>\n                            <TableCell className={classes.columnTwo}>\n                                <Typography variant='body1' className={classes.referenceErrorTypography}>\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.AuditApi.ReferenceSection'\n                                        description='Link to visit for detail on how to remedy issue'\n                                        defaultMessage='Visit this {link} to view a detailed description, possible\n                                        exploits and remediation for this issue.'\n                                        values={{\n                                            link: (\n                                                <strong>\n                                                    <a\n                                                        href={this.getMoreDetailUrl(rowData[2])}\n                                                        target='_blank'\n                                                        rel='noopener noreferrer'\n                                                    >\n                                                        link\n                                                    </a>\n                                                </strong>),\n                                        }}\n                                    />\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    );\n                } else {\n                    searchTerm = reportObject.index[rowData[3]];\n                    return (\n                        <TableRow className={classes.tableRow}>\n                            <TableCell colSpan='2'>\n                                <MonacoEditor\n                                    width='85%'\n                                    height='250px'\n                                    theme='vs-dark'\n                                    value={apiDefinition}\n                                    options={editorOptions}\n                                    editorDidMount={(editor, monaco) => this.editorDidMount(editor, monaco, searchTerm)}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant='body1' className={classes.referenceTypography}>\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.AuditApi.ReferenceSection'\n                                        description='Link to visit for detail on how to remedy issue'\n                                        defaultMessage='Visit this {link} to view a detailed description, possible\n                                        exploits and remediation for this issue.'\n                                        values={{\n                                            link: (\n                                                <strong>\n                                                    <a\n                                                        href={this.getMoreDetailUrl(rowData[6])}\n                                                        target='_blank'\n                                                        rel='noopener noreferrer'\n                                                    >\n                                                        link\n                                                    </a>\n                                                </strong>),\n                                        }}\n                                    />\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    );\n                }\n            },\n        };\n        return (\n            <div>\n                {report && (\n                    <div\n                        width='100%'\n                        height='calc(100vh - 51px)'\n                    >\n                        <Typography variant='h4' className={classes.subheadingTypography}>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.AuditApi.ApiSecurityAuditReport'\n                                defaultMessage='API Security Audit Report'\n                            />\n                        </Typography>\n                        <div className={classes.paperDiv}>\n                            <Paper elevation={1} className={classes.rootPaper}>\n                                <div>\n                                    <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.AuditApi.AuditScoreSummary'\n                                            defaultMessage='Audit Score and Summary'\n                                        />\n                                    </Typography>\n                                    <Typography variant='body1' className={classes.linkText}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.AuditApi.LinkToDetailedReport'\n                                            defaultMessage='{linkToDetailedReportText} {link} {afterLinkText}'\n                                            values={{\n                                                linkToDetailedReportText: 'Check out the ',\n                                                link: (\n                                                    <b>\n                                                        <a\n                                                            href={linkToDetailedReport}\n                                                            target='_blank'\n                                                            rel='noopener noreferrer'\n                                                        >\n                                                        detailed Report\n                                                        </a>\n                                                    </b>),\n                                                afterLinkText: ' from 42Crunch',\n                                            }}\n                                        />\n                                    </Typography>\n                                    <div className={classes.auditSummaryDiv}>\n                                        <div className={classes.auditSummarySubDiv}>\n                                            <VisibilitySensor>\n                                                {({ isVisible }) => {\n                                                    const progressScore = isVisible ? overallScore : 0;\n                                                    return (\n                                                        <CircularProgressbarWithChildren\n                                                            value={progressScore}\n                                                        >\n                                                            <Typography\n                                                                variant='body1'\n                                                                className={classes.circularProgressBarScore}\n                                                            >\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.APIDefinition.AuditApi\n                                                                    .OverallScoreProgress'\n                                                                    defaultMessage='{overallScore}'\n                                                                    values={{\n                                                                        overallScore: (\n                                                                            <strong>{Math.round(overallScore)}</strong>\n                                                                        ),\n                                                                    }}\n                                                                />\n                                                            </Typography>\n                                                            <Typography\n                                                                variant='body1'\n                                                                className={classes.circularProgressBarScoreFooter}\n                                                            >\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.APIDefinition.AuditApi.ScoreFooter'\n                                                                    defaultMessage='out of 100'\n                                                                />\n                                                            </Typography>\n                                                        </CircularProgressbarWithChildren>\n                                                    );\n                                                }}\n                                            </VisibilitySensor>\n                                        </div>\n                                        <div className={classes.auditSummaryDivRight}>\n                                            {{}.hasOwnProperty.call(reportObject, 'score')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.overallScore'\n                                                            defaultMessage='{overallScoreText} {overallScore} / 100'\n                                                            values={{\n                                                                overallScoreText: <strong>Overall Score:</strong>,\n                                                                overallScore: this.roundScore(overallScore),\n                                                            }}\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {numErrors !== null\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.TotalNumOfErrors'\n                                                            defaultMessage='{totalNumOfErrorsText} {totalNumOfErrors}'\n                                                            values={{\n                                                                totalNumOfErrorsText: (\n                                                                    <strong>Total Number of Errors: </strong>\n                                                                ),\n                                                                totalNumOfErrors: numErrors,\n                                                            }}\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'criticality')\n                                                && (\n                                                    <>\n                                                        <Typography variant='body1'>\n                                                            <FormattedMessage\n                                                                id={'Apis.Details.APIDefinition'\n                                                                + '.AuditApi.OverallCriticality'}\n                                                                defaultMessage={\n                                                                    '{overallCriticalityText} {overallCriticality}'\n                                                                }\n                                                                values={{\n                                                                    overallCriticalityText: (\n                                                                        <strong>Overall Severity:</strong>\n                                                                    ),\n                                                                    overallCriticality: (\n                                                                        this.criticalityObject[reportObject.criticality]\n                                                                    ),\n                                                                }}\n                                                            />\n                                                            <Tooltip\n                                                                placement='right'\n                                                                classes={{\n                                                                    tooltip: classes.htmlTooltip,\n                                                                }}\n                                                                title={(\n                                                                    <>\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                            defaultMessage='Severity ranges from: '\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                            defaultMessage='1. INFO'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                            defaultMessage='2. LOW'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                            defaultMessage='3. MEDIUM'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                            defaultMessage='4. HIGH'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                            defaultMessage='5. CRITICAL'\n                                                                        />\n                                                                        <br />\n                                                                    </>\n                                                                )}\n                                                            >\n                                                                <Button className={classes.helpButton}>\n                                                                    <HelpOutline className={classes.helpIcon} />\n                                                                </Button>\n                                                            </Tooltip>\n                                                        </Typography>\n                                                    </>\n                                                )}\n                                            <hr />\n                                            {{}.hasOwnProperty.call(reportObject, 'security')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.SecuritySummary'\n                                                            defaultMessage='{securitySummary}'\n                                                            values={{\n                                                                securitySummary: (\n                                                                    <strong>\n                                                                    Security -\n                                                                    (\n                                                                        {\n                                                                            this.roundScore(reportObject.security.score)\n                                                                        }\n                                                                        {' '}\n                                                                        / 30)\n                                                                    </strong>\n                                                                ),\n                                                            }}\n                                                        />\n                                                        <VisibilitySensor>\n                                                            {({ isVisible }) => {\n                                                                const progressScore = isVisible\n                                                                    ? ((this.roundScore(reportObject.security.score)\n                                                                     / 30\n                                                                    ) * 100) : 0;\n                                                                return (\n                                                                    <Line\n                                                                        percent={progressScore}\n                                                                        strokeColor='#3d98c7'\n                                                                    />\n                                                                );\n                                                            }}\n                                                        </VisibilitySensor>\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'data')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.APIDefinition'\n                                                            + '.AuditApi.DataValidationSummary'}\n                                                            defaultMessage='{dataValidationSummary}'\n                                                            values={{\n                                                                dataValidationSummary: (\n                                                                    <strong>\n                                                                    Data Validation -\n                                                                    (\n                                                                        {this.roundScore(reportObject.data.score)}\n                                                                        {' '}\n                                                                        / 70)\n                                                                    </strong>\n                                                                ),\n                                                            }}\n                                                        />\n                                                        <VisibilitySensor>\n                                                            {({ isVisible }) => {\n                                                                const progressScore = isVisible\n                                                                    ? ((this.roundScore(reportObject.data.score) / 70\n                                                                    ) * 100) : 0;\n                                                                return (\n                                                                    <Line\n                                                                        percent={progressScore}\n                                                                        strokeColor='#3d98c7'\n                                                                    />\n                                                                );\n                                                            }}\n                                                        </VisibilitySensor>\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                                && (\n                                                    <InlineMessage type='warning' height={140}>\n                                                        <div className={classes.contentWrapper}>\n                                                            <Typography\n                                                                variant='h5'\n                                                                component='h3'\n                                                                className={classes.head}\n                                                            >\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                    + '.AuditApi.FailedToValidate.Heading'}\n                                                                    defaultMessage='Failed to Validate OpenAPI File'\n                                                                />\n                                                            </Typography>\n                                                            <Typography component='p' className={classes.content}>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                    + '.AuditApi.FailedToValidate.Content'}\n                                                                    defaultMessage={'Fix the critical errors '\n                                                                    + 'shown below and run the audit again.'}\n                                                                />\n                                                            </Typography>\n                                                        </div>\n                                                    </InlineMessage>\n                                                )}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Paper>\n                        </div>\n                        {\n                            <div className={classes.paperDiv}>\n                                <Paper elevation={1} className={classes.rootPaper}>\n                                    <div>\n                                        <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                            <FormattedMessage\n                                                id='Apis.Details.APIDefinition.AuditApi.OpenApiFormatRequirements'\n                                                defaultMessage='OpenAPI Format Requirements'\n                                            />\n                                        </Typography>\n                                        {{}.hasOwnProperty.call(reportObject, 'semanticErrors')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Semantic Errors'\n                                                                    data={this.getRowData(\n                                                                        reportObject.semanticErrors.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getErrorMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Structural Errors'\n                                                                    data={this.getRowData(\n                                                                        reportObject.validationErrors.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {{}.hasOwnProperty.call(reportObject, 'warnings')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getErrorMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Best Practices Issues'\n                                                                    data={this.getRowData(\n                                                                        reportObject.warnings.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {!{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                        && !{}.hasOwnProperty.call(reportObject, 'semanticErrors')\n                                        && !{}.hasOwnProperty.call(reportObject, 'warnings')\n                                        && (\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.OASNoIssuesFound'\n                                                    defaultMessage='No Issues Found'\n                                                />\n                                            </Typography>\n                                        )}\n                                    </div>\n                                </Paper>\n                            </div>\n                        }\n                        {{}.hasOwnProperty.call(reportObject, 'security')\n                            && (\n                                <div className={classes.paperDiv}>\n                                    <Paper elevation={1} className={classes.rootPaper}>\n                                        <div>\n                                            <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.Security'\n                                                    defaultMessage='Security'\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.SecurityNumOfIssues'\n                                                    defaultMessage='{securityNumOfIssuesText} {securityNumOfIssues}'\n                                                    values={{\n                                                        securityNumOfIssuesText: (\n                                                            <strong>Number of Issues:</strong>\n                                                        ),\n                                                        securityNumOfIssues: reportObject.security.issueCounter,\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.SecurityScore'\n                                                    defaultMessage='{securityScoreText} {securityScore}  / 30'\n                                                    values={{\n                                                        securityScoreText: (\n                                                            <strong>Score:</strong>\n                                                        ),\n                                                        securityScore: (\n                                                            (Math.round(reportObject.security.score * 100) / 100)\n                                                        ),\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <>\n                                                <Typography variant='body1'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi.securityCriticality'\n                                                        defaultMessage='{securityCriticalityText} {securityCriticality}'\n                                                        values={{\n                                                            securityCriticalityText: (\n                                                                <strong>Severity:</strong>\n                                                            ),\n                                                            securityCriticality: (\n                                                                // eslint-disable-next-line max-len\n                                                                this.criticalityObject[reportObject.security.criticality]\n                                                            ),\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        placement='right'\n                                                        classes={{\n                                                            tooltip: classes.htmlTooltip,\n                                                        }}\n                                                        title={(\n                                                            <>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                    defaultMessage='Severity ranges from: '\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                    defaultMessage='1. INFO'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                    defaultMessage='2. LOW'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                    defaultMessage='3. MEDIUM'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                    defaultMessage='4. HIGH'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                    defaultMessage='5. CRITICAL'\n                                                                />\n                                                                <br />\n                                                            </>\n                                                        )}\n                                                    >\n                                                        <Button className={classes.helpButton}>\n                                                            <HelpOutline className={classes.helpIcon} />\n                                                        </Button>\n                                                    </Tooltip>\n                                                </Typography>\n                                            </>\n                                            {(reportObject.security.issueCounter !== 0)\n                                            && (\n                                                <div>\n                                                    <hr />\n                                                    <Typography variant='body1'>\n                                                        <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                            <MUIDataTable\n                                                                title='Issues'\n                                                                data={this.getRowData(\n                                                                    reportObject.security.issues,\n                                                                    'Security',\n                                                                    'normal',\n                                                                )}\n                                                                columns={columns}\n                                                                options={options}\n                                                            />\n                                                        </MuiThemeProvider>\n                                                    </Typography>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </Paper>\n                                </div>\n                            )}\n                        {{}.hasOwnProperty.call(reportObject, 'data')\n                            && (\n                                <div className={classes.paperDiv}>\n                                    <Paper elevation={1} className={classes.rootPaper}>\n                                        <div>\n                                            <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidation'\n                                                    defaultMessage='Data Validation'\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidationNumOfIssues'\n                                                    defaultMessage='{dataNumOfIssuesText} {dataNumOfIssues}'\n                                                    values={{\n                                                        dataNumOfIssuesText: (\n                                                            <strong>Number of Issues:</strong>\n                                                        ),\n                                                        dataNumOfIssues: reportObject.data.issueCounter,\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidationScore'\n                                                    defaultMessage='{dataScoreText} {dataScore}  / 70'\n                                                    values={{\n                                                        dataScoreText: (\n                                                            <strong>Score:</strong>\n                                                        ),\n                                                        dataScore: (\n                                                            (Math.round(reportObject.data.score * 100) / 100)\n                                                        ),\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <>\n                                                <Typography variant='body1'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi.dataCriticality'\n                                                        defaultMessage='{dataCriticalityText} {dataCriticality}'\n                                                        values={{\n                                                            dataCriticalityText: (\n                                                                <strong>Severity:</strong>\n                                                            ),\n                                                            dataCriticality: (\n                                                                this.criticalityObject[reportObject.data.criticality]\n                                                            ),\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        placement='right'\n                                                        classes={{\n                                                            tooltip: classes.htmlTooltip,\n                                                        }}\n                                                        title={(\n                                                            <>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                    defaultMessage='Severity ranges from: '\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                    defaultMessage='1. INFO'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                    defaultMessage='2. LOW'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                    defaultMessage='3. MEDIUM'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                    defaultMessage='4. HIGH'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                    defaultMessage='5. CRITICAL'\n                                                                />\n                                                                <br />\n                                                            </>\n                                                        )}\n                                                    >\n                                                        <Button className={classes.helpButton}>\n                                                            <HelpOutline className={classes.helpIcon} />\n                                                        </Button>\n                                                    </Tooltip>\n                                                </Typography>\n                                            </>\n                                            {(reportObject.data.issueCounter !== 0)\n                                            && (\n                                                <div>\n                                                    <hr />\n                                                    <Typography variant='body1'>\n                                                        <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                            <MUIDataTable\n                                                                title='Issues'\n                                                                data={this.getRowData(\n                                                                    reportObject.data.issues,\n                                                                    'Data Validation',\n                                                                    'normal',\n                                                                )}\n                                                                columns={columns}\n                                                                options={options}\n                                                            />\n                                                        </MuiThemeProvider>\n                                                    </Typography>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </Paper>\n                                </div>\n                            )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nAPISecurityAudit.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withRouter(injectIntl(withStyles(styles)(APISecurityAudit)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Typography } from '@material-ui/core';\nimport CloudUploadRounded from '@material-ui/icons/CloudUploadRounded';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api.js';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ProvideWSDL from 'AppComponents/Apis/Create/WSDL/Steps/ProvideWSDL';\nimport ProvideOpenAPI from '../../Create/OpenAPI/Steps/ProvideOpenAPI';\nimport ProvideGraphQL from '../../Create/GraphQL/Steps/ProvideGraphQL';\n\n\nconst useStyles = makeStyles(() => ({\n    importDefinitionDialogHeader: {\n        fontWeight: '600',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ImportDefinition(props) {\n    const { setSchemaDefinition } = props;\n    const classes = useStyles();\n    const [openAPIDefinitionImport, setOpenAPIDefinitionImport] = useState(false);\n    const [isImporting, setIsImporting] = useState(false);\n    const [api] = useAPI();\n    const intl = useIntl();\n    const isGraphQL = api.isGraphql();\n    const isSOAP = api.isSOAP();\n\n    const handleAPIDefinitionImportOpen = () => {\n        setOpenAPIDefinitionImport(true);\n    };\n\n    const handleAPIDefinitionImportCancel = () => {\n        setOpenAPIDefinitionImport(false);\n    };\n\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'inputValue':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    content: value.content,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: '',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n        mode: 'update',\n    });\n\n    /**\n     * Updates OpenAPI definition\n     */\n    function updateOASDefinition() {\n        setIsImporting(true);\n        const {\n            inputValue, inputType, content,\n        } = apiInputs;\n        const isFileInput = inputType === 'file';\n        if (isFileInput) {\n            const reader = new FileReader();\n            const contentType = inputValue.type.includes('yaml') ? 'yaml ' : 'json';\n            reader.onloadend = (event) => {\n                setSchemaDefinition(event.currentTarget.result, contentType);\n            };\n            reader.readAsText(inputValue);\n        }\n        const newAPI = new API();\n        const promisedResponse = isFileInput ? newAPI.updateAPIDefinitionByFile(api.id, inputValue)\n            : newAPI.updateAPIDefinitionByUrl(api.id, inputValue);\n        promisedResponse\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.api.definition.updated.successfully',\n                    defaultMessage: 'API Definition Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                if (!isFileInput) {\n                    // Test to starting the content with'{' character ignoring white spaces\n                    const isJSONRegex = RegExp(/^\\s*{/); // TODO: not a solid test need to support from REST API ~tmkb\n                    const contentType = isJSONRegex.test(content) ? 'json' : 'yaml';\n                    setSchemaDefinition(content, contentType);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                    defaultMessage: 'Error while updating the API Definition',\n                }));\n            }).finally(() => setIsImporting(false));\n    }\n\n    /**\n     * Update the graphQL api with its operation\n     * @param {*}  api\n     * @param {*}  graphQLInfo\n     */\n    function updateGraphQLAPIDefinition(graphQLSchema) {\n        const promisedAPI = api.updateGraphQLAPIDefinition(api.id, graphQLSchema);\n        promisedAPI\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.graphQLDefinition.updated.successfully',\n                    defaultMessage: 'Schema Definition Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                setSchemaDefinition(graphQLSchema);\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.updating.graphQL.schema',\n                    defaultMessage: 'Error while updating GraphQL schema',\n                }));\n            });\n    }\n\n\n    /**\n     * Updates GraphQL schema definition\n     */\n    function updateGraphQLSchema() {\n        const {\n            inputValue,\n        } = apiInputs;\n\n        const promisedValidation = API.validateGraphQLFile(inputValue);\n        promisedValidation\n            .then((response) => {\n                const { isValid, graphQLInfo } = response.obj;\n                if (isValid === true) {\n                    api.operations = graphQLInfo.operations;\n                    updateGraphQLAPIDefinition(graphQLInfo.graphQLSchema.schemaDefinition);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Error.while.validating.the.imported.graphQLSchema',\n                    defaultMessage: 'Error while validating the imported schema',\n                }));\n            });\n    }\n\n    /**\n     * Updates WSDL definition\n     */\n    function updateWSDL() {\n        const {\n            inputType, inputValue,\n        } = apiInputs;\n        const isFileInput = inputType === 'file';\n        let promisedAPI;\n        if (isFileInput) {\n            promisedAPI = api.updateWSDLByFileOrArchive(api.id, inputValue);\n        } else {\n            promisedAPI = api.updateWSDLByUrl(api.id, inputValue);\n        }\n        promisedAPI\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.ImportDefinition.WSDL.updated.successfully',\n                    defaultMessage: 'WSDL Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                setSchemaDefinition(isFileInput && inputValue.type === 'application/zip');\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.ImportDefinition.error.updating.WSDL',\n                    defaultMessage: 'Error while updating WSDL',\n                }));\n            });\n    }\n\n    /**\n     * Handles API definition import\n     */\n    function importDefinition() {\n        if (isGraphQL) {\n            updateGraphQLSchema();\n        } else if (isSOAP) {\n            updateWSDL();\n        } else {\n            updateOASDefinition();\n        }\n    }\n    /**\n     *\n     * Set the validity of the API definition imports\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    let dialogTitle = (\n        <FormattedMessage\n            id='Apis.Details.APIDefinition.APIDefinition.import.definition.oas'\n            defaultMessage='Import OpenAPI Definition'\n        />\n    );\n    let dialogContent = (\n        <ProvideOpenAPI\n            onValidate={handleOnValidate}\n            apiInputs={apiInputs}\n            inputsDispatcher={inputsDispatcher}\n        />\n    );\n    let btnText = (\n        <FormattedMessage\n            id='Apis.Details.APIDefinition.APIDefinition.import.definition'\n            defaultMessage='Import Definition'\n        />\n    );\n    if (isGraphQL) {\n        dialogTitle = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.definition.graphql'\n                defaultMessage='Import GraphQL Schema Definition'\n            />\n        );\n        dialogContent = (\n            <ProvideGraphQL\n                onValidate={handleOnValidate}\n                apiInputs={apiInputs}\n                inputsDispatcher={inputsDispatcher}\n            />\n        );\n    }\n    if (isSOAP) {\n        dialogTitle = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.definition.wsdl'\n                defaultMessage='Import WSDL'\n            />\n        );\n        dialogContent = (\n            <ProvideWSDL\n                onValidate={handleOnValidate}\n                apiInputs={apiInputs}\n                inputsDispatcher={inputsDispatcher}\n            />\n        );\n        btnText = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.wsdl'\n                defaultMessage='Import WSDL'\n            />\n        );\n    }\n\n    return (\n        <>\n            <Button\n                size='small'\n                className={classes.button}\n                onClick={handleAPIDefinitionImportOpen}\n                disabled={isRestricted(['apim:api_create'], api)}\n            >\n                <CloudUploadRounded className={classes.buttonIcon} />\n                {btnText}\n            </Button>\n            <Dialog onBackdropClick={setOpenAPIDefinitionImport} open={openAPIDefinitionImport}>\n                <DialogTitle>\n                    <Typography className={classes.importDefinitionDialogHeader}>\n                        {dialogTitle}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    {dialogContent}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAPIDefinitionImportCancel}>\n                        <FormattedMessage\n                            id='Apis.Details.APIDefinition.APIDefinition.import.definition.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        onClick={importDefinition}\n                        variant='contained'\n                        color='primary'\n                        disabled={!apiInputs.isFormValid || isImporting}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.APIDefinition.APIDefinition.import.definition.import'\n                            defaultMessage='Import'\n                        />\n                        {isImporting && <CircularProgress size={20} />}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nImportDefinition.propTypes = {\n    setSchemaDefinition: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport EditRounded from '@material-ui/icons/EditRounded';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport LockRounded from '@material-ui/icons/LockRounded';\nimport SwapHorizontalCircle from '@material-ui/icons/SwapHorizontalCircle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport yaml from 'js-yaml';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api.js';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport { withRouter } from 'react-router';\nimport json2yaml from 'json2yaml';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport APISecurityAudit from './APISecurityAudit';\nimport ImportDefinition from './ImportDefinition';\n\nconst EditorDialog = lazy(() => import('./SwaggerEditorDrawer' /* webpackChunkName: \"EditorDialog\" */));\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\n\nconst styles = (theme) => ({\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    swaggerEditorWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    topBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: theme.spacing(2),\n    },\n    converterWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        flex: '1',\n        fontSize: '0.6964285714285714rem',\n    },\n    downloadLink: {\n        color: 'black',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n});\n/**\n * This component holds the functionality of viewing the api definition content of an api. The initial view is a\n * read-only representation of the api definition file.\n * Users can either edit the content by clicking the 'Edit' button or upload a new api definition file by clicking\n * 'Import API Definition'.\n * */\nclass APIDefinition extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openEditor: false,\n            swagger: null,\n            swaggerModified: null,\n            graphQL: null,\n            format: null,\n            convertTo: null,\n            isAuditApiClicked: false,\n            securityAuditProperties: [],\n            isSwaggerValid: true,\n        };\n        this.handleNo = this.handleNo.bind(this);\n        this.handleOk = this.handleOk.bind(this);\n        this.openEditor = this.openEditor.bind(this);\n        this.transition = this.transition.bind(this);\n        this.closeEditor = this.closeEditor.bind(this);\n        this.hasJsonStructure = this.hasJsonStructure.bind(this);\n        this.getConvertToFormat = this.getConvertToFormat.bind(this);\n        this.onAuditApiClick = this.onAuditApiClick.bind(this);\n        this.onChangeFormatClick = this.onChangeFormatClick.bind(this);\n        this.openUpdateConfirmation = this.openUpdateConfirmation.bind(this);\n        this.updateSwaggerDefinition = this.updateSwaggerDefinition.bind(this);\n        this.onChangeSwaggerContent = this.onChangeSwaggerContent.bind(this);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const { settings } = this.context;\n        let promisedApi;\n        if (api.type === 'GRAPHQL') {\n            promisedApi = api.getSchema(api.id);\n        } else {\n            promisedApi = api.getSwagger(api.id);\n        }\n\n        this.setState({ securityAuditProperties: settings.securityAuditProperties });\n\n        promisedApi\n            .then((response) => {\n                if (api.type === 'GRAPHQL') {\n                    this.setState({\n                        graphQL: response.obj.schemaDefinition,\n                        format: 'txt',\n                    });\n                } else {\n                    this.setState({\n                        swagger: json2yaml.stringify(response.obj).replace('---\\n', ''),\n                        swaggerModified: json2yaml.stringify(response.obj).replace('---\\n', ''),\n                        format: 'yaml',\n                        convertTo: this.getConvertToFormat('yaml'),\n                    });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n\n    /**\n      * Set isAuditApiClicked to true when Audit API is clicked\n      */\n    onAuditApiClick() {\n        this.setState({ isAuditApiClicked: true });\n    }\n\n    /**\n     * Toggle the format of the api definition.\n     * JSON -> YAML, YAML -> JSON\n     */\n    onChangeFormatClick() {\n        const { format, swagger, convertTo } = this.state;\n        let formattedString = '';\n        if (convertTo === 'json') {\n            formattedString = JSON.stringify(yaml.load(swagger), null, 1);\n        } else {\n            formattedString = json2yaml.stringify(JSON.parse(swagger)).replace('---\\n', '');\n        }\n        this.setState({\n            swagger: formattedString,\n            swaggerModified: formattedString,\n            format: convertTo,\n            convertTo: format,\n        });\n    }\n\n    /**\n     * Method to handle swagger content change\n     *\n     * @param {string} modifiedContent : The modified swagger content.\n     * */\n    onChangeSwaggerContent(modifiedContent) {\n        const { format } = this.state;\n        /**\n         * Validate for the basic json/ yaml format.\n         * */\n        try {\n            if (format === 'json') {\n                JSON.parse(modifiedContent, null);\n            } else {\n                yaml.load(modifiedContent);\n            }\n            this.setState({ isSwaggerValid: true, swaggerModified: modifiedContent });\n        } catch (e) {\n            this.setState({ isSwaggerValid: false, swaggerModified: modifiedContent });\n        }\n    }\n\n    setSchemaDefinition = (schemaContent, contentType) => {\n        const { api } = this.props;\n        const isGraphql = api.isGraphql();\n        if (isGraphql) {\n            this.setState({ graphQL: schemaContent });\n        } else {\n            this.setState({\n                swagger: schemaContent,\n                swaggerModified: schemaContent,\n                convertTo: this.getConvertToFormat(contentType),\n                format: contentType,\n            });\n        }\n    };\n\n    /**\n     * Util function to get the format which the definition can be converted to.\n     * @param {*} format : The current format of definition.\n     * @returns {string} The possible conversion format.\n     */\n    getConvertToFormat(format) {\n        return format === 'json' ? 'yaml' : 'json';\n    }\n\n    /**\n     * Checks whether the swagger content is json type.\n     * @param {string} definition The swagger string.\n     * @return {boolean} Whether the content is a json or not.\n     * */\n    hasJsonStructure(definition) {\n        if (typeof definition !== 'string') return false;\n        try {\n            const result = JSON.parse(definition);\n            return result && typeof result === 'object';\n        } catch (err) {\n            return false;\n        }\n    }\n\n    /**\n     * Handles the yes button action of the save api definition confirmation dialog box.\n     */\n    handleOk() {\n        const { swaggerModified } = this.state;\n        this.setState({ openDialog: false }, () => this.updateSwaggerDefinition(swaggerModified, '', ''));\n    }\n\n    /**\n     * Handles the No button action of the save api definition confirmation dialog box.\n     */\n    handleNo() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Method to set the state for opening the swagger editor drawer.\n     * Swagger editor loads the definition content from the local storage. Hence we set the swagger content to the\n     * local storage.\n     * */\n    openEditor() {\n        this.setState({ openEditor: true });\n    }\n\n    /**\n     * Sets the state to close the swagger-editor drawer.\n     * */\n    closeEditor() {\n        this.setState({ openEditor: false });\n        const { intl, api, history } = this.props;\n        const { isAuditApiClicked } = this.state;\n        if (isAuditApiClicked === true) {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.APIDefinition.info.updating.auditapi',\n                defaultMessage: 'To reflect the changes made, you need to click Audit API',\n            }));\n            const redirectUrl = '/apis/' + api.id + '/api definition';\n            history.push(redirectUrl);\n        }\n    }\n\n    /**\n     * Handles the transition of the drawer.\n     * @param {object} props list of props\n     * @return {object} The Slide transition component\n     * */\n    transition(props) {\n        return <Slide direction='up' {...props} />;\n    }\n\n    /**\n     * Updates swagger content in the local storage.\n     * */\n    openUpdateConfirmation() {\n        this.setState({ openDialog: true });\n    }\n\n    /**\n     * Updates swagger definition of the api.\n     * @param {string} swaggerContent The swagger file that needs to be updated.\n     * @param {string} specFormat The current format of the definition\n     * @param {string} toFormat The format it can be converted to.\n     * */\n    updateSwaggerDefinition(swaggerContent, specFormat, toFormat) {\n        const { api, intl, updateAPI } = this.props;\n        let parsedContent = {};\n        if (this.hasJsonStructure(swaggerContent)) {\n            parsedContent = JSON.parse(swaggerContent);\n        } else {\n            try {\n                parsedContent = yaml.load(swaggerContent);\n            } catch (err) {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                    defaultMessage: 'Error occurred while updating the API Definition',\n                }));\n                return;\n            }\n        }\n        const promise = api.updateSwagger(parsedContent);\n        promise\n            .then((response) => {\n                const { endpointImplementationType } = api;\n                if (endpointImplementationType === 'INLINE') {\n                    api.generateMockScripts(api.id);\n                }\n                if (response) {\n                    Alert.success(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.APIDefinition.api.definition.updated.successfully',\n                        defaultMessage: 'API Definition updated successfully',\n                    }));\n                    if (specFormat && toFormat) {\n                        this.setState({ swagger: swaggerContent, format: specFormat, convertTo: toFormat });\n                    } else {\n                        this.setState({ swagger: swaggerContent });\n                    }\n                }\n                /*\n                 *updateAPI() will make a /GET call to get the latest api once the swagger definition is updated.\n                 *Otherwise, we need to refresh the page to get changes.\n                 */\n                updateAPI();\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                    defaultMessage: 'Error occurred while updating the API Definition',\n                }));\n            });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            swagger, graphQL, openEditor, openDialog, format, convertTo, notFound, isAuditApiClicked,\n            securityAuditProperties, isSwaggerValid, swaggerModified,\n        } = this.state;\n        const { classes, resourceNotFountMessage, api } = this.props;\n        let downloadLink;\n        let fileName;\n        let isGraphQL = 0;\n\n        if (graphQL !== null) {\n            downloadLink = 'data:text/' + format + ';charset=utf-8,' + encodeURIComponent(graphQL);\n            fileName = api.provider + '-' + api.name + '-' + api.version + '.graphql';\n            isGraphQL = 1;\n        } else {\n            downloadLink = 'data:text/' + format + ';charset=utf-8,' + encodeURIComponent(swagger);\n            fileName = 'swagger.' + format;\n        }\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n        };\n\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n        if (!swagger && !graphQL && api === 'undefined') {\n            return <Progress />;\n        }\n\n        return (\n            <>\n                <div className={classes.topBar}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4'>\n                            {graphQL ? (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.schema.definition'\n                                    defaultMessage='Schema Definition'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.api.definition'\n                                    defaultMessage='API Definition'\n                                />\n                            )}\n                        </Typography>\n                        {!(graphQL || api.type === 'APIProduct') && (\n                            <Button\n                                size='small'\n                                className={classes.button}\n                                onClick={this.openEditor}\n                                disabled={isRestricted(['apim:api_create'], api)}\n                            >\n                                <EditRounded className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.edit'\n                                    defaultMessage='Edit'\n                                />\n                            </Button>\n                        )}\n                        {api.type !== 'APIProduct' && (\n                            <ImportDefinition setSchemaDefinition={this.setSchemaDefinition} />\n                        )}\n                        <a className={classes.downloadLink} href={downloadLink} download={fileName}>\n                            <Button size='small' className={classes.button}>\n                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.download.definition'\n                                    defaultMessage='Download Definition'\n                                />\n                            </Button>\n                        </a>\n\n                        {(securityAuditProperties.apiToken && securityAuditProperties.collectionId)\n                            && (\n                                <Button size='small' className={classes.button} onClick={this.onAuditApiClick}>\n                                    <LockRounded className={classes.buttonIcon} />\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.APIDefinition.audit.api'\n                                        defaultMessage='Audit API'\n                                    />\n                                </Button>\n                            )}\n\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.update.not.allowed'\n                                    defaultMessage='Unauthorized: Insufficient permissions to update API Definition'\n                                />\n                            </Typography>\n                        )}\n                    </div>\n                    {isGraphQL === 0 && (\n                        <div className={classes.titleWrapper}>\n                            <Button size='small' className={classes.button} onClick={this.onChangeFormatClick}>\n                                <SwapHorizontalCircle className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.convert.to'\n                                    defaultMessage='Convert to'\n                                />\n                                {' '}\n                                {convertTo}\n                            </Button>\n                        </div>\n                    )}\n                </div>\n                <div>\n                    <Suspense fallback={<Progress />}>\n                        {isAuditApiClicked ? (\n                            <APISecurityAudit apiId={api.id} />\n                        ) : (\n                            <MonacoEditor\n                                language={format}\n                                width='100%'\n                                height='calc(100vh - 51px)'\n                                theme='vs-dark'\n                                value={swagger !== null ? swagger : graphQL}\n                                options={editorOptions}\n                            />\n                        )}\n                    </Suspense>\n                </div>\n                <Dialog fullScreen open={openEditor} onClose={this.closeEditor} TransitionComponent={this.transition}>\n                    <Paper square className={classes.popupHeader}>\n                        <IconButton\n                            className={classes.button}\n                            color='inherit'\n                            onClick={this.closeEditor}\n                            aria-label={(\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.btn.close'\n                                    defaultMessage='Close'\n                                />\n                            )}\n                        >\n                            <Icon>close</Icon>\n                        </IconButton>\n\n                        <Button\n                            className={classes.button}\n                            variant='contained'\n                            color='primary'\n                            onClick={this.openUpdateConfirmation}\n                            disabled={!isSwaggerValid}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.documents.swagger.editor.update.content'\n                                defaultMessage='Update Content'\n                            />\n                        </Button>\n                    </Paper>\n                    <Suspense\n                        fallback={(\n                            <div>\n                                (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.loading'\n                                    defaultMessage='Loading...'\n                                />\n                                )\n                            </div>\n                        )}\n                    >\n                        <EditorDialog\n                            swagger={swaggerModified}\n                            language={format}\n                            onEditContent={this.onChangeSwaggerContent}\n                        />\n                    </Suspense>\n                </Dialog>\n                <Dialog\n                    open={openDialog}\n                    onClose={this.handleNo}\n                    aria-labelledby='alert-dialog-title'\n                    aria-describedby='alert-dialog-description'\n                >\n                    <DialogTitle id='alert-dialog-title'>\n                        <Typography align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.save.api.definition'\n                                defaultMessage='Save API Definition'\n                            />\n                        </Typography>\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='alert-dialog-description'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.api.definition.save.confirmation'\n                                defaultMessage={\n                                    'Are you sure you want to save the API Definition? This might affect the'\n                                    + ' existing resources.'\n                                }\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleNo} color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.btn.no'\n                                defaultMessage='CANCEL'\n                            />\n                        </Button>\n                        <Button onClick={this.handleOk} color='primary' autoFocus variant='contained'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.btn.yes'\n                                defaultMessage='SAVE'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nAPIDefinition.contextType = AppContext;\nAPIDefinition.propTypes = {\n    classes: PropTypes.shape({\n        button: PropTypes.shape({}),\n        popupHeader: PropTypes.shape({}),\n        buttonIcon: PropTypes.shape({}),\n        root: PropTypes.shape({}),\n        topBar: PropTypes.shape({}),\n        titleWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n        converterWrapper: PropTypes.shape({}),\n        dropzone: PropTypes.shape({}),\n        downloadLink: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({\n        updateSwagger: PropTypes.func,\n        getSwagger: PropTypes.func,\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.object,\n    }).isRequired,\n    resourceNotFountMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\nexport default withRouter(injectIntl(withStyles(styles, { withTheme: true })(APIDefinition)));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport API from 'AppData/api.js';\nimport { withRouter } from 'react-router';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport ImportDefinition from './ImportDefinition';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\n\nconst styles = (theme) => ({\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    swaggerEditorWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    topBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: theme.spacing(2),\n    },\n    converterWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        flex: '1',\n        fontSize: '0.6964285714285714rem',\n    },\n    downloadLink: {\n        color: 'black',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n});\n\n/**\n * This component holds the functionality of viewing the WSDL content of an api. The view is a\n * read-only representation of the WSDL file. If the API has a WSDL ZIP archive, the preview will not be\n * available and it will be indicated in the UI.\n * Users can upload a new api definition file by clicking 'Import WSDL'.\n *\n * @class WSDL\n * @extends {Component}\n * */\nclass WSDL extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isArchive: false,\n            wsdl: null,\n        };\n        this.loadWSDLInEditor = this.loadWSDLInEditor.bind(this);\n        this.handleDownloadWSDLZip = this.handleDownloadWSDLZip.bind(this);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        const { api, intl } = this.props;\n        const promisedWSDLInfo = api.getWSDLInfo(api.id);\n        promisedWSDLInfo\n            .then((response) => {\n                const wsdlType = response.obj.type;\n                if (wsdlType === 'WSDL') {\n                    this.loadWSDLInEditor(api);\n                } else {\n                    this.setState({ isArchive: true, wsdl: null });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.WSDL.error.loading.wsdl.info',\n                        defaultMessage: 'Error loading WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads and loads the API's WSDL in the editor. If the WSDL is ZIP, the operation is skipped\n     * and it is indicated in the UI.\n     *\n     *  @param {boolean} isArchive states whether the WSDL is a ZIP\n     */\n    setSchemaDefinition = (isArchive) => {\n        this.setState({ isArchive, wsdl: null });\n        if (!isArchive) {\n            const { api } = this.props;\n            this.loadWSDLInEditor(api);\n        }\n    }\n\n    /**\n     * Downloads and loads the API's WSDL in the editor.\n     *\n     * @param {*} api API\n     */\n    loadWSDLInEditor(api) {\n        const { intl } = this.props;\n        const promisedApi = api.getWSDL(api.id);\n\n        promisedApi\n            .then((response) => {\n                response.data.text().then((text) => {\n                    this.setState({\n                        isArchive: false,\n                        wsdl: text,\n                    });\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.WSDL.error.loading.wsdl',\n                        defaultMessage: 'Error loading WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads WSDL ZIP file.\n     *\n     */\n    handleDownloadWSDLZip() {\n        const { api, intl } = this.props;\n        const wsdlZipContent = api.getWSDL(api.id);\n        wsdlZipContent.then((response) => {\n            Utils.forceDownload(response);\n        })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.WSDL.download.error',\n                    defaultMessage: 'Error downloading WSDL ZIP file',\n                }));\n            });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            wsdl, notFound, isArchive,\n        } = this.state;\n        const { classes, resourceNotFountMessage, api } = this.props;\n\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n            cursorStyle: 'line-thin',\n        };\n\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        if (!isArchive && !wsdl) {\n            return <Progress />;\n        }\n\n        let downloadWidget;\n        const downloadButtonContent = (\n            <>\n                <CloudDownloadRounded className={classes.buttonIcon} />\n                <FormattedMessage\n                    id='Apis.Details.APIDefinition.WSDL.download.definition'\n                    defaultMessage='Download WSDL'\n                />\n            </>\n        );\n        if (!isArchive) {\n            const downloadLink = 'data:text/xml;charset=utf-8,' + encodeURIComponent(wsdl);\n            const fileName = api.name + '-' + api.version + '.wsdl';\n            downloadWidget = (\n                <a className={classes.downloadLink} href={downloadLink} download={fileName}>\n                    <Button size='small' className={classes.button}>\n                        {downloadButtonContent}\n                    </Button>\n                </a>\n            );\n        } else {\n            downloadWidget = (\n                <Button size='small' className={classes.button} onClick={this.handleDownloadWSDLZip}>\n                    {downloadButtonContent}\n                </Button>\n            );\n        }\n\n        return (\n            <>\n                <div className={classes.topBar}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.WSDL.wsdl.definition'\n                                defaultMessage='WSDL Definition'\n                            />\n                        </Typography>\n                        <ImportDefinition setSchemaDefinition={this.setSchemaDefinition} />\n                        {downloadWidget}\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.WSDL.update.not.allowed'\n                                    defaultMessage='Unauthorized: Insufficient permissions to update WSDL Definition'\n                                />\n                            </Typography>\n                        )}\n                    </div>\n                </div>\n                <div>\n                    <Suspense fallback={<Progress />}>\n                        {isArchive ? (\n                            <InlineMessage type='info' height={80} className={classes.emptyBox}>\n                                <div className={classes.contentWrapper}>\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.WSDL.preview.not.available'\n                                            defaultMessage='The API has a WSDL ZIP hence the preview is not available.'\n                                        />\n                                    </Typography>\n                                </div>\n                            </InlineMessage>\n                        ) : (\n                            <MonacoEditor\n                                language='xml'\n                                width='100%'\n                                height='calc(100vh - 51px)'\n                                theme='vs-dark'\n                                value={wsdl}\n                                options={editorOptions}\n                            />\n                        )}\n\n                    </Suspense>\n                </div>\n            </>\n        );\n    }\n}\n\nWSDL.contextType = AppContext;\nWSDL.propTypes = {\n    classes: PropTypes.shape({\n        button: PropTypes.shape({}),\n        popupHeader: PropTypes.shape({}),\n        buttonIcon: PropTypes.shape({}),\n        root: PropTypes.shape({}),\n        topBar: PropTypes.shape({}),\n        titleWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n        converterWrapper: PropTypes.shape({}),\n        dropzone: PropTypes.shape({}),\n        downloadLink: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({\n        updateSwagger: PropTypes.func,\n        getSwagger: PropTypes.func,\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.object,\n    }).isRequired,\n    resourceNotFountMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default withRouter(injectIntl(withStyles(styles, { withTheme: true })(WSDL)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst suggestions = {\n    common: [\n        {\n            label: 'Overview',\n            route: 'overview',\n        },\n        {\n            label: 'MetaData',\n            route: 'overview',\n        },\n        {\n            label: 'Runtime Configurations',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Transport Level Security',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Mutual SSL',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Design Configurations',\n            route: 'configuration',\n        },\n        {\n            label: 'Manage SSL Certificates',\n            route: 'configuration',\n        },\n        {\n            label: 'HTTP HTTPS enable disable',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Application Level Security',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable OAuth2',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable Basic Auth',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable Api Key',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Authorization Headers',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'CORS Configuration',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Backend Throughput',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Message Mediation',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Response',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Request',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Backend',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Access Control Allow Origins',\n            route: 'configuration',\n        },\n        {\n            label: 'Access Control Allow Headers',\n            route: 'configuration',\n        },\n        {\n            label: 'Access Control Allow Credentials',\n            route: 'configuration',\n        },\n        {\n            label: 'Response caching',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Publisher Access Control',\n            route: 'configuration',\n        },\n        {\n            label: 'Developer Portal Visibility',\n            route: 'configuration',\n        },\n        {\n            label: 'Tags',\n            route: 'configuration',\n        },\n        {\n            label: 'Default Version',\n            route: 'configuration',\n        },\n        {\n            label: 'Image',\n            route: 'configuration',\n        },\n        {\n            label: 'Description',\n            route: 'configuration',\n        },\n        {\n            label: 'Documents',\n            route: 'documents',\n        },\n        {\n            label: 'Add New Documents',\n            route: 'documents',\n        },\n        {\n            label: 'API Help',\n            route: 'documents',\n        },\n        {\n            label: 'Markdown Documents',\n            route: 'documents',\n        },\n        {\n            label: 'Business Information',\n            route: 'business info',\n        },\n        {\n            label: 'Business Owner',\n            route: 'business info',\n        },\n        {\n            label: 'Technical Owner',\n            route: 'business info',\n        },\n        {\n            label: 'Properties',\n            route: 'business info',\n        },\n        {\n            label: 'Subscriptions',\n            route: 'subscriptions',\n        },\n        {\n            label: 'Subscription Policies',\n            route: 'subscriptions',\n        },\n        {\n            label: 'Subscription Availability',\n            route: 'subscriptions',\n        },\n    ],\n    apiOnly: [\n        {\n            label: 'API Gateways',\n            route: 'environments',\n        },\n        {\n            label: 'Microgateway Labels',\n            route: 'environments',\n        },\n        {\n            label: 'Environments',\n            route: 'environments',\n        },\n        {\n            label: 'Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Publish API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Block API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Depricate API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Change Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Deploy as a Prototype API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Requirements',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Mediation Policies',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Monetization',\n            route: 'monetization',\n        },\n        {\n            label: 'Monetization Properties',\n            route: 'monetization',\n        },\n        {\n            label: 'Commercial Policies',\n            route: 'monetization',\n        },\n        {\n            label: 'Create New Version',\n            route: 'new_version',\n        },\n        {\n            label: 'Prototyped API',\n            route: 'endpoints',\n        },\n        {\n            label: 'AWS Lambda Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/HTTPS Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/SOAP Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Dynamic Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoint Security',\n            route: 'endpoints',\n        },\n        {\n            label: 'Certificates',\n            route: 'endpoints',\n        },\n        {\n            label: 'Production Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Sandbox Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Failover Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Load Balance Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Import API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Download API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Import Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Download Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Resources',\n            route: 'resources',\n        },\n        {\n            label: 'Resources Configuration',\n            route: 'resources',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'resources',\n        },\n        {\n            label: 'Operation Governance',\n            route: 'resources',\n        },\n        {\n            label: 'Scopes',\n            route: 'scopes',\n        },\n        {\n            label: 'Add New Scope',\n            route: 'scopes',\n        },\n        {\n            label: 'Schema validation',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Properties',\n            route: 'properties',\n        },\n    ],\n    productOnly: [\n        {\n            label: 'Product only feature',\n            route: 'configuration',\n        },\n        {\n            label: 'API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Import API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Download API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Import Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Download Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Resources',\n            route: 'resources',\n        },\n        {\n            label: 'Resources Configuration',\n            route: 'resources',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'resources',\n        },\n        {\n            label: 'Operation Governance',\n            route: 'resources',\n        },\n        {\n            label: 'Schema validation',\n            route: 'runtime-configuration',\n        },\n    ],\n    graphqlOnly: [\n        {\n            label: 'Operations',\n            route: 'operations',\n        },\n        {\n            label: 'Operation Type',\n            route: 'operations',\n        },\n        {\n            label: 'Operations Configuration',\n            route: 'operations',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'operations',\n        },\n        {\n            label: 'Schema Definition',\n            route: 'schema definition',\n        },\n        {\n            label: 'Scopes',\n            route: 'scopes',\n        },\n        {\n            label: 'Add New Scope',\n            route: 'scopes',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Environments',\n            route: 'environments',\n        },\n        {\n            label: 'API Gateways',\n            route: 'environments',\n        },\n        {\n            label: 'Microgateway Labels',\n            route: 'environments',\n        },\n        {\n            label: 'Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Publish API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Block API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Depricate API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Change Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Deploy as a Prototype API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Requirements',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Monetization',\n            route: 'monetization',\n        },\n        {\n            label: 'Monetization Properties',\n            route: 'monetization',\n        },\n        {\n            label: 'Commercial Policies',\n            route: 'monetization',\n        },\n        {\n            label: 'Create New Version',\n            route: 'new_version',\n        },\n        {\n            label: 'Prototyped API',\n            route: 'endpoints',\n        },\n        {\n            label: 'AWS Lambda Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/HTTPS Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/SOAP Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Dynamic Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoint Security',\n            route: 'endpoints',\n        },\n        {\n            label: 'Certificates',\n            route: 'endpoints',\n        },\n        {\n            label: 'Production Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Sandbox Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Failover Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Load Balance Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Properties',\n            route: 'properties',\n        },\n    ],\n};\nexport default suggestions;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint object-shorthand: 0 */\n/* eslint jsx-a11y/click-events-have-key-events: 0 */\n\n/* eslint no-unused-expressions: 0 */\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport suggestions from './RouteMappings';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: theme.zIndex.goToSearch,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n    linkButton: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        padding: 10,\n        cursor: 'pointer',\n        minWidth: 30,\n    },\n    goToWrapper: {\n        position: 'relative',\n    },\n    downshiftWrapper: {\n        position: 'absolute',\n        padding: theme.spacing(1),\n        right: 60,\n        top: 0,\n        width: 300,\n        background: 'white',\n        border: 'solid 1px #ccc',\n        borderRadius: 5,\n    },\n}));\n\n/**\n * Method to render the input of the user\n * @param {*} inputProps inputProps\n * @returns {*} TextField\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n\n    return (\n        <TextField\n            autoFocus\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    /**\n     * Override or extend the styles applied to the component.\n     */\n    classes: PropTypes.shape({}).isRequired,\n    InputProps: PropTypes.shape({}).isRequired,\n};\n\n/**\n * Method to render the suggestions\n * @param {*} suggestionProps suggestionProps\n * @returns {*} ListItem list of suggestions\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, api, isAPIProduct, handleClickAway,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n\n    const route = (isAPIProduct\n        ? (`/api-products/${api.id}/${suggestion.route}`)\n        : (`/apis/${api.id}/${suggestion.route}`));\n    return (\n        <Link\n            to={route}\n            onClick={handleClickAway}\n        >\n            <ListItem\n                key={suggestion.label}\n                {...itemProps}\n                selected={isHighlighted}\n                button\n                aria-haspopup='true'\n                aria-controls='lock-menu'\n                aria-label='when device is locked'\n            >\n                <ListItemText primary={suggestion.label} secondary={suggestion.route} />\n            </ListItem>\n        </Link>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    itemProps: PropTypes.shape({}).isRequired,\n    selectedItem: PropTypes.string.isRequired,\n    suggestion: PropTypes.shape({\n        label: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\n/**\n * Method to retrieve suggestions\n * @param {*} value Value of suggestion\n * @param {*} isAPIProduct Boolean to check if it is an APIProduct\n * @param {*} param2 showEmpty\n * @returns {*} filter\n */\nfunction getSuggestions(value, isAPIProduct, isGraphQL, { showEmpty = false } = {}) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n    const newSuggestions = [...suggestions.common];\n\n    if (isAPIProduct) {\n        newSuggestions.push(...suggestions.productOnly);\n    } else if (isGraphQL) {\n        newSuggestions.push(...suggestions.graphqlOnly);\n    } else {\n        newSuggestions.push(...suggestions.apiOnly);\n    }\n\n    return inputLength === 0 && !showEmpty\n        ? []\n        : newSuggestions.filter((suggestion) => {\n            const keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n            if (keep) {\n                count += 1;\n            }\n\n            return keep;\n        });\n}\n\n\n/**\n * Method to render the GoTo search feature\n * @param {*} props props param\n * @returns {*} Downshift element\n */\nfunction GoTo(props) {\n    const { isAPIProduct, api } = props;\n    const classes = useStyles();\n    const [showSearch, setShowSearch] = useState(false);\n    let isGraphQL = false;\n\n    if (api.type === 'GRAPHQL') {\n        isGraphQL = true;\n    }\n    const toggleSearch = () => {\n        setShowSearch(!showSearch);\n    };\n    const handleClickAway = () => {\n        setShowSearch(false);\n    };\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <div className={classes.goToWrapper}>\n                <a className={classes.linkButton} onClick={toggleSearch}>\n                    <Icon>find_in_page</Icon>\n                    <Typography variant='caption'>\n                        <FormattedMessage id='Apis.Details.GoTo.GoTo.btn' defaultMessage='Go To' />\n                    </Typography>\n                </a>\n                {showSearch && (\n                    <div className={classes.downshiftWrapper}>\n                        <Downshift id='downshift-simple'>\n                            {({\n                                getInputProps,\n                                getItemProps,\n                                getLabelProps,\n                                getMenuProps,\n                                highlightedIndex,\n                                inputValue,\n                                isOpen,\n                                selectedItem,\n                            }) => {\n                                const { onBlur, onFocus, ...inputProps } = getInputProps({\n                                    placeholder: 'Type what you want to do..',\n                                });\n\n                                return (\n                                    <div className={classes.container}>\n                                        {renderInput({\n                                            fullWidth: true,\n                                            classes,\n                                            label: 'Go to menu item',\n                                            InputLabelProps: getLabelProps({ shrink: true }),\n                                            InputProps: { onBlur, onFocus },\n                                            inputProps,\n                                        })}\n\n                                        <div {...getMenuProps()}>\n                                            {isOpen ? (\n                                                <Paper className={classes.paper} square>\n                                                    {getSuggestions(inputValue, isAPIProduct, isGraphQL)\n                                                        .map((suggestion, index) => renderSuggestion({\n                                                            suggestion,\n                                                            index,\n                                                            itemProps: getItemProps({ item: suggestion.label }),\n                                                            highlightedIndex,\n                                                            selectedItem,\n                                                            handleClickAway: handleClickAway,\n                                                            ...props,\n                                                        }))}\n                                                </Paper>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                );\n                            }}\n                        </Downshift>\n                    </div>\n                )}\n            </div>\n        </ClickAwayListener>\n    );\n}\n\nGoTo.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default GoTo;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nimport LibraryAdd from '@material-ui/icons/LibraryAdd';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\nimport { resourceMethod, resourcePath, ScopeValidation } from 'AppData/ScopeValidation';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst styles = (theme) => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    createNewVersionWrapper: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    createNewVersion: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        color: theme.custom.createNewVersionButtonColor || 'inherit',\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n});\n\n/**\n *\n * Function to create a 'CreateNewVersion' button\n *\n * @param {any} props props\n * @returns {*} React CreateNewVersion function component\n * @constructor\n */\nfunction CreateNewVersionButton(props) {\n    const { api, classes } = props;\n    return (\n        <>\n            {/* allowing create new version based on scopes */}\n            <ScopeValidation resourceMethod={resourceMethod.POST} resourcePath={resourcePath.API_COPY}>\n                <div className={classes.createNewVersionWrapper}>\n                    <VerticalDivider height={70} />\n                    <Link\n                        className={classes.createNewVersion}\n                        to={'/apis/' + api.id + '/new_version'}\n                        style={{ minWidth: 95 }}\n                    >\n\n                        <div>\n                            <LibraryAdd />\n                        </div>\n                        <Typography variant='caption'>\n                            <FormattedMessage\n                                id='Apis.Details.components.CreateNewVersionButton.create.new.version'\n                                defaultMessage='Create New Version'\n                            />\n                        </Typography>\n                    </Link>\n                </div>\n            </ScopeValidation>\n        </>\n    );\n}\n\nCreateNewVersionButton.propTypes = {\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(CreateNewVersionButton));\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport ThumbnailView from 'AppComponents/Apis/Listing/components/ImageGenerator/ThumbnailView';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport GoTo from 'AppComponents/Apis/Details/GoTo/GoTo';\nimport API from 'AppData/api';\nimport DeleteApiButton from './DeleteApiButton';\nimport CreateNewVersionButton from './CreateNewVersionButton';\n\n\nconst styles = (theme) => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    viewInStoreLauncher: {\n        display: 'flex',\n        flexDirection: 'column',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        textAlign: 'center',\n        justifyContent: 'center',\n        height: 70,\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n    dateWrapper: {\n        flex: 1,\n        alignSelf: 'center',\n    },\n    lastUpdatedTypography: {\n        display: 'inline-block',\n        minWidth: 30,\n    },\n    apiName: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    downloadApi: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        height: 70,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    downloadApiFlex: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\n\nconst APIDetailsTopMenu = (props) => {\n    const {\n        classes, theme, api, isAPIProduct, imageUpdate, intl,\n    } = props;\n    const isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.lifeCycleStatus);\n    /**\n * The component for advanced endpoint configurations.\n * @param {string} name The name of the\n * @param {string} version Version of the API\n * @param {string} provider Provider of the API\n * @param {string} format Weather to recive files in YALM of JSON format\n * @returns {zip} Zpi file containing the API directory.\n */\n    function exportAPI() {\n        const restApi = new API();\n        return restApi.exportApi(api.id).then((zipFile) => {\n            return Utils.forceDownload(zipFile);\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.components.APIDetailsTopMenu.error',\n                    defaultMessage: 'Something went wrong while downloading the API.',\n                }));\n            }\n            console.error(error);\n        });\n    }\n\n    const isDownlodable = ['API'].includes(api.apiType);\n    const { settings, user } = useAppContext();\n    let apiType = 'API';\n    if (isAPIProduct) {\n        apiType = 'PRODUCT';\n    }\n    const { tenantList } = useContext(ApiContext);\n    const userNameSplit = user.name.split('@');\n    const tenantDomain = userNameSplit[userNameSplit.length - 1];\n    let devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview`;\n    if (tenantList && tenantList.length > 0) {\n        devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview?tenant=${tenantDomain}`;\n    }\n    // todo: need to support rev proxy ~tmkb\n    return (\n        <div className={classes.root}>\n            <Link to={isAPIProduct ? '/api-products' : '/apis'} className={classes.backLink}>\n                <KeyboardArrowLeft className={classes.backIcon} />\n                <div className={classes.backText}>\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.back.to.listing'\n                        defaultMessage='BACK TO {break} {apiType}s'\n                        values={{ break: <br />, apiType }}\n                    />\n                </div>\n            </Link>\n            <VerticalDivider height={70} />\n            <ThumbnailView api={api} width={70} height={50} imageUpdate={imageUpdate} />\n            <div style={{ marginLeft: theme.spacing(1), maxWidth: 500 }}>\n                <Typography variant='h4' className={classes.apiName}>\n                    {api.name}\n                    {' '}\n                    {isAPIProduct ? '' : ':' + api.version}\n                </Typography>\n                <Typography variant='caption' gutterBottom align='left'>\n                    Created by:\n                    {' '}\n                    {api.provider}\n                </Typography>\n            </div>\n            <VerticalDivider height={70} />\n            <div className={classes.infoItem}>\n                <Typography variant='subtitle1'>{isAPIProduct ? api.state : api.lifeCycleStatus}</Typography>\n                <Typography variant='caption' align='left'>\n                    State\n                </Typography>\n            </div>\n            <div className={classes.dateWrapper} />\n            <VerticalDivider height={70} />\n            <GoTo api={api} isAPIProduct={isAPIProduct} />\n            {(isVisibleInStore || isAPIProduct) && <VerticalDivider height={70} />}\n            {(isVisibleInStore || isAPIProduct) && (\n                <a\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href={devportalUrl}\n                    className={classes.viewInStoreLauncher}\n                    style={{ minWidth: 90 }}\n                >\n                    <div>\n                        <LaunchIcon />\n                    </div>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.components.APIDetailsTopMenu.view.in.portal'\n                            defaultMessage='View in Dev Portal'\n                        />\n                    </Typography>\n                </a>\n            )}\n            {/* Page error banner */}\n            {/* end of Page error banner */}\n            {isAPIProduct ? null : <CreateNewVersionButton buttonClass={classes.viewInStoreLauncher} api={api} />}\n            {(isDownlodable) && <VerticalDivider height={70} />}\n            <div className={classes.downloadApi}>\n                {(isDownlodable) && (\n                    <a\n                        onClick={exportAPI}\n                        onKeyDown='null'\n                        className={classes.downloadApiFlex}\n                    >\n                        <div>\n                            <CloudDownloadRounded />\n                        </div>\n                        <Typography variant='caption' align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDetailsTopMenu.download.api'\n                                defaultMessage='Download API'\n                            />\n                        </Typography>\n                    </a>\n                )}\n            </div>\n            <DeleteApiButton buttonClass={classes.viewInStoreLauncher} api={api} isAPIProduct={isAPIProduct} />\n        </div>\n    );\n};\n\nAPIDetailsTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    imageUpdate: PropTypes.number.isRequired,\n};\n\n\n// export default withStyles(styles, { withTheme: true })(APIDetailsTopMenu);\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(APIDetailsTopMenu));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api.js';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIValidation from 'AppData/APIValidation';\n\nconst styles = (theme) => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    paperRoot: {\n        padding: 20,\n        marginTop: 20,\n    },\n});\n\n/**\n *\n *\n * @class BusinessInformation\n * @extends {React.Component}\n */\nclass BusinessInformation extends React.Component {\n    /**\n     *Creates an instance of BusinessInformation.\n     * @param {*} props\n     * @memberof BusinessInformation\n     */\n    constructor(props) {\n        super(props);\n        const {\n            businessOwner,\n            businessOwnerEmail,\n            technicalOwner,\n            technicalOwnerEmail,\n        } = this.props.api.businessInformation;\n        this.state = {\n            businessOwner,\n            businessOwnerEmail,\n            technicalOwner,\n            technicalOwnerEmail,\n        };\n        this.isFormUpdated = false;\n        this.isValidBusinessOwnerEmail = true;\n        this.isValidTechnicalOwnerEmail = true;\n    }\n\n    isValid = () => {\n        return (this.isValidBusinessOwnerEmail && this.isValidTechnicalOwnerEmail && this.isFormUpdated);\n    }\n\n    handleChange = (name) => (event) => {\n        let { value } = event.target;\n        const { checked } = event.target;\n        if (name === 'accessControlRoles' || name === 'visibleRoles') {\n            value = value.split(',');\n        } else if (name === 'isDefaultVersion') {\n            value = value === 'yes';\n        } else if (name === 'responseCaching') {\n            value = checked ? 'Enabled' : 'Disabled';\n        }\n        // Validate whether given email addresses are valid.\n        if (name === 'businessOwnerEmail') {\n            const emailStatus = APIValidation.email.validate(value).error;\n            this.isValidBusinessOwnerEmail = (emailStatus === null || value === '');\n        }\n        if (name === 'technicalOwnerEmail') {\n            const emailStatus = APIValidation.email.validate(value).error;\n            this.isValidTechnicalOwnerEmail = (emailStatus === null || value === '');\n        }\n        this.isFormUpdated = true;\n        this.setState({ [name]: value });\n    };\n\n    /**\n     *\n     *\n     * @param {*} oldAPI\n     * @param {*} updateAPI\n     * @memberof BusinessInformation\n     */\n    handleSubmit(updateAPI) {\n        const {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        } = this.state;\n        const businessInformation = {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        };\n        updateAPI({ businessInformation });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns\n     * @memberof BusinessInformation\n     */\n    render() {\n        const { classes, api, updateAPI } = this.props;\n        const {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        } = this.state;\n\n        return (\n            <>\n                <Container maxWidth='md'>\n                    <Box mb={3}>\n                        <Typography variant='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.BusinessInformation.BusinessInformation.business.info'\n                                defaultMessage='Business Information'\n                            />\n                        </Typography>\n                        {api.apiType === API.CONSTS.APIProduct\n                            ? (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.BusinessInformation.BusinessInformation.APIProduct.sub.heading'\n                                        defaultMessage='Business Information of the API'\n                                    />\n                                </Typography>\n                            )\n                            : (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.BusinessInformation.BusinessInformation.sub.heading'\n                                        defaultMessage='Business Information of the API'\n                                    />\n                                </Typography>\n                            )}\n                    </Box>\n                    <Paper elevation={0}>\n                        <Box px={8} py={5}>\n                            <form noValidate autoComplete='off'>\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                    + '.business.owner.name'\n                                                }\n                                                defaultMessage='Business Owner'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.name.helper.text'\n                                            }\n                                            defaultMessage='Provide the name of the business owner'\n                                        />\n                                    )}\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    variant='outlined'\n                                    value={businessOwner}\n                                    onChange={this.handleChange('businessOwner')}\n                                    autoFocus\n                                />\n                                <TextField\n                                    error={!this.isValidBusinessOwnerEmail}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation.'\n                                                    + 'business.owner.email'\n                                                }\n                                                defaultMessage='Business Owner Email'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={this.isValidBusinessOwnerEmail\n                                        ? (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.email.helper.text'\n                                                }\n                                                defaultMessage='Provide the email of the business owner'\n                                            />\n                                        )\n                                        : (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.email.helper.text'\n                                                + '.error'\n                                                }\n                                                defaultMessage='Please enter a valid email address'\n                                            />\n                                        )}\n                                    type='email'\n                                    name='name'\n                                    margin='normal'\n                                    value={businessOwnerEmail}\n                                    onChange={this.handleChange('businessOwnerEmail')}\n                                    variant='outlined'\n                                />\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                    + '.technical.owner.name'\n                                                }\n                                                defaultMessage='Technical Owner'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.name.helper.text'\n                                            }\n                                            defaultMessage='Provide the name of the technical owner'\n                                        />\n                                    )}\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    value={technicalOwner}\n                                    onChange={this.handleChange('technicalOwner')}\n                                    variant='outlined'\n                                />\n                                <TextField\n                                    error={!this.isValidTechnicalOwnerEmail}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email'\n                                            }\n                                            defaultMessage='Technical Owner Email'\n                                        />\n                                    )}\n                                    helperText={this.isValidTechnicalOwnerEmail\n                                        ? (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email.helper.text'\n                                                }\n                                                defaultMessage='Provide the email of the technical owner'\n                                            />\n                                        )\n                                        : (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email.helper.text'\n                                                + '.error'\n                                                }\n                                                defaultMessage='Please enter a valid email address'\n                                            />\n                                        )}\n                                    type='email'\n                                    name='name'\n                                    margin='normal'\n                                    value={technicalOwnerEmail}\n                                    onChange={this.handleChange('technicalOwnerEmail')}\n                                    variant='outlined'\n                                />\n                            </form>\n                            <div className={classes.buttonWrapper}>\n                                <Grid\n                                    container\n                                    direction='row'\n                                    alignItems='flex-start'\n                                    spacing={1}\n                                    className={classes.buttonSection}\n                                >\n                                    <Grid item>\n                                        <div>\n                                            <Button\n                                                variant='contained'\n                                                color='primary'\n                                                onClick={() => this.handleSubmit(updateAPI)}\n                                                disabled={\n                                                    isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                                    || !this.isValid()\n                                                }\n                                            >\n                                                <FormattedMessage id='save' defaultMessage='Save' />\n                                            </Button>\n                                        </div>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link\n                                            to={\n                                                (api.apiType === API.CONSTS.APIProduct ? '/api-products/' : '/apis/')\n                                                + api.id\n                                                + '/overview'\n                                            }\n                                        >\n                                            <Button>\n                                                <FormattedMessage id='cancel' defaultMessage='Cancel' />\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Box>\n                    </Paper>\n                </Container>\n            </>\n        );\n    }\n}\n\nBusinessInformation.propTypes = {\n    state: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        businessInformation: PropTypes.shape({\n            businessOwner: PropTypes.string,\n            businessOwnerEmail: PropTypes.string,\n            technicalOwner: PropTypes.string,\n            technicalOwnerEmail: PropTypes.string,\n            apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n        }).isRequired,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default withAPI(withStyles(styles)(BusinessInformation));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable react/jsx-no-bind */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { injectIntl } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        cursor: 'pointer',\n    },\n}));\n\n/**\n *\n * @param {*} props properties\n */\nfunction EditableRow(props) {\n    const {\n        oldKey, oldValue, handleUpdateList, handleDelete, apiAdditionalProperties, intl, setEditing, isRestricted, api,\n    } = props;\n    const [newKey, setKey] = useState(oldKey);\n    const [newValue, setValue] = useState(oldValue);\n    const [editMode, setEditMode] = useState(false);\n\n    const updateEditMode = function () {\n        setEditMode(!editMode);\n        setEditing(true);\n    };\n    const handleKeyChange = (event) => {\n        const { value } = event.target;\n        setKey(value);\n    };\n    const handleValueChange = (event) => {\n        const { value } = event.target;\n        setValue(value);\n    };\n    const validateEmpty = function (itemValue) {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n    const saveRow = function () {\n        const oldRow = { oldKey, oldValue };\n        const newRow = { newKey: newKey || oldKey, newValue: newValue || oldValue };\n        handleUpdateList(oldRow, newRow);\n        setEditMode(false);\n        setEditing(false);\n    };\n    const deleteRow = function () {\n        handleDelete(apiAdditionalProperties, oldKey);\n    };\n    const handleKeyDown = function (e) {\n        if (e.key === 'Enter') {\n            saveRow();\n        }\n    };\n    const classes = useStyles();\n\n    return (\n        <TableRow>\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Properties.Properties.editable.row.property.name',\n                            defaultMessage: 'Property Name',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newKey}\n                        onChange={handleKeyChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newKey)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldKey}</TableCell>\n            )}\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Properties.Properties.editable.row.edit.mode.property.name',\n                            defaultMessage: 'Property Name',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newValue}\n                        onChange={handleValueChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newValue)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldValue}</TableCell>\n            )}\n            <TableCell align='right'>\n                {editMode ? (\n                    <>\n                        <IconButton\n                            className={classes.link}\n                            aria-label='save'\n                            onClick={saveRow}\n                            onKeyDown={() => {}}\n                            disabled={validateEmpty(newKey) || validateEmpty(newValue)}\n                            color='inherit'\n                        >\n                            <SaveIcon className={classes.buttonIcon} />\n                        </IconButton>\n                    </>\n                ) : (\n                    <IconButton\n                        className={classes.link}\n                        aria-label='edit'\n                        onClick={updateEditMode}\n                        onKeyDown={() => {}}\n                        color='inherit'\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <EditIcon className={classes.buttonIcon} />\n                    </IconButton>\n                )}\n                <IconButton\n                    className={classes.link}\n                    aria-label='remove'\n                    onClick={deleteRow}\n                    onKeyDown={() => {}}\n                    color='inherit'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                >\n                    <DeleteForeverIcon className={classes.buttonIcon} />\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    );\n}\nEditableRow.propTypes = {\n    oldKey: PropTypes.shape({}).isRequired,\n    oldValue: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    handleUpdateList: PropTypes.shape({}).isRequired,\n    handleDelete: PropTypes.shape({}).isRequired,\n    apiAdditionalProperties: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    setEditing: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(EditableRow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable react/jsx-no-bind */\n\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEmpty from 'lodash.isempty';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport APIContext, { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api.js';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport EditableRow from './EditableRow';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingTop: 0,\n        paddingLeft: 0,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    buttonWrapper: {\n        paddingTop: theme.spacing(3),\n    },\n    paperRoot: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(3),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    addProperty: {\n        marginRight: theme.spacing(2),\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    link: {\n        cursor: 'pointer',\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    marginRight: {\n        marginRight: theme.spacing(1),\n    },\n    helpText: {\n        paddingTop: theme.spacing(1),\n    },\n}));\n\n/**\n *\n *\n * @class Properties\n * @extends {React.Component}\n */\nfunction Properties(props) {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     */\n    const { api, updateAPI } = useContext(APIContext);\n    const additionalPropertiesTemp = cloneDeep(api.additionalProperties);\n\n    const [additionalProperties, setAdditionalProperties] = useState(additionalPropertiesTemp);\n    const [showAddProperty, setShowAddProperty] = useState(false);\n    const [propertyKey, setPropertyKey] = useState(null);\n    const [propertyValue, setPropertyValue] = useState(null);\n    const [updating, setUpdating] = useState(false);\n    const [editing, setEditing] = useState(false);\n    const [isAdditionalPropertiesStale, setIsAdditionalPropertiesStale] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    let isKeyWord = false;\n    const keywords = ['provider', 'version', 'context', 'status', 'description',\n        'subcontext', 'doc', 'lcState', 'name', 'tags'];\n    if (keywords.includes(propertyKey)) {\n        isKeyWord = true;\n    } else {\n        isKeyWord = false;\n    }\n\n    const toggleAddProperty = () => {\n        setShowAddProperty(!showAddProperty);\n    };\n    const handleChange = (name) => (event) => {\n        const { value } = event.target;\n        if (name === 'propertyKey') {\n            setPropertyKey(value);\n        } else if (name === 'propertyValue') {\n            setPropertyValue(value);\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} itemValue\n     * @returns\n     * @memberof Properties\n     */\n    const validateEmpty = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} oldAPI\n     * @param {*} updateAPI\n     * @memberof Properties\n     */\n    const handleSubmit = () => {\n        setUpdating(true);\n        const updatePromise = updateAPI({ additionalProperties });\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @param {*} oldKey\n     * @memberof Properties\n     */\n    const handleDelete = (apiAdditionalProperties, oldKey) => {\n        const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesCopy, oldKey)) {\n            delete additionalPropertiesCopy[oldKey];\n        }\n        setAdditionalProperties(additionalPropertiesCopy);\n\n        if (additionalPropertiesCopy !== additionalProperties) {\n            setIsAdditionalPropertiesStale(true);\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @param {*} oldRow\n     * @param {*} newRow\n     * @memberof Properties\n     */\n    const handleUpdateList = (oldRow, newRow) => {\n        const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n\n        const { oldKey, oldValue } = oldRow;\n        const { newKey, newValue } = newRow;\n\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesCopy, newKey) && oldKey === newKey) {\n            // Only the value is updated\n            if (newValue && oldValue !== newValue) {\n                additionalPropertiesCopy[oldKey] = newValue;\n            }\n        } else {\n            delete additionalPropertiesCopy[oldKey];\n            additionalPropertiesCopy[newKey] = newValue;\n        }\n        setAdditionalProperties(additionalPropertiesCopy);\n    };\n\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @memberof Properties\n     */\n    const handleAddToList = () => {\n        const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n        if (additionalPropertiesCopy[propertyKey] != null) {\n            Alert.warning('Property name already exists');\n        } else {\n            additionalPropertiesCopy[propertyKey] = propertyValue;\n            setAdditionalProperties(additionalPropertiesCopy);\n            setPropertyKey(null);\n            setPropertyValue(null);\n        }\n    };\n\n    /**\n     *\n     *\n     * @memberof Properties\n     */\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            handleAddToList();\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} additionalProperties\n     * @param {*} apiAdditionalProperties\n     * @returns\n     * @memberof Properties\n     */\n    const renderAdditionalProperties = () => {\n        const items = [];\n        for (const key in additionalProperties) {\n            if (Object.prototype.hasOwnProperty.call(additionalProperties, key)) {\n                items.push(<EditableRow\n                    oldKey={key}\n                    oldValue={additionalProperties[key]}\n                    handleUpdateList={handleUpdateList}\n                    handleDelete={handleDelete}\n                    apiAdditionalProperties={additionalProperties}\n                    {...props}\n                    setEditing={setEditing}\n                    isRestricted={isRestricted}\n                    api={api}\n                />);\n            }\n        }\n        return items;\n    };\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Properties\n     */\n    const { intl } = props;\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.titleWrapper}>\n                {api.apiType === API.CONSTS.APIProduct\n                    ? (\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Properties.Properties.api.product.properties'\n                                defaultMessage='API Properties'\n                            />\n                        </Typography>\n                    )\n                    : (\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Properties.Properties.api.properties'\n                                defaultMessage='API Properties'\n                            />\n                        </Typography>\n                    )}\n\n                {(!isEmpty(additionalProperties) || showAddProperty) && (\n                    <Button\n                        size='small'\n                        className={classes.button}\n                        onClick={toggleAddProperty}\n                        disabled={showAddProperty || isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <AddCircle className={classes.buttonIcon} />\n                        <FormattedMessage\n                            id='Apis.Details.Properties.Properties.add.new.property'\n                            defaultMessage='Add New Property'\n                        />\n                    </Button>\n                )}\n            </div>\n            <Typography variant='caption' component='div' className={classes.helpText}>\n                <FormattedMessage\n                    id='Apis.Details.Properties.Properties.help.main'\n                    defaultMessage={`Usually, APIs have a pre-defined set of properties such as \n                        the name, version, context, etc. API Properties allows you to \n                         add specific custom properties to the API.`}\n                />\n            </Typography>\n            {isEmpty(additionalProperties) && !isAdditionalPropertiesStale && !showAddProperty && (\n                <div className={classes.messageBox}>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography variant='h5' component='h3' className={classes.head}>\n                                <FormattedMessage\n                                    id='Apis.Details.Properties.Properties.add.new.property.message.title'\n                                    defaultMessage='Create Additional Properties'\n                                />\n                            </Typography>\n                            {api.apiType === API.CONSTS.APIProduct\n                                ? (\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Properties.Properties.APIProduct.\n                                            add.new.property.message.content'\n                                            defaultMessage={\n                                                'Add specific custom properties to your '\n                                        + 'API here.'\n                                            }\n                                        />\n                                    </Typography>\n                                )\n                                : (\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Properties.Properties.add.new.property.message.content'\n                                            defaultMessage={\n                                                'Add specific custom properties to your '\n                                        + 'API here.'\n                                            }\n                                        />\n                                    </Typography>\n                                )}\n                            <div className={classes.actions}>\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    className={classes.button}\n                                    onClick={toggleAddProperty}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Properties.Properties.add.new.property'\n                                        defaultMessage='Add New Property'\n                                    />\n                                </Button>\n                            </div>\n                        </div>\n                    </InlineMessage>\n                </div>\n            )}\n            {(!isEmpty(additionalProperties) || showAddProperty || isAdditionalPropertiesStale) && (\n                <Grid container spacing={7}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paperRoot}>\n                            <Table className={classes.table}>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.table'\n                                                defaultMessage='Property Name'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.value'\n                                                defaultMessage='Property Value'\n                                            />\n                                        </TableCell>\n                                        <TableCell />\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {showAddProperty && (\n                                        <>\n                                            <TableRow>\n                                                <TableCell>\n                                                    <TextField\n                                                        fullWidth\n                                                        required\n                                                        id='outlined-required'\n                                                        label={intl.formatMessage({\n                                                            id: `Apis.Details.Properties.Properties.\n                                                                show.add.property.property.name`,\n                                                            defaultMessage: 'Name',\n                                                        })}\n                                                        margin='normal'\n                                                        variant='outlined'\n                                                        className={classes.addProperty}\n                                                        value={propertyKey === null ? '' : propertyKey}\n                                                        onChange={handleChange('propertyKey')}\n                                                        onKeyDown={handleKeyDown('propertyKey')}\n                                                        helperText={validateEmpty(propertyKey) ? ''\n                                                            : iff(isKeyWord, 'Invalid property name', '')}\n                                                        error={validateEmpty(propertyKey) || isKeyWord}\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create', 'apim:api_publish'],\n                                                            api,\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        fullWidth\n                                                        required\n                                                        id='outlined-required'\n                                                        label={intl.formatMessage({\n                                                            id: 'Apis.Details.Properties.Properties.property.value',\n                                                            defaultMessage: 'Value',\n                                                        })}\n                                                        margin='normal'\n                                                        variant='outlined'\n                                                        className={classes.addProperty}\n                                                        value={propertyValue === null ? '' : propertyValue}\n                                                        onChange={handleChange('propertyValue')}\n                                                        onKeyDown={handleKeyDown('propertyValue')}\n                                                        error={validateEmpty(propertyValue)}\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create', 'apim:api_publish'],\n                                                            api,\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align='right'>\n                                                    <Button\n                                                        variant='contained'\n                                                        color='primary'\n                                                        disabled={\n                                                            !propertyValue\n                                                            || !propertyKey\n                                                            || isRestricted(\n                                                                ['apim:api_create', 'apim:api_publish'], api,\n                                                            )\n                                                            || isKeyWord\n                                                        }\n                                                        onClick={handleAddToList}\n                                                        className={classes.marginRight}\n                                                    >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Properties.Properties.add'\n                                                            defaultMessage='Add'\n                                                        />\n                                                    </Button>\n\n                                                    <Button onClick={toggleAddProperty}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Properties.Properties.cancel'\n                                                            defaultMessage='Cancel'\n                                                        />\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow>\n                                                <TableCell colSpan={3}>\n                                                    <Typography variant='caption'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Properties.Properties.help'\n                                                            defaultMessage={\n                                                                'Property name should be unique, should not contain '\n                                                                + 'spaces and cannot be any '\n                                                                + 'of the following reserved keywords : '\n                                                                + 'provider, version, context, status, description, '\n                                                                + 'subcontext, doc, lcState, name, tags.'\n                                                            }\n                                                        />\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        </>\n                                    )}\n                                    {renderAdditionalProperties()}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                        <div className={classes.buttonWrapper}>\n                            <Grid\n                                container\n                                direction='row'\n                                alignItems='flex-start'\n                                spacing={1}\n                                className={classes.buttonSection}\n                            >\n                                <Grid item>\n                                    <div>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            onClick={handleSubmit}\n                                            disabled={\n                                                editing || updating || (isEmpty(additionalProperties)\n                                                && !isAdditionalPropertiesStale)\n                                                || isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                            }\n                                        >\n                                            {updating && (\n                                                <>\n                                                    <CircularProgress size={20} />\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Properties.Properties.updating'\n                                                        defaultMessage='Updating ...'\n                                                    />\n                                                </>\n                                            )}\n                                            {!updating && (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Properties.Properties.save'\n                                                    defaultMessage='Save'\n                                                />\n                                            )}\n                                        </Button>\n                                    </div>\n                                </Grid>\n                                <Grid item>\n                                    <Link to={'/apis/' + api.id + '/overview'}>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                                {isRestricted(['apim:api_create', 'apim:api_publish'], api) && (\n                                    <Grid item xs={12}>\n                                        <Typography variant='body2' color='primary'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.update.not.allowed'\n                                                defaultMessage='*You are not authorized to update properties of\n                                                    the API due to insufficient permissions'\n                                            />\n                                        </Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </div>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n}\n\nProperties.propTypes = {\n    state: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\nexport default withAPI(injectIntl(Properties));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Grid, Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport API from 'AppData/api';\nimport Banner from 'AppComponents/Shared/Banner';\nimport { Progress } from 'AppComponents/Shared';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        paddingBottom: '10px',\n    },\n    margin: {\n        margin: theme.spacing(),\n    },\n    rightDataColumn: {\n        display: 'flex',\n        flex: 1,\n    },\n    grid: {\n        marginTop: '10px',\n        paddingRight: '10px',\n        paddingBottom: '10px',\n    },\n    box: {\n        display: 'block',\n    },\n    tableCel: {\n        width: 50,\n    },\n    table: {\n        width: '100%',\n        border: 'solid 1px #ccc',\n    },\n    tableHeadCell: {\n        color: 'black',\n        background: theme.palette.grey[200],\n    },\n    stateWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    tableHeadTitle: {\n        flex: 1,\n        fontWeight: 'bold',\n    },\n});\n\n/**\n *\n *\n * @class BusinessPlans\n * @extends {Component}\n */\nclass BusinessPlans extends Component {\n    /**\n     *Creates an instance of BusinessPlans.\n     * @param {Object} props\n     * @memberof BusinessPlans\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            policies: [],\n            monetizedPolices: null,\n        };\n        this.monetizationQuery = this.monetizationQuery.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof BusinessPlans\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        api.getSubscriptionPolicies(api.id).then((policies) => {\n            const filteredPolicies = policies.filter((policy) => policy.tierPlan === 'COMMERCIAL');\n            this.setState({ policies: filteredPolicies });\n        });\n        api.getMonetization(api.id).then((status) => {\n            this.setState({ monetizedPolices: status.properties });\n        });\n    }\n\n    monetizationQuery(policyName) {\n        const { monetizedPolices } = this.state;\n        return policyName in monetizedPolices;\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} Policies / Business plans list\n     * @memberof BusinessPlans\n     */\n    render() {\n        const { policies, monetizedPolices } = this.state;\n        const { classes } = this.props;\n        if (monetizedPolices === null) {\n            return <Progress />;\n        }\n        const policiesList = policies.map((policy) => (\n            <Grid item xs={12}>\n                <Table className={classes.table}>\n                    <TableRow>\n                        <TableCell variant='head' colSpan={2} className={classes.tableHeadCell}>\n                            <Box display='flex'>\n                                <Typography component='div' className={classes.tableHeadTitle} variant='subtitle1'>\n                                    {policy.name}\n                                </Typography>\n                                {\n                                    this.monetizationQuery(policy.name) ? (\n                                        <div className={classes.stateWrapper}>\n                                            <div><CheckIcon color='primary' /></div>\n                                            <Typography component='div'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Monetization.BusinessPlans.monetized'\n                                                    defaultMessage='Monetized'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    ) : (\n                                        <div className={classes.stateWrapper}>\n                                            <div><CloseIcon color='error' /></div>\n                                            <Typography component='div'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Monetization.BusinessPlans.not.monetized'\n                                                    defaultMessage='Not Monetized'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    )\n                                }\n                            </Box>\n                        </TableCell>\n                    </TableRow>\n                    {Object.keys(policy.monetizationAttributes).map((key) => {\n                        if (policy.monetizationAttributes[key] !== null) {\n                            return (\n                                <TableRow>\n                                    <TableCell className={classes.tableCel} align='left'>\n                                        <Typography component='p' variant='subtitle2'>\n                                            {key}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        {policy.monetizationAttributes[key]}\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        } else {\n                            return false;\n                        }\n                    })}\n\n                </Table>\n            </Grid>\n        ));\n        return (\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                    <Typography variant='h6'>\n                        <FormattedMessage\n                            id='Apis.Details.Monetization.BusinessPlans.commercial.policies'\n                            defaultMessage='Commercial Policies'\n                        />\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container direction='row' spacing={3}>\n                        {policiesList}\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        (policies.length > 0) ? (\n                            <Banner\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='info'\n                                message='Click Save to monetize all unmonetized policies'\n                            />\n                        ) : (\n                            <Banner\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='info'\n                                message='No commercial policies to monetize'\n                            />\n                        )\n                    }\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nBusinessPlans.propTypes = {\n    api: PropTypes.instanceOf(API).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(BusinessPlans);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport { Progress } from 'AppComponents/Shared';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { isRestricted } from 'AppData/AuthManager';\n\nimport BusinessPlans from './BusinessPlans';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'left',\n        color: theme.palette.text.secondary,\n        paddingBottom: '10px',\n    },\n    grid: {\n        paddingLeft: '10px',\n        paddingRight: '10px',\n        paddingBottom: '10px',\n        minWidth: '50%',\n    },\n    button: {\n        margin: theme.spacing(),\n    },\n});\n\n/**\n *\n *\n * @class Monetization\n * @extends {Component}\n */\nclass Monetization extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monetizationAttributes: [],\n            monStatus: null,\n            property: {},\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.getMonetizationData();\n    }\n\n    getMonetizationData() {\n        const { api } = this.props;\n        if (api.apiType === 'APIProduct') {\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            apiProduct.getSettings().then((settings) => {\n                if (settings.monetizationAttributes != null) {\n                    this.setState({ monetizationAttributes: settings.monetizationAttributes });\n                }\n            });\n            apiProduct.getMonetization(this.props.api.id).then((status) => {\n                this.setState({ monStatus: status.enabled });\n            });\n        } else {\n            api.getSettings().then((settings) => {\n                if (settings.monetizationAttributes != null) {\n                    this.setState({ monetizationAttributes: settings.monetizationAttributes });\n                }\n            });\n            api.getMonetization(this.props.api.id).then((status) => {\n                this.setState({ monStatus: status.enabled });\n            });\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ monStatus: event.target.checked });\n    };\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState((oldState) => {\n            const { property } = oldState;\n            property[name] = value;\n            return { property };\n        });\n    };\n\n    /**\n     * Handles the submit action for configuring monetization\n     */\n    handleSubmit() {\n        const { api, intl } = this.props;\n        if (api.apiType === 'APIProduct') {\n            const properties = this.state.property;\n            const enabled = this.state.monStatus;\n            const body = {\n                enabled,\n                properties,\n            };\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            const promisedMonetization = apiProduct.configureMonetizationToApiProduct(api.id, body);\n            promisedMonetization.then((response) => {\n                const status = JSON.parse(response.data);\n                if (status.enabled) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.configured.successfully',\n                        defaultMessage: 'Monetization Enabled Successfully',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.disabled.successfully',\n                        defaultMessage: 'Monetization Disabled Successfully',\n                    }));\n                }\n                this.setState((cState) => ({ monStatus: !cState.monStatus }));\n            }).catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.something.went.wrong.while.configuring.monetization',\n                        defaultMessage: 'Something went wrong while configuring monetization',\n                    }));\n                }\n            });\n        } else {\n            const properties = this.state.property;\n            const enabled = this.state.monStatus;\n            const body = {\n                enabled,\n                properties,\n            };\n            const promisedMonetizationConf = api.configureMonetizationToApi(this.props.api.id, body);\n            promisedMonetizationConf.then((response) => {\n                const status = JSON.parse(response.data);\n                if (status.enabled) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.configured.successfully',\n                        defaultMessage: 'Monetization Enabled Successfully',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.disabled.successfully',\n                        defaultMessage: 'Monetization Disabled Successfully',\n                    }));\n                }\n                this.setState((cState) => ({ monStatus: !cState.monStatus }));\n            }).catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.something.went.wrong.while.configuring.monetization',\n                        defaultMessage: 'Something went wrong while configuring monetization',\n                    }));\n                }\n            });\n        }\n    }\n\n    render() {\n        const { api, classes } = this.props;\n        const { monetizationAttributes, monStatus } = this.state;\n        if (api && isRestricted(['apim:api_publish'], api)) {\n            return (\n                <Grid\n                    container\n                    direction='row'\n                    alignItems='center'\n                    spacing={4}\n                    style={{ marginTop: 20 }}\n                >\n                    <Grid item>\n                        <Typography variant='body2' color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.update.not.allowed'\n                                defaultMessage={'* You are not authorized to update API monetization'\n                                    + ' due to insufficient permissions'}\n                            />\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n        if (!monetizationAttributes || monStatus === null) {\n            return <Progress />;\n        }\n        return (\n            <form method='post' onSubmit={this.handleSubmit}>\n                <Grid container xs={6} spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.monetization'\n                                defaultMessage='Monetization'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_publish'], api)}\n                                    id='monStatus'\n                                    name='monStatus'\n                                    checked={monStatus}\n                                    onChange={this.handleChange}\n                                    value={monStatus}\n                                    color='primary'\n                                />\n                            )}\n                            label='Enable Monetization'\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.root}>\n                            <Grid item xs={12} className={classes.grid}>\n                                <Typography className={classes.heading} variant='h6'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Monetization.Index.monetization.properties'\n                                        defaultMessage='Monetization Properties'\n                                    />\n                                </Typography>\n                                {\n                                    (monetizationAttributes.length > 0) ? (\n                                        (monetizationAttributes.map((monetizationAttribute, i) => (\n                                            <TextField\n                                                disabled={isRestricted(['apim:api_publish'], api)}\n                                                fullWidth\n                                                id={'attribute' + i}\n                                                label={monetizationAttribute.displayName}\n                                                placeholder={monetizationAttribute.displayName}\n                                                name={monetizationAttribute.name}\n                                                type='text'\n                                                margin='normal'\n                                                variant='outlined'\n                                                required={monetizationAttribute.required}\n                                                onChange={this.handleInputChange}\n                                                autoFocus\n                                            />\n                                        )))\n                                    ) : (\n                                        <Typography>\n                                            <FormattedMessage\n                                                id={'Apis.Details.Monetization.Index.there.are.no'\n                                                   + ' .monetization.properties.configured'}\n                                                defaultMessage='There are no monetization properties configured'\n                                            />\n                                        </Typography>\n                                    )\n                                }\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.root}>\n                            <Grid item xs={12} className={classes.grid}>\n                                <BusinessPlans api={api} monStatus={monStatus} />\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            onClick={this.handleSubmit}\n                            color='primary'\n                            variant='contained'\n                            className={classes.button}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.save'\n                                defaultMessage='Save'\n                            />\n                        </Button>\n                        <Link to={'/apis/' + api.id + '/overview'}>\n                            <Button>\n                                <FormattedMessage\n                                    id='Apis.Details.Monetization.Index.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Button>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        );\n    }\n}\n\nMonetization.propTypes = {\n    api: PropTypes.instanceOf(API).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(Monetization)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage, useIntl, defineMessages } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport API from '../../../../data/api';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: theme.custom.contentAreaWidth,\n        marginTop: theme.spacing(3),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n    viewInExStoreLink: {\n        color: theme.palette.common.black,\n        textDecoration: 'underline',\n    },\n}));\n\n/**\n * Renders an External Store list\n * @class ExternalStores\n * @extends {React.Component}\n */\nexport default function ExternalStores() {\n    const { api } = useContext(APIContext);\n    const { settings } = useAppContext();\n    const [allExternalStores, setAllExternalStores] = useState([]);\n    const [publishedExternalStores, setPublishedExternalStores] = useState([]);\n    const [isUpdating, setUpdating] = useState(false);\n    const classes = useStyles();\n    const intl = useIntl();\n    if (!settings.externalStoresEnabled) {\n        const resourceNotFoundMessageText = defineMessages({\n            titleMessage: {\n                id: 'Apis.Details.ExternalStores.ExternalStores.external.stores.not.found.title',\n                defaultMessage: 'External Developert Portals not found for the API : {apiUUID}',\n            },\n            bodyMessage: {\n                id: 'Apis.Details.ExternalStores.ExternalStores.external.stores.not.found.body',\n                defaultMessage: 'No External Developer Portals configured for the current tenant',\n            },\n        });\n        const resourceNotFountMessage = {\n            title: intl.formatMessage(resourceNotFoundMessageText.titleMessage, {\n                apiUUID: `${api.id}`,\n            }),\n            body: intl.formatMessage(resourceNotFoundMessageText.bodyMessage),\n        };\n        return <ResourceNotFound message={resourceNotFountMessage} />;\n    }\n\n    /**\n     * Gets published external stores\n     */\n    function getPublishedExternalStores() {\n        API.getPublishedExternalStores(api.id)\n            .then((response) => {\n                const publishedStoreIds = response.body.list.map((store) => store.id);\n                setPublishedExternalStores(publishedStoreIds);\n            })\n            .catch((error) => {\n                const response = error.response && error.response.obj;\n                const reason = response && ('[' + response.message + '] ' + response.description);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.error.getting.published.external.stores',\n                    defaultMessage: 'Error while getting published external developer portals!! {reason}',\n                }, { reason }));\n            });\n    }\n\n    useEffect(() => {\n        API.getAllExternalStores().then((response) => {\n            setAllExternalStores([...response.body.list]);\n        });\n        getPublishedExternalStores();\n    }, []);\n\n    /**\n     * Handle publish to external store button action\n     */\n    function updateStores() {\n        setUpdating(true);\n        API.publishAPIToExternalStores(api.id, publishedExternalStores)\n            .then((response) => {\n                const successfulStores = response.body.list.map((store) => store.id);\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.successfully.published.to.external.stores',\n                    defaultMessage: 'Successfully Published to external developer portals: {successfulStores}',\n                }, { successfulStores }));\n            })\n            .catch((error) => {\n                const response = error.response && error.response.obj;\n                const reason = response && ('[' + response.message + '] ' + response.description);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.error.while.updating.external.stores',\n                    defaultMessage: 'Error while updating external developer portals!! {reason}',\n                }, { reason }));\n            })\n            .finally(() => {\n                setUpdating(false);\n                getPublishedExternalStores();\n            });\n    }\n\n    return (\n        <div>\n            <div>\n                <Typography variant='h4' align='left'>\n                    <FormattedMessage\n                        id='Apis.Details.ExternalStores.ExternalStores.external-stores'\n                        defaultMessage='External Developer Portals'\n                    />\n                </Typography>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell />\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.name'\n                                            defaultMessage='Name'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.type'\n                                            defaultMessage='Type'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.endpoint'\n                                            defaultMessage='Endpoint'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {allExternalStores.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell padding='checkbox'>\n                                        <Checkbox\n                                            checked={publishedExternalStores.includes(row.id)}\n                                            disabled={api.lifeCycleStatus !== 'PUBLISHED'\n                                                || isRestricted(['apim:api_publish'], api)}\n                                            onChange={\n                                                (event) => {\n                                                    const { checked, name } = event.target;\n                                                    if (checked) {\n                                                        if (!publishedExternalStores.includes(name)) {\n                                                            setPublishedExternalStores([\n                                                                ...publishedExternalStores, name]);\n                                                        }\n                                                    } else {\n                                                        setPublishedExternalStores(publishedExternalStores\n                                                            .filter((store) => store !== name));\n                                                    }\n                                                }\n                                            }\n                                            name={row.id}\n                                            color='primary'\n                                        />\n                                    </TableCell>\n                                    <TableCell component='th' scope='row'>\n                                        <Typography>\n                                            {' '}\n                                            {row.displayName}\n                                            {' '}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        {' '}\n                                        <Typography>{row.type}</Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <a\n                                            target='_blank'\n                                            rel='noopener noreferrer'\n                                            href={row.endpoint}\n                                            className={classes.viewInExStoreLink}\n                                        >\n                                            <Typography>\n                                                {row.endpoint}\n                                            </Typography>\n                                        </a>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Grid container>\n                    <Grid\n                        container\n                        direction='row'\n                        alignItems='center'\n                        spacing={4}\n                        style={{ marginTop: 20 }}\n                    >\n                        <Grid item>\n                            <Button\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                disabled={isUpdating || api.lifeCycleStatus !== 'PUBLISHED'\n                                    || isRestricted(['apim:api_publish'], api)}\n                                onClick={updateStores}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.ExternalStores.ExternalStores.save'\n                                    defaultMessage='Save'\n                                />\n                                {isUpdating && <CircularProgress size={20} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.ExternalStores.ExternalStores.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                        {(isRestricted(['apim:api_publish'], api))\n                            && (\n                                <Grid item>\n                                    <Typography variant='body2' color='primary'>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.update.not.allowed'\n                                            defaultMessage={'* You are not authorized to publish the API'\n                                                + ' to external developer portals due to insufficient permissions'}\n                                        />\n                                    </Typography>\n                                </Grid>\n                            )}\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = (theme) => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 20,\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormLabel: {\n        transform: 'translate(0, 1.5px) scale(0.75)',\n        transformOrigin: 'top left',\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    root: {\n        padding: 20,\n        marginTop: 20,\n    },\n    group: {\n        flexDirection: 'row',\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    htmlTooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n});\n\n/**\n * React component to create a new version of an API\n * @class CreateNewVersion\n * @extends {Component}\n */\nclass CreateNewVersion extends React.Component {\n    /**\n     * Creates an instance of CreateNewVersion.\n     * @param {any} props @inheritDoc\n     * @memberof CreateNewVersion\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isDefaultVersion: 'no',\n            valid: { version: { empty: false, alreadyExists: false, hasSpecialChars: false } },\n        };\n    }\n\n    handleDefaultVersionChange = () => (event) => {\n        const { value } = event.target;\n        this.setState({\n            isDefaultVersion: value,\n        });\n    };\n\n    handleVersionChange = () => (event) => {\n        const { value } = event.target;\n        this.setState({\n            newVersion: value,\n            valid: { version: { empty: !value, alreadyExists: false, hasSpecialChars: this.hasSpecialChars(value) } },\n        });\n    };\n\n    hasSpecialChars(value) {\n        if (/^[^~!@#;:%^*()+={}|\\\\<>\"',&/$]+$/.test(value)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * Handles the submit action for new version creation\n     *\n     * @param {API} api current API\n     * @param {string} newVersion new version to create\n     * @param {string} isDefaultVersion specifies whether the new API should be marked as default version ('yes' | 'no')\n     */\n    handleSubmit(api, newVersion, isDefaultVersion) {\n        if (!newVersion) {\n            this.setState({ valid: { version: { empty: true } } });\n            return;\n        }\n        const isDefaultVersionBool = isDefaultVersion === 'yes';\n        const { intl } = this.props;\n        api.createNewAPIVersion(newVersion, isDefaultVersionBool)\n            .then((response) => {\n                this.setState({\n                    redirectToReferrer: true,\n                    apiId: response.obj.id,\n                });\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.NewVersion.NewVersion.success',\n                    defaultMessage: 'Successfully created new version',\n                }) + newVersion);\n            })\n            .catch((error) => {\n                if (error.status === 409) {\n                    this.setState({ valid: { version: { alreadyExists: true } } });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.NewVersion.NewVersion.error',\n                        defaultMessage: 'Something went wrong while creating a new version!. Error: ',\n                    }) + error.status);\n                }\n            });\n    }\n\n    /**\n     * Renders the CreateNewVersion component.\n     * Once new version is created, redirects to the overview page of the new API.\n     * @returns {*} CreateNewVersion component\n     */\n    render() {\n        const { classes, api } = this.props;\n        const {\n            isDefaultVersion, newVersion, redirectToReferrer, apiId, valid,\n        } = this.state;\n        if (redirectToReferrer) {\n            return <Redirect to={'/apis/' + apiId + '/overview'} />;\n        }\n\n        let helperText = '';\n        if (valid.version.empty) {\n            helperText = 'This field cannot be empty';\n        } else if (valid.version.alreadyExists) {\n            helperText = 'An API with version \"' + newVersion + '\" already exists.';\n        } else if (valid.version.hasSpecialChars) {\n            helperText = 'API Version should not contain special characters';\n        }\n\n        return (\n            <>\n                <Container maxWidth='md'>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewVersion.NewVersion.create.new.version'\n                                defaultMessage='Create New Version'\n                            />\n                        </Typography>\n                    </div>\n                    <Grid container spacing={7}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.root} elevation={0}>\n                                <FormControl margin='normal' className={classes.FormControlOdd}>\n                                    <TextField\n                                        fullWidth\n                                        id='newVersion'\n                                        error={\n                                            valid.version.empty\n                                            || valid.version.alreadyExists\n                                            || valid.version.hasSpecialChars\n                                        }\n                                        label={(\n                                            <FormattedMessage\n                                                id='Apis.Details.NewVersion.NewVersion.new.version'\n                                                defaultMessage='New Version'\n                                            />\n                                        )}\n                                        helperText={\n                                            helperText\n                                        }\n                                        type='text'\n                                        name='newVersion'\n                                        placeholder='Eg: 2.0.0'\n                                        value={newVersion}\n                                        variant='outlined'\n                                        onChange={this.handleVersionChange()}\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal' className={classes.FormControl}>\n                                    <FormLabel className={classes.FormLabel} component='legend'>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewVersion.NewVersion.default'\n                                            defaultMessage='Make this the default version'\n                                        />\n                                        <Tooltip\n                                            placement='top'\n                                            classes={{\n                                                tooltip: classes.htmlTooltip,\n                                            }}\n                                            title={(\n                                                <>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.tooltip'\n                                                        defaultMessage={\n                                                            'Indicates if this is the default version of the API. '\n                                                            + 'If an API is invoked without specifying a version, '\n                                                            + 'the API Gateway will route the request to the default '\n                                                            + 'version of the API.'\n                                                        }\n                                                    />\n                                                </>\n                                            )}\n                                            interactive\n                                            aria-label='Default Version Selector'\n                                            tabIndex='-1'\n                                        >\n                                            <Button className={classes.helpButton}>\n                                                <HelpOutline className={classes.helpIcon} />\n                                            </Button>\n                                        </Tooltip>\n                                    </FormLabel>\n                                    <RadioGroup\n                                        name='isDefaultVersion'\n                                        id='isDefaultVersion'\n                                        className={classes.group}\n                                        value={isDefaultVersion}\n                                        onChange={this.handleDefaultVersionChange()}\n                                    >\n                                        <FormControlLabel value='yes' control={<Radio color='primary' />} label='Yes' />\n                                        <FormControlLabel value='no' control={<Radio color='primary' />} label='No' />\n                                    </RadioGroup>\n                                </FormControl>\n                                <div className={classes.buttonWrapper}>\n                                    <Grid\n                                        container\n                                        direction='row'\n                                        alignItems='flex-start'\n                                        spacing={1}\n                                        className={classes.buttonSection}\n                                    >\n                                        <Grid item>\n                                            <div>\n                                                <Button\n                                                    variant='contained'\n                                                    color='primary'\n                                                    id='createBtn'\n                                                    onClick={() => this.handleSubmit(api, newVersion, isDefaultVersion)}\n                                                    disabled={\n                                                        valid.version.empty\n                                                        || valid.version.alreadyExists\n                                                        || valid.version.hasSpecialChars\n                                                    }\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.create'\n                                                        defaultMessage='Create'\n                                                    />\n                                                </Button>\n                                            </div>\n                                        </Grid>\n                                        <Grid item>\n                                            <Link to={'/apis/' + api.id + '/overview'}>\n                                                <Button id='cancelBtn'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.cancel'\n                                                        defaultMessage='Cancel'\n                                                    />\n                                                </Button>\n                                            </Link>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </>\n        );\n    }\n}\n\nCreateNewVersion.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withAPI(withStyles(styles)(CreateNewVersion));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isRestricted } from 'AppData/AuthManager';\nimport LifeCycleIcon from '@material-ui/icons/Autorenew';\nimport EndpointIcon from '@material-ui/icons/GamesOutlined';\nimport PersonPinCircleOutlinedIcon from '@material-ui/icons/PersonPinCircleOutlined';\nimport ResourcesIcon from '@material-ui/icons/VerticalSplit';\nimport ScopesIcon from '@material-ui/icons/VpnKey';\nimport DocumentsIcon from '@material-ui/icons/LibraryBooks';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CodeIcon from '@material-ui/icons/Code';\nimport ConfigurationIcon from '@material-ui/icons/Build';\nimport RuntimeConfigurationIcon from '@material-ui/icons/Settings';\nimport PropertiesIcon from '@material-ui/icons/List';\nimport SubscriptionsIcon from '@material-ui/icons/RssFeed';\nimport MonetizationIcon from '@material-ui/icons/LocalAtm';\nimport StoreIcon from '@material-ui/icons/Store';\nimport { withStyles } from '@material-ui/core/styles';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport {\n    Redirect, Route, Switch, Link, matchPath,\n} from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport Utils from 'AppData/Utils';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport LeftMenuItem from 'AppComponents/Shared/LeftMenuItem';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { Progress } from 'AppComponents/Shared';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport LastUpdatedTime from 'AppComponents/Apis/Details/components/LastUpdatedTime';\nimport Overview from './NewOverview/Overview';\nimport DesignConfigurations from './Configuration/DesignConfigurations';\nimport RuntimeConfiguration from './Configuration/RuntimeConfiguration';\nimport LifeCycle from './LifeCycle/LifeCycle';\nimport Documents from './Documents';\nimport Operations from './Operations/Operations';\nimport APIOperations from './Resources/APIOperations';\nimport APIProductOperations from './ProductResources/APIProductOperations';\nimport ProductResourcesEdit from './ProductResources/ProductResourcesEdit';\nimport Endpoints from './Endpoints/Endpoints';\nimport Environments from './Environments/Environments';\nimport Subscriptions from './Subscriptions/Subscriptions';\nimport Comments from './Comments/Comments';\nimport Scope from './Scopes';\nimport Security from './Security';\nimport APIDefinition from './APIDefinition/APIDefinition';\nimport WSDL from './APIDefinition/WSDL';\nimport APIDetailsTopMenu from './components/APIDetailsTopMenu';\nimport BusinessInformation from './BusinessInformation/BusinessInformation';\nimport Properties from './Properties/Properties';\nimport Monetization from './Monetization';\nimport ExternalStores from './ExternalStores/ExternalStores';\nimport { APIProvider } from './components/ApiContext';\nimport CreateNewVersion from './NewVersion/NewVersion';\n\nconst styles = (theme) => ({\n    LeftMenu: {\n        backgroundColor: theme.palette.background.leftMenu,\n        width: theme.custom.leftMenuWidth,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n        overflowY: 'auto',\n    },\n    leftLInkMain: {\n        borderRight: 'solid 1px ' + theme.palette.background.leftMenu,\n        paddingBottom: theme.spacing(1),\n        paddingTop: theme.spacing(1),\n        cursor: 'pointer',\n        backgroundColor: theme.palette.background.leftMenuActive,\n        color: theme.palette.getContrastText(theme.palette.background.leftMenuActive),\n        textDecoration: 'none',\n    },\n    detailsContent: {\n        display: 'flex',\n        flex: 1,\n    },\n    content: {\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        marginLeft: theme.custom.leftMenuWidth,\n        paddingBottom: theme.spacing(3),\n    },\n    contentInside: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n    },\n});\n\n/**\n * Base component for API specific Details page,\n * What this component do is, Handle all the request coming under `/apis/:api_uuid` path, If the :api_uuid or\n *  the later part of the URL is not valid , This will return a `PageNotFound` component.\n * For valid API request , This component will fetch the API and pass the API response data to below components in `api`\n * prop name.\n * Note: If you want to add new route or new page under APIs detail, add the desired path to `PATHS` constant mapping.\n * This mapping will be used in parent component to directly return `PageNotFound` component, If user making a request\n * to an undefined path segment.\n */\nclass Details extends Component {\n    /**\n     * Return boolean , whether provided URL has a valid Route under the Details page.\n     * Check https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/modules/NavLink.js\n     * code for the usage of public matchPath method\n     * @static\n     * @param {String} pathname location URL of an incoming request\n     * @memberof Details\n     * @returns {Boolean} whether URL matched with defined sub paths or not\n     */\n    static isValidURL(pathname) {\n        for (const [subPathKey, subPath] of Object.entries(Details.subPaths)) {\n            // Skip the BASE path , because it will match for any `/apis/:apiUUID/*` values\n            if ((subPathKey !== 'BASE') && (subPathKey !== 'BASE_PRODUCT')) {\n                const matched = matchPath(pathname, subPath);\n                if (matched) {\n                    return matched;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Creates an instance of Details.\n     * @param {any} props @inheritDoc\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        const isAPIProduct = null;\n        this.state = {\n            api: null,\n            apiNotFound: false,\n            // updateAPI: this.updateAPI,\n            isAPIProduct,\n            imageUpdate: 0,\n        };\n        this.setAPI = this.setAPI.bind(this);\n        this.setAPIProduct = this.setAPIProduct.bind(this);\n        this.updateAPI = this.updateAPI.bind(this);\n        this.setImageUpdate = this.setImageUpdate.bind(this);\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof Details\n     */\n    componentDidMount() {\n        const {\n            location: { pathname },\n            isAPIProduct,\n        } = this.props;\n        // Load API data iff request page is valid\n        if (Details.isValidURL(pathname)) {\n            if (isAPIProduct) {\n                this.setAPIProduct();\n            } else {\n                this.setAPI();\n            }\n            const api = new API();\n            api.getTenantsByState('active')\n                .then((response) => {\n                    const { list } = response.body;\n                    this.setState({ tenantList: list });\n                }).catch((error) => {\n                    console.error('error when getting tenants ' + error);\n                });\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Details\n     */\n    componentDidUpdate() {\n        const { api } = this.state;\n        const { match, isAPIProduct } = this.props;\n        const { apiUUID } = match.params;\n        const { apiProdUUID } = match.params;\n        if (!api || (api.id === apiUUID || api.id === apiProdUUID)) {\n            return;\n        }\n        if (isAPIProduct) {\n            this.setAPIProduct();\n        } else {\n            this.setAPI();\n        }\n    }\n\n    /**\n     *\n     * This method is a hack to update the image in the toolbar when a new image is uploaded\n     * @memberof Details\n     */\n    setImageUpdate() {\n        this.setState((previousState) => ({\n            imageUpdate: previousState.imageUpdate + 1,\n        }));\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    setAPI(newAPI) {\n        if (newAPI) {\n            this.setState({ api: newAPI });\n        } else {\n            const { match } = this.props;\n            const { apiUUID } = match.params;\n            const promisedApi = API.get(apiUUID);\n            promisedApi\n                .then((api) => {\n                    this.setState({ api });\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        this.setState({ apiNotFound: true });\n                    } else if (status === 401) {\n                        doRedirectToLogin();\n                    }\n                });\n        }\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    setAPIProduct() {\n        const { match } = this.props;\n        const { apiProdUUID } = match.params;\n        const { isAPIProduct } = this.props;\n        const promisedApi = APIProduct.get(apiProdUUID);\n        promisedApi\n            .then((api) => {\n                this.setState({ isAPIProduct });\n                this.setState({ api });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    }\n\n    /**\n     *\n     * @returns\n     * @memberof Details\n     */\n    getLeftMenuItemForDefinitionByType(apiType) {\n        const { isAPIProduct } = this.state;\n        const { intl, match } = this.props;\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n        const apiDefinitionMenuItem = (\n            <LeftMenuItem\n                text={intl.formatMessage({\n                    id: 'Apis.Details.index.api.definition2',\n                    defaultMessage: 'API definition',\n                })}\n                route='api definition'\n                to={pathPrefix + 'api definition'}\n                Icon={<CodeIcon />}\n            />\n        );\n\n        switch (apiType) {\n            case 'GRAPHQL':\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.schema.definition',\n                                defaultMessage: 'Schema Definition',\n                            })}\n                            route='schema definition'\n                            to={pathPrefix + 'schema definition'}\n                            Icon={<CodeIcon />}\n                        />\n                    </>\n                );\n            case 'WS':\n                return '';\n            case 'SOAP':\n                return (\n                    <>\n                        {apiDefinitionMenuItem}\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.wsdl.definition',\n                                defaultMessage: 'WSDL Definition',\n                            })}\n                            route='wsdl'\n                            to={pathPrefix + 'wsdl'}\n                            Icon={<CodeIcon />}\n                        />\n                    </>\n                );\n            default:\n                return (\n                    <>\n                        {apiDefinitionMenuItem}\n                    </>\n                );\n        }\n    }\n\n    getLeftMenuItemForResourcesByType(apiType) {\n        const { isAPIProduct } = this.state;\n        const { intl, match } = this.props;\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n\n        switch (apiType) {\n            case 'GRAPHQL':\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.operations',\n                                defaultMessage: 'operations',\n                            })}\n                            to={pathPrefix + 'operations'}\n                            Icon={<ResourcesIcon />}\n                        />\n                    </>\n                );\n            case 'WS':\n                return '';\n            default:\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.resources',\n                                defaultMessage: 'resources',\n                            })}\n                            to={pathPrefix + 'resources'}\n                            Icon={<ResourcesIcon />}\n                        />\n                    </>\n                );\n        }\n    }\n\n    /**\n     * This method is similar to ReactJS `setState` method, In this `updateAPI()` method, we accept partially updated\n     * API object or comple API object. When updating , the provided updatedAPI object will be merged with the existing\n     * API object in the state and use it as the payload in the /apis PUT operation.\n     *\n     * Partially updated API object means: {description: \"Here is my new description..\"} kind of object. It should have\n     * a key in API object and value contains the updated value of that property\n     * @param {Object} [_updatedProperties={}] Partially updated API object or complete API object\n     * (even an instance of API class is accepted here)\n     * @param {Boolean} isAPIProduct Whether the update operation should execute on an API or API Product\n     * @returns {Promise} promise object that resolve to update (/apis PUT operation) response\n     */\n    updateAPI(_updatedProperties = {}) {\n        const { api } = this.state;\n        let isAPIProduct = false;\n        if (api.apiType === 'APIProduct') {\n            isAPIProduct = true;\n        }\n        const updatedProperties = _updatedProperties instanceof API ? _updatedProperties.toJson() : _updatedProperties;\n        let promisedUpdate;\n        // TODO: Ideally, The state should hold the corresponding API object\n        // which we could call it's `update` method safely ~tmkb\n        if (!isEmpty(updatedProperties)) {\n            // newApi object has to be provided as the updatedProperties. Then api will be updated.\n            promisedUpdate = api.update(updatedProperties);\n        } else {\n            // Just like calling noArg `setState()` will just trigger a re-render without modifying the state,\n            // Calling `updateAPI()` without args wil return the API without any update.\n            // Just sync-up the api state with backend\n            promisedUpdate = API.get(api.id);\n        }\n        return promisedUpdate\n            .then((updatedAPI) => {\n                if (isAPIProduct) {\n                    Alert.info(`${updatedAPI.name} API updated successfully`);\n                    this.setState({ api: updatedAPI });\n                    return updatedAPI;\n                } else {\n                    Alert.info(`${updatedAPI.name} API updated successfully`);\n                    this.setState({ api: updatedAPI });\n                    return updatedAPI;\n                }\n            })\n            .catch((error) => {\n                // TODO: Should log and handle the error case by the original callee ~tmkb\n                console.error(error);\n                Alert.error(`Something went wrong while updating the ${api.name} API!!`);\n                // Kinda force render,Resting API object to old one\n                this.setState({ api });\n                throw error;\n            });\n    }\n\n    /**\n     * Renders Grid container layout with NavBar place static in LHS, Components which coming as children for\n     * Details page\n     * should wrap it's content with <Grid item > element\n     * @returns {Component} Render API Details page\n     */\n    render() {\n        const {\n            api, apiNotFound, isAPIProduct, imageUpdate, tenantList,\n        } = this.state;\n        const {\n            classes,\n            theme,\n            match,\n            intl,\n            location: pageLocation,\n            location: { pathname }, // nested destructuring\n        } = this.props;\n\n        const { settings: settingsContext } = this.context;\n\n        // pageLocation renaming is to prevent es-lint errors saying can't use global name location\n        if (!Details.isValidURL(pathname)) {\n            return <ResourceNotFound location={pageLocation} />;\n        }\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n        const redirectUrl = pathPrefix;\n        if (apiNotFound) {\n            const { apiUUID } = match.params;\n            const resourceNotFoundMessageText = defineMessages({\n                titleMessage: {\n                    id: 'Apis.Details.index.api.not.found.title',\n                    defaultMessage: 'API is not found in the {environmentLabel} Environment',\n                },\n                bodyMessage: {\n                    id: 'Apis.Details.index.api.not.found.body',\n                    defaultMessage: 'Cannot find the API with the given id',\n                },\n            });\n            const resourceNotFountMessage = {\n                title: intl.formatMessage(resourceNotFoundMessageText.titleMessage, {\n                    environmentLabel: `${Utils.getCurrentEnvironment().label}`,\n                }),\n                body: intl.formatMessage(resourceNotFoundMessageText.bodyMessage, { apiUUID: `${apiUUID}` }),\n            };\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        if (!api) {\n            return <Progress />;\n        }\n        const { leftMenuIconMainSize } = theme.custom;\n\n        return (\n            <>\n                <APIProvider\n                    value={{\n                        api,\n                        updateAPI: this.updateAPI,\n                        isAPIProduct,\n                        setAPI: this.setAPI,\n                        setImageUpdate: this.setImageUpdate,\n                        tenantList,\n                    }}\n                >\n                    <div className={classes.LeftMenu}>\n                        <Link to={'/' + (isAPIProduct ? 'api-products' : 'apis') + '/'}>\n                            <div className={classes.leftLInkMain}>\n                                <CustomIcon\n                                    width={leftMenuIconMainSize}\n                                    height={leftMenuIconMainSize}\n                                    icon={isAPIProduct ? 'api-product' : 'api'}\n                                />\n                            </div>\n                        </Link>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.overview',\n                                defaultMessage: 'overview',\n                            })}\n                            to={pathPrefix + 'overview'}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.design.configs',\n                                defaultMessage: 'Design Configurations',\n                            })}\n                            route='configuration'\n                            to={pathPrefix + 'configuration'}\n                            Icon={<ConfigurationIcon />}\n                        />\n                        {!api.isWebSocket() && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.runtime.configs',\n                                    defaultMessage: 'Runtime Configurations',\n                                })}\n                                route='runtime-configuration'\n                                to={pathPrefix + 'runtime-configuration'}\n                                Icon={<RuntimeConfigurationIcon />}\n                            />\n                        )}\n                        {this.getLeftMenuItemForResourcesByType(api.type)}\n                        {!isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.endpoints',\n                                    defaultMessage: 'endpoints',\n                                })}\n                                to={pathPrefix + 'endpoints'}\n                                Icon={<EndpointIcon />}\n                            />\n                        )}\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.subscriptions',\n                                defaultMessage: 'subscriptions',\n                            })}\n                            to={pathPrefix + 'subscriptions'}\n                            Icon={<SubscriptionsIcon />}\n                        />\n                        {!isAPIProduct && !isRestricted(['apim:api_publish'], api) && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.lifecycle',\n                                    defaultMessage: 'lifecycle',\n                                })}\n                                to={pathPrefix + 'lifecycle'}\n                                Icon={<LifeCycleIcon />}\n                            />\n                        )}\n                        {this.getLeftMenuItemForDefinitionByType(api.type)}\n                        {!isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.environments',\n                                    defaultMessage: 'environments',\n                                })}\n                                route='environments'\n                                to={pathPrefix + 'environments'}\n                                Icon={<PersonPinCircleOutlinedIcon />}\n                            />\n                        )}\n                        {!api.isWebSocket() && !isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.left.menu.scope',\n                                    defaultMessage: 'scopes',\n                                })}\n                                to={pathPrefix + 'scopes'}\n                                Icon={<ScopesIcon />}\n                            />\n                        )}\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.business.info',\n                                defaultMessage: 'business info',\n                            })}\n                            to={pathPrefix + 'business info'}\n                            Icon={<BusinessIcon />}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.properties',\n                                defaultMessage: 'properties',\n                            })}\n                            to={pathPrefix + 'properties'}\n                            Icon={<PropertiesIcon />}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.documents',\n                                defaultMessage: 'documents',\n                            })}\n                            to={pathPrefix + 'documents'}\n                            Icon={<DocumentsIcon />}\n                        />\n                        {!api.isWebSocket() && !isRestricted(['apim:api_publish'], api) && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.monetization',\n                                    defaultMessage: 'monetization',\n                                })}\n                                to={pathPrefix + 'monetization'}\n                                Icon={<MonetizationIcon />}\n                            />\n                        )}\n                        {!isAPIProduct && settingsContext.externalStoresEnabled && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.external-stores',\n                                    defaultMessage: 'external dev portals',\n                                })}\n                                to={pathPrefix + 'external-devportals'}\n                                Icon={<StoreIcon />}\n                            />\n                        )}\n                    </div>\n                    <div className={classes.content}>\n                        <APIDetailsTopMenu api={api} isAPIProduct={isAPIProduct} imageUpdate={imageUpdate} />\n                        <div className={classes.contentInside}>\n                            <LastUpdatedTime lastUpdatedTime={api.lastUpdatedTime} />\n                            <Switch>\n                                <Redirect exact from={Details.subPaths.BASE} to={redirectUrl} />\n                                <Route\n                                    path={Details.subPaths.OVERVIEW_PRODUCT}\n                                    key={Details.subPaths.OVERVIEW_PRODUCT}\n                                    component={() => <Overview api={api} />}\n                                />\n                                <Route path={Details.subPaths.OVERVIEW} component={() => <Overview api={api} />} />\n                                <Route\n                                    path={Details.subPaths.API_DEFINITION}\n                                    component={() => <APIDefinition api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.WSDL}\n                                    component={() => <WSDL api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.API_DEFINITION_PRODUCT}\n                                    component={() => <APIDefinition api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.SCHEMA_DEFINITION}\n                                    component={() => <APIDefinition api={api} />}\n                                />\n                                <Route path={Details.subPaths.LIFE_CYCLE} component={() => <LifeCycle api={api} />} />\n                                <Route\n                                    path={Details.subPaths.CONFIGURATION}\n                                    component={() => <DesignConfigurations api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.RUNTIME_CONFIGURATION}\n                                    component={() => <RuntimeConfiguration api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.CONFIGURATION_PRODUCT}\n                                    component={() => <DesignConfigurations api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.RUNTIME_CONFIGURATION_PRODUCT}\n                                    component={() => <RuntimeConfiguration api={api} />}\n                                />\n                                <Route path={Details.subPaths.ENDPOINTS} component={() => <Endpoints api={api} />} />\n                                <Route\n                                    path={Details.subPaths.ENVIRONMENTS}\n                                    component={() => <Environments api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.OPERATIONS}\n                                    component={() => <Operations api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route\n                                    exact\n                                    path={Details.subPaths.RESOURCES_PRODUCT}\n                                    component={APIProductOperations}\n                                />\n                                <Route\n                                    path={Details.subPaths.RESOURCES_PRODUCT_EDIT}\n                                    component={ProductResourcesEdit}\n                                />\n\n                                <Route\n                                    path={Details.subPaths.RESOURCES}\n                                    key={Details.subPaths.RESOURCES}\n                                    component={APIOperations}\n                                />\n\n                                <Route path={Details.subPaths.SCOPES} component={() => <Scope api={api} />} />\n                                <Route path={Details.subPaths.DOCUMENTS} component={() => <Documents api={api} />} />\n                                <Route\n                                    path={Details.subPaths.DOCUMENTS_PRODUCT}\n                                    component={() => <Documents api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.SUBSCRIPTIONS}\n                                    component={() => <Subscriptions api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.SUBSCRIPTIONS_PRODUCT}\n                                    component={() => <Subscriptions api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route path={Details.subPaths.SECURITY} component={() => <Security api={api} />} />\n                                <Route path={Details.subPaths.COMMENTS} component={() => <Comments api={api} />} />\n                                <Route\n                                    path={Details.subPaths.BUSINESS_INFO}\n                                    component={() => <BusinessInformation api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.BUSINESS_INFO_PRODUCT}\n                                    component={() => <BusinessInformation api={api} />}\n                                />\n                                <Route path={Details.subPaths.PROPERTIES} component={() => <Properties api={api} />} />\n                                <Route\n                                    path={Details.subPaths.PROPERTIES_PRODUCT}\n                                    component={() => <Properties api={api} />}\n                                />\n                                <Route path={Details.subPaths.NEW_VERSION} component={() => <CreateNewVersion />} />\n                                <Route path={Details.subPaths.SUBSCRIPTIONS} component={() => <Subscriptions />} />\n                                <Route\n                                    path={Details.subPaths.MONETIZATION}\n                                    component={() => <Monetization api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.MONETIZATION_PRODUCT}\n                                    component={() => <Monetization api={api} />}\n                                />\n                                <Route path={Details.subPaths.EXTERNAL_STORES} component={ExternalStores} />\n                            </Switch>\n                        </div>\n                    </div>\n                </APIProvider>\n            </>\n        );\n    }\n}\n\nDetails.contextType = AppContext;\n// Add your path here and refer it in above <Route/> component,\n// Paths that are not defined here will be returned with Not Found error\n// key name doesn't matter here, Use an appropriate name as the key\nDetails.subPaths = {\n    BASE: '/apis/:api_uuid',\n    BASE_PRODUCT: '/api-products/:apiprod_uuid',\n    OVERVIEW: '/apis/:api_uuid/overview',\n    OVERVIEW_PRODUCT: '/api-products/:apiprod_uuid/overview',\n    API_DEFINITION: '/apis/:api_uuid/api definition',\n    WSDL: '/apis/:api_uuid/wsdl',\n    API_DEFINITION_PRODUCT: '/api-products/:apiprod_uuid/api definition',\n    SCHEMA_DEFINITION: '/apis/:api_uuid/schema definition',\n    LIFE_CYCLE: '/apis/:api_uuid/lifecycle',\n    CONFIGURATION: '/apis/:api_uuid/configuration',\n    RUNTIME_CONFIGURATION: '/apis/:api_uuid/runtime-configuration',\n    CONFIGURATION_PRODUCT: '/api-products/:apiprod_uuid/configuration',\n    RUNTIME_CONFIGURATION_PRODUCT: '/api-products/:apiprod_uuid/runtime-configuration',\n    ENDPOINTS: '/apis/:api_uuid/endpoints',\n    ENVIRONMENTS: '/apis/:api_uuid/environments',\n    OPERATIONS: '/apis/:api_uuid/operations',\n    RESOURCES: '/apis/:api_uuid/resources',\n    RESOURCES_PRODUCT: '/api-products/:apiprod_uuid/resources',\n    RESOURCES_PRODUCT_EDIT: '/api-products/:apiprod_uuid/resources/edit',\n    SCOPES: '/apis/:api_uuid/scopes',\n    DOCUMENTS: '/apis/:api_uuid/documents',\n    DOCUMENTS_PRODUCT: '/api-products/:apiprod_uuid/documents',\n    SUBSCRIPTIONS_PRODUCT: '/api-products/:apiprod_uuid/subscriptions',\n    SUBSCRIPTIONS: '/apis/:api_uuid/subscriptions',\n    SECURITY: '/apis/:api_uuid/security',\n    COMMENTS: '/apis/:api_uuid/comments',\n    BUSINESS_INFO: '/apis/:api_uuid/business info',\n    BUSINESS_INFO_PRODUCT: '/api-products/:apiprod_uuid/business info',\n    PROPERTIES: '/apis/:api_uuid/properties',\n    PROPERTIES_PRODUCT: '/api-products/:apiprod_uuid/properties',\n    NEW_VERSION: '/apis/:api_uuid/new_version',\n    MONETIZATION: '/apis/:api_uuid/monetization',\n    MONETIZATION_PRODUCT: '/api-products/:apiprod_uuid/monetization',\n    EXTERNAL_STORES: '/apis/:api_uuid/external-devportals',\n};\n\n// To make sure that paths will not change by outsiders, Basically an enum\nObject.freeze(Details.paths);\n\nDetails.propTypes = {\n    classes: PropTypes.shape({\n        LeftMenu: PropTypes.string,\n        content: PropTypes.string,\n        leftLInkMain: PropTypes.string,\n        contentInside: PropTypes.string,\n    }).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.object,\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.object,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            leftMenuIconMainSize: PropTypes.number,\n        }),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Details));\n"],"sourceRoot":""}