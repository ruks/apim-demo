{"version":3,"sources":["webpack:///./source/src/app/components/Shared/InlineMessage.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewToken.jsx","webpack:///./source/src/app/components/Apis/Listing/NoApi.jsx","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/KeyConfiguration.jsx","webpack:///./source/src/app/data/Validation.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/Tokens.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewSecret.jsx"],"names":["InlineMessage","React","Component","value","this","setState","state","expanded","render","classes","type","props","messgeType","className","root","elevation","iconItem","height","content","children","propTypes","PropTypes","shape","isRequired","string","withStyles","theme","display","minHeight","alignItems","paddingLeft","spacing","borderRadius","border","fontSize","color","palette","primary","main","paddingRight","button","marginTop","marginBottom","paddingTop","paddingBottom","ViewToken","tokenCopied","name","that","elementName","setTimeout","getTokeScopesString","tokenScopes","join","token","consumerSecret","secretWrapper","secret","variant","component","isOauth","id","defaultMessage","epWrapper","prodLabel","defaultValue","accessToken","multiline","fullWidth","rows","InputProps","disableUnderline","bootstrapRoot","input","bootstrapInput","InputLabelProps","shrink","bootstrapFormLabel","title","placement","text","onCopy","validityTime","defaultProps","number","array","padding","flex","marginRight","backgroundColor","common","white","width","transition","transitions","create","fontFamily","borderColor","boxShadow","lineHeight","whiteSpace","contentWrapper","maxWidth","custom","contentAreaWidth","leftMenu","useStyles","makeStyles","flexGrow","messageWrapper","textAlign","secondary","NoApi","useTheme","container","item","xs","src","app","context","noApiImage","gutterBottom","LeftMenuItem","selected","setSelected","useState","Icon","to","history","route","submenu","routeToCheck","strokeColor","getContrastText","background","iconSize","ditectCurrentMenu","location","window","pathname","test1","RegExp","test2","match","useEffect","listen","activeBackground","leftMenuActive","leftMenuActiveSubmenu","classNames","leftLInk","leftLink_IconLeft","style","cloneElement","leftLink_Icon","noIcon","icon","iconText","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","element","oneOfType","bool","withRouter","textTransform","overflow","textOverflow","LeftMenu","typography","position","bottom","left","top","caption","cursor","textDecoration","justifyContent","withTheme","KeyConfiguration","isValidityTimeError","setValidityTimeError","isCalbackUrlError","setCallbackUrlError","handleChange","field","event","keyRequest","updateKeyRequest","setGenerateEnabled","newRequest","target","currentTarget","newGrantTypes","supportedGrantTypes","Validation","url","validate","error","callbackUrl","checked","filter","includes","isGrantTypeDisabled","grantType","isUserOwner","notFound","intl","isKeysAvailable","serverSupportedGrantTypes","grantTypeDisplayListMap","grantTypeDisplayNameMap","modifiedserverSupportedGrantTypes","forEach","getGrantTypeDisplayList","Settings","grantTypes","Fragment","FormControl","htmlFor","quotaHelp","checkboxWrapper","checkboxWrapperColumn","Object","keys","map","key","control","onChange","e","disabled","label","md","removeHelperPadding","helperText","margin","placeholder","formatMessage","ml","instanceOf","func","injectIntl","FormControlOdd","marginLeft","flexDirection","group","definition","Joi","integer","uri","allow","MenuProps","PaperProps","maxHeight","tokens","accessTokenRequest","updateAccessTokenRequest","timeout","scopesSelected","keyType","subscriptionScopes","required","autoFocus","inputText","length","multiple","renderValue","chips","chip","scope","contextTypes","paper","flexWrap","ViewSecret","secretCopied"],"mappings":"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","file":"Apis~ApplicationDetails.bundle.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport VerticalDivider from './VerticalDivider';\n/**\n * Main style object\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        minHeight: 100,\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n        border: 'none',\n        '& span.material-icons': {\n            fontSize: 60,\n            color: theme.palette.primary.main,\n        }\n    },\n    iconItem: {\n        paddingRight: theme.spacing(2),\n        fontSize: 60,\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    content: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n});\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nclass InlineMessage extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n    render() {\n        const { classes, type } = this.props;\n        const messgeType = type || 'info';\n        return (\n            <Paper className={classes.root} elevation={1}>\n                {messgeType === 'info' && <Icon className={classes.iconItem}>info</Icon>}\n                {messgeType === 'warn' && <Icon className={classes.iconItem}>warning</Icon>}\n                <VerticalDivider height={100} />\n                <div className={classes.content}>{this.props.children}</div>\n            </Paper>\n        );\n    }\n}\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(InlineMessage);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nimport ViewSecret from './ViewSecret';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n        flex: 1,\n        marginRight: theme.spacing(1),\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        height: 100,\n        width: '100%',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    secretWrapper: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n        whiteSpace: 'nowrap',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginTop: 20,\n    },\n});\n/**\n *\n *\n * @class ViewToken\n * @extends {React.Component}\n */\nclass ViewToken extends React.Component {\n    state = {\n        tokenCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewToken\n     */\n    onCopy = (name) => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewToken\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewToken\n     */\n    render() {\n        const {\n            classes, token, consumerSecret,\n        } = this.props;\n        const { tokenCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                {consumerSecret && (\n                    <div className={classes.secretWrapper}>\n                        <ViewSecret secret={{ consumerSecret }} />\n                    </div>\n                )}\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy'\n                                defaultMessage='Please Copy the Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy.apikey'\n                                defaultMessage='Please Copy the API Key'\n                            />\n                        )}\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.please.copy.help'\n                            defaultMessage={'Please copy this generated token value as it will be displayed only for'\n                            + ' the current browser session. '\n                            + '( The token will not be visible in the UI after the page is refreshed. )'}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.access.token'\n                                defaultMessage='Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.apikey'\n                                defaultMessage='API Key'\n                            />\n                        )}\n                    </Typography>\n                    <TextField\n                        defaultValue={token.accessToken}\n                        id='bootstrap-input'\n                        multiline\n                        fullWidth\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={tokenCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={token.accessToken} onCopy={this.onCopy('tokenCopied')}>\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.first'\n                        defaultMessage='Above token has a validity period of '\n                    />\n                    {token.validityTime}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.second'\n                        defaultMessage=' seconds'\n                    />\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.third'\n                            defaultMessage=' and the token has ('\n                        />\n                    )}\n                    {this.getTokeScopesString(token.tokenScopes)}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.fourth'\n                            defaultMessage=') scopes'\n                        />\n                    )}\n.\n                </FormHelperText>\n            </div>\n        );\n    }\n}\n\nViewToken.defaultProps = {\n    consumerSecret: null,\n};\n\nViewToken.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    token: PropTypes.shape({\n        accessToken: PropTypes.string.isRequired,\n        validityTime: PropTypes.number.isRequired,\n        tokenScopes: PropTypes.array.isRequired,\n    }).isRequired,\n    consumerSecret: PropTypes.string,\n};\n\nexport default withStyles(styles)(ViewToken);\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { app } from 'Settings';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    messageWrapper: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function NoApi() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.messageWrapper}>\n                    <img src={app.context + theme.custom.noApiImage} className={classes.messageWrapper} />\n                    <Typography variant='h5' gutterBottom>\n                        <FormattedMessage id='Apis.Listing.NoApi.nodata.title' defaultMessage='No APIs Available' />\n                    </Typography>\n                    <Typography variant='subtitle1' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Listing.NoApi.nodata.content'\n                            defaultMessage='There are no APIs to display right now.'\n                        />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport CustomIcon from './CustomIcon';\n\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        textTransform: 'capitalize',\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.leftMenu.background,\n        width: theme.custom.leftMenu.width,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(0.6),\n        paddingBottom: theme.spacing(0.6),\n        paddingLeft: theme.spacing(1),\n        paddingRight: 0,\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        fontSize: theme.custom.leftMenu.iconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        display: 'none',\n    },\n    submenu: {\n        paddingLeft: theme.spacing(4),\n    },\n});\n/**\n * Renders the left menu section.\n * @param {JSON} props props passed from parent\n * @returns {JSX} Leftmenu element.\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route, submenu,\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(leftMenu.background);\n    const { iconSize } = leftMenu;\n    const ditectCurrentMenu = (location = null) => {\n        if(!location) {\n            location = window.location;\n        }\n        const { pathname } = location;\n        \n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n        \n        \n    };\n    useEffect(() => {\n        ditectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let activeBackground = '';\n    if(selected && !submenu) {\n        activeBackground = leftMenu.leftMenuActive;\n    } else if ( selected && submenu ) {\n        activeBackground = leftMenu.leftMenuActiveSubmenu;\n    } \n    return (\n        <Link\n            className={classNames(\n                classes.leftLInk,\n                {\n                    [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                    [classes.submenu]: submenu,\n                },\n                'leftLInk',\n            )}\n            to={to}\n            style={{ backgroundColor: activeBackground }}\n        >\n            {!submenu && (\n                // If the icon pro ( which is comming from the React Material library )\n                // is coming we add css class and render.\n                // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                // allow customers theme\n                // the product without compiling.\n                Icon ? (\n                    React.cloneElement(Icon, {\n                        className: classNames(\n                            classes.leftLink_Icon,\n                            {\n                                [classes.noIcon]: leftMenu.style === 'no icon',\n                                [classes.submenu]: submenu,\n                            },\n                            'leftLink_Icon',\n                        ),\n                    })\n                ) : (\n                // We can also add custom icons\n                    <CustomIcon\n                        strokeColor={strokeColor}\n                        width={iconSize}\n                        height={iconSize}\n                        icon={props.iconText}\n                        className={classNames(\n                            classes.leftLInk,\n                            {\n                                [classes.noIcon]: leftMenu.style === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        )}\n                    />\n                ))}\n            <Typography\n                className={classNames(\n                    classes.leftLInkText,\n                    {\n                        [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                        [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                    },\n                    'leftLInkText',\n                )}\n            >\n                {props.text}\n            </Typography>\n        </Link>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n    Icon: null,\n    submenu: false,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    Icon: PropTypes.element,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]).isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    iconText: PropTypes.string,\n    history: PropTypes.shape({\n        location: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    submenu: PropTypes.bool,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Settings from 'Settings';\nimport PropTypes from 'prop-types';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport Validation from 'AppData/Validation';\n\nconst styles = theme => ({\n    FormControl: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        paddingLeft: 0,\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    checkboxWrapper: {\n        display: 'flex',\n    },\n    checkboxWrapperColumn: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    group: {\n        flexDirection: 'row',\n    },\n    removeHelperPadding: {\n        '& p': {\n            margin: '8px 0px',\n        },\n    },\n});\n/**\n *\n *\n * @class KeyConfiguration\n * @extends {React.Component}\n */\nconst KeyConfiguration = (props) => {\n    const [isValidityTimeError, setValidityTimeError] = useState(false);\n    const [isCalbackUrlError, setCallbackUrlError] = useState(false);\n    /**\n     * Get the display names for the server supported grant types\n     * @param serverSupportedGrantTypes\n     * @param grantTypeDisplayNameMap\n     */\n    const getGrantTypeDisplayList = (serverSupportedGrantTypes, grantTypeDisplayNameMap) => {\n        const modifiedserverSupportedGrantTypes = {};\n        serverSupportedGrantTypes.forEach((grantType) => {\n            modifiedserverSupportedGrantTypes[grantType] = grantTypeDisplayNameMap[grantType];\n            if (!grantTypeDisplayNameMap[grantType]) {\n                modifiedserverSupportedGrantTypes[grantType] = grantType;\n            }\n        });\n        return modifiedserverSupportedGrantTypes;\n    };\n\n    /**\n     * This method is used to handle the updating of key generation\n     * request object.\n     * @param {*} field field that should be updated in key request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event) => {\n        const { keyRequest, updateKeyRequest, setGenerateEnabled } = props;\n        const newRequest = { ...keyRequest };\n        const { target: currentTarget } = event;\n        let newGrantTypes = [...newRequest.supportedGrantTypes];\n\n        switch (field) {\n            case 'callbackUrl':\n                if (Validation.url.validate(currentTarget.value).error) {\n                    setCallbackUrlError(true);\n                    setGenerateEnabled(false);\n                } else {\n                    setCallbackUrlError(false);\n                    setGenerateEnabled(true);\n                }\n                newRequest.callbackUrl = currentTarget.value;\n                break;\n            case 'validityTime':\n                if (Validation.number.validate(currentTarget.value).error) {\n                    setValidityTimeError(true);\n                    setGenerateEnabled(false);\n                } else {\n                    setValidityTimeError(false);\n                    setGenerateEnabled(true);\n                }\n                newRequest.validityTime = currentTarget.value;\n                break;\n            case 'grantType':\n                if (currentTarget.checked) {\n                    newGrantTypes = [...newGrantTypes, currentTarget.id];\n                } else {\n                    newGrantTypes = newRequest.supportedGrantTypes.filter(item => item !== currentTarget.id);\n                }\n                setGenerateEnabled(newGrantTypes.includes('client_credentials'));\n                newRequest.supportedGrantTypes = newGrantTypes;\n                break;\n            default:\n                break;\n        }\n        updateKeyRequest(newRequest);\n    };\n\n    /**\n     * returns whether grant type checkbox should be disabled or not\n     * @param grantType\n     */\n    const isGrantTypeDisabled = (grantType) => {\n        const { keyRequest, isUserOwner } = props;\n        const { callbackUrl } = keyRequest;\n        return !(isUserOwner && !(!callbackUrl && (grantType === 'authorization_code' || grantType === 'implicit')));\n    };\n\n    /**\n     *\n     *\n     * @returns {Component}\n     * @memberof KeyConfiguration\n     */\n    const {\n        classes, keyRequest, notFound, intl, isUserOwner, isKeysAvailable,\n    } = props;\n    const {\n        serverSupportedGrantTypes, supportedGrantTypes, callbackUrl, validityTime,\n    } = keyRequest;\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    const grantTypeDisplayListMap = getGrantTypeDisplayList(\n        serverSupportedGrantTypes,\n        Settings.grantTypes,\n    );\n\n    return (\n        <React.Fragment>\n            <FormControl className={classes.FormControl} component='fieldset'>\n                <InputLabel shrink htmlFor='age-label-placeholder' className={classes.quotaHelp}>\n                    <FormattedMessage id='grant.types' defaultMessage='Grant Types' />\n                </InputLabel>\n                <div className={classes.checkboxWrapper}>\n                    <div className={classes.checkboxWrapperColumn}>\n                        {Object.keys(grantTypeDisplayListMap).map((key) => {\n                            const value = grantTypeDisplayListMap[key];\n                            return (\n                                <FormControlLabel\n                                    control={(\n                                        <Checkbox\n                                            id={key}\n                                            checked={!!(supportedGrantTypes\n                                                    && supportedGrantTypes.includes(key))\n                                                    && !isGrantTypeDisabled(key)}\n                                            onChange={e => handleChange('grantType', e)}\n                                            value={value}\n                                            disabled={isGrantTypeDisabled(key)}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label={value}\n                                    key={key}\n                                />\n                            );\n                        })}\n                    </div>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        defaultMessage={`The application can use the following grant types to generate \n                            Access Tokens. Based on the application requirement,you can enable or disable \n                            grant types for this application.`}\n                        id='Shared.AppsAndKeys.KeyConfiguration.the.application.can'\n                    />\n                </FormHelperText>\n            </FormControl>\n            <Box display='flex'>\n                <Grid item xs={10} md={5}>\n                    <TextField\n                        classes={{\n                            root: classes.removeHelperPadding,\n                        }}\n                        fullWidth\n                        id='callbackURL'\n                        label={<FormattedMessage\n                            defaultMessage='Callback URL'\n                            id='Shared.AppsAndKeys.KeyConfiguration.callback.url.label'\n                        />}\n                        value={callbackUrl}\n                        name='callbackURL'\n                        onChange={e => handleChange('callbackUrl', e)}\n                        helperText={\n                            isCalbackUrlError ?\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        defaultMessage='Invalid url. Please enter a valid url.'\n                                        id='Shared.AppsAndKeys.KeyConfCiguration.Invalid.callback.url.error.text'\n                                    />\n                                </Typography> :\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        defaultMessage={`Callback URL is a redirection URI in the client\n                                    application which is used by the authorization server to send the\n                                    client's user-agent (usually web browser) back after granting access.`}\n                                        id='Shared.AppsAndKeys.KeyConfCiguration.callback.url.helper.text'\n                                    />\n                                </Typography>\n                        }\n                        margin='normal'\n                        variant='outlined'\n                        disabled={!isUserOwner}\n                        error={isCalbackUrlError}\n                        placeholder={intl.formatMessage({\n                            defaultMessage: 'http://url-to-webapp',\n                            id: 'Shared.AppsAndKeys.KeyConfiguration.url.to.webapp',\n                        })}\n                    />\n                </Grid>\n                <Grid item xs={10} md={5}>\n                    <Box ml={2}>\n                        <TextField\n                            classes={{\n                                root: classes.removeHelperPadding,\n                            }}\n                            fullWidth\n                            id='validityTime'\n                            label={<FormattedMessage\n                                defaultMessage='Access token validity period'\n                                id='Shared.AppsAndKeys.KeyConfiguration.access.token.validity.label'\n                            />}\n                            value={validityTime}\n                            name='validityTime'\n                            onChange={e => handleChange('validityTime', e)}\n                            helperText={\n                                isValidityTimeError ?\n                                    <Typography variant='caption'>\n                                        <FormattedMessage\n                                            defaultMessage='Please enter a valid number'\n                                            id='Shared.AppsAndKeys.KeyConfCiguration.access.token.validity.error.text'\n                                        />\n                                    </Typography> :\n                                    <Typography variant='caption'>\n                                        <FormattedMessage\n                                            defaultMessage={`This is the validity period ( in seconds ) \n                                    of the access token generated `}\n                                            id='Shared.AppsAndKeys.KeyConfCiguration.access.token.validity.helper.text'\n                                        />\n                                    </Typography>\n                            }\n                            margin='normal'\n                            variant='outlined'\n                            error={isValidityTimeError}\n                            disabled={!isUserOwner || isKeysAvailable}\n                        />\n                    </Box>\n                </Grid>\n            </Box>\n        </React.Fragment>\n    );\n};\nKeyConfiguration.defaultProps = {\n    notFound: false,\n};\nKeyConfiguration.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    keyRequest: PropTypes.shape({\n        callbackUrl: PropTypes.string,\n        validityTime: PropTypes.number,\n        serverSupportedGrantTypes: PropTypes.array,\n        supportedGrantTypes: PropTypes.array,\n    }).isRequired,\n    isUserOwner: PropTypes.bool.isRequired,\n    isKeysAvailable: PropTypes.bool.isRequired,\n    notFound: PropTypes.bool,\n    setGenerateEnabled: PropTypes.func.isRequired,\n    updateKeyRequest: PropTypes.func.isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(KeyConfiguration));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Joi from '@hapi/joi';\n\nconst definition = {\n    number: Joi.number().integer(),\n    url: Joi.string().uri().allow(''),\n};\n\nexport default definition;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(0.25),\n    },\n});\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: 224,\n            width: 250,\n        },\n    },\n};\n\n/**\n * Used to display generate acctoken UI\n */\nconst tokens = (props) => {\n    /**\n    * This method is used to handle the updating of create application\n    * request object.\n    * @param {*} field field that should be updated in appliction request\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'timeout':\n                newRequest.timeout = currentTarget.value;\n                break;\n            case 'scopesSelected':\n                newRequest.scopesSelected = currentTarget.value;\n                break;\n            case 'keyType':\n                newRequest.keyType = currentTarget.value;\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const {\n        classes, intl, accessTokenRequest, subscriptionScopes,\n    } = props;\n\n    return (\n        <React.Fragment>\n            <FormControl margin='normal' className={classes.FormControl}>\n                <TextField\n                    required\n                    label={intl.formatMessage({\n                        defaultMessage: 'Access token validity period',\n                        id: 'Shared.AppsAndKeys.Tokens.access.token',\n                    })}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    helperText={intl.formatMessage({\n                        defaultMessage: 'You can set an expiration period to determine the validity period of '\n                                + 'the token after generation. Set this to a negative value to ensure that the '\n                                + 'token never expires.',\n                        id: 'Shared.AppsAndKeys.Tokens.you.can.set',\n                    })}\n                    fullWidth\n                    name='timeout'\n                    onChange={e => handleChange('timeout', e)}\n                    placeholder={intl.formatMessage({\n                        defaultMessage: 'Enter time in milliseconds',\n                        id: 'Shared.AppsAndKeys.Tokens.enter.time',\n                    })}\n                    value={accessTokenRequest.timeout}\n                    autoFocus\n                    className={classes.inputText}\n                />\n            </FormControl>\n            <FormControl\n                margin='normal'\n                className={classes.FormControlOdd}\n                disabled={subscriptionScopes.length === 0}\n            >\n                <InputLabel htmlFor='quota-helper' className={classes.quotaHelp}>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate.scopes'\n                        defaultMessage='Scopes'\n                    />\n\n                </InputLabel>\n                <Select\n                    name='scopesSelected'\n                    multiple\n                    value={accessTokenRequest.scopesSelected}\n                    onChange={e => handleChange('scopesSelected', e)}\n                    input={<Input id='select-multiple-chip' />}\n                    renderValue={selected => (\n                        <div className={classes.chips}>\n                            {selected.map(value => (\n                                <Chip key={value} label={value} className={classes.chip} />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={MenuProps}\n                >\n                    {subscriptionScopes.map(scope => (\n                        <MenuItem\n                            key={scope}\n                            value={scope}\n                        >\n                            {scope}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate'\n                        defaultMessage={'When you generate access tokens to APIs protected by scope/s,'\n                            + ' you can select the scope/s and then generate the token for it. Scopes enable '\n                            + 'fine-grained access control to API resources based on user roles. You define scopes to '\n                            + 'an API resource. When a user invokes the API, his/her OAuth 2 bearer token cannot grant '\n                            + 'access to any API resource beyond its associated scopes.'}\n                    />\n                </Typography>\n            </FormControl>\n        </React.Fragment>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default injectIntl(withStyles(styles)(tokens));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        height: 100,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginBottom: 20,\n    },\n});\n/**\n *\n *\n * @class ViewSecret\n * @extends {React.Component}\n */\nclass ViewSecret extends React.Component {\n    state = {\n        secretCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewSecret\n     */\n    onCopy = name => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     *\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewSecret\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewSecret\n     */\n    render() {\n        const { classes, secret } = this.props;\n        const { secretCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret'\n                            defaultMessage='Please Copy the Consumer Secret'\n                        />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret.help'\n                            defaultMessage={`Please make a note of the regenerated consumer \n                            secret value as it will be displayed only once.`}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.consumer.secret'\n                            defaultMessage='Consumer Secret'\n                        />\n                    </Typography>\n                    <TextField\n                        defaultValue={secret.consumerSecret}\n                        id='bootstrap-input'\n                        multiline\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={secretCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={secret.consumerSecret} onCopy={this.onCopy('secretCopied')}>\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nViewSecret.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    secret: PropTypes.shape({\n        consumerSecret: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(ViewSecret);\n"],"sourceRoot":""}