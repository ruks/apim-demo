{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/ApiContext.jsx","webpack:///./source/src/app/components/Apis/Listing/StarRatingBar.jsx","webpack:///./source/src/app/components/Apis/Listing/Background.jsx","webpack:///./source/src/app/components/Apis/Listing/ImageGenerator.jsx","webpack:///./source/src/app/components/Apis/Details/StarRatingSummary.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListing.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/SubscribeToApi.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiBreadcrumbs.jsx","webpack:///./source/src/app/components/Shared/withSettingsContext.jsx","webpack:///./source/src/app/components/Apis/Listing/DocThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTableView.jsx","webpack:///./source/src/app/components/Apis/Listing/APICategoryThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/CategoryListingCategories.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagCloud.jsx","webpack:///./source/src/app/components/Apis/Listing/RecommendedApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/Recommendations.jsx","webpack:///./source/src/app/components/Apis/Listing/CommonListing.jsx","webpack:///./source/src/app/components/Apis/Details/Social/EmbadCode.jsx","webpack:///./source/src/app/components/Apis/Details/Social/Social.jsx","webpack:///./source/src/app/components/Apis/Details/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/Labels.jsx","webpack:///./source/src/app/components/Apis/Details/InfoBar.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/ButtonPanel.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CreateAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/SubscribeToAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateKeysStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CopyAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/Wizard.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx"],"names":["ApiContext","React","createContext","active","handleMenuSelect","api","applications","subscribedApplications","applicationsAvailable","updateSubscriptionData","StarRatingBar","Component","constructor","props","super","this","state","avgRating","userRating","count","total","getApiRating","bind","removeUserRating","doRate","componentDidUpdate","prevProps","ratingUpdate","componentDidMount","apiId","setRatingUpdate","user","AuthManager","getUser","Api","getRatingFromUser","then","response","setState","body","pagination","rateIndex","ratingInfo","rating","addRating","catch","error","Alert","removeRatingOfUser","render","classes","isEditable","showSummary","apiRating","apiRatingNumber","parseFloat","Fragment","reviewCount","returnCount","className","map","i","key","starRate","noStarRate","onClick","removeRating","name","value","precision","readOnly","defaultProps","propTypes","PropTypes","shape","isRequired","theme","string","bool","oneOfType","number","func","withStyles","fontSize","color","custom","infoBar","starColor","palette","grey","A200","display","justifyContent","alignItems","cursor","withTheme","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","colorPair","width","height","thumbnailBoxChild","rects","j","sub","toString","push","fill","fillOpacity","x","y","primeColor","prime","svgImage","objectFit","ImageGenerator","PureComponent","fixedIcon","category","backgroundIndex","randomBackgroundIndex","IconElement","str","colorPairs","thumbnail","backgrounds","type","document","icon","MaterialIcons","categories","icons","length","randomIconIndex","charCodeAt","id","iconWrapper","style","Icon","position","right","getContrastText","background","ratingSummary","variant","gutterBottom","align","defaultMessage","windowURL","window","URL","webkitURL","ApiThumb","selectedIcon","imageObj","isHover","imageLoaded","toggleMouseOver","getAPIThumbnail","data","headers","iconJson","JSON","parse","size","url","createObjectURL","finally","componentWillUnmount","revokeObjectURL","getPathPrefix","event","path","isMonetizationEnabled","context","detailsLink","customWidth","customHeight","showInfo","social","showRating","version","provider","businessInformation","businessOwner","trim","lifeCycleStatus","status","imageWidth","imageHeight","defaultImage","defaultApiImage","ImageView","src","alt","media","class","onMouseOver","onFocus","onMouseOut","onBlur","raised","classNames","card","textblock","monetizationLabel","to","suppressLinkStyles","root","apiDetails","textWrapper","thumbHeader","handleRedirectToAPIOverview","title","row","thumbBy","thumbInfo","thumbLeft","thumbRight","contextBox","thumbLeftAction","ratingWrapper","chipWrapper","transportType","label","undefined","apiType","contextType","margin","spacing","maxWidth","transition","padding","contentBackgroundColor","textDecoration","text","disabled","thumbContent","alignSelf","flex","whiteSpace","overflow","textOverflow","parseInt","lineHeight","textAlign","thumbWrapper","paddingTop","marginRight","deleteIcon","secondary","imageWrapper","iconColor","imageOverlap","bottom","marginTop","ApiTagThumb","tag","mainPage","tagLink","tagWise","image","split","app","Typography","ListItem","button","ListItemIcon","ListItemText","primary","backgroundColor","paper","tagCloud","leftMenu","useStyles","makeStyles","mainTitle","mainTitleWrapper","flexGrow","listContentWrapper","linkTextWrapper","main","tagWiseThumbWrapper","filterTitle","fontWeight","paddingLeft","titleBackground","mainPageList","mainPageAllApis","TagCloudListingTags","useTheme","showAllApis","useHistory","allTags","apisTagCloudGroup","filter","item","List","component","aria-label","Object","keys","Divider","appBar","borderBottom","mainIconWrapper","paddingRight","content","iconDefault","TagCloudListing","setAllTags","useState","useEffect","API","getAllTags","list","console","log","strokeColorMain","strokeColor","subscribeToApi","appSelected","setAppSelected","policySelected","setPolicySelected","applicationsList","setApplicationsList","throttlingPolicyList","subscriptionRequest","updateSubscriptionRequest","renderSmall","tierName","applicationId","handleChange","field","newRequest","target","throttlingPolicy","container","subscribeRoot","subscribeRootSmall","xs","md","FormControl","smallDisplay","shrink","htmlFor","quotaHelp","onChange","e","input","displayEmpty","selectEmpty","smallDisplayFix","FormControlOdd","policy","tierPlan","selectMenuRoot","monetizationAttributes","pricePerRequest","currencyType","fixedPrice","billingCycle","index","arrayOf","titleBar","borderBottomWidth","borderBottomStyle","borderColor","marginBottom","buttonLeft","buttonRight","marginLeft","buttonsWrapper","legend","inputText","buttonRightLink","link","linkNotActive","selectedTagText","textIndent","apiGroup","ApiBreadcrumbs","selectedTag","Paper","elevation","Breadcrumbs","Link","CustomIcon","withSettings","WrappedComponent","DocThumb","loading","open","overview_link","isRedirect","openMoreMenu","doc","sourceType","apiName","apiVersion","apiUUID","details_link","contentPictureOverlap","minHeight","ApiTableView","gridView","themeAdditions","muiTheme","overrides","MUIDataTable","boxShadow","tableRoot","border","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","MUIDataTableBodyCell","flexWrap","systemTheme","merge","DefaultConfigurations","Configurations","assign","createMuiTheme","intl","xhrRequest","setTenantDomain","code","formatMessage","query","page","rowsPerPage","searchQuery","URLSearchParams","get","composeQuery","queryString","limit","offset","search","getAllAPIs","pageType","getData","columns","options","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","artifact","rowIndex","sort","apiNameLink","rowImageOverride","filterType","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","customRowRender","dataIndex","print","download","viewColumns","customToolbar","Loading","NoApi","getMuiTheme","injectIntl","listViewIconSize","APICategoryThumb","categoryLink","CategoryListingCategories","allCategories","clickablePointer","ApiTagCloud","colorOptions","history","apisTagWithoutGroups","minSize","maxSize","tags","shuffle","tagSearchURL","handleOnClick","listType","RecommendedApiThumb","Card","CardMedia","CardContent","Chip","unit","Recommendations","getApiRecommendations","rowsPerPageOptions","CommonListing","prevState","showLeftMenu","enabled","settings","monetizationEnabled","recommendationEnabled","isRecommendationEnabled","defaultApiView","restApiClient","apiCategories","location","tagCloudActive","splits","splitTagArray","tagPaneVisible","categoryPaneVisible","LeftMenu","sliderButton","toggleLeftMenu","LeftMenuForSlider","rotatedText","contentWithoutTags","contentWithTagsHidden","contentWithTags","IconButton","setListType","iconSelected","Provider","Settings","rightIcon","ListingWrapper","contentAreaWidth","listGridSelectedColor","flexDirection","paddingBottom","sliderWidth","fontFamily","typography","top","left","overflowY","sliderBackground","transform","transformOrigin","recommendationsBar","getModalStyle","shadows","codeIcon","iconStyle","modalStyle","setOpen","codeCopied","setCodeCopied","searchParams","set","embadCode","Modal","onClose","aria-labelledby","aria-describedby","Tooltip","placement","onCopy","setTimeout","socialLink","oneFlex","socialLinkWrapper","divider","borderRight","useContext","apiUrl","encodeURI","github_repo","github","slack_url","slack","additionalProperties","showSharing","showFacebook","showReddit","showTwitter","showEmbad","showEmail","href","rel","Environments","that","urlCopied","apiClient","downloadWSDL","environmentName","getWsdlClient","downloadWSDLForEnvironment","done","Utils","downloadFile","process","downloadSwagger","environment","getSwaggerByAPIIdAndEnvironment","Grid","endpointURLs","endpoint","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","iconAligner","environmentType","iconEven","iconTextWrapper","heading","ExpansionPanelDetails","URLs","http","https","ws","wss","TextField","defaultValue","InputProps","disableUnderline","bootstrapRoot","bootstrapInput","InputLabelProps","bootstrapFormLabel","defaultVersionURLs","Button","buttonIcon","object","light","iconOdd","borderRadius","common","white","transitions","create","Labels","getSwaggerByAPIIdAndLabel","labels","accessUrls","InfoBar","pathname","test1","RegExp","test2","match","showOverview","todo","policies","dropDownApplications","dropDownPolicies","notFound","tabValue","comment","commentList","checked","getSchema","getProvider","ditectCurrentMenu","listen","getProviderMail","mail","businessOwnerEmail","getTechnical","owner","technicalOwner","getTechnicalMail","technicalOwnerEmail","newAPI","getGraphQLSchemaByAPIId","windowUrl","binary","Blob","anchor","createElement","click","ratings","prodUrlCopied","sandboxUrlCopied","epUrl","showThumbnail","apisTagsWithoutGroups","resourceNotFountMessage","ResourceNotFound","message","infoBarMain","linkTitle","VerticalDivider","advertiseInfo","advertised","StarRatingSummary","originalStoreUrl","viewInPubStoreLauncher","linkText","Collapse","in","infoContent","contentWrapper","description","Table","table","TableBody","TableRow","TableCell","scope","leftCol","apiOwner","contentToTop","chip","infoContentBottom","expandWrapper","toggleOverview","buttonView","buttonOverviewText","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalRight","leftLInkMain","leftLInkMainText","detailsContent","contentLoader","contentLoaderRightMenu","withRouter","mainBack","infoBarHeight","minWidth","backIcon","backText","zIndex","iconEvenColor","iconOddColor","verticlaAlign","tagChipBackground","styles","mt","mr","pl","ButtonPanel","currentStep","handleCurrentStep","handleReset","nextActive","Box","stepsLength","appCreateFormWrapper","APPLICATION_STATES","setThrottlingPolicyList","applicationRequest","setApplicationRequest","tokenType","groups","attributes","isNameValid","setIsNameValid","allAppAttributes","setAllAppAttributes","setNotFound","setCreatedApp","incrementStep","setStepStatus","stepStatuses","validateName","Promise","resolve","reject","Error","promiseTiers","getAllTiers","promisedAttributes","getAllApplicationAttributes","all","tierResponse","allAttributes","throttlingPolicyListLocal","allAppAttr","hidden","px","ApplicationCreateForm","updateApplicationRequest","handleAttributesChange","newApplicationRequest","cloneDeep","isRequiredAttribute","attribute","required","getAttributeValue","handleDeleteChip","appGroups","values","v","handleAddChip","slice","createApplication","appCreated","PROCEED","BLOCKED","SUBSCRIPTION_STATES","apiObject","newApp","setNewApp","tiers","createdApp","newSubscriptionRequest","tierData","SubscribeToApi","subscribe","subscriptionId","info","keyConfigWrapper","radioWrapper","keyStates","selectedType","setSelectedType","setNextActive","isUserOwner","setIsUserOwner","keyRequest","setKeyRequest","keyType","serverSupportedGrantTypes","supportedGrantTypes","callbackUrl","setCreatedKeyType","getSettings","obj","grantTypes","formControl","FormLabel","RadioGroup","newKeyType","newKeyRequest","FormControlLabel","control","Radio","KeyConfiguration","updateKeyRequest","setGenerateEnabled","Application","application","generateKeys","keyState","tokenWrapper","setKeyType","subscriptionScopes","setSubscriptionScopes","accessTokenRequest","setAccessTokenRequest","timeout","scopesSelected","setCreatedToken","createdKeyType","getKeys","subscriptionScopesList","messages","defineMessages","dataInfo","Tokens","updateAccessTokenRequest","generateToken","stepComponents","CreateAppStep","SubscribeToAppStep","GenerateKeysStep","GenerateAccessTokenStep","createdToken","handleRedirectTest","my","mx","ViewToken","token","isOauth","Wizard","stepStatus","steps","redirect","CurrentStepComponent","titleSub","py","Stepper","activeStep","Step","StepLabel","handleNext","mb","pt","toolbar","subscribeTitle","plainContent","instructions","wizardContent","ApiConsole","lazy","GraphQLConsole","Overview","Documents","Credentials","Comments","Sdk","LoadableSwitch","apiUuid","params","api_uuid","redirectURL","tryoutRoute","fallback","Progress","exact","from","Details","callback","existingSubscriptions","promisedApplications","restApi","getAPIById","getSubscriptions","getAllApplications","subscriptions","appIdToNameMapping","reduce","acc","cur","element","subscribedAppIds","includes","filteredApp","overviewHiden","xo","setDetailsAPI","rootIconSize","rootIconTextVisible","rootIconVisible","apiDetailPages","showCredentials","showComments","showTryout","showDocuments","showSdks","prefix","sufix","globalStyle","pathPrefix","isWidget","Helmet","LeftMenuItem","route","iconText","shiftLeft","innerRef","node","shiftToLeft","shiftToRight","leftMenuPaddingLeft","backgroundImage","overflowX","rootBackground"],"mappings":"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","file":"Apis.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport const ApiContext = React.createContext({\n    active: 'overview',\n    handleMenuSelect: () => {},\n    api: null,\n    applications: null,\n    subscribedApplications: [],\n    applicationsAvailable: [],\n    updateSubscriptionData: () => {},\n});\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Cancel from '@material-ui/icons/Cancel';\nimport { StarRate } from '@material-ui/icons';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Rating from '@material-ui/lab/Rating';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    starRate: {\n        fontSize: 30,\n        color: theme.custom.infoBar.starColor,\n    },\n    noStarRate: {\n        fontSize: 30,\n        color: theme.palette.grey.A200,\n    },\n    removeRating: {\n        fontSize: 20,\n        color: 'black',\n    },\n    userRating: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n});\n\n/**\n *\n *\n * @class StarRatingBar\n * @extends {React.Component}\n */\nclass StarRatingBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            avgRating: 0,\n            userRating: 0,\n            count: 0,\n            total: 0,\n        };\n        this.getApiRating = this.getApiRating.bind(this);\n        this.removeUserRating = this.removeUserRating.bind(this);\n        this.doRate = this.doRate.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.ratingUpdate !== prevProps.ratingUpdate) {\n            this.getApiRating();\n        }\n    }\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    componentDidMount() {\n        this.getApiRating();\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    getApiRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const user = AuthManager.getUser();\n        const api = new Api();\n        // get api rating\n        if (user != null) {\n            const promisedRating = api.getRatingFromUser(apiId, null);\n            promisedRating.then((response) => {\n                this.setState({\n                    avgRating: response.body.avgRating,\n                    userRating: response.body.userRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total,\n                });\n                if(setRatingUpdate) setRatingUpdate({\n                    avgRating: response.body.avgRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total \n                });\n            });\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} rateIndex\n     * @memberof StarRatingBar\n     */\n    doRate(rateIndex) {\n        const { apiId } = this.props;\n        const api = new Api();\n        const ratingInfo = { rating: rateIndex };\n        const promise = api.addRating(apiId, ratingInfo);\n        promise\n            .then(() => {\n                this.getApiRating();\n            })\n            .catch((error) => {\n                Alert.error('Error occured while adding ratings');\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    removeUserRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const api = new Api();\n        // remove user rating\n        api.removeRatingOfUser(apiId, null)\n            .then(() => {\n                this.getApiRating();\n                setRatingUpdate();\n            })\n            .catch((error) => {\n                Alert.error('Error occured while removing ratings');\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof StarRatingBar\n     */\n    render() {\n        const {\n            avgRating, userRating, count, total,\n        } = this.state;\n        const {\n            classes, isEditable, showSummary, apiRating,\n        } = this.props;\n        const apiRatingNumber = parseFloat(apiRating);\n        return (\n            <React.Fragment>\n                {showSummary ? (\n                    <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n                ) : (\n                    <React.Fragment>\n                        {isEditable ? (\n                            <React.Fragment>\n                                <div className={classes.userRating}>\n                                    {[1, 2, 3, 4, 5].map(i => (\n                                            <StarRate\n                                                key={i}\n                                                className={userRating >= i ? classes.starRate : classes.noStarRate}\n                                                onClick={() => this.doRate(i)}\n                                            />\n                                    ))}\n                                        <Cancel\n                                            className={classes.removeRating}\n                                            onClick={() => this.removeUserRating()}\n                                        />\n                                </div>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <Rating name='half-rating' value={apiRatingNumber} precision={0.1} readOnly />\n                            </React.Fragment>\n                        )}\n                    </React.Fragment>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nStarRatingBar.defaultProps = {\n    apiRating: 0,\n    ratingUpdate: 0,\n    setRatingUpdate: () => {},\n};\n\nStarRatingBar.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    isEditable: PropTypes.bool.isRequired,\n    showSummary: PropTypes.bool.isRequired,\n    apiRating: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    ratingUpdate: PropTypes.number,\n    setRatingUpdate: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(StarRatingBar);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <svg width={width} height={height} className={classes.svgImage}>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({ svgImage: PropTypes.string }).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport MaterialIcons from 'MaterialIcons';\nimport Background from './Background';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        '& span': {\n            position: 'absolute',\n            right: 'auto',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        let count;\n        let colorPair;\n        let randomBackgroundIndex;\n        let IconElement;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        if (key && category) {\n            IconElement = key;\n        } else if (api.type === 'DOC') {\n            IconElement = theme.custom.thumbnail.document.icon;\n        } else {\n            count = MaterialIcons.categories[0].icons.length;\n            const randomIconIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % count;\n            IconElement = MaterialIcons.categories[0].icons[randomIconIndex].id;\n        }\n\n        // Obtain or generate background color pair\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (backgroundIndex && colorPairs.length > backgroundIndex) {\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height + 'px', color }}>\n                    {IconElement}\n                </Icon>\n                <Background width={width} height={height} colorPair={colorPair} />\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { StarRate } from '@material-ui/icons';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(theme.custom.infoBar.background);\n    return {\n        starRate: {\n            color: starColor,\n            '&.material-icons': {\n                fontSize: 40,\n            },\n        },\n        userRating: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n    };\n};\n\nfunction StarRatingSummary(props) {\n    const {\n        classes, theme, avgRating, reviewCount, returnCount,\n    } = props;\n    return (\n        <React.Fragment>\n            {returnCount > 0 ? (\n                <React.Fragment>\n                    <Icon className={classes.starRate}>star_border</Icon>\n                    <div className={classes.ratingSummary}>\n                        <div className={classes.userRating}>\n                            <Typography variant='body1'>{avgRating}</Typography>\n                            <Typography variant='body1'>/5.0</Typography>\n                        </div>\n                        <Typography variant='body1' gutterBottom align='left'>\n                            {reviewCount}{' '}\n                            {reviewCount === 1 ? (\n                                <FormattedMessage defaultMessage='user' id='Apis.Listing.StarRatingBar.user' />\n                            ) : (\n                                <FormattedMessage defaultMessage='users' id='Apis.Listing.StarRatingBar.users' />\n                            )}\n                        </Typography>\n                    </div>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <StarRate className={classes.starRate} style={{ color: theme.palette.grey.A200 }} />\n                    <div className={classes.ratingSummary}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage defaultMessage='Not Rated' id='Apis.Listing.StarRatingBar.not.rated' />\n                        </Typography>\n                    </div>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n}\n\nexport default withStyles(styles, { withTheme: true })(StarRatingSummary);\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\nimport classNames from 'classnames';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n        position: 'relative',\n    },\n    apiDetails: {\n        padding: theme.spacing(1),\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbLeftAction: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '10px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n    textblock: {\n        color: theme.palette.text.secondary,\n        position: 'absolute',\n        bottom: '35px',\n        right: '10px',\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        'padding-left': '10px',\n        'padding-right': '10px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass ApiThumb extends React.Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n            imageLoaded: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof ApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        }).finally(() => {\n            this.setState({ imageLoaded: true })\n        })\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof ApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover, imageLoaded,\n        } = this.state;\n        const path = this.getPathPrefix();\n        const { isMonetizationEnabled } = this.context;\n\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { custom: { thumbnail, social: { showRating } } } = theme;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        if (\n            api.businessInformation &&\n            api.businessInformation.businessOwner &&\n            api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (!imageLoaded) {\n            ImageView = (<div class=\"image-load-frame\">\n                <div class=\"image-load-animation1\"></div>\n                <div class=\"image-load-animation2\"></div>\n            </div>)\n        } else if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                {isMonetizationEnabled && (\n                    <div className={classes.textblock}>{api.monetizationLabel}</div>\n                )}\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.row}>\n                            <Typography variant='caption' gutterBottom align='left' className={classes.thumbBy}>\n                                <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                                <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                                {provider}\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.row}>\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='subtitle1'>{version}</Typography>\n                                    <Typography variant='caption' gutterBottom align='left'>\n                                        <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                    </Typography>\n                                </div>\n                            </div>\n                            <div className={classes.row}>\n                                <div className={classes.thumbRight}>\n                                    <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                        {context}\n                                    </Typography>\n                                    <Typography\n                                        variant='caption'\n                                        gutterBottom\n                                        align='right'\n                                        className={classes.context}\n                                    >\n                                        <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                                    </Typography>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={classes.thumbInfo}>\n                            {showRating && <div className={classes.thumbLeftAction}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>}\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                    {(api.lifeCycleStatus === 'PROTOTYPED') && (\n                                        <Chip\n                                        label={api.apiType === 'APIProduct' ? api.state : api.lifeCycleStatus}\n                                        color='default'\n                                    />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nApiThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(ApiThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, classes, theme, style, mainPage,\n    } = props;\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <div className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <div className={classNames(classes.thumbContent)}>\n                <Link to={tagLink} className={classes.textWrapper}>\n                    <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                        {name}\n                    </Typography>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport ApiTagThumb from './ApiTagThumb';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    linkTextWrapper: {\n        color: theme.palette.primary.main,\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n    mainPageList: {\n        display: 'flex',\n    },\n    mainPageAllApis: {\n        width: '100%',\n    }\n}));\n\n/**\n * Shared listing page\n *\n * @class TagCloudListing\n * @extends {Component}\n */\nfunction TagCloudListingTags(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter(item => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <>\n            {!mainPage && (<Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                <FormattedMessage defaultMessage='Api Groups' id='Apis.Listing.TagCloudListingTags.title' />\n            </Typography>)}\n            <List component='nav' aria-label='main mailbox folders' className={classNames({ [classes.mainPageList]: mainPage })}>\n                {Object.keys(apisTagCloudGroup).map((key) => {\n                    return <ApiTagThumb key={key} tag={apisTagCloudGroup[key]} path={tagWiseURL} style={style} mainPage={mainPage} />;\n                })}\n            </List>\n            {showAllApis && (\n                <div className={classNames({ [classes.mainPageAllApis]: mainPage })}>\n                    <Divider />\n\n                    <Link to='apis/' className={classes.textWrapper}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Icon>label</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <FormattedMessage\n                                        defaultMessage='All Apis'\n                                        id='Apis.Listing.TagCloudListingTags.allApis'\n                                    />\n                                }\n                            />\n                        </ListItem>\n                    </Link>\n                </div>\n            )}\n        </>\n\n    ) : (\n            <>\n                {!mainPage && (<Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='Api Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>)}\n                <div className={classes.mainTitle}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='API groups cannot be found'\n                            id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                        />\n                    </Typography>\n                    <Link to='apis/' className={classes.linkTextWrapper}>\n                        <Typography variant='subtitle1' gutterBottom align='center'>\n                            <FormattedMessage\n                                defaultMessage='All Apis'\n                                id='Apis.Listing.TagCloudListingTags.allApis'\n                            />\n                        </Typography>\n                    </Link>\n                </div>\n            </>\n        );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\nexport default function TagCloudListing() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage={true} />}\n            </div>\n        </main>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    titleBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        borderColor: theme.palette.text.secondary,\n        marginBottom: 20,\n    },\n    buttonLeft: {\n        alignSelf: 'flex-start',\n        display: 'flex',\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        marginLeft: 20,\n    },\n    title: {\n        display: 'inline-block',\n        marginLeft: 20,\n    },\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    legend: {\n        marginBottom: 0,\n        borderBottomStyle: 'none',\n        marginTop: 20,\n        fontSize: 12,\n    },\n    inputText: {\n        marginTop: 20,\n    },\n    buttonRightLink: {\n        textDecoration: 'none',\n    },\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    subscribeRoot: {\n        paddingLeft: theme.spacing(2),\n    },\n    subscribeRootSmall: {\n        marginLeft: `-${theme.spacing(4)}px`,\n    },\n    smallDisplay: {\n        width: 240,\n        '& .MuiInput-formControl': {\n            marginTop: 0,\n        },\n    },\n    smallDisplayFix: {\n        '& .MuiSelect-selectMenu': {\n            padding: 0,\n        },\n    },\n    selectMenuRoot: {\n        margin: 0,\n        padding: 0,\n    },\n});\n\nconst subscribeToApi = (props) => {\n    const [appSelected, setAppSelected] = useState('');\n    const [policySelected, setPolicySelected] = useState('');\n    const [applicationsList, setApplicationsList] = useState([]);\n    const {\n        classes,\n        throttlingPolicyList,\n        applicationsAvailable,\n        subscriptionRequest,\n        updateSubscriptionRequest,\n        renderSmall,\n    } = props;\n\n    useEffect(() => {\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            setPolicySelected(throttlingPolicyList[0].tierName);\n        }\n    }, [throttlingPolicyList]);\n\n    useEffect(() => {\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            setApplicationsList(applicationsAvailable);\n            setAppSelected(applicationsAvailable[0].value);\n            const newRequest = { ...subscriptionRequest };\n            newRequest.applicationId = applicationsAvailable[0].value;\n        }\n    }, [applicationsAvailable]);\n\n    /**\n     * This method is used to handle the updating of subscription\n     * request object and selected fields.\n     * @param {*} field field that should be updated in subscription request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event) => {\n        const newRequest = { ...subscriptionRequest };\n        const { target } = event;\n        switch (field) {\n            case 'application':\n                newRequest.applicationId = target.value;\n                setAppSelected(target.value);\n                break;\n            case 'throttlingPolicy':\n                newRequest.throttlingPolicy = target.value;\n                setPolicySelected(target.value);\n                break;\n            default:\n                break;\n        }\n        updateSubscriptionRequest(newRequest);\n    };\n\n    return (\n        <Grid container className={classNames(classes.subscribeRoot, { [classes.subscribeRootSmall]: renderSmall })}>\n            <Grid item xs={12} md={renderSmall ? 12 : 6}>\n                {appSelected && (\n                    <FormControl className={classNames(classes.FormControl, { [classes.smallDisplay]: renderSmall })}>\n                        <InputLabel shrink htmlFor='age-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.application'\n                                defaultMessage='Application'\n                            />\n                        </InputLabel>\n                        <Select\n                            value={appSelected}\n                            onChange={e => handleChange('application', e)}\n                            input={<Input name='appSelected' id='app-label-placeholder' />}\n                            displayEmpty\n                            name='appSelected'\n                            className={classes.selectEmpty}\n                        >\n                            {applicationsList.map(app => (\n                                <MenuItem value={app.value} key={app.value}>\n                                    {app.label}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.select.an.application.to.subscribe'\n                                defaultMessage='Select an Application to subscribe'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                )}\n                {throttlingPolicyList && (\n                    <FormControl\n                        className={classNames(classes.FormControl, classes.smallDisplayFix, {\n                            [classes.smallDisplay]: renderSmall,\n                            [classes.FormControlOdd]: !renderSmall,\n                        })}\n                    >\n                        <InputLabel shrink htmlFor='policy-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.throttling.policy'\n                                defaultMessage='Throttling Policy'\n                            />\n                        </InputLabel>\n                        <Select\n                            value={policySelected}\n                            onChange={e => handleChange('throttlingPolicy', e)}\n                            input={<Input name='policySelected' id='policy-label-placeholder' />}\n                            displayEmpty\n                            name='policySelected'\n                            className={classes.selectEmpty}\n                        >\n                            {throttlingPolicyList.map(policy => (\n                                <MenuItem value={policy.tierName} key={policy.tierName}>\n                                    {policy.tierPlan === 'COMMERCIAL' ? (\n                                        <React.Fragment>\n                                            <ListItemText\n                                                classes={{ root: classes.selectMenuRoot }}\n                                                primary={policy.tierName}\n                                                secondary={\n                                                    policy.monetizationAttributes.pricePerRequest ? (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.pricePerRequest}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per Request'}\n                                                        </Typography>\n                                                    ) : (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.fixedPrice}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per '}\n                                                            {policy.monetizationAttributes.billingCycle}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    ) : (\n                                        <ListItemText primary={policy.tierName} />\n                                    )}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.available.policies'\n                                defaultMessage='Available Policies -'\n                            />{' '}\n                            {throttlingPolicyList.map((policy, index) => (\n                                <span key={policy.tierName}>\n                                    {policy.tierName}\n                                    {index !== throttlingPolicyList.length - 1 && <span>,</span>}\n                                </span>\n                            ))}\n                        </FormHelperText>\n                    </FormControl>\n                )}\n            </Grid>\n        </Grid>\n    );\n};\nsubscribeToApi.propTypes = {\n    classes: PropTypes.shape({\n        FormControl: PropTypes.string,\n        quotaHelp: PropTypes.string,\n        selectEmpty: PropTypes.string,\n        FormControlOdd: PropTypes.string,\n        subscribeRoot: PropTypes.string,\n        subscribeRootSmall: PropTypes.string,\n        smallDisplayFix: PropTypes.string,\n        selectMenuRoot: PropTypes.string,\n        smallDisplay: PropTypes.string,\n    }).isRequired,\n    applicationsAvailable: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n    })).isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    subscriptionRequest: PropTypes.shape({}).isRequired,\n    updateSubscriptionRequest: PropTypes.func.isRequired,\n    renderSmall: PropTypes.bool,\n};\nsubscribeToApi.defaultProps = {\n    renderSmall: false,\n};\n\nexport default withStyles(styles)(subscribeToApi);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(1, 3),\n    },\n    link: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    linkNotActive: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'default',\n    },\n    icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n    selectedTagText: {\n        textIndent: 4,\n    },\n    apiGroup: {\n        color: theme.palette.grey[800],\n    },\n}));\n\nexport default function ApiBreadcrumbs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { selectedTag } = props;\n    return (\n        <Paper elevation={0} className={classes.root}>\n            <Breadcrumbs aria-label='breadcrumb'>\n                <RouterLink\n                    to={theme.custom.tagWise.active && theme.custom.tagWise.style === 'page' ? '/api-groups' : '/apis'}\n                    className={classes.apiGroup}\n                >\n                    <Link color='inherit' className={classes.link}>\n                        <Icon className={classes.icon}>dynamic_feed</Icon>\n                        <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.ApiBreadcrumbs.apigroups.main' />\n                    </Link>\n                </RouterLink>\n\n                {selectedTag && <Link color='inherit' className={classes.linkNotActive}>\n                    <CustomIcon width={16} height={16} icon='api' />\n                    <span className={classes.selectedTagText}>{selectedTag}</span>\n                </Link>}\n            </Breadcrumbs>\n        </Paper>\n    );\n}\n","import React from 'react';\nimport { SettingsConsumer } from './SettingsContext';\n\nconst withSettings = (WrappedComponent) => {\n    /**\n     * Higher order component with settings\n     * @param {*} props properties\n     * @returns {Context.Consumer}\n     */\n    function HOCWithSettings(props) {\n        return (\n            <SettingsConsumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </SettingsConsumer>\n        );\n    }\n    return HOCWithSettings;\n};\n\nexport default withSettings;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport CONSTS from 'AppData/Constants';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n        minHeight: 130,\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n/**\n *\n *\n * @class DocThumb\n * @extends {React.Component}\n */\nconst windowURL = window.URL || window.webkitURL;\n\nclass DocThumb extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: true,\n            loading: false,\n            open: false,\n            overview_link: '',\n            isRedirect: false,\n            openMoreMenu: false,\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n        };\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof DocThumb\n     */\n    render() {\n        const {\n            selectedIcon, color, backgroundIndex, category,\n        } = this.state;\n        const { doc, classes, theme } = this.props;\n        const { doc: {\n name, sourceType, apiName, apiVersion, id, apiUUID \n} } = this.props;\n        const details_link = '/apis/' + apiUUID + '/documents/' + id + '/details';\n        const { thumbnail } = theme.custom;\n        const imageWidth = thumbnail.width;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        const ImageView = (\n            <ImageGenerator\n                width={imageWidth}\n                height={140}\n                api={doc}\n                fixedIcon={{\n                    key: selectedIcon,\n                    color,\n                    backgroundIndex,\n                    category,\n                    doc,\n                }}\n            />\n        );\n\n        return (\n            <div className={classes.thumbWrapper}>\n                <Link to={details_link} className={classes.imageWrapper}>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={defaultImage} />}\n                </Link>\n\n                <div\n                    className={classNames(classes.thumbContent, {\n                        [classes.imageOverlap]: thumbnail.contentPictureOverlap,\n                    })}\n                >\n                    <Link to={details_link} className={classes.textWrapper}>\n                        <Typography\n                            className={classes.thumbHeader}\n                            variant='h4'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                    </Link>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage defaultMessage='Source Type:' id='Apis.Listing.DocThumb.sourceType' />\n                        {sourceType}\n                    </Typography>\n                    <div className={classes.thumbInfo}>\n                        <div className={classes.thumbLeft}>\n                            <Typography variant='subtitle1'>{apiName}</Typography>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                <FormattedMessage defaultMessage='Api Name' id='Apis.Listing.DocThumb.apiName' />\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbRight}>\n                            <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                {apiVersion}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='right'>\n                                <FormattedMessage defaultMessage='Api Version' id='Apis.Listing.DocThumb.apiVersion' />\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nDocThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(DocThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport merge from 'lodash.merge';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Icon from '@material-ui/core/Icon';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport DefaultConfigurations from '../../../../defaultTheme';\nimport ImageGenerator from './ImageGenerator';\nimport ApiThumb from './ApiThumb';\nimport DocThumb from './DocThumb';\nimport { ApiContext } from '../Details/ApiContext';\nimport NoApi from './NoApi';\n\nconst styles = (theme) => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass ApiTableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = 10;\n        this.pageType = null;\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        const systemTheme = merge(DefaultConfigurations, Configurations);\n        muiTheme = Object.assign(muiTheme, themeAdditions, systemTheme);\n        return createMuiTheme(muiTheme);\n    };\n\n    componentDidMount() {\n        this.apiType = this.context.apiType;\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            this.apiType !== this.context.apiType\n            || query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.apiType = this.context.apiType;\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { query, selectedTag } = this.props;\n        const { page, rowsPerPage } = this;\n        const { apiType } = this.context;\n        const api = new API();\n        const searchParam = new URLSearchParams(query);\n        const searchQuery = searchParam.get('query');\n        if (query && searchQuery !== null) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return api.search(composeQuery);\n        }\n\n        if (selectedTag) {\n            return api.getAllAPIs({ query: 'tag:' + selectedTag, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: list,\n                });\n            })\n            .catch((e) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof ApiTableView\n     */\n    render() {\n        const { intl, gridView, theme } = this.props;\n        const { custom: { social: { showRating } } } = theme;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.doc.flag'\n                                                    defaultMessage='[Doc] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                }\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.rowImageOverride}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.rating',\n                    defaultMessage: 'Rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                    },\n                    sort: false,\n                    display: showRating ? 'true' : 'excluded',\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page, count } = this;\n                if (page * numberOfRows > count) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                this.getData();\n            },\n        };\n        if (gridView) {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <tr key={rowIndex}><td><DocThumb doc={artifact} /></td></tr>;\n                    } else {\n                        return <tr key={rowIndex}><td><ApiThumb api={artifact} /></td></tr>;\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.filter = false;\n        }\n        if (page === 0 && this.count <= rowsPerPage) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nApiTableView.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(ApiTableView))));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get APICategoryThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction APICategoryThumb(props) {\n    const {\n        category, path, classes, theme,\n    } = props;\n    const categoryLink = path + ':' + category.name;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n\n    return (\n        <Link to={categoryLink} className={classes.textWrapper}>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon>label</Icon>\n                </ListItemIcon>\n                <ListItemText primary={category.name} />\n            </ListItem>\n        </Link>\n    );\n\n}\n\nAPICategoryThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    category: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(APICategoryThumb);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport APICategoryThumb from './APICategoryThumb';\n\nconst useStyles = makeStyles(theme => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CategoryListingCategories\n * @extends {Component}\n */\nfunction CategoryListingCategories(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=api-category';\n    const { allCategories } = props;\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n\n    return allCategories && allCategories.length > 0 ? (\n        (\n            <React.Fragment>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Categories' id='Apis.Listing.CategoryListingCategories.title' />\n                </Typography>\n                <List component='nav' aria-label='main mailbox folders'>\n                    {Object.keys(allCategories).map((key) => {\n                        return <APICategoryThumb key={key} category={allCategories[key]} path={tagWiseURL} style={style} />;\n                    })}\n                </List>\n            </React.Fragment>\n        )\n    ) : (\n        <div className={classes.mainTitle}>\n            <Typography variant='subtitle1' gutterBottom align='center'>\n                <FormattedMessage\n                    defaultMessage='Categories cannot be found'\n                    id='Apis.Listing.CategoryListingCategories.categoriesNotFound'\n                />\n            </Typography>\n        </div>\n    );\n}\n\nCategoryListingCategories.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default CategoryListingCategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { TagCloud } from 'react-tagcloud';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    clickablePointer: {\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Component used to handle API Tag Cloud\n * @class ApiTagCloud\n * @extends {React.Component}\n * @param {any} value @inheritDoc\n */\nfunction ApiTagCloud(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: { key, active },\n            tagCloud: { colorOptions },\n        },\n    } = theme;\n    const history = useHistory();\n\n    const { allTags } = props;\n    let apisTagWithoutGroups = null;\n    if (allTags.count !== 0) {\n        // Remve the tags with a sufix '-group' to ignore the\n        if (active) {\n            apisTagWithoutGroups = allTags.filter(item => item.value.search(key) === -1);\n        } else {\n            apisTagWithoutGroups = allTags;\n        }\n    }\n\n    /**\n     *\n     * @param {String} tag selected tag\n     * @memberof ApiTagCloud\n     */\n    const handleOnClick = (tag) => {\n        const tagSearchURL = `/apis?offset=0&query=tag:${tag.value}`;\n        history.push(tagSearchURL);\n    };\n\n    return (\n        apisTagWithoutGroups && (\n            <React.Fragment>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='Tag Cloud' id='Apis.Listing.ApiTagCloud.title' />\n                </Typography>\n                <TagCloud\n                    minSize={14}\n                    maxSize={25}\n                    colorOptions={colorOptions}\n                    tags={apisTagWithoutGroups}\n                    shuffle={false}\n                    className={classes.clickablePointer}\n                    onClick={tag => handleOnClick(tag)}\n                />\n            </React.Fragment>\n        )\n    );\n}\n\nApiTagCloud.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    tag: PropTypes.shape({}).isRequired,\n    listType: PropTypes.string.isRequired,\n    apiType: PropTypes.string.isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default ApiTagCloud;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\nimport classNames from 'classnames';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    apiDetails: {\n        padding: theme.spacing.unit,\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing.unit,\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing.unit,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing.unit) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing.unit * 2,\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class RecommendedApiThumb\n * @extends {Component}\n */\nclass RecommendedApiThumb extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumb.\n     * @param {*} props\n     * @memberof RecommendedApiThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof RecommendedApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof RecommendedApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof RecommendedApiThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof RecommendedApiThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover,\n        } = this.state;\n        const path = this.getPathPrefix();\n\n        // const detailsLink = path + this.props.api.id;\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { thumbnail } = theme.custom;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        // if (\n        //     api.businessInformation &&\n        //     api.businessInformation.businessOwner &&\n        //     api.businessInformation.businessOwner.trim() !== ''\n        // ) {\n        //     provider = api.businessInformation.businessOwner;\n        // }\n        // if (!api.lifeCycleStatus) {\n        //     api.lifeCycleStatus = api.status;\n        // }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.thumbLeft}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nRecommendedApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nRecommendedApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nRecommendedApiThumb.contextType = ApiContext;\n \nexport default withStyles(styles, { withTheme: true })(RecommendedApiThumb);\n ","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport ImageGenerator from './ImageGenerator';\nimport RecommendedApiThumb from './RecommendedApiThumb';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst styles = theme => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class Recommendations\n * @extends {React.Component}\n */\nclass Recommendations extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof Recommendations\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(muiTheme, themeAdditions, Configurations);\n        return createMuiTheme(muiTheme);\n    };\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            query !== prevProps.query ||\n            prevProps.selectedTag !== selectedTag\n        ) {\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.Recommendations.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.Recommendations.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const api = new API();\n        return api.getApiRecommendations();\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof Recommendations\n     */\n    render() {\n        const { intl, gridView } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.Recommendations.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (tableMeta, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.rowImageOverride}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    defaultMessage: 'Rating',\n                    id: 'Apis.Listing.Recommendations.rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                    },\n                    sort: false,\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n        };\n        if (gridView) {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    return <tr key={rowIndex}><td><RecommendedApiThumb api={artifact} /></td></tr>;\n                }\n                return <span />;\n            };\n            options.title = true;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n            options.rowsPerPageOptions = false;\n            options.pagination = false;\n        } else {\n            options.filter = false;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return null;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='Recommended APIs for you' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nRecommendations.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(Recommendations))));\n\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport API from 'AppData/api';\nimport ApiBreadcrumbs from './ApiBreadcrumbs';\nimport ApiTableView from './ApiTableView';\nimport { ApiContext } from '../Details/ApiContext';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CategoryListingCategories from './CategoryListingCategories';\nimport ApiTagCloud from './ApiTagCloud';\nimport Recommendations from './Recommendations';\nimport AuthManager from '../../../data/AuthManager';\n\nconst styles = (theme) => ({\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n        display: 'flex',\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    iconSelected: {\n        color: theme.custom.infoBar.listGridSelectedColor,\n    },\n    content: {\n        flexGrow: 1,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n    contentWithTags: {\n        marginLeft: theme.custom.tagCloud.leftMenu.width,\n    },\n    contentWithoutTags: {\n        marginLeft: 0,\n    },\n    contentWithTagsHidden: {\n        marginLeft: theme.custom.tagCloud.leftMenu.sliderWidth,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.width,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n    },\n    LeftMenuForSlider: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.sliderWidth,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n        display: 'flex',\n    },\n    sliderButton: {\n        fontWeight: 200,\n        background: theme.custom.tagCloud.leftMenu.sliderBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.sliderBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n        position: 'absolute',\n        right: 0,\n        cursor: 'pointer',\n    },\n    rotatedText: {\n        transform: 'rotate(270deg)',\n        transformOrigin: 'left bottom 0',\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        top: theme.custom.infoBar.height * 2,\n        marginLeft: 23,\n        cursor: 'pointer',\n    },\n    recommendationsBar: {\n        height: 60,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\n/**\n * Shared listing page\n *\n * @class CommonListing\n * @extends {Component}\n */\nclass CommonListing extends React.Component {\n    static contextType = Settings;\n\n    /**\n     * Constructor\n     *\n     * @param {*} props Properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            listType: props.theme.custom.defaultApiView,\n            allTags: null,\n            showLeftMenu: false,\n            isMonetizationEnabled: false,\n            isRecommendationEnabled: false,\n        };\n    }\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value view type\n     * @memberof CommonListing\n     */\n    setListType = (value) => {\n        this.setState({ listType: value });\n    };\n\n    /**\n     *\n     * Get all tags\n     * @memberof CommonListing\n     */\n    componentDidMount() {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                this.setState({ allTags: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        const promisedCategories = restApiClient.apiCategories();\n            promisedCategories\n                .then((response) => {\n                    this.setState({ allCategories: response.body.list });\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        this.isMonetizationEnabled();\n        this.isRecommendationEnabled();\n    }\n\n    toggleLeftMenu = () => {\n        this.setState((prevState) => ({ showLeftMenu: !prevState.showLeftMenu }));\n    };\n\n    /**\n     * retrieve Settings from the context and check the monetization enabled\n     */\n    isMonetizationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.monetizationEnabled;\n        this.setState({ isMonetizationEnabled: enabled });\n    }\n\n    /**\n     * retrieve Settings from the context and check whether recommendation is enabled\n     */\n    isRecommendationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.recommendationEnabled;\n        this.setState({ isRecommendationEnabled: enabled });\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof CommonListing\n     */\n    render() {\n        const {\n            theme,\n            classes,\n            location: { search },\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            custom: {\n                tagWise: { key, active, style },\n                tagCloud: { active: tagCloudActive },\n            },\n        } = theme;\n        const {\n            listType, allTags, showLeftMenu, isMonetizationEnabled, allCategories, isRecommendationEnabled\n        } = this.state;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const searchParam = new URLSearchParams(search);\n        const searchQuery = searchParam.get('query');\n        let selectedTag = null;\n        if (search && searchQuery !== null) {\n            // For the tagWise search\n            if (active && key) {\n                const splits = searchQuery.split(':');\n                if (splits.length > 1 && splits[1].search(key) != -1) {\n                    const splitTagArray = splits[1].split(key);\n                    if (splitTagArray.length > 0) {\n                        selectedTag = splitTagArray[0];\n                    }\n                } else if (splits.length > 1 && splits[0] === 'tag') {\n                    selectedTag = splits[1];\n                }\n            }\n        }\n        const tagPaneVisible = allTags && allTags.length > 0 && (tagCloudActive || active);\n        const categoryPaneVisible = allCategories && allCategories.length > 0;\n        return (\n            <>\n                {(categoryPaneVisible || tagPaneVisible) && showLeftMenu && (\n                    <div className={classes.LeftMenu}>\n                        <div className={classes.sliderButton} onClick={this.toggleLeftMenu}>\n                            <Icon>keyboard_arrow_left</Icon>\n                        </div>\n                        {categoryPaneVisible && <CategoryListingCategories allCategories={allCategories} />}\n                        {tagPaneVisible && active && <TagCloudListingTags allTags={allTags} />}\n                        {tagPaneVisible && tagCloudActive && <ApiTagCloud allTags={allTags} />}\n                    </div>\n                )}\n                {(categoryPaneVisible || tagPaneVisible) && !showLeftMenu && (\n                    <div className={classes.LeftMenuForSlider}>\n                        <div className={classes.sliderButton} onClick={this.toggleLeftMenu}>\n                            <Icon>keyboard_arrow_right</Icon>\n                        </div>\n                        <div className={classes.rotatedText} onClick={this.toggleLeftMenu}>\n                            <FormattedMessage defaultMessage='Tag Cloud' id='Apis.Listing.Listing.ApiTagCloud.title' />\n                        </div>\n                    </div>\n                )}\n\n                <main\n                    className={classNames(\n                        classes.content,\n                        { [classes.contentWithoutTags]: !(tagPaneVisible || categoryPaneVisible) || !showLeftMenu },\n                        { [classes.contentWithTagsHidden]: (tagPaneVisible || categoryPaneVisible) && !showLeftMenu },\n                        { [classes.contentWithTags]: (tagPaneVisible || categoryPaneVisible) && showLeftMenu },\n                    )}\n                    id='commonListing'\n                >\n                    <div className={classes.appBar} id='commonListingAppBar'>\n                        <div className={classes.mainIconWrapper}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                        </div>\n                        <div className={classes.mainTitleWrapper} id='mainTitleWrapper'>\n                            <Typography variant='h4' className={classes.mainTitle}>\n                                <FormattedMessage defaultMessage='APIs' id='Apis.Listing.Listing.apis.main' />\n                            </Typography>\n                        </div>\n                        <div className={classes.buttonRight} id='listGridWrapper'>\n                            <IconButton className={classes.button} onClick={() => this.setListType('list')}>\n                                <Icon\n                                    className={classNames(\n                                        { [classes.iconSelected]: listType === 'list' },\n                                        { [classes.iconDefault]: listType === 'grid' },\n                                    )}\n                                >\n                                    list\n                                </Icon>\n                            </IconButton>\n                            <IconButton className={classes.button} onClick={() => this.setListType('grid')}>\n                                <Icon\n                                    className={classNames(\n                                        { [classes.iconSelected]: listType === 'grid' },\n                                        { [classes.iconDefault]: listType === 'list' },\n                                    )}\n                                >\n                                    grid_on\n                                </Icon>\n                            </IconButton>\n                        </div>\n                    </div>\n                    {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                    <div className={classes.listContentWrapper}>\n                        {listType === 'grid' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView query={search} />\n                            </ApiContext.Provider>\n                        )}\n                        {listType === 'list' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView={false} query={search} />\n                            </ApiContext.Provider>\n                        )}\n                    </div>\n                    {isRecommendationEnabled && user &&\n                        <div>\n                            {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                            <div className={classes.listContentWrapper}>\n                                {listType === 'grid' && (\n                                    <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                        <Recommendations gridView query={search} />\n                                    </ApiContext.Provider>\n                                )}\n                                {listType === 'list' && (\n                                    <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                        <Recommendations gridView query={search} />\n                                    </ApiContext.Provider>\n                                )}\n                            </div>\n                        </div>\n                    }\n                </main>\n            </>\n        );\n    }\n}\n\nCommonListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nCommonListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(CommonListing);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\n\n/**\n * Position the modal\n * @returns {JSON} css atrributes JSON.\n */\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    code: {\n        background: '#efefef',\n        color: 'cc0000',\n        border: 'solid 1px #ccc',\n        padding: theme.spacing(1),\n    },\n    iconStyle: {\n        position: 'absolute',\n        top: 60,\n        right: 30,\n    },\n}));\n\n/**\n * Adds two numbers together.\n * @param {JSON} props props passed from parent\n * @returns {JSX} code in a modal\n */\nfunction EmbadCode(props) {\n    const { intl } = props;\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [codeCopied, setCodeCopied] = React.useState(false);\n    const url = new URL(window.location);\n    url.searchParams.set('widget', true);\n\n    const onCopy = () => {\n        setCodeCopied(true);\n        setTimeout(() => setCodeCopied(false), 2000);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const embadCode = '<iframe width=\"450\" height=\"120\" src=\"'\n        + url + '\" frameBorder=\"0\" allowFullScreen title=\"Embad API\" />';\n\n    return (\n        <div>\n            <CodeIcon className={classes.codeIcon} onClick={handleOpen} />\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Social.EmbedCode.embed'\n                            defaultMessage='Embed'\n                        />\n                    </h2>\n                    <div className={classes.code}>\n                        <code>{embadCode}</code>\n                    </div>\n                    <Tooltip\n                        title={\n                            codeCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Social.EmbedCode.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Social.EmbedCode.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <CopyToClipboard\n                            text={embadCode}\n                            onCopy={onCopy}\n                        >\n                            <Icon color='secondary'>file_copy</Icon>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default injectIntl(EmbadCode);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport EmbadCode from 'AppComponents/Apis/Details/Social/EmbadCode';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles((theme) => ({\n    socialLink: {\n        display: 'inline-block',\n        '& img': {\n            width: 32,\n            marginLeft: theme.spacing(1),\n        },\n    },\n    oneFlex: {\n        flex: 1,\n    },\n    socialLinkWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingRight: theme.spacing(2),\n        '& > div': {\n            display: 'inline-block',\n        },\n    },\n    divider: {\n        display: 'inline-block',\n        borderRight: 'solid 1px #ccc',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        height: 30,\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Render the social icons\n * @param {int} num1 The first number.\n * @param {int} num2 The second number.\n * @returns {int} The sum of the two numbers.\n */\nfunction Social() {\n    const classes = useStyles();\n    const { api } = useContext(ApiContext);\n    const { name: apiName } = api;\n    const apiUrl = encodeURI(window.location);\n    const theme = useTheme();\n    const { github_repo: github, slack_url: slack } = api.additionalProperties;\n    const {\n        custom: {\n            social: {\n                showSharing: {\n                    active, showFacebook, showReddit, showTwitter, showEmbad, showEmail,\n                },\n            },\n        },\n    } = theme;\n    if (!active) {\n        return <span />;\n    }\n    return (\n        <>\n            <div className={classes.oneFlex} />\n            <div className={classes.socialLinkWrapper}>\n                {slack && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='github'\n                            href={slack}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Social.Social.slack'\n                                    defaultMessage='Slack'\n                                />\n                            )}\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/slack.png`}\n                                alt={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Social.Social.slack'\n                                        defaultMessage='Slack'\n                                    />\n                                )}\n                            />\n                        </a>\n                    </>\n                )}\n\n                {github && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='github'\n                            href={github}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Social.Social.github'\n                                    defaultMessage='Github'\n                                />\n                            )}\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/github.jpg`}\n                                alt={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Social.Social.github'\n                                        defaultMessage='Github'\n                                    />\n                                )}\n                            />\n                        </a>\n                    </>\n                )}\n                {(slack || github) && (\n                    <div className={classes.divider} />\n                )}\n\n                {/* Facebook */}\n                {showFacebook && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://www.facebook.com/sharer.php?u=${apiUrl}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Social.Social.facebook'\n                                defaultMessage='Facebook'\n                            />\n                        )}\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/facebook.png`}\n                            alt={(\n                                <FormattedMessage\n                                    id='Apis.Details.Social.Social.facebook'\n                                    defaultMessage='Facebook'\n                                />\n                            )}\n                        />\n                    </a>\n                )}\n                {/* Twitter */}\n                {showTwitter && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://twitter.com/share?url=${apiUrl}&text=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Social.Social.twitter'\n                                defaultMessage='Twitter'\n                            />\n                        )}\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/twitter.png`}\n                            alt={(\n                                <FormattedMessage\n                                    id='Apis.Details.Social.Social.twitter'\n                                    defaultMessage='Twitter'\n                                />\n                            )}\n                        />\n                    </a>\n                )}\n                {/* Reddit */}\n                {showReddit && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://www.reddit.com/submit?url=${apiUrl}&title=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Social.Social.reddit'\n                                defaultMessage='Reddit'\n                            />\n                        )}\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/reddit.png`}\n                            alt={(\n                                <FormattedMessage\n                                    id='Apis.Details.Social.Social.reddit'\n                                    defaultMessage='Reddit'\n                                />\n                            )}\n                        />\n                    </a>\n                )}\n                {showEmbad && (\n                    <>\n                        <div className={classes.divider} />\n                        <EmbadCode />\n                    </>\n                )}\n                {showEmail && (\n                    <>\n                        <div className={classes.divider} />\n                        <a\n                            href={`mailto:?Subject=${apiName}&body=Link+:+${apiUrl}\"`}\n                            className={classes.codeIcon}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        >\n                            <MailOutlineIcon />\n                        </a>\n                    </>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default injectIntl(Social);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\nconst styles = theme => ({\n    buttonIcon: {\n        marginRight: 10,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconEven: {\n        color: theme.palette.secondary.light,\n        width: theme.spacing(3),\n    },\n    iconOdd: {\n        color: theme.palette.secondary.main,\n        width: theme.spacing(3),\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    iconStyle: {\n        cursor: 'grab',\n    },\n});\n\n/**\n *  @inheritdoc\n */\nclass Environments extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new API();\n        this.state = {\n            urlCopied: false,\n        };\n        this.downloadWSDL = this.downloadWSDL.bind(this);\n        this.onCopy = this.onCopy.bind(this);\n    }\n\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const caller = function () {\n            that.setState({ urlCopied: false });\n        };\n        setTimeout(caller, 2000);\n    }\n\n    /**\n     * Downloads the WSDL of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environmentName name of the environment\n     */\n    downloadWSDL(apiId, environmentName) {\n        const { intl } = this.props;\n        const wsdlClient = this.apiClient.getWsdlClient();\n        const promisedGet = wsdlClient.downloadWSDLForEnvironment(apiId, environmentName);\n        promisedGet\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.wsdl.error',\n                        defaultMessage: 'Error downloading the WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads the swagger of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    downloadSwagger(apiId, environment) {\n        const promiseSwagger = this.apiClient.getSwaggerByAPIIdAndEnvironment(apiId, environment);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.swagger.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    }\n\n    /**\n     *  @inheritdoc\n     */\n    render() {\n        const { api } = this.context;\n        const { classes, intl } = this.props;\n        const { urlCopied } = this.state;\n\n\n        return (\n            <Grid container spacing={2} item xs={12}>\n                {api.endpointURLs.map((endpoint) => {\n                    return (\n                        <Grid key={endpoint} item xs={12} key={endpoint.environmentName}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary\n                                    expandIcon={<Icon>expand_more</Icon>}\n                                    aria-controls='panel1a-content'\n                                    id='panel1a-header'\n                                >\n                                    <div className={classes.iconAligner}>\n                                        {endpoint.environmentType === 'hybrid' && (\n                                            <Icon className={classes.iconEven}>cloud</Icon>\n                                        )}\n                                        {endpoint.environmentType === 'production' && (\n                                            <Icon className={classes.iconEven}>check_circle</Icon>\n                                        )}\n                                        {endpoint.environmentType === 'sandbox' && (\n                                            <Icon className={classes.iconEven}>Build</Icon>\n                                        )}\n                                        <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {endpoint.environmentName}\n                                            </Typography>\n                                        </span>\n                                    </div>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid container item xs={12} spacing={2}>\n                                        {(endpoint.URLs.http !== null\n                                            || endpoint.URLs.https !== null\n                                            || endpoint.URLs.ws !== null\n                                            || endpoint.URLs.wss !== null) && (\n                                            <Typography className={classes.heading}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.InfoBar.gateway.urls'\n                                                    defaultMessage='Gateway URLs'\n                                                />\n                                            </Typography>\n                                        )}\n                                        {endpoint.URLs.http !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.http}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.http}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.https !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.https}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.https}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.ws !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.ws}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.ws}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.wss !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.wss}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.wss}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            (endpoint.defaultVersionURLs.http !== null ||\n                                                endpoint.defaultVersionURLs.https !== null ||\n                                                endpoint.defaultVersionURLs.ws !== null ||\n                                                endpoint.defaultVersionURLs.wss !== null) && (\n                                            <Typography className={classes.heading}>\n                                                    <FormattedMessage\n                                                    id='Apis.Details.InfoBar.default.gateway.urls'\n                                                    defaultMessage='Default Gateway URLs'\n                                                />\n                                                </Typography>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.http !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.http}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.http}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.https !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.https}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.https}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.ws !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.ws}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.ws}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.wss !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.defaultVersionURLs.wss}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.defaultVersionURLs.wss}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {api.type === 'SOAP' && (\n                                            <Button\n                                                size='small'\n                                                onClick={() => this.downloadWSDL(api.id, endpoint.environmentName)}\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.wsdl'\n                                                    defaultMessage='WSDL'\n                                                />\n                                            </Button>\n                                        )}\n                                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST') && (\n                                            <Button\n                                                size='small'\n                                                onClick={() => this.downloadSwagger(api.id, endpoint.environmentName)}\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.swagger'\n                                                    defaultMessage='Swagger'\n                                                />\n                                            </Button>\n                                        )}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n}\n\nEnvironments.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\nEnvironments.contextType = ApiContext;\n\nexport default injectIntl(withStyles(styles)(Environments));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\nconst styles = (theme) => ({\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconEven: {\n        color: theme.palette.secondary.light,\n        width: theme.spacing(3),\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    iconStyle: {\n        cursor: 'grab',\n    },\n});\n\nclass Labels extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new API();\n        this.state = {\n            urlCopied: false,\n        };\n    }\n\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const caller = function () {\n            that.setState({ urlCopied: false });\n        };\n        setTimeout(caller, 2000);\n    }\n\n    /**\n     * Downloads the Swagger of the api for the provided label\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} label name of the environment\n     */\n    downloadSwagger(apiId, label) {\n        const promiseSwagger = this.apiClient.getSwaggerByAPIIdAndLabel(apiId, label);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.wsdl.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    }\n\n    render() {\n        const { api } = this.context;\n        const { classes, intl } = this.props;\n        const { urlCopied } = this.state;\n\n        return (\n            <Grid container spacing={2} item xs={12}>\n                {api.labels.map((label) => {\n                    return (\n                        <Grid key={label} item xs={12}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary\n                                    expandIcon={<Icon>expand_more</Icon>}\n                                    aria-controls='panel1a-content'\n                                    id='panel1a-header'\n                                >\n                                    <div className={classes.iconAligner}>\n                                        <Icon className={classes.iconEven}>label</Icon>\n                                        <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {label.name}\n                                            </Typography>\n                                        </span>\n                                    </div>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid container item xs={12} spacing={2}>\n                                        <Typography className={classes.heading}>\n                                            <FormattedMessage\n                                                id='Apis.Details.InfoBar.microgateway.urls'\n                                                defaultMessage='Microgateway URLs'\n                                            />\n                                        </Typography>\n                                        {label.accessUrls.map((row) => (\n                                            <Grid item xs={12} key={row}>\n                                                <TextField\n                                                    defaultValue={row}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Labels.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Labels.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={row}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        ))}\n                                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST') && (\n                                            <Button\n                                                size='small'\n                                                onClick={\n                                                    () => this.downloadSwagger(api.id, label.name)\n                                                }\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.swagger'\n                                                    defaultMessage='Swagger'\n                                                />\n                                            </Button>\n                                        )}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n}\n\nLabels.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nLabels.contextType = ApiContext;\n\nexport default injectIntl(withStyles(styles)(Labels));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport { Link, withRouter } from 'react-router-dom';\nimport Collapse from '@material-ui/core/Collapse';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grade from '@material-ui/icons/Grade';\nimport Chip from '@material-ui/core/Chip';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport Social from 'AppComponents/Apis/Details/Social/Social';\nimport VerticalDivider from '../../Shared/VerticalDivider';\nimport ApiThumb from '../Listing/ApiThumb';\nimport ResourceNotFound from '../../Base/Errors/ResourceNotFound';\nimport AuthManager from '../../../data/AuthManager';\nimport Environments from './Environments';\nimport Labels from './Labels';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const mainBack = theme.custom.infoBar.background || '#ffffff';\n    const infoBarHeight = theme.custom.infoBar.height || 70;\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(mainBack);\n\n    return {\n        table: {\n            minWidth: '100%',\n        },\n        root: {\n            height: infoBarHeight,\n            background: mainBack,\n            color: theme.palette.getContrastText(mainBack),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n            display: 'flex',\n            alignItems: 'center',\n            paddingLeft: theme.spacing(2),\n        },\n        backIcon: {\n            color: theme.palette.primary.main,\n            fontSize: 56,\n            cursor: 'pointer',\n        },\n        backText: {\n            color: theme.palette.primary.main,\n            cursor: 'pointer',\n            fontFamily: theme.typography.fontFamily,\n        },\n        starRate: {\n            fontSize: 40,\n            color: starColor,\n        },\n        infoContent: {\n            color: theme.palette.getContrastText(mainBack),\n            background: mainBack,\n            padding: theme.spacing(3),\n            '& td, & th': {\n                color: theme.palette.getContrastText(mainBack),\n            },\n        },\n        infoContentBottom: {\n            background: theme.custom.infoBar.sliderBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.sliderBackground),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        },\n        contentWrapper: {\n            maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n            alignItems: 'center',\n        },\n        infoBarMain: {\n            width: '100%',\n            zIndex: 100,\n        },\n        buttonView: {\n            textAlign: 'left',\n            justifyContent: 'left',\n            display: 'flex',\n            paddingLeft: theme.spacing(3),\n            cursor: 'pointer',\n        },\n        buttonOverviewText: {\n            display: 'inline-block',\n            paddingTop: 3,\n        },\n        paper: {\n            margin: theme.spacing(1),\n        },\n        leftCol: {\n            width: 200,\n        },\n        iconAligner: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n        iconTextWrapper: {\n            display: 'inline-block',\n            paddingLeft: 20,\n        },\n        iconEven: {\n            color: theme.custom.infoBar.iconEvenColor,\n            width: theme.spacing(3),\n        },\n        iconOdd: {\n            color: theme.custom.infoBar.iconOddColor,\n            width: theme.spacing(3),\n        },\n        margin: {\n            marginLeft: 30,\n        },\n        contentToTop: {\n            verticlaAlign: 'top',\n        },\n        viewInPubStoreLauncher: {\n            display: 'flex',\n            flexDirection: 'column',\n            color: theme.palette.getContrastText(mainBack),\n            textAlign: 'center',\n            textDecoration: 'none',\n        },\n        linkText: {\n            fontSize: theme.typography.fontSize,\n        },\n        chip: {\n            background: theme.custom.infoBar.tagChipBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.tagChipBackground),\n            marginRight: theme.spacing(1),\n        },\n        expandWrapper: {\n            cursor: 'pointer',\n            display: 'block',\n        },\n        linkTitle: {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        leftMenu: {},\n        leftMenuHorizontal: {},\n        leftMenuVerticalLeft: {},\n        leftMenuVerticalRight: {},\n        leftLInkMain: {},\n        leftLInkMainText: {},\n        detailsContent: {},\n        content: {},\n        contentLoader: {},\n        contentLoaderRightMenu: {},\n    };\n};\n\n/**\n *\n *\n * @class InfoBar\n * @extends {React.Component}\n */\nclass InfoBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            api: null,\n            applications: null,\n            policies: null,\n            dropDownApplications: null,\n            dropDownPolicies: null,\n            notFound: false,\n            tabValue: 'Social Sites',\n            comment: '',\n            commentList: null,\n            showOverview: true,\n            checked: false,\n            avgRating: 0,\n            total: 0,\n            count: 0,\n        };\n        this.getSchema = this.getSchema.bind(this);\n        this.getProvider = this.getProvider.bind(this);\n        this.setRatingUpdate = this.setRatingUpdate.bind(this);\n    }\n\n    ditectCurrentMenu = (location) => {\n        const routeToCheck = 'overview';\n        const { pathname } = location;\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            this.setState({ showOverview: true });\n        } else {\n            this.setState({ showOverview: false });\n        }\n    };\n\n    componentDidMount() {\n        const { history } = this.props;\n        this.ditectCurrentMenu(history.location);\n        history.listen((location) => {\n            this.ditectCurrentMenu(location);\n        });\n    }\n\n    /**\n     *\n     *\n     * @memberof InfoBar\n     */\n    toggleOverview = (todo) => {\n        if (typeof todo === 'boolean') {\n            this.setState({ showOverview: todo });\n        } else {\n            this.setState((state) => ({ showOverview: !state.showOverview }));\n        }\n    };\n\n    getProvider(api) {\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        return provider;\n    }\n\n    getProviderMail(api) {\n        let mail;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwnerEmail\n            && api.businessInformation.businessOwnerEmail.trim() !== ''\n        ) {\n            mail = '(' + api.businessInformation.businessOwnerEmail + ')';\n        }\n        return mail;\n    }\n\n    getTechnical(api) {\n        let owner;\n        if (\n            api.businessInformation\n            && api.businessInformation.technicalOwner\n            && api.businessInformation.technicalOwner.trim() !== ''\n        ) {\n            owner = api.businessInformation.technicalOwner;\n        }\n        return owner;\n    }\n\n    getTechnicalMail(api) {\n        let mail;\n        if (\n            api.businessInformation\n            && api.businessInformation.technicalOwnerEmail\n            && api.businessInformation.technicalOwnerEmail.trim() !== ''\n        ) {\n            mail = '(' + api.businessInformation.technicalOwnerEmail + ')';\n        }\n        return mail;\n    }\n\n    getSchema() {\n        const newAPI = new API();\n        const { api } = this.context;\n        const promisedGraphQL = newAPI.getGraphQLSchemaByAPIId(api.id);\n        promisedGraphQL.then((response) => {\n            const windowUrl = window.URL || window.webkitURL;\n            const binary = new Blob([response.data]);\n            const url = windowUrl.createObjectURL(binary);\n            const anchor = document.createElement('a');\n            anchor.href = url;\n            anchor.download = this.getProvider(api) + '-' + api.name + '-' + api.version + '.graphql';\n            anchor.click();\n            windowUrl.revokeObjectURL(url);\n        });\n    }\n\n    setRatingUpdate(ratings) {\n        if (ratings) {\n            const { avgRating, total, count } = ratings;\n            this.setState({ avgRating, total, count });\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof InfoBar\n     */\n    render() {\n        const { api } = this.context;\n\n        const { classes, theme, intl } = this.props;\n        const {\n            notFound, showOverview, prodUrlCopied, sandboxUrlCopied, epUrl, avgRating, total, count,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: { position },\n                infoBar: { showThumbnail, height },\n                tagWise: { key, active },\n                social: { showRating },\n            },\n        } = theme;\n\n        // Remve the tags with a sufix '-group' from tags\n        let apisTagsWithoutGroups = [];\n        if ( !active ){\n            apisTagsWithoutGroups = api.tags;\n        }\n        if (active && api.tags && api.tags.length > 0) {\n            for (let i = 0; i < api.tags.length; i++) {\n                if (api.tags[i].search(key) != -1 && api.tags[i].split(key).length > 0) {\n                    apisTagsWithoutGroups.push(api.tags[i].split(key)[0]);\n                } else {\n                    apisTagsWithoutGroups.push(api.tags[i]);\n                }\n            }\n        }\n\n        const { resourceNotFountMessage } = this.props;\n        const user = AuthManager.getUser();\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        return (\n            <div className={classes.infoBarMain} id='infoBar'>\n                <div className={classes.root}>\n                    {showThumbnail && (\n                        <ApiThumb api={api} customWidth={70} customHeight={50} showInfo={false} />\n                    )}\n                    <div style={{ marginLeft: theme.spacing(1) }}>\n                        <Link to={'/apis/' + api.id + '/overview'} className={classes.linkTitle}>\n                            <Typography variant='h4'>{api.name}</Typography>\n                        </Link>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            {this.getProvider(api)}\n                        </Typography>\n                    </div>\n                    <VerticalDivider height={70} />\n                    {!api.advertiseInfo.advertised && user && showRating && (\n                        <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n\n                    )}\n                    {api.advertiseInfo.advertised && (\n                        <>\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href={api.advertiseInfo.originalStoreUrl}\n                                className={classes.viewInPubStoreLauncher}\n                            >\n                                <div>\n                                    <LaunchIcon />\n                                </div>\n                                <div className={classes.linkText}>Visit Publisher Dev Portal</div>\n                            </a>\n                            <VerticalDivider height={70} />\n                        </>\n                    )}\n                    <Social />\n                </div>\n                {position === 'horizontal' && <div style={{ height: 60 }} />}\n                {showOverview && (\n                    <Collapse in={showOverview}>\n                        <div className={classes.infoContent}>\n                            <div className={classes.contentWrapper}>\n                                <Typography>{api.description}</Typography>\n                                <Table className={classes.table}>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>settings_input_component</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.list.version'\n                                                            defaultMessage='Version'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{api.version}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_balance_wallet</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.list.context'\n                                                            defaultMessage='Context'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{api.context}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_circle</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.provider'\n                                                            defaultMessage='Provider'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{this.getProvider(api)} {this.getProviderMail(api)}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_box</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.technical'\n                                                            defaultMessage='Technical Owner'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{this.getTechnical(api)} {this.getTechnicalMail(api)}</TableCell>\n                                        </TableRow>\n                                        {/* <TableRow>\n                                                    <TableCell component='th' scope='row'>\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconEven}>update</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.InfoBar.last.updated'\n                                                                    defaultMessage='Last updated'\n                                                                />\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>21 May 2018</TableCell>\n                                                </TableRow> */}\n                                        {user && !api.advertiseInfo.advertised && showRating && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Grade className={classes.iconOdd} />\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.list.context.rating'\n                                                                defaultMessage='Rating'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <StarRatingBar\n                                                        apiId={api.id}\n                                                        isEditable\n                                                        showSummary={false}\n                                                        setRatingUpdate={this.setRatingUpdate}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                        {api.type === 'GRAPHQL' && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>cloud_download</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.download.Schema'\n                                                                defaultMessage='Download Schema'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        onClick={this.getSchema}\n                                                        size='small'\n                                                        fontSize='small'\n                                                        variant='outlined'\n                                                    >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.graphQL.schema'\n                                                            defaultMessage='GraphQL Schema'\n                                                        />\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                        {!api.advertiseInfo.advertised ? (\n                                            <>\n                                                <TableRow>\n                                                    <TableCell\n                                                        component='th'\n                                                        scope='row'\n                                                        className={classes.contentToTop}\n                                                    >\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconOdd}>desktop_windows</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.InfoBar.gateway.environments'\n                                                                    defaultMessage='Gateway Environments'\n                                                                />\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <Environments />\n                                                    </TableCell>\n                                                </TableRow>\n                                                {api.labels.length !== 0 && (\n                                                    <TableRow>\n                                                        <TableCell\n                                                            component='th'\n                                                            scope='row'\n                                                            className={classes.contentToTop}\n                                                        >\n                                                            <div className={classes.iconAligner}>\n                                                                <Icon className={classes.iconOdd}>games</Icon>\n                                                                <span className={classes.iconTextWrapper}>\n                                                                    <FormattedMessage\n                                                                        id='Apis.Details.InfoBar.available.mgLabels'\n                                                                        defaultMessage='Available Microgateways'\n                                                                    />\n                                                                </span>\n                                                            </div>\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <Labels />\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )}\n                                            </>\n                                        ) : (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>account_circle</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.owner'\n                                                                defaultMessage='Owner'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>{api.advertiseInfo.apiOwner}</TableCell>\n                                            </TableRow>\n                                        )}\n                                        {apisTagsWithoutGroups && apisTagsWithoutGroups.length > 0 && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>bookmark</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.list.tags'\n                                                                defaultMessage='Tags'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    {apisTagsWithoutGroups.map((tag) => (\n                                                        <Chip label={tag} className={classes.chip} key={tag} />\n                                                    ))}\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    </Collapse>\n                )}\n                <div className={classes.infoContentBottom}>\n                    <a className={classes.expandWrapper} onClick={this.toggleOverview}>\n                        <div className={classes.buttonView}>\n                            {showOverview ? (\n                                <Typography className={classes.buttonOverviewText}>\n                                    <FormattedMessage id='Apis.Details.InfoBar.less' defaultMessage='LESS' />\n                                </Typography>\n                            ) : (\n                                <Typography className={classes.buttonOverviewText}>\n                                    <FormattedMessage id='Apis.Details.InfoBar.more' defaultMessage='MORE' />\n                                </Typography>\n                            )}\n                            {showOverview ? <Icon>arrow_drop_up</Icon> : <Icon>arrow_drop_down</Icon>}\n                        </div>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\nInfoBar.defaultProps = {\n    classes: {\n        leftMenu: {},\n        leftMenuHorizontal: {},\n        leftMenuVerticalLeft: {},\n        leftMenuVerticalRight: {},\n        leftLInkMain: {},\n        leftLInkMainText: {},\n        detailsContent: {},\n        content: {},\n        contentLoader: {},\n        contentLoaderRightMenu: {},\n    },\n};\nInfoBar.propTypes = {\n    classes: PropTypes.shape({}),\n    theme: PropTypes.object.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nInfoBar.contextType = ApiContext;\n\nexport default injectIntl(withRouter(withStyles(styles, { withTheme: true })(InfoBar)));\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    button: {\n        mt: 2,\n        mr: 1,\n    },\n    wizardButtons: {\n        pl: 2,\n    },\n};\n\nconst ButtonPanel = (props) => {\n    const {\n        currentStep, handleCurrentStep, handleReset, nextActive,\n    } = props;\n    const stepsLength = 5;\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Redirect  to the API console page\n     */\n    const handleTest = () => {\n        history.push(`/apis/${api.id}/test`);\n    };\n\n    /**\n     * Redirect back to credentials page\n     */\n    const handleCancel = () => {\n        updateSubscriptionData(history.push('credentials'));\n    };\n\n    return (\n        <Box display='flex' {...styles.wizardButtons}>\n            {currentStep < stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleCancel}\n                        variant='text'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.Cancel'\n                            defaultMessage='CANCEL'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleTest}\n                        {...styles.button}\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.test'\n                            defaultMessage='Test'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        variant='outlined'\n                        onClick={handleReset}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.rest'\n                            defaultMessage='Reset'\n                        />\n                    </Button>\n                </Box>\n            )}\n            <Box {...styles.button}>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleCurrentStep}\n                    disabled={!nextActive}\n                >\n                    {currentStep === stepsLength - 1\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.finish'\n                                defaultMessage='Finish'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.next'\n                                defaultMessage='Next'\n                            />\n                        )}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nButtonPanel.defaultProps = {\n    nextActive: true,\n};\n\nButtonPanel.propTypes = {\n    currentStep: PropTypes.func.isRequired,\n    handleCurrentStep: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    nextActive: PropTypes.bool,\n};\n\nexport default ButtonPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ApplicationCreateForm from 'AppComponents/Shared/AppsAndKeys/ApplicationCreateForm';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport cloneDeep from 'lodash.clonedeep';\nimport { injectIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    appCreateFormWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst createAppStep = (props) => {\n    const APPLICATION_STATES = {\n        CREATED: 'CREATED',\n        APPROVED: 'APPROVED',\n        REJECTED: 'REJECTED',\n    };\n    const [throttlingPolicyList, setThrottlingPolicyList] = useState([]);\n    const [applicationRequest, setApplicationRequest] = useState({\n        name: '',\n        throttlingPolicy: '',\n        description: '',\n        tokenType: 'JWT',\n        groups: null,\n        attributes: {},\n    });\n    const [isNameValid, setIsNameValid] = useState(true);\n    const [allAppAttributes, setAllAppAttributes] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const {\n        currentStep, setCreatedApp, incrementStep, intl, setStepStatus, stepStatuses,\n    } = props;\n\n    const validateName = (value) => {\n        if (!value || value.trim() === '') {\n            setIsNameValid({ isNameValid: false });\n            return Promise.reject(new Error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            })));\n        }\n        setIsNameValid({ isNameValid: true });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const isRequiredAttribute = (name) => {\n        if (allAppAttributes) {\n            for (let i = 0; i < allAppAttributes.length; i++) {\n                if (allAppAttributes[i].attribute === name) {\n                    return allAppAttributes[i].required === 'true';\n                }\n            }\n        }\n        return false;\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {Object} attribute value\n     * @memberof ApplicationFormHandler\n     */\n    const getAttributeValue = (name) => {\n        return applicationRequest.attributes[name];\n    };\n\n    const createApplication = () => {\n        const api = new API();\n        validateName(applicationRequest.name)\n            .then(() => api.createApplication(applicationRequest))\n            .then((response) => {\n                const data = response.body;\n                if (data.status === APPLICATION_STATES.APPROVED) {\n                    const appCreated = { value: data.applicationId, label: data.name };\n                    console.log('Application created successfully.');\n                    setCreatedApp(appCreated);\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response && response.body) {\n                    const message = response.body.description || intl.formatMessage({\n                        defaultMessage: 'Error while creating the application',\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.while.creating.the.application',\n                    });\n                    Alert.error(message);\n                } else {\n                    Alert.error(error.message);\n                }\n                console.error('Error while creating the application');\n            });\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const handleAttributesChange = (name) => (event) => {\n        const newApplicationRequest = cloneDeep(applicationRequest);\n        newApplicationRequest.attributes[name] = event.target.value;\n        setApplicationRequest(newApplicationRequest);\n    };\n\n    /**\n     * add a new group function\n     * @param {*} chip newly added group\n     * @param {*} appGroups already existing groups\n     */\n    const handleAddChip = (chip, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.slice();\n        values.push(chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * remove a group from already existing groups function\n     * @param {*} chip selected group to be removed\n     * @param {*} index selected group index to be removed\n     * @param {*} appGroups already existing groups\n     */\n    const handleDeleteChip = (chip, index, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.filter((v) => v !== chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    useEffect(() => {\n        // Get all the tiers to populate the drop down.\n        const api = new API();\n        const promiseTiers = api.getAllTiers('application');\n        const promisedAttributes = api.getAllApplicationAttributes();\n        Promise.all([promiseTiers, promisedAttributes])\n            .then((response) => {\n                const [tierResponse, allAttributes] = response;\n                const throttlingPolicyListLocal = tierResponse.body.list.map((item) => item.name);\n                const newRequest = { ...applicationRequest };\n                if (throttlingPolicyListLocal.length > 0) {\n                    [newRequest.throttlingPolicy] = throttlingPolicyListLocal;\n                }\n                const allAppAttr = [];\n                allAttributes.body.list.map((item) => allAppAttr.push(item));\n                if (allAttributes.length > 0) {\n                    newRequest.attributes = allAppAttr.filter((item) => !item.hidden);\n                }\n                setApplicationRequest(newRequest);\n                setThrottlingPolicyList(throttlingPolicyListLocal);\n                setAllAppAttributes(allAppAttr);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    }, []);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.appCreateFormWrapper}>\n            <Box px={2} display='flex' justifyContent='flex-start'>\n                <Grid item xs={10} md={6}>\n                    <ApplicationCreateForm\n                        throttlingPolicyList={throttlingPolicyList}\n                        applicationRequest={applicationRequest}\n                        updateApplicationRequest={setApplicationRequest}\n                        validateName={validateName}\n                        isNameValid={isNameValid}\n                        allAppAttributes={allAppAttributes}\n                        handleAttributesChange={handleAttributesChange}\n                        isRequiredAttribute={isRequiredAttribute}\n                        getAttributeValue={getAttributeValue}\n                        handleDeleteChip={handleDeleteChip}\n                        handleAddChip={handleAddChip}\n                    />\n                </Grid>\n            </Box>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={createApplication}\n            />\n        </div>\n    );\n};\n\nexport default injectIntl(createAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport ButtonPanel from './ButtonPanel';\n\nconst subscribeToAppStep = (props) => {\n    const SUBSCRIPTION_STATES = {\n        ON_HOLD: 'ON_HOLD',\n        UNBLOCKED: 'UNBLOCKED',\n        REJECTED: 'REJECTED',\n    };\n    const [subscriptionRequest, setApplicationRequest] = useState({\n        applicationId: '',\n        apiId: '',\n        throttlingPolicy: '',\n    });\n    const { api: apiObject } = useContext(ApiContext);\n    const [newApp, setNewApp] = useState(null);\n    const [throttlingPolicyList] = useState(apiObject.tiers);\n    const {\n        currentStep, createdApp, incrementStep, intl, setStepStatus,\n        stepStatuses, classes,\n    } = props;\n    const subscribeToApplication = () => {\n        const api = new API();\n        api.subscribe(\n            subscriptionRequest.apiId, subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n        )\n            .then((response) => {\n                if (response.body.status === SUBSCRIPTION_STATES.UNBLOCKED) {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Wizard.SubscribeToAppStep.subscribed.successfully',\n                    }));\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while creating the subscription.');\n                console.error(error);\n            });\n    };\n\n    useEffect(() => {\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: apiObject.id };\n        if (throttlingPolicyList) {\n            const [tierData] = throttlingPolicyList;\n            newSubscriptionRequest.throttlingPolicy = tierData.tierName;\n        }\n        if (createdApp) {\n            newSubscriptionRequest.applicationId = createdApp.value;\n        }\n        setApplicationRequest(newSubscriptionRequest);\n        setNewApp(createdApp);\n    }, [createdApp]);\n\n    return (\n        <>\n            <SubscribeToApi\n                throttlingPolicyList={throttlingPolicyList}\n                applicationsAvailable={[newApp]}\n                subscriptionRequest={subscriptionRequest}\n                updateSubscriptionRequest={setApplicationRequest}\n            />\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={subscribeToApplication}\n            />\n        </>\n    );\n};\n\nexport default injectIntl(subscribeToAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport KeyConfiguration from 'AppComponents/Shared/AppsAndKeys/KeyConfiguration';\nimport Application from 'AppData/Application';\nimport API from 'AppData/api';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cloneDeep from 'lodash.clonedeep';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    keyConfigWrapper: {\n        paddingLeft: theme.spacing(4),\n    },\n    radioWrapper: {\n        flexDirection: 'row',\n    },\n}));\n\nconst generateKeysStep = (props) => {\n    const keyStates = {\n        COMPLETED: 'COMPLETED',\n        APPROVED: 'APPROVED',\n        CREATED: 'CREATED',\n        REJECTED: 'REJECTED',\n    };\n    const [selectedType, setSelectedType] = useState('PRODUCTION');\n    const [notFound, setNotFound] = useState(false);\n    const [nextActive, setNextActive] = useState(true);\n    const [isUserOwner, setIsUserOwner] = useState(false);\n\n    const [keyRequest, setKeyRequest] = useState({\n        keyType: 'PRODUCTION',\n        serverSupportedGrantTypes: [],\n        supportedGrantTypes: [],\n        callbackUrl: '',\n    });\n\n    const {\n        currentStep, createdApp, incrementStep, setCreatedKeyType, intl,\n        setStepStatus, stepStatuses,\n    } = props;\n\n    /**\n    * @param {*} event event\n    * @param {*} currentTab current tab\n    * @memberof Wizard\n    */\n    const handleRadioChange = (event) => {\n        const newKeyType = event.target.value;\n        setSelectedType(newKeyType);\n        const newKeyRequest = cloneDeep(keyRequest);\n        newKeyRequest.keyType = newKeyType;\n        setKeyRequest(newKeyRequest);\n    };\n\n    useEffect(() => {\n        setIsUserOwner(true);\n        const api = new API();\n        const promisedSettings = api.getSettings();\n        promisedSettings\n            .then((response) => {\n                const newRequest = cloneDeep(keyRequest);\n                newRequest.serverSupportedGrantTypes = response.obj.grantTypes;\n                newRequest.supportedGrantTypes = response.obj.grantTypes.filter((item) => item !== 'authorization_code'\n                    && item !== 'implicit');\n                setKeyRequest(newRequest);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound({ notFound: true });\n                }\n            });\n    }, []);\n\n    const generateKeys = () => {\n        Application.get(createdApp.value).then((application) => {\n            return application.generateKeys(\n                keyRequest.keyType, keyRequest.supportedGrantTypes,\n                keyRequest.callbackUrl,\n            );\n        }).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                setStepStatus(stepStatuses.BLOCKED);\n            } else {\n                incrementStep();\n                setCreatedKeyType(keyRequest.keyType);\n                setStepStatus(stepStatuses.PROCEED);\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                setNotFound(true);\n            }\n        });\n    };\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.keyConfigWrapper}>\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            defaultMessage='Key Type'\n                            id='Apis.Details.Credentials.Wizard.GenerateKeysStep.keyType'\n                        />\n                    </FormLabel>\n                    <RadioGroup value={selectedType} onChange={handleRadioChange} classes={{ root: classes.radioWrapper }}>\n                        <FormControlLabel\n                            value='PRODUCTION'\n                            control={<Radio />}\n                            label={intl.formatMessage({\n                                defaultMessage: 'PRODUCTION',\n                                id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.production',\n                            })}\n                        />\n                        <FormControlLabel\n                            value='SANDBOX'\n                            control={<Radio />}\n                            label={intl.formatMessage({\n                                defaultMessage: 'SANDBOX',\n                                id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.sandbox',\n                            })}\n                        />\n                    </RadioGroup>\n                </FormControl>\n                <KeyConfiguration\n                    updateKeyRequest={setKeyRequest}\n                    keyRequest={keyRequest}\n                    keyType={selectedType}\n                    isUserOwner={isUserOwner}\n                    setGenerateEnabled={setNextActive}\n                />\n            </div>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={generateKeys}\n                nextActive={nextActive}\n            />\n        </>\n    );\n};\n\nexport default injectIntl(generateKeysStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport Tokens from 'AppComponents/Shared/AppsAndKeys/Tokens';\nimport Application from 'AppData/Application';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(7),\n    },\n    title: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst generateAccessTokenStep = (props) => {\n    const [keyType, setKeyType] = useState('PRODUCTION');\n    const [subscriptionScopes, setSubscriptionScopes] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n\n    const [accessTokenRequest, setAccessTokenRequest] = useState({\n        timeout: 3600,\n        scopesSelected: [],\n        keyType: '',\n    });\n    const {\n        currentStep, createdApp, setCreatedToken, incrementStep, createdKeyType, intl,\n    } = props;\n\n    useEffect(() => {\n        const newRequest = { ...accessTokenRequest, keyType: createdKeyType };\n        setKeyType(createdKeyType);\n        setAccessTokenRequest(newRequest);\n    }, [createdKeyType]);\n\n    useEffect(() => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const subscriptionScopesList = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    setSubscriptionScopes(subscriptionScopesList);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    }, []);\n\n    const generateAccessToken = () => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                return application.generateToken(\n                    accessTokenRequest.keyType,\n                    accessTokenRequest.timeout,\n                    accessTokenRequest.scopesSelected,\n                );\n            })\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                setCreatedToken(response);\n                incrementStep();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    };\n    const classes = useStyles();\n    const messages = defineMessages({\n        dataInfo: {\n            id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep',\n            defaultMessage: 'Generate Access Toke for {keyType} environment',\n        },\n    });\n\n    return (\n        <>\n            <div className={classes.tokenWrapper}>\n                <Typography variant='subtitle1' component='div' className={classes.title}>\n                    {intl.formatMessage(messages.dataInfo, { keyType })}\n                </Typography>\n                <Tokens\n                    updateAccessTokenRequest={setAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                    subscriptionScopes={subscriptionScopes}\n                />\n                <ButtonPanel\n                    classes={classes}\n                    currentStep={currentStep}\n                    handleCurrentStep={generateAccessToken}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default injectIntl(generateAccessTokenStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport ViewToken from 'AppComponents/Shared/AppsAndKeys/ViewToken';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst copyAccessTokenStep = (props) => {\n    const {\n        currentStep, createdToken, handleReset, handleRedirectTest,\n    } = props;\n    const history = useHistory();\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const completeStep = () => {\n        updateSubscriptionData(history.push(`/apis/${api.id}/credentials`));\n    };\n    const classes = useStyles();\n\n    return (\n        <div className={classes.tokenWrapper}>\n            <Grid md={10}>\n                <Box my={1} mx={2}>\n                    <ViewToken token={{ ...createdToken, isOauth: true }} />\n                </Box>\n            </Grid>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={completeStep}\n                handleReset={handleReset}\n            />\n        </div>\n    );\n};\n\nexport default copyAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, Paper, Box } from '@material-ui/core';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport CreateAppStep from './CreateAppStep';\nimport SubscribeToAppStep from './SubscribeToAppStep';\nimport GenerateKeysStep from './GenerateKeysStep';\nimport GenerateAccessTokenStep from './GenerateAccessTokenStep';\nimport CopyAccessTokenStep from './CopyAccessTokenStep';\n\nconst styles = (theme) => ({\n    paper: {\n        marginLeft: theme.spacing(3),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n});\n\nconst stepComponents = [CreateAppStep, SubscribeToAppStep, GenerateKeysStep,\n    GenerateAccessTokenStep, CopyAccessTokenStep];\n\n/**\n * Class used for wizard\n */\nclass Wizard extends Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { intl } = this.props;\n        this.steps = [\n            intl.formatMessage({\n                defaultMessage: 'Create application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.create',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Subscribe to new application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.subscribe.to.new.application',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Keys',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.keys',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.access.token',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Copy Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.copy.access.token',\n            }),\n        ];\n        this.stepStatuses = {\n            PROCEED: 'PROCEED',\n            BLOCKED: 'BLOCKED',\n        };\n        this.state = {\n            currentStep: 0,\n            createdApp: null,\n            createdToken: null,\n            redirect: false,\n            createdKeyType: '',\n            stepStatus: 'PROCEED',\n        };\n    }\n\n    /**\n     * Used to set the status retured after executing each step. Used in workflow\n     * scenario to evaluate wheather we can proceed to next step\n     * @param {*} stepStatus status\n     */\n    setStepStatus = (stepStatus) => {\n        this.setState({ stepStatus });\n    }\n\n    /**\n     * Set the created app from step 1\n     * @param {*} createdApp app created\n     */\n    setCreatedApp = (createdApp) => {\n        this.setState({ createdApp });\n    }\n\n    /**\n     * Set the created token from step 4\n     * @param {*} createdToken token created\n     */\n    setCreatedToken = (createdToken) => {\n        this.setState({ createdToken });\n    }\n\n    /**\n     * Set the created keytype from step 3\n     * @param {*} createdKeyType token created\n     */\n    setCreatedKeyType = (createdKeyType) => {\n        this.setState({ createdKeyType });\n    }\n\n    /**\n     * Increment the current step or next step by 1\n     */\n    handleNext = () => {\n        this.setState(({ currentStep }) => {\n            return { currentStep: currentStep + 1 };\n        });\n    }\n\n    /**\n     * Rest the currentStep to 0 and bring wizard back to first step\n     * @memberof Wizard\n     */\n    handleReset = () => {\n        this.setState({\n            currentStep: 0,\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const { currentStep, stepStatus } = this.state;\n        const CurrentStepComponent = stepComponents[currentStep];\n        return (\n            <>\n                <Typography variant='h4' className={classes.titleSub}>\n                    <FormattedMessage\n                        id={'Apis.Details.Credentials.Credentials'\n                    + '.api.credentials.generate'}\n                        defaultMessage='Subscription &amp; Key Generation Wizard'\n                    />\n                </Typography>\n                <Paper elevation={0} className={classes.paper}>\n                    <Box py={1} mx='auto' display='flex' >\n                        <Grid item xs={12} md={12}>\n                            <Stepper activeStep={currentStep}>\n                                {this.steps.map((label) => {\n                                    return (\n                                        <Step key={label}>\n                                            <StepLabel>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                        </Grid>\n                    </Box>\n                    <Box py={1} mx='auto' display='block' >\n                        {stepStatus === this.stepStatuses.PROCEED && (\n                            <>\n                                <CurrentStepComponent\n                                    {...this.state}\n                                    incrementStep={this.handleNext}\n                                    setStepStatus={this.setStepStatus}\n                                    stepStatuses={this.stepStatuses}\n                                    classes={classes}\n                                    setCreatedApp={this.setCreatedApp}\n                                    setCreatedKeyType={this.setCreatedKeyType}\n                                    setCreatedToken={this.setCreatedToken}\n                                    handleReset={this.handleReset}\n                                />\n                            </>\n                        )}\n                    </Box>\n                    <Box py={1} mb={1} mx='auto' display='flex' >\n                        {stepStatus === this.stepStatuses.BLOCKED && (\n                            <Box pt={2} px={3} display='flex' >\n                                <Typography variant='h5'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Wizard.Wizard.approval.request.'\n                                                + 'for.this.step.has'}\n                                        defaultMessage='A request to register this step has been sent.'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Paper>\n            </>\n        );\n    }\n}\n\nWizard.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        subscribeTitle: PropTypes.string,\n        plainContent: PropTypes.string,\n        root: PropTypes.string,\n        instructions: PropTypes.string,\n        button: PropTypes.string,\n        wizardContent: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Wizard));\n","/* eslint-disable react/jsx-props-no-spreading */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    Route, Switch, Redirect, Link, withRouter,\n} from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { app } from 'Settings';\nimport CustomIcon from '../../Shared/CustomIcon';\nimport LeftMenuItem from '../../Shared/LeftMenuItem';\nimport { ResourceNotFound } from '../../Base/Errors/index';\nimport InfoBar from './InfoBar';\nimport { ApiContext } from './ApiContext';\nimport Progress from '../../Shared/Progress';\nimport Wizard from './Credentials/Wizard/Wizard';\n\n\nconst ApiConsole = lazy(() => import('./ApiConsole/ApiConsole' /* webpackChunkName: \"APIConsole\" */));\nconst GraphQLConsole = lazy(() => import('./GraphQLConsole/GraphQLConsole' /* webpackChunkName: \"GraphQLConsole\" */));\nconst Overview = lazy(() => import('./Overview' /* webpackChunkName: \"APIOverview\" */));\nconst Documents = lazy(() => import('./Documents/Documents' /* webpackChunkName: \"APIDocuments\" */));\nconst Credentials = lazy(() => import('./Credentials/Credentials' /* webpackChunkName: \"APICredentials\" */));\nconst Comments = lazy(() => import('./Comments/Comments' /* webpackChunkName: \"APIComments\" */));\nconst Sdk = lazy(() => import('./Sdk' /* webpackChunkName: \"APISdk\" */));\n\nconst LoadableSwitch = withRouter((props) => {\n    const { match, api } = props;\n    const apiUuid = match.params.api_uuid;\n    const path = '/apis/';\n    const { advertised } = api.advertiseInfo;\n    const redirectURL = path + apiUuid + '/overview';\n\n    let tryoutRoute;\n    if (api.type === 'GRAPHQL') {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={GraphQLConsole} />\n    }else {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={ApiConsole} />\n    }\n\n    return (\n        <Suspense fallback={<Progress />}>\n            <Switch>\n                <Redirect exact from={`/apis/${apiUuid}`} to={redirectURL} />\n                <Route path='/apis/:apiUuid/overview' render={() => <Overview {...props} />} />\n                <Route path='/apis/:apiUuid/documents' component={Documents} />\n                <Route exact path='/apis/:apiUuid/credentials/wizard' component={Wizard} />\n                {!advertised && <Route path='/apis/:apiUuid/comments' component={Comments} />}\n                {!advertised && <Route path='/apis/:apiUuid/credentials' component={Credentials} />}\n                {!advertised && tryoutRoute}\n                {!advertised && <Route path='/apis/:apiUuid/sdk' component={Sdk} />}\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </Suspense>\n    );\n});\n\n/**\n *\n * @returns style object\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        leftMenu: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        leftMenuHorizontal: {\n            top: theme.custom.infoBar.height,\n            width: '100%',\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        leftMenuVerticalLeft: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalRight: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        leftLInkMain: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            textDecoration: 'none',\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        leftLInkMainText: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        detailsContent: {\n            display: 'flex',\n            flex: 1,\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            paddingBottom: theme.spacing(3),\n        },\n        shiftLeft: {\n            marginLeft: 0,\n        },\n        contentLoader: {\n            paddingTop: theme.spacing(3),\n        },\n        contentLoaderRightMenu: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n    };\n};\n/**\n *\n *\n * @class Details\n * @extends {React.Component}\n */\nclass Details extends React.Component {\n    /**\n     *Creates an instance of Details.\n     * @param {*} props\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        /**\n         *\n         *\n         * @memberof Details\n         */\n        this.updateSubscriptionData = (callback) => {\n            let existingSubscriptions = null;\n            let promisedApplications = null;\n\n            const restApi = new Api();\n\n            // const subscriptionClient = new Subscription();\n            const promisedAPI = restApi.getAPIById(this.api_uuid);\n\n            promisedAPI\n                .then((api) => {\n                    this.setState({ api: api.body });\n                })\n                .catch((error) => {\n                    const { status, response } = error;\n                    const { setTenantDomain, intl } = this.props;\n\n                    const message = intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Details.index.invalid.tenant.domain',\n                    });\n                    if (response && response.body.code === 901300) {\n                        setTenantDomain('INVALID');\n                        Alert.error(message);\n                    }\n                    console.error('Error when getting apis', error);\n                    if (status === 404) {\n                        this.setState({ notFound: true });\n                    }\n                });\n            const user = AuthManager.getUser();\n            if (user != null) {\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null);\n                promisedApplications = restApi.getAllApplications();\n\n                Promise.all([existingSubscriptions, promisedApplications])\n                    .then((response) => {\n                        const [subscriptions, applications] = response.map((data) => data.obj);\n                        const appIdToNameMapping = applications.list.reduce((acc, cur) => {\n                            acc[cur.applicationId] = cur.name;\n                            return acc;\n                        }, {});\n                        // get the application IDs of existing subscriptions\n                        const subscribedApplications = subscriptions.list.map((element) => {\n                            return {\n                                value: element.applicationId,\n                                policy: element.throttlingPolicy,\n                                status: element.status,\n                                subscriptionId: element.subscriptionId,\n                                label: appIdToNameMapping[element.applicationId],\n                            };\n                        });\n\n                        // Removing subscribed applications from all the applications and get\n                        // the available applications to subscribe\n                        const subscribedAppIds = subscribedApplications.map((sub) => sub.value);\n                        const applicationsAvailable = applications.list\n                            .filter((app) => !subscribedAppIds.includes(app.applicationId) && app.status === 'APPROVED')\n                            .map((filteredApp) => {\n                                return {\n                                    value: filteredApp.applicationId,\n                                    label: filteredApp.name,\n                                };\n                            });\n                        this.setState({ subscribedApplications, applicationsAvailable }, () => {\n                            if (callback) {\n                                callback();\n                            }\n                        });\n                    })\n                    .catch((error) => {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.log(error);\n                        }\n                        const { status } = error;\n                        if (status === 404) {\n                            this.setState({ notFound: true });\n                        }\n                    });\n            }\n        };\n\n        this.state = {\n            active: 'overview',\n            overviewHiden: false,\n            updateSubscriptionData: this.updateSubscriptionData,\n            api: null,\n            applications: null,\n            subscribedApplications: [],\n            applicationsAvailable: [],\n            item: 1,\n            xo: null,\n        };\n        this.setDetailsAPI = this.setDetailsAPI.bind(this);\n        this.api_uuid = this.props.match.params.api_uuid;\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    componentDidMount() {\n        this.updateSubscriptionData();\n    }\n\n    /**\n     *\n     *\n     * @param {*} api\n     * @memberof Details\n     */\n    setDetailsAPI(api) {\n        this.setState({ api });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Details\n     */\n    render() {\n        const {\n            classes, theme, intl, match,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const { apiUuid } = match.params;\n        const { api, notFound } = this.state;\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                apiDetailPages: {\n                    showCredentials, showComments, showTryout, showDocuments, showSdks,\n                },\n                title: {\n                    prefix, sufix,\n                }\n            },\n        } = theme;\n        const globalStyle = 'body{ font-family: ' + theme.typography.fontFamily + '}';\n        const pathPrefix = '/apis/' + this.api_uuid + '/';\n        if (!api && notFound) {\n            return <ResourceNotFound />;\n        }\n        // check for widget=true in the query params. If it's present we render without <Base> component.\n        const pageUrl = new URL(window.location);\n        const isWidget = pageUrl.searchParams.get('widget');\n\n        return api ? (\n            <ApiContext.Provider value={this.state}>\n                <Helmet>\n                    <title>{`${prefix} ${api.name}${sufix}`}</title>\n                </Helmet>\n                <style>{globalStyle}</style>\n                {!isWidget && (\n                    <div\n                        className={classNames(\n                            classes.leftMenu,\n                            {\n                                [classes.leftMenuHorizontal]: position === 'horizontal',\n                            },\n                            {\n                                [classes.leftMenuVerticalLeft]: position === 'vertical-left',\n                            },\n                            {\n                                [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                            },\n                            'left-menu',\n                        )}\n                    >\n                        {rootIconVisible && (\n                            <Link to='/apis' className={classes.leftLInkMain}>\n                                <CustomIcon width={rootIconSize} height={rootIconSize} icon='api' />\n                                {rootIconTextVisible && (\n                                    <Typography className={classes.leftLInkMainText}>\n                                        <FormattedMessage id='Apis.Details.index.all.apis' defaultMessage='ALL APIs' />\n                                    </Typography>\n                                )}\n                            </Link>\n                        )}\n                        <LeftMenuItem\n                            text={<FormattedMessage id='Apis.Details.index.overview' defaultMessage='Overview' />}\n                            route='overview'\n                            iconText='overview'\n                            to={pathPrefix + 'overview'}\n                        />\n                        {!api.advertiseInfo.advertised && (\n                            <>\n                                {user && showCredentials && (\n                                    <>\n                                        <LeftMenuItem\n                                            text={\n                                                <FormattedMessage\n                                                    id='Apis.Details.index.subscriptions'\n                                                    defaultMessage='Subscriptions'\n                                                />\n                                            }\n                                            route='credentials'\n                                            iconText='credentials'\n                                            to={pathPrefix + 'credentials'}\n                                        />\n                                    </>\n                                )}\n                                {api.type !== 'WS' && showTryout && (\n                                    <LeftMenuItem\n                                        text={<FormattedMessage id='Apis.Details.index.try.out' defaultMessage='Try out' />}\n                                        route='test'\n                                        iconText='test'\n                                        to={pathPrefix + 'test'}\n                                    />\n                                )}\n                                {showComments && (\n                                    <LeftMenuItem\n                                        text={\n                                            <FormattedMessage id='Apis.Details.index.comments' defaultMessage='Comments' />\n                                        }\n                                        route='comments'\n                                        iconText='comments'\n                                        to={pathPrefix + 'comments'}\n                                    />\n                                )}\n                            </>\n                        )}\n                        {showDocuments && (\n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.documentation' defaultMessage='Documentation' />}\n                                route='documents'\n                                iconText='docs'\n                                to={pathPrefix + 'documents'}\n                            />\n                        )}\n                        {!api.advertiseInfo.advertised && api.type !== 'WS' && showSdks && (\n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.sdk' defaultMessage='SDKs' />}\n                                route='sdk'\n                                iconText='sdk'\n                                to={pathPrefix + 'sdk'}\n                            />\n                        )}\n                    </div>\n                )}\n                <div className={classNames(classes.content, { [classes.shiftLeft]: isWidget })}>\n                    <InfoBar apiId={apiUuid} innerRef={(node) => (this.infoBar = node)} intl={intl} {...this.props} />\n                    <div\n                        className={classNames(\n                            { [classes.contentLoader]: position === 'horizontal' },\n                            { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                        )}\n                    >\n                        <LoadableSwitch api={api} updateSubscriptionData={this.updateSubscriptionData} />\n                    </div>\n                </div>\n            </ApiContext.Provider>\n        ) : (\n                <div className='apim-dual-ring' />\n            );\n    }\n}\n\nDetails.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withSettings(injectIntl(withStyles(styles, { withTheme: true })(Details)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport CommonListing from './Listing/CommonListing';\nimport TagCloudListing from './Listing/TagCloudListing';\nimport Details from './Details/index';\nimport { ResourceNotFound } from '../Base/Errors';\n\n/**\n * Default API Store overview page\n *\n * @returns {React.Component}\n */\nfunction Apis() {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/api-groups'\n                render={(props) => (\n                    <TagCloudListing {...props} />)}\n            />\n            <Route\n                exact\n                path='/apis'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/search'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/:api_uuid/'\n                render={(props) => (\n                    <Details {...props} />)}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n}\n\nexport default withStyles({}, { withTheme: true })(Apis);\n"],"sourceRoot":""}